
spi_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000070ec  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004070ec  004070ec  000170ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d8  20400000  004070f4  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000318  204009d8  00407ad0  000209d8  2**3
                  ALLOC
  4 .stack        00002000  20400cf0  00407de8  000209d8  2**0
                  ALLOC
  5 .heap         00000200  20402cf0  00409de8  000209d8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00020a06  2**0
                  CONTENTS, READONLY
  8 .debug_info   00018f0e  00000000  00000000  00020a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000038e3  00000000  00000000  0003996d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005def  00000000  00000000  0003d250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000918  00000000  00000000  0004303f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000968  00000000  00000000  00043957  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0002183e  00000000  00000000  000442bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000f0b7  00000000  00000000  00065afd  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090417  00000000  00000000  00074bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001ff4  00000000  00000000  00104fcc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f0 2c 40 20 8d 14 40 00 89 14 40 00 89 14 40 00     .,@ ..@...@...@.
  400010:	89 14 40 00 89 14 40 00 89 14 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	89 14 40 00 89 14 40 00 00 00 00 00 89 14 40 00     ..@...@.......@.
  40003c:	89 14 40 00 89 14 40 00 89 14 40 00 39 17 40 00     ..@...@...@.9.@.
  40004c:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  40005c:	89 14 40 00 89 14 40 00 00 00 00 00 ed 0f 40 00     ..@...@.......@.
  40006c:	01 10 40 00 15 10 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  40007c:	89 14 40 00 29 10 40 00 3d 10 40 00 89 14 40 00     ..@.).@.=.@...@.
  40008c:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  40009c:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  4000ac:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  4000bc:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  4000cc:	89 14 40 00 00 00 00 00 89 14 40 00 00 00 00 00     ..@.......@.....
  4000dc:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  4000ec:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  4000fc:	89 14 40 00 89 14 40 00 89 14 40 00 89 14 40 00     ..@...@...@...@.
  40010c:	89 14 40 00 89 14 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 89 14 40 00 89 14 40 00 89 14 40 00     ......@...@...@.
  40012c:	89 14 40 00 89 14 40 00 00 00 00 00 89 14 40 00     ..@...@.......@.
  40013c:	89 14 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d8 	.word	0x204009d8
  40015c:	00000000 	.word	0x00000000
  400160:	004070f4 	.word	0x004070f4

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	004070f4 	.word	0x004070f4
  4001a0:	204009dc 	.word	0x204009dc
  4001a4:	004070f4 	.word	0x004070f4
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
  4001ac:	b921      	cbnz	r1, 4001b8 <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
  4001ae:	6843      	ldr	r3, [r0, #4]
  4001b0:	f023 0301 	bic.w	r3, r3, #1
  4001b4:	6043      	str	r3, [r0, #4]
  4001b6:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
  4001b8:	6843      	ldr	r3, [r0, #4]
  4001ba:	f043 0301 	orr.w	r3, r3, #1
  4001be:	6043      	str	r3, [r0, #4]
  4001c0:	4770      	bx	lr

004001c2 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
  4001c2:	6201      	str	r1, [r0, #32]
  4001c4:	4770      	bx	lr

004001c6 <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
  4001c6:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
  4001c8:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001ca:	6884      	ldr	r4, [r0, #8]
  4001cc:	42a5      	cmp	r5, r4
  4001ce:	d003      	beq.n	4001d8 <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
  4001d0:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001d2:	6884      	ldr	r4, [r0, #8]
  4001d4:	42ac      	cmp	r4, r5
  4001d6:	d1fb      	bne.n	4001d0 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
  4001d8:	b161      	cbz	r1, 4001f4 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001da:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4001de:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4001e2:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4001e6:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
  4001ea:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
  4001ee:	bf18      	it	ne
  4001f0:	300c      	addne	r0, #12
  4001f2:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
  4001f4:	b142      	cbz	r2, 400208 <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
  4001f6:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4001fa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4001fe:	f3c4 2003 	ubfx	r0, r4, #8, #4
  400202:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  400206:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
  400208:	b143      	cbz	r3, 40021c <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  40020a:	f3c4 1202 	ubfx	r2, r4, #4, #3
  40020e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400212:	f004 040f 	and.w	r4, r4, #15
  400216:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  40021a:	601c      	str	r4, [r3, #0]
	}
}
  40021c:	bc30      	pop	{r4, r5}
  40021e:	4770      	bx	lr

00400220 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
  400220:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  400222:	6844      	ldr	r4, [r0, #4]
		if (ul_hour > 12) {
  400224:	f014 0f01 	tst.w	r4, #1
  400228:	d005      	beq.n	400236 <rtc_set_time+0x16>
  40022a:	290c      	cmp	r1, #12
  40022c:	d903      	bls.n	400236 <rtc_set_time+0x16>
			ul_hour -= 12;
  40022e:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
  400230:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
  400234:	e000      	b.n	400238 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
  400236:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400238:	4c1c      	ldr	r4, [pc, #112]	; (4002ac <rtc_set_time+0x8c>)
  40023a:	fba4 5603 	umull	r5, r6, r4, r3
  40023e:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  400240:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  400244:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
  400248:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  40024c:	fba4 6502 	umull	r6, r5, r4, r2
  400250:	08ed      	lsrs	r5, r5, #3
  400252:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  400256:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  40025a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
  40025e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  400262:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  400264:	fba4 4201 	umull	r4, r2, r4, r1
  400268:	08d2      	lsrs	r2, r2, #3
  40026a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  40026e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400272:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400276:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  40027a:	6983      	ldr	r3, [r0, #24]
  40027c:	f013 0f04 	tst.w	r3, #4
  400280:	d0fb      	beq.n	40027a <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
  400282:	6803      	ldr	r3, [r0, #0]
  400284:	f043 0301 	orr.w	r3, r3, #1
  400288:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  40028a:	6983      	ldr	r3, [r0, #24]
  40028c:	f013 0f01 	tst.w	r3, #1
  400290:	d0fb      	beq.n	40028a <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  400292:	2301      	movs	r3, #1
  400294:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
  400296:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
  400298:	6803      	ldr	r3, [r0, #0]
  40029a:	f023 0301 	bic.w	r3, r3, #1
  40029e:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
  4002a0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4002a2:	f000 0001 	and.w	r0, r0, #1
  4002a6:	bcf0      	pop	{r4, r5, r6, r7}
  4002a8:	4770      	bx	lr
  4002aa:	bf00      	nop
  4002ac:	cccccccd 	.word	0xcccccccd

004002b0 <rtc_set_time_alarm>:
 */
uint32_t rtc_set_time_alarm(Rtc *p_rtc,
		uint32_t ul_hour_flag, uint32_t ul_hour,
		uint32_t ul_minute_flag, uint32_t ul_minute,
		uint32_t ul_second_flag, uint32_t ul_second)
{
  4002b0:	b5f0      	push	{r4, r5, r6, r7, lr}
  4002b2:	9c05      	ldr	r4, [sp, #20]
  4002b4:	9d06      	ldr	r5, [sp, #24]
  4002b6:	9f07      	ldr	r7, [sp, #28]
	uint32_t ul_alarm = 0;

	/* Hour alarm setting */
	if (ul_hour_flag) {
  4002b8:	460e      	mov	r6, r1
  4002ba:	b1b1      	cbz	r1, 4002ea <rtc_set_time_alarm+0x3a>
		/* If 12-hour mode, set AMPM bit */
		if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  4002bc:	6841      	ldr	r1, [r0, #4]
			if (ul_hour > 12) {
  4002be:	f011 0f01 	tst.w	r1, #1
  4002c2:	d005      	beq.n	4002d0 <rtc_set_time_alarm+0x20>
  4002c4:	2a0c      	cmp	r2, #12
  4002c6:	d903      	bls.n	4002d0 <rtc_set_time_alarm+0x20>
				ul_hour -= 12;
  4002c8:	3a0c      	subs	r2, #12
				ul_alarm |= RTC_TIMR_AMPM;
  4002ca:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  4002ce:	e000      	b.n	4002d2 <rtc_set_time_alarm+0x22>
	uint32_t ul_alarm = 0;
  4002d0:	2600      	movs	r6, #0
			}
		}

		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  4002d2:	4919      	ldr	r1, [pc, #100]	; (400338 <rtc_set_time_alarm+0x88>)
  4002d4:	fba1 e102 	umull	lr, r1, r1, r2
  4002d8:	08c9      	lsrs	r1, r1, #3
				((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  4002da:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
  4002de:	eba2 024e 	sub.w	r2, r2, lr, lsl #1
  4002e2:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  4002e4:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
  4002e8:	4316      	orrs	r6, r2
	}

	/* Minute alarm setting */
	if (ul_minute_flag) {
  4002ea:	b15b      	cbz	r3, 400304 <rtc_set_time_alarm+0x54>
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4002ec:	4b12      	ldr	r3, [pc, #72]	; (400338 <rtc_set_time_alarm+0x88>)
  4002ee:	fba3 2304 	umull	r2, r3, r3, r4
  4002f2:	08db      	lsrs	r3, r3, #3
				((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  4002f4:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  4002f8:	eba4 0442 	sub.w	r4, r4, r2, lsl #1
  4002fc:	0224      	lsls	r4, r4, #8
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4002fe:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
  400302:	4326      	orrs	r6, r4
	}

	/* Second alarm setting */
	if (ul_second_flag) {
  400304:	b155      	cbz	r5, 40031c <rtc_set_time_alarm+0x6c>
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400306:	4b0c      	ldr	r3, [pc, #48]	; (400338 <rtc_set_time_alarm+0x88>)
  400308:	fba3 2307 	umull	r2, r3, r3, r7
  40030c:	08db      	lsrs	r3, r3, #3
				((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  40030e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  400312:	eba7 0742 	sub.w	r7, r7, r2, lsl #1
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400316:	ea47 1303 	orr.w	r3, r7, r3, lsl #4
  40031a:	431e      	orrs	r6, r3
	}

	p_rtc->RTC_TIMALR &= ~(RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  40031c:	6902      	ldr	r2, [r0, #16]
  40031e:	4b07      	ldr	r3, [pc, #28]	; (40033c <rtc_set_time_alarm+0x8c>)
  400320:	4013      	ands	r3, r2
  400322:	6103      	str	r3, [r0, #16]
	p_rtc->RTC_TIMALR = ul_alarm;
  400324:	6106      	str	r6, [r0, #16]
	p_rtc->RTC_TIMALR |= (RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  400326:	6902      	ldr	r2, [r0, #16]
  400328:	4b05      	ldr	r3, [pc, #20]	; (400340 <rtc_set_time_alarm+0x90>)
  40032a:	4313      	orrs	r3, r2
  40032c:	6103      	str	r3, [r0, #16]

	return (p_rtc->RTC_VER & RTC_VER_NVTIMALR);
  40032e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400330:	f000 0004 	and.w	r0, r0, #4
  400334:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400336:	bf00      	nop
  400338:	cccccccd 	.word	0xcccccccd
  40033c:	ff7f7f7f 	.word	0xff7f7f7f
  400340:	00808080 	.word	0x00808080

00400344 <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
  400344:	b4f0      	push	{r4, r5, r6, r7}
  400346:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
  400348:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
  40034a:	68c4      	ldr	r4, [r0, #12]
  40034c:	42a5      	cmp	r5, r4
  40034e:	d003      	beq.n	400358 <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
  400350:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
  400352:	68c4      	ldr	r4, [r0, #12]
  400354:	42ac      	cmp	r4, r5
  400356:	d1fb      	bne.n	400350 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
  400358:	b199      	cbz	r1, 400382 <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  40035a:	f3c4 3003 	ubfx	r0, r4, #12, #4
  40035e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  400362:	f3c4 2703 	ubfx	r7, r4, #8, #4
  400366:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  40036a:	f3c4 1002 	ubfx	r0, r4, #4, #3
  40036e:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  400372:	f004 000f 	and.w	r0, r4, #15
  400376:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  40037a:	2564      	movs	r5, #100	; 0x64
  40037c:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
  400380:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
  400382:	b142      	cbz	r2, 400396 <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  400384:	f3c4 5000 	ubfx	r0, r4, #20, #1
  400388:	0081      	lsls	r1, r0, #2
  40038a:	4408      	add	r0, r1
  40038c:	f3c4 4103 	ubfx	r1, r4, #16, #4
  400390:	eb01 0140 	add.w	r1, r1, r0, lsl #1
  400394:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
  400396:	b143      	cbz	r3, 4003aa <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  400398:	f3c4 7201 	ubfx	r2, r4, #28, #2
  40039c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  4003a0:	f3c4 6103 	ubfx	r1, r4, #24, #4
  4003a4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
  4003a8:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
  4003aa:	b116      	cbz	r6, 4003b2 <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
  4003ac:	f3c4 5442 	ubfx	r4, r4, #21, #3
  4003b0:	6034      	str	r4, [r6, #0]
	}
}
  4003b2:	bcf0      	pop	{r4, r5, r6, r7}
  4003b4:	4770      	bx	lr
	...

004003b8 <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
  4003b8:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003ba:	4d2a      	ldr	r5, [pc, #168]	; (400464 <rtc_set_date+0xac>)
  4003bc:	fba5 4603 	umull	r4, r6, r5, r3
  4003c0:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
  4003c2:	9c03      	ldr	r4, [sp, #12]
  4003c4:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003c6:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  4003ca:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4003ce:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003d2:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  4003d6:	fba5 6402 	umull	r6, r4, r5, r2
  4003da:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003dc:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  4003e0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4003e4:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003e8:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
  4003ec:	4b1e      	ldr	r3, [pc, #120]	; (400468 <rtc_set_date+0xb0>)
  4003ee:	fba3 4301 	umull	r4, r3, r3, r1
  4003f2:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4003f4:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
  4003f8:	4b1c      	ldr	r3, [pc, #112]	; (40046c <rtc_set_date+0xb4>)
  4003fa:	fba3 4301 	umull	r4, r3, r3, r1
  4003fe:	095b      	lsrs	r3, r3, #5
  400400:	fba5 6403 	umull	r6, r4, r5, r3
  400404:	08e4      	lsrs	r4, r4, #3
  400406:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40040a:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40040e:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
  400410:	fba5 4301 	umull	r4, r3, r5, r1
  400414:	08db      	lsrs	r3, r3, #3
  400416:	eb03 0483 	add.w	r4, r3, r3, lsl #2
  40041a:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40041e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
  400422:	fba5 1503 	umull	r1, r5, r5, r3
  400426:	08ed      	lsrs	r5, r5, #3
  400428:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  40042c:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400430:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  400434:	6983      	ldr	r3, [r0, #24]
  400436:	f013 0f04 	tst.w	r3, #4
  40043a:	d0fb      	beq.n	400434 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
  40043c:	6803      	ldr	r3, [r0, #0]
  40043e:	f043 0302 	orr.w	r3, r3, #2
  400442:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  400444:	6983      	ldr	r3, [r0, #24]
  400446:	f013 0f01 	tst.w	r3, #1
  40044a:	d0fb      	beq.n	400444 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  40044c:	2301      	movs	r3, #1
  40044e:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
  400450:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
  400452:	6803      	ldr	r3, [r0, #0]
  400454:	f023 0302 	bic.w	r3, r3, #2
  400458:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
  40045a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  40045c:	f000 0002 	and.w	r0, r0, #2
  400460:	bc70      	pop	{r4, r5, r6}
  400462:	4770      	bx	lr
  400464:	cccccccd 	.word	0xcccccccd
  400468:	10624dd3 	.word	0x10624dd3
  40046c:	51eb851f 	.word	0x51eb851f

00400470 <rtc_set_date_alarm>:
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date_alarm(Rtc *p_rtc,
		uint32_t ul_month_flag, uint32_t ul_month,
		uint32_t ul_day_flag, uint32_t ul_day)
{
  400470:	b430      	push	{r4, r5}
  400472:	9d02      	ldr	r5, [sp, #8]
	uint32_t ul_alarm = 0;

	/* Month alarm setting */
	if (ul_month_flag) {
  400474:	460c      	mov	r4, r1
  400476:	b151      	cbz	r1, 40048e <rtc_set_date_alarm+0x1e>
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400478:	4c12      	ldr	r4, [pc, #72]	; (4004c4 <rtc_set_date_alarm+0x54>)
  40047a:	fba4 1402 	umull	r1, r4, r4, r2
  40047e:	08e4      	lsrs	r4, r4, #3
				((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  400480:	eb04 0184 	add.w	r1, r4, r4, lsl #2
  400484:	eba2 0241 	sub.w	r2, r2, r1, lsl #1
  400488:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  40048a:	ea42 5404 	orr.w	r4, r2, r4, lsl #20
	}

	/* Day alarm setting */
	if (ul_day_flag) {
  40048e:	b15b      	cbz	r3, 4004a8 <rtc_set_date_alarm+0x38>
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400490:	4a0c      	ldr	r2, [pc, #48]	; (4004c4 <rtc_set_date_alarm+0x54>)
  400492:	fba2 3205 	umull	r3, r2, r2, r5
  400496:	08d2      	lsrs	r2, r2, #3
				((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  400498:	eb02 0382 	add.w	r3, r2, r2, lsl #2
  40049c:	eba5 0343 	sub.w	r3, r5, r3, lsl #1
  4004a0:	061b      	lsls	r3, r3, #24
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4004a2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
  4004a6:	431c      	orrs	r4, r3
	}

	/* Set alarm */
	p_rtc->RTC_CALALR &= ~(RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  4004a8:	6942      	ldr	r2, [r0, #20]
  4004aa:	4b07      	ldr	r3, [pc, #28]	; (4004c8 <rtc_set_date_alarm+0x58>)
  4004ac:	4013      	ands	r3, r2
  4004ae:	6143      	str	r3, [r0, #20]
	p_rtc->RTC_CALALR = ul_alarm;
  4004b0:	6144      	str	r4, [r0, #20]
	p_rtc->RTC_CALALR |= (RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  4004b2:	6942      	ldr	r2, [r0, #20]
  4004b4:	4b05      	ldr	r3, [pc, #20]	; (4004cc <rtc_set_date_alarm+0x5c>)
  4004b6:	4313      	orrs	r3, r2
  4004b8:	6143      	str	r3, [r0, #20]

	return (p_rtc->RTC_VER & RTC_VER_NVCALALR);
  4004ba:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4004bc:	f000 0008 	and.w	r0, r0, #8
  4004c0:	bc30      	pop	{r4, r5}
  4004c2:	4770      	bx	lr
  4004c4:	cccccccd 	.word	0xcccccccd
  4004c8:	7f7fffff 	.word	0x7f7fffff
  4004cc:	80800000 	.word	0x80800000

004004d0 <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  4004d0:	6980      	ldr	r0, [r0, #24]
}
  4004d2:	4770      	bx	lr

004004d4 <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  4004d4:	61c1      	str	r1, [r0, #28]
  4004d6:	4770      	bx	lr

004004d8 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4004d8:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4004da:	4b07      	ldr	r3, [pc, #28]	; (4004f8 <spi_enable_clock+0x20>)
  4004dc:	4298      	cmp	r0, r3
  4004de:	d003      	beq.n	4004e8 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4004e0:	4b06      	ldr	r3, [pc, #24]	; (4004fc <spi_enable_clock+0x24>)
  4004e2:	4298      	cmp	r0, r3
  4004e4:	d004      	beq.n	4004f0 <spi_enable_clock+0x18>
  4004e6:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4004e8:	2015      	movs	r0, #21
  4004ea:	4b05      	ldr	r3, [pc, #20]	; (400500 <spi_enable_clock+0x28>)
  4004ec:	4798      	blx	r3
  4004ee:	bd08      	pop	{r3, pc}
  4004f0:	202a      	movs	r0, #42	; 0x2a
  4004f2:	4b03      	ldr	r3, [pc, #12]	; (400500 <spi_enable_clock+0x28>)
  4004f4:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4004f6:	e7f6      	b.n	4004e6 <spi_enable_clock+0xe>
  4004f8:	40008000 	.word	0x40008000
  4004fc:	40058000 	.word	0x40058000
  400500:	00401171 	.word	0x00401171

00400504 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400504:	6843      	ldr	r3, [r0, #4]
  400506:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40050a:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  40050c:	6843      	ldr	r3, [r0, #4]
  40050e:	0409      	lsls	r1, r1, #16
  400510:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400514:	4319      	orrs	r1, r3
  400516:	6041      	str	r1, [r0, #4]
  400518:	4770      	bx	lr

0040051a <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40051a:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  40051c:	f643 2499 	movw	r4, #15001	; 0x3a99
  400520:	6905      	ldr	r5, [r0, #16]
  400522:	f015 0f02 	tst.w	r5, #2
  400526:	d103      	bne.n	400530 <spi_write+0x16>
		if (!timeout--) {
  400528:	3c01      	subs	r4, #1
  40052a:	d1f9      	bne.n	400520 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  40052c:	2001      	movs	r0, #1
  40052e:	e00c      	b.n	40054a <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400530:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400532:	f014 0f02 	tst.w	r4, #2
  400536:	d006      	beq.n	400546 <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400538:	0412      	lsls	r2, r2, #16
  40053a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  40053e:	4311      	orrs	r1, r2
		if (uc_last) {
  400540:	b10b      	cbz	r3, 400546 <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400542:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400546:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400548:	2000      	movs	r0, #0
}
  40054a:	bc30      	pop	{r4, r5}
  40054c:	4770      	bx	lr

0040054e <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  40054e:	b932      	cbnz	r2, 40055e <spi_set_clock_polarity+0x10>
  400550:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400554:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400556:	f023 0301 	bic.w	r3, r3, #1
  40055a:	6303      	str	r3, [r0, #48]	; 0x30
  40055c:	4770      	bx	lr
  40055e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400562:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400564:	f043 0301 	orr.w	r3, r3, #1
  400568:	6303      	str	r3, [r0, #48]	; 0x30
  40056a:	4770      	bx	lr

0040056c <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  40056c:	b932      	cbnz	r2, 40057c <spi_set_clock_phase+0x10>
  40056e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400572:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400574:	f023 0302 	bic.w	r3, r3, #2
  400578:	6303      	str	r3, [r0, #48]	; 0x30
  40057a:	4770      	bx	lr
  40057c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400580:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400582:	f043 0302 	orr.w	r3, r3, #2
  400586:	6303      	str	r3, [r0, #48]	; 0x30
  400588:	4770      	bx	lr

0040058a <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40058a:	2a04      	cmp	r2, #4
  40058c:	d003      	beq.n	400596 <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  40058e:	b16a      	cbz	r2, 4005ac <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400590:	2a08      	cmp	r2, #8
  400592:	d016      	beq.n	4005c2 <spi_configure_cs_behavior+0x38>
  400594:	4770      	bx	lr
  400596:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40059a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40059c:	f023 0308 	bic.w	r3, r3, #8
  4005a0:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4005a2:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4005a4:	f043 0304 	orr.w	r3, r3, #4
  4005a8:	6303      	str	r3, [r0, #48]	; 0x30
  4005aa:	4770      	bx	lr
  4005ac:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4005b0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4005b2:	f023 0308 	bic.w	r3, r3, #8
  4005b6:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4005b8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4005ba:	f023 0304 	bic.w	r3, r3, #4
  4005be:	6303      	str	r3, [r0, #48]	; 0x30
  4005c0:	4770      	bx	lr
  4005c2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  4005c6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4005c8:	f043 0308 	orr.w	r3, r3, #8
  4005cc:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4005ce:	e7e1      	b.n	400594 <spi_configure_cs_behavior+0xa>

004005d0 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4005d0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4005d4:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4005d6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4005da:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4005dc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4005de:	431a      	orrs	r2, r3
  4005e0:	630a      	str	r2, [r1, #48]	; 0x30
  4005e2:	4770      	bx	lr

004005e4 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4005e4:	1e43      	subs	r3, r0, #1
  4005e6:	4419      	add	r1, r3
  4005e8:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4005ec:	1e43      	subs	r3, r0, #1
  4005ee:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4005f0:	bf94      	ite	ls
  4005f2:	b200      	sxthls	r0, r0
		return -1;
  4005f4:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4005f8:	4770      	bx	lr

004005fa <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4005fa:	b17a      	cbz	r2, 40061c <spi_set_baudrate_div+0x22>
{
  4005fc:	b410      	push	{r4}
  4005fe:	4614      	mov	r4, r2
  400600:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400604:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400606:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40060a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  40060c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  40060e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400612:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400614:	2000      	movs	r0, #0
}
  400616:	f85d 4b04 	ldr.w	r4, [sp], #4
  40061a:	4770      	bx	lr
        return -1;
  40061c:	f04f 30ff 	mov.w	r0, #4294967295
  400620:	4770      	bx	lr
	...

00400624 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  400624:	4b01      	ldr	r3, [pc, #4]	; (40062c <gfx_mono_set_framebuffer+0x8>)
  400626:	6018      	str	r0, [r3, #0]
  400628:	4770      	bx	lr
  40062a:	bf00      	nop
  40062c:	204009f4 	.word	0x204009f4

00400630 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400630:	4b02      	ldr	r3, [pc, #8]	; (40063c <gfx_mono_framebuffer_put_byte+0xc>)
  400632:	681b      	ldr	r3, [r3, #0]
  400634:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  400638:	5442      	strb	r2, [r0, r1]
  40063a:	4770      	bx	lr
  40063c:	204009f4 	.word	0x204009f4

00400640 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400640:	4b02      	ldr	r3, [pc, #8]	; (40064c <gfx_mono_framebuffer_get_byte+0xc>)
  400642:	681b      	ldr	r3, [r3, #0]
  400644:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  400648:	5c40      	ldrb	r0, [r0, r1]
  40064a:	4770      	bx	lr
  40064c:	204009f4 	.word	0x204009f4

00400650 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400650:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400654:	1884      	adds	r4, r0, r2
  400656:	2c80      	cmp	r4, #128	; 0x80
  400658:	dd02      	ble.n	400660 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40065a:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  40065e:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400660:	b322      	cbz	r2, 4006ac <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400662:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400664:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  400668:	2601      	movs	r6, #1
  40066a:	fa06 f101 	lsl.w	r1, r6, r1
  40066e:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400670:	2b01      	cmp	r3, #1
  400672:	d01d      	beq.n	4006b0 <gfx_mono_generic_draw_horizontal_line+0x60>
  400674:	2b00      	cmp	r3, #0
  400676:	d035      	beq.n	4006e4 <gfx_mono_generic_draw_horizontal_line+0x94>
  400678:	2b02      	cmp	r3, #2
  40067a:	d117      	bne.n	4006ac <gfx_mono_generic_draw_horizontal_line+0x5c>
  40067c:	3801      	subs	r0, #1
  40067e:	b2c7      	uxtb	r7, r0
  400680:	19d4      	adds	r4, r2, r7
  400682:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400684:	f8df a090 	ldr.w	sl, [pc, #144]	; 400718 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400688:	f04f 0900 	mov.w	r9, #0
  40068c:	f8df 808c 	ldr.w	r8, [pc, #140]	; 40071c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400690:	4621      	mov	r1, r4
  400692:	4628      	mov	r0, r5
  400694:	47d0      	blx	sl
			temp ^= pixelmask;
  400696:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40069a:	464b      	mov	r3, r9
  40069c:	b2d2      	uxtb	r2, r2
  40069e:	4621      	mov	r1, r4
  4006a0:	4628      	mov	r0, r5
  4006a2:	47c0      	blx	r8
  4006a4:	3c01      	subs	r4, #1
  4006a6:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4006a8:	42bc      	cmp	r4, r7
  4006aa:	d1f1      	bne.n	400690 <gfx_mono_generic_draw_horizontal_line+0x40>
  4006ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4006b0:	3801      	subs	r0, #1
  4006b2:	b2c7      	uxtb	r7, r0
  4006b4:	19d4      	adds	r4, r2, r7
  4006b6:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4006b8:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400718 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  4006bc:	f04f 0900 	mov.w	r9, #0
  4006c0:	f8df 8058 	ldr.w	r8, [pc, #88]	; 40071c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4006c4:	4621      	mov	r1, r4
  4006c6:	4628      	mov	r0, r5
  4006c8:	47d0      	blx	sl
			temp |= pixelmask;
  4006ca:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4006ce:	464b      	mov	r3, r9
  4006d0:	b2d2      	uxtb	r2, r2
  4006d2:	4621      	mov	r1, r4
  4006d4:	4628      	mov	r0, r5
  4006d6:	47c0      	blx	r8
  4006d8:	3c01      	subs	r4, #1
  4006da:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4006dc:	42bc      	cmp	r4, r7
  4006de:	d1f1      	bne.n	4006c4 <gfx_mono_generic_draw_horizontal_line+0x74>
  4006e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4006e4:	3801      	subs	r0, #1
  4006e6:	b2c7      	uxtb	r7, r0
  4006e8:	19d4      	adds	r4, r2, r7
  4006ea:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4006ec:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400718 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4006f0:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4006f2:	f8df 9028 	ldr.w	r9, [pc, #40]	; 40071c <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4006f6:	4621      	mov	r1, r4
  4006f8:	4628      	mov	r0, r5
  4006fa:	47c0      	blx	r8
			temp &= ~pixelmask;
  4006fc:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400700:	2300      	movs	r3, #0
  400702:	b2d2      	uxtb	r2, r2
  400704:	4621      	mov	r1, r4
  400706:	4628      	mov	r0, r5
  400708:	47c8      	blx	r9
  40070a:	3c01      	subs	r4, #1
  40070c:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40070e:	42bc      	cmp	r4, r7
  400710:	d1f1      	bne.n	4006f6 <gfx_mono_generic_draw_horizontal_line+0xa6>
  400712:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400716:	bf00      	nop
  400718:	00400951 	.word	0x00400951
  40071c:	0040084d 	.word	0x0040084d

00400720 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400720:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400724:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  400728:	b18b      	cbz	r3, 40074e <gfx_mono_generic_draw_filled_rect+0x2e>
  40072a:	461c      	mov	r4, r3
  40072c:	4690      	mov	r8, r2
  40072e:	4606      	mov	r6, r0
  400730:	1e4d      	subs	r5, r1, #1
  400732:	b2ed      	uxtb	r5, r5
  400734:	442c      	add	r4, r5
  400736:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  400738:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400754 <gfx_mono_generic_draw_filled_rect+0x34>
  40073c:	463b      	mov	r3, r7
  40073e:	4642      	mov	r2, r8
  400740:	4621      	mov	r1, r4
  400742:	4630      	mov	r0, r6
  400744:	47c8      	blx	r9
  400746:	3c01      	subs	r4, #1
  400748:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40074a:	42ac      	cmp	r4, r5
  40074c:	d1f6      	bne.n	40073c <gfx_mono_generic_draw_filled_rect+0x1c>
  40074e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400752:	bf00      	nop
  400754:	00400651 	.word	0x00400651

00400758 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  400758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40075c:	b083      	sub	sp, #12
  40075e:	4604      	mov	r4, r0
  400760:	4688      	mov	r8, r1
  400762:	4691      	mov	r9, r2
  400764:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  400766:	7a5b      	ldrb	r3, [r3, #9]
  400768:	f89b 2008 	ldrb.w	r2, [fp, #8]
  40076c:	2100      	movs	r1, #0
  40076e:	9100      	str	r1, [sp, #0]
  400770:	4649      	mov	r1, r9
  400772:	4640      	mov	r0, r8
  400774:	4d21      	ldr	r5, [pc, #132]	; (4007fc <gfx_mono_draw_char+0xa4>)
  400776:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400778:	f89b 3000 	ldrb.w	r3, [fp]
  40077c:	b113      	cbz	r3, 400784 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  40077e:	b003      	add	sp, #12
  400780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400784:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400788:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40078a:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40078e:	bf18      	it	ne
  400790:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400792:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400796:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40079a:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  40079c:	fb17 f70a 	smulbb	r7, r7, sl
  4007a0:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  4007a4:	f8db 3004 	ldr.w	r3, [fp, #4]
  4007a8:	fa13 f787 	uxtah	r7, r3, r7
  4007ac:	e01f      	b.n	4007ee <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  4007ae:	0064      	lsls	r4, r4, #1
  4007b0:	b2e4      	uxtb	r4, r4
  4007b2:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  4007b4:	b2eb      	uxtb	r3, r5
  4007b6:	429e      	cmp	r6, r3
  4007b8:	d910      	bls.n	4007dc <gfx_mono_draw_char+0x84>
  4007ba:	b2eb      	uxtb	r3, r5
  4007bc:	eb08 0003 	add.w	r0, r8, r3
  4007c0:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  4007c2:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  4007c6:	bf08      	it	eq
  4007c8:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  4007cc:	f014 0f80 	tst.w	r4, #128	; 0x80
  4007d0:	d0ed      	beq.n	4007ae <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  4007d2:	2201      	movs	r2, #1
  4007d4:	4649      	mov	r1, r9
  4007d6:	4b0a      	ldr	r3, [pc, #40]	; (400800 <gfx_mono_draw_char+0xa8>)
  4007d8:	4798      	blx	r3
  4007da:	e7e8      	b.n	4007ae <gfx_mono_draw_char+0x56>
		inc_y += 1;
  4007dc:	f109 0901 	add.w	r9, r9, #1
  4007e0:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  4007e4:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  4007e8:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  4007ec:	d0c7      	beq.n	40077e <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  4007ee:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  4007f2:	2e00      	cmp	r6, #0
  4007f4:	d0f2      	beq.n	4007dc <gfx_mono_draw_char+0x84>
  4007f6:	2500      	movs	r5, #0
  4007f8:	462c      	mov	r4, r5
  4007fa:	e7de      	b.n	4007ba <gfx_mono_draw_char+0x62>
  4007fc:	00400721 	.word	0x00400721
  400800:	004008ed 	.word	0x004008ed

00400804 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400804:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400808:	4604      	mov	r4, r0
  40080a:	4690      	mov	r8, r2
  40080c:	461d      	mov	r5, r3
  40080e:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  400810:	4f0d      	ldr	r7, [pc, #52]	; (400848 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  400812:	460e      	mov	r6, r1
  400814:	e008      	b.n	400828 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  400816:	7a6a      	ldrb	r2, [r5, #9]
  400818:	3201      	adds	r2, #1
  40081a:	4442      	add	r2, r8
  40081c:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  400820:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  400822:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  400826:	b16b      	cbz	r3, 400844 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  400828:	7820      	ldrb	r0, [r4, #0]
  40082a:	280a      	cmp	r0, #10
  40082c:	d0f3      	beq.n	400816 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  40082e:	280d      	cmp	r0, #13
  400830:	d0f7      	beq.n	400822 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  400832:	462b      	mov	r3, r5
  400834:	4642      	mov	r2, r8
  400836:	4649      	mov	r1, r9
  400838:	47b8      	blx	r7
			x += font->width;
  40083a:	7a2b      	ldrb	r3, [r5, #8]
  40083c:	4499      	add	r9, r3
  40083e:	fa5f f989 	uxtb.w	r9, r9
  400842:	e7ee      	b.n	400822 <gfx_mono_draw_string+0x1e>
}
  400844:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400848:	00400759 	.word	0x00400759

0040084c <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  40084c:	b570      	push	{r4, r5, r6, lr}
  40084e:	4604      	mov	r4, r0
  400850:	460d      	mov	r5, r1
  400852:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  400854:	b91b      	cbnz	r3, 40085e <gfx_mono_ssd1306_put_byte+0x12>
  400856:	4b0d      	ldr	r3, [pc, #52]	; (40088c <gfx_mono_ssd1306_put_byte+0x40>)
  400858:	4798      	blx	r3
  40085a:	42b0      	cmp	r0, r6
  40085c:	d015      	beq.n	40088a <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  40085e:	4632      	mov	r2, r6
  400860:	4629      	mov	r1, r5
  400862:	4620      	mov	r0, r4
  400864:	4b0a      	ldr	r3, [pc, #40]	; (400890 <gfx_mono_ssd1306_put_byte+0x44>)
  400866:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  400868:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  40086c:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400870:	4c08      	ldr	r4, [pc, #32]	; (400894 <gfx_mono_ssd1306_put_byte+0x48>)
  400872:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400874:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400878:	f040 0010 	orr.w	r0, r0, #16
  40087c:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  40087e:	f005 000f 	and.w	r0, r5, #15
  400882:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400884:	4630      	mov	r0, r6
  400886:	4b04      	ldr	r3, [pc, #16]	; (400898 <gfx_mono_ssd1306_put_byte+0x4c>)
  400888:	4798      	blx	r3
  40088a:	bd70      	pop	{r4, r5, r6, pc}
  40088c:	00400641 	.word	0x00400641
  400890:	00400631 	.word	0x00400631
  400894:	0040095d 	.word	0x0040095d
  400898:	00400b7d 	.word	0x00400b7d

0040089c <gfx_mono_ssd1306_init>:
{
  40089c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  4008a0:	480d      	ldr	r0, [pc, #52]	; (4008d8 <gfx_mono_ssd1306_init+0x3c>)
  4008a2:	4b0e      	ldr	r3, [pc, #56]	; (4008dc <gfx_mono_ssd1306_init+0x40>)
  4008a4:	4798      	blx	r3
	ssd1306_init();
  4008a6:	4b0e      	ldr	r3, [pc, #56]	; (4008e0 <gfx_mono_ssd1306_init+0x44>)
  4008a8:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  4008aa:	2040      	movs	r0, #64	; 0x40
  4008ac:	4b0d      	ldr	r3, [pc, #52]	; (4008e4 <gfx_mono_ssd1306_init+0x48>)
  4008ae:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4008b0:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4008b2:	f04f 0801 	mov.w	r8, #1
  4008b6:	462f      	mov	r7, r5
  4008b8:	4e0b      	ldr	r6, [pc, #44]	; (4008e8 <gfx_mono_ssd1306_init+0x4c>)
{
  4008ba:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4008bc:	4643      	mov	r3, r8
  4008be:	463a      	mov	r2, r7
  4008c0:	b2e1      	uxtb	r1, r4
  4008c2:	4628      	mov	r0, r5
  4008c4:	47b0      	blx	r6
  4008c6:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  4008c8:	2c80      	cmp	r4, #128	; 0x80
  4008ca:	d1f7      	bne.n	4008bc <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4008cc:	3501      	adds	r5, #1
  4008ce:	b2ed      	uxtb	r5, r5
  4008d0:	2d04      	cmp	r5, #4
  4008d2:	d1f2      	bne.n	4008ba <gfx_mono_ssd1306_init+0x1e>
  4008d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4008d8:	204009f8 	.word	0x204009f8
  4008dc:	00400625 	.word	0x00400625
  4008e0:	0040099d 	.word	0x0040099d
  4008e4:	0040095d 	.word	0x0040095d
  4008e8:	0040084d 	.word	0x0040084d

004008ec <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  4008ec:	09c3      	lsrs	r3, r0, #7
  4008ee:	d12a      	bne.n	400946 <gfx_mono_ssd1306_draw_pixel+0x5a>
  4008f0:	291f      	cmp	r1, #31
  4008f2:	d828      	bhi.n	400946 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  4008f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4008f8:	4614      	mov	r4, r2
  4008fa:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  4008fc:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  4008fe:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  400902:	2201      	movs	r2, #1
  400904:	fa02 f701 	lsl.w	r7, r2, r1
  400908:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  40090c:	4601      	mov	r1, r0
  40090e:	4630      	mov	r0, r6
  400910:	4b0d      	ldr	r3, [pc, #52]	; (400948 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  400912:	4798      	blx	r3
  400914:	4602      	mov	r2, r0
	switch (color) {
  400916:	2c01      	cmp	r4, #1
  400918:	d009      	beq.n	40092e <gfx_mono_ssd1306_draw_pixel+0x42>
  40091a:	b164      	cbz	r4, 400936 <gfx_mono_ssd1306_draw_pixel+0x4a>
  40091c:	2c02      	cmp	r4, #2
  40091e:	d00e      	beq.n	40093e <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  400920:	2300      	movs	r3, #0
  400922:	4629      	mov	r1, r5
  400924:	4630      	mov	r0, r6
  400926:	4c09      	ldr	r4, [pc, #36]	; (40094c <gfx_mono_ssd1306_draw_pixel+0x60>)
  400928:	47a0      	blx	r4
  40092a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  40092e:	ea48 0200 	orr.w	r2, r8, r0
  400932:	b2d2      	uxtb	r2, r2
		break;
  400934:	e7f4      	b.n	400920 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  400936:	ea20 0207 	bic.w	r2, r0, r7
  40093a:	b2d2      	uxtb	r2, r2
		break;
  40093c:	e7f0      	b.n	400920 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  40093e:	ea88 0200 	eor.w	r2, r8, r0
  400942:	b2d2      	uxtb	r2, r2
		break;
  400944:	e7ec      	b.n	400920 <gfx_mono_ssd1306_draw_pixel+0x34>
  400946:	4770      	bx	lr
  400948:	00400641 	.word	0x00400641
  40094c:	0040084d 	.word	0x0040084d

00400950 <gfx_mono_ssd1306_get_byte>:
{
  400950:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400952:	4b01      	ldr	r3, [pc, #4]	; (400958 <gfx_mono_ssd1306_get_byte+0x8>)
  400954:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  400956:	bd08      	pop	{r3, pc}
  400958:	00400641 	.word	0x00400641

0040095c <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  40095c:	b538      	push	{r3, r4, r5, lr}
  40095e:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400960:	2208      	movs	r2, #8
  400962:	4b09      	ldr	r3, [pc, #36]	; (400988 <ssd1306_write_command+0x2c>)
  400964:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400966:	4c09      	ldr	r4, [pc, #36]	; (40098c <ssd1306_write_command+0x30>)
  400968:	2101      	movs	r1, #1
  40096a:	4620      	mov	r0, r4
  40096c:	4b08      	ldr	r3, [pc, #32]	; (400990 <ssd1306_write_command+0x34>)
  40096e:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400970:	2301      	movs	r3, #1
  400972:	461a      	mov	r2, r3
  400974:	4629      	mov	r1, r5
  400976:	4620      	mov	r0, r4
  400978:	4c06      	ldr	r4, [pc, #24]	; (400994 <ssd1306_write_command+0x38>)
  40097a:	47a0      	blx	r4
	delay_us(10);
  40097c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400980:	4b05      	ldr	r3, [pc, #20]	; (400998 <ssd1306_write_command+0x3c>)
  400982:	4798      	blx	r3
  400984:	bd38      	pop	{r3, r4, r5, pc}
  400986:	bf00      	nop
  400988:	400e1000 	.word	0x400e1000
  40098c:	40008000 	.word	0x40008000
  400990:	00400505 	.word	0x00400505
  400994:	0040051b 	.word	0x0040051b
  400998:	20400001 	.word	0x20400001

0040099c <ssd1306_init>:
{
  40099c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4009a0:	4d66      	ldr	r5, [pc, #408]	; (400b3c <ssd1306_init+0x1a0>)
  4009a2:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  4009a6:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4009a8:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4009ac:	4b64      	ldr	r3, [pc, #400]	; (400b40 <ssd1306_init+0x1a4>)
  4009ae:	2708      	movs	r7, #8
  4009b0:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4009b2:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4009b6:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4009b8:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  4009bc:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  4009be:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4009c0:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4009c4:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  4009c6:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4009ca:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4009cc:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  4009ce:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4009d2:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  4009d4:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4009d6:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4009da:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4009dc:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4009de:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4009e2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4009e4:	f022 0208 	bic.w	r2, r2, #8
  4009e8:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4009ea:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4009ec:	f022 0208 	bic.w	r2, r2, #8
  4009f0:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  4009f2:	601f      	str	r7, [r3, #0]
  4009f4:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4009f6:	631f      	str	r7, [r3, #48]	; 0x30
  4009f8:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4009fa:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400b78 <ssd1306_init+0x1dc>
  4009fe:	2300      	movs	r3, #0
  400a00:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400a04:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400a08:	4640      	mov	r0, r8
  400a0a:	4c4e      	ldr	r4, [pc, #312]	; (400b44 <ssd1306_init+0x1a8>)
  400a0c:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400a0e:	2300      	movs	r3, #0
  400a10:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400a14:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400a18:	4640      	mov	r0, r8
  400a1a:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400a1c:	2300      	movs	r3, #0
  400a1e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400a22:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400a26:	4640      	mov	r0, r8
  400a28:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400a2a:	2300      	movs	r3, #0
  400a2c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400a30:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400a34:	4640      	mov	r0, r8
  400a36:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400a38:	2300      	movs	r3, #0
  400a3a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400a3e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400a42:	4640      	mov	r0, r8
  400a44:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400a46:	2300      	movs	r3, #0
  400a48:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400a4c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400a50:	4640      	mov	r0, r8
  400a52:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400a54:	4c3c      	ldr	r4, [pc, #240]	; (400b48 <ssd1306_init+0x1ac>)
  400a56:	f04f 0902 	mov.w	r9, #2
  400a5a:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400a5e:	f04f 0880 	mov.w	r8, #128	; 0x80
  400a62:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400a66:	6863      	ldr	r3, [r4, #4]
  400a68:	f043 0301 	orr.w	r3, r3, #1
  400a6c:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400a6e:	463a      	mov	r2, r7
  400a70:	2101      	movs	r1, #1
  400a72:	4620      	mov	r0, r4
  400a74:	4b35      	ldr	r3, [pc, #212]	; (400b4c <ssd1306_init+0x1b0>)
  400a76:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400a78:	2200      	movs	r2, #0
  400a7a:	2101      	movs	r1, #1
  400a7c:	4620      	mov	r0, r4
  400a7e:	4b34      	ldr	r3, [pc, #208]	; (400b50 <ssd1306_init+0x1b4>)
  400a80:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400a82:	2200      	movs	r2, #0
  400a84:	2101      	movs	r1, #1
  400a86:	4620      	mov	r0, r4
  400a88:	4b32      	ldr	r3, [pc, #200]	; (400b54 <ssd1306_init+0x1b8>)
  400a8a:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400a8c:	6863      	ldr	r3, [r4, #4]
  400a8e:	f023 0302 	bic.w	r3, r3, #2
  400a92:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400a94:	2200      	movs	r2, #0
  400a96:	2101      	movs	r1, #1
  400a98:	4620      	mov	r0, r4
  400a9a:	4b2f      	ldr	r3, [pc, #188]	; (400b58 <ssd1306_init+0x1bc>)
  400a9c:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400a9e:	6863      	ldr	r3, [r4, #4]
  400aa0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400aa4:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400aa6:	6863      	ldr	r3, [r4, #4]
  400aa8:	f043 0310 	orr.w	r3, r3, #16
  400aac:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  400aae:	492b      	ldr	r1, [pc, #172]	; (400b5c <ssd1306_init+0x1c0>)
  400ab0:	482b      	ldr	r0, [pc, #172]	; (400b60 <ssd1306_init+0x1c4>)
  400ab2:	4b2c      	ldr	r3, [pc, #176]	; (400b64 <ssd1306_init+0x1c8>)
  400ab4:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400ab6:	b2c2      	uxtb	r2, r0
  400ab8:	2101      	movs	r1, #1
  400aba:	4620      	mov	r0, r4
  400abc:	4b2a      	ldr	r3, [pc, #168]	; (400b68 <ssd1306_init+0x1cc>)
  400abe:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400ac0:	4620      	mov	r0, r4
  400ac2:	4b2a      	ldr	r3, [pc, #168]	; (400b6c <ssd1306_init+0x1d0>)
  400ac4:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400ac6:	2301      	movs	r3, #1
  400ac8:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400aca:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400acc:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400ad0:	4c27      	ldr	r4, [pc, #156]	; (400b70 <ssd1306_init+0x1d4>)
  400ad2:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400ad4:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400ad6:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400ada:	47a0      	blx	r4
  400adc:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400ade:	20a8      	movs	r0, #168	; 0xa8
  400ae0:	4c24      	ldr	r4, [pc, #144]	; (400b74 <ssd1306_init+0x1d8>)
  400ae2:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400ae4:	201f      	movs	r0, #31
  400ae6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400ae8:	20d3      	movs	r0, #211	; 0xd3
  400aea:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400aec:	2000      	movs	r0, #0
  400aee:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400af0:	2040      	movs	r0, #64	; 0x40
  400af2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400af4:	20a1      	movs	r0, #161	; 0xa1
  400af6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400af8:	20c8      	movs	r0, #200	; 0xc8
  400afa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400afc:	20da      	movs	r0, #218	; 0xda
  400afe:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400b00:	4648      	mov	r0, r9
  400b02:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400b04:	2081      	movs	r0, #129	; 0x81
  400b06:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400b08:	208f      	movs	r0, #143	; 0x8f
  400b0a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400b0c:	20a4      	movs	r0, #164	; 0xa4
  400b0e:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400b10:	20a6      	movs	r0, #166	; 0xa6
  400b12:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400b14:	20d5      	movs	r0, #213	; 0xd5
  400b16:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400b18:	4640      	mov	r0, r8
  400b1a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400b1c:	208d      	movs	r0, #141	; 0x8d
  400b1e:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400b20:	2014      	movs	r0, #20
  400b22:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400b24:	20db      	movs	r0, #219	; 0xdb
  400b26:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400b28:	2040      	movs	r0, #64	; 0x40
  400b2a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400b2c:	20d9      	movs	r0, #217	; 0xd9
  400b2e:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400b30:	20f1      	movs	r0, #241	; 0xf1
  400b32:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400b34:	20af      	movs	r0, #175	; 0xaf
  400b36:	47a0      	blx	r4
  400b38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400b3c:	400e1200 	.word	0x400e1200
  400b40:	400e1000 	.word	0x400e1000
  400b44:	00400e5d 	.word	0x00400e5d
  400b48:	40008000 	.word	0x40008000
  400b4c:	0040058b 	.word	0x0040058b
  400b50:	0040054f 	.word	0x0040054f
  400b54:	0040056d 	.word	0x0040056d
  400b58:	004005d1 	.word	0x004005d1
  400b5c:	08f0d180 	.word	0x08f0d180
  400b60:	000f4240 	.word	0x000f4240
  400b64:	004005e5 	.word	0x004005e5
  400b68:	004005fb 	.word	0x004005fb
  400b6c:	004004d9 	.word	0x004004d9
  400b70:	20400001 	.word	0x20400001
  400b74:	0040095d 	.word	0x0040095d
  400b78:	400e1400 	.word	0x400e1400

00400b7c <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400b7c:	b538      	push	{r3, r4, r5, lr}
  400b7e:	4605      	mov	r5, r0
  400b80:	2208      	movs	r2, #8
  400b82:	4b09      	ldr	r3, [pc, #36]	; (400ba8 <ssd1306_write_data+0x2c>)
  400b84:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400b86:	4c09      	ldr	r4, [pc, #36]	; (400bac <ssd1306_write_data+0x30>)
  400b88:	2101      	movs	r1, #1
  400b8a:	4620      	mov	r0, r4
  400b8c:	4b08      	ldr	r3, [pc, #32]	; (400bb0 <ssd1306_write_data+0x34>)
  400b8e:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400b90:	2301      	movs	r3, #1
  400b92:	461a      	mov	r2, r3
  400b94:	4629      	mov	r1, r5
  400b96:	4620      	mov	r0, r4
  400b98:	4c06      	ldr	r4, [pc, #24]	; (400bb4 <ssd1306_write_data+0x38>)
  400b9a:	47a0      	blx	r4
	delay_us(10);
  400b9c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400ba0:	4b05      	ldr	r3, [pc, #20]	; (400bb8 <ssd1306_write_data+0x3c>)
  400ba2:	4798      	blx	r3
  400ba4:	bd38      	pop	{r3, r4, r5, pc}
  400ba6:	bf00      	nop
  400ba8:	400e1000 	.word	0x400e1000
  400bac:	40008000 	.word	0x40008000
  400bb0:	00400505 	.word	0x00400505
  400bb4:	0040051b 	.word	0x0040051b
  400bb8:	20400001 	.word	0x20400001

00400bbc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400bbc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400bbe:	4810      	ldr	r0, [pc, #64]	; (400c00 <sysclk_init+0x44>)
  400bc0:	4b10      	ldr	r3, [pc, #64]	; (400c04 <sysclk_init+0x48>)
  400bc2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400bc4:	213e      	movs	r1, #62	; 0x3e
  400bc6:	2000      	movs	r0, #0
  400bc8:	4b0f      	ldr	r3, [pc, #60]	; (400c08 <sysclk_init+0x4c>)
  400bca:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400bcc:	4c0f      	ldr	r4, [pc, #60]	; (400c0c <sysclk_init+0x50>)
  400bce:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400bd0:	2800      	cmp	r0, #0
  400bd2:	d0fc      	beq.n	400bce <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400bd4:	4b0e      	ldr	r3, [pc, #56]	; (400c10 <sysclk_init+0x54>)
  400bd6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400bd8:	4a0e      	ldr	r2, [pc, #56]	; (400c14 <sysclk_init+0x58>)
  400bda:	4b0f      	ldr	r3, [pc, #60]	; (400c18 <sysclk_init+0x5c>)
  400bdc:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400bde:	4c0f      	ldr	r4, [pc, #60]	; (400c1c <sysclk_init+0x60>)
  400be0:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400be2:	2800      	cmp	r0, #0
  400be4:	d0fc      	beq.n	400be0 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400be6:	2002      	movs	r0, #2
  400be8:	4b0d      	ldr	r3, [pc, #52]	; (400c20 <sysclk_init+0x64>)
  400bea:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400bec:	2000      	movs	r0, #0
  400bee:	4b0d      	ldr	r3, [pc, #52]	; (400c24 <sysclk_init+0x68>)
  400bf0:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400bf2:	4b0d      	ldr	r3, [pc, #52]	; (400c28 <sysclk_init+0x6c>)
  400bf4:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400bf6:	4802      	ldr	r0, [pc, #8]	; (400c00 <sysclk_init+0x44>)
  400bf8:	4b02      	ldr	r3, [pc, #8]	; (400c04 <sysclk_init+0x48>)
  400bfa:	4798      	blx	r3
  400bfc:	bd10      	pop	{r4, pc}
  400bfe:	bf00      	nop
  400c00:	11e1a300 	.word	0x11e1a300
  400c04:	00401661 	.word	0x00401661
  400c08:	004010ed 	.word	0x004010ed
  400c0c:	00401141 	.word	0x00401141
  400c10:	00401151 	.word	0x00401151
  400c14:	20183f01 	.word	0x20183f01
  400c18:	400e0600 	.word	0x400e0600
  400c1c:	00401161 	.word	0x00401161
  400c20:	00401051 	.word	0x00401051
  400c24:	00401089 	.word	0x00401089
  400c28:	00401555 	.word	0x00401555

00400c2c <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400c2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400c2e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400c32:	4b48      	ldr	r3, [pc, #288]	; (400d54 <board_init+0x128>)
  400c34:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400c36:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c3a:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400c3e:	4b46      	ldr	r3, [pc, #280]	; (400d58 <board_init+0x12c>)
  400c40:	2200      	movs	r2, #0
  400c42:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400c46:	695a      	ldr	r2, [r3, #20]
  400c48:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400c4c:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400c4e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c52:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400c56:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400c5a:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400c5e:	f007 0007 	and.w	r0, r7, #7
  400c62:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400c64:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400c68:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400c6c:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400c70:	f3bf 8f4f 	dsb	sy
  400c74:	f04f 34ff 	mov.w	r4, #4294967295
  400c78:	fa04 fc00 	lsl.w	ip, r4, r0
  400c7c:	fa06 f000 	lsl.w	r0, r6, r0
  400c80:	fa04 f40e 	lsl.w	r4, r4, lr
  400c84:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400c88:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400c8a:	463a      	mov	r2, r7
  400c8c:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400c8e:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400c92:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400c96:	3a01      	subs	r2, #1
  400c98:	4423      	add	r3, r4
  400c9a:	f1b2 3fff 	cmp.w	r2, #4294967295
  400c9e:	d1f6      	bne.n	400c8e <board_init+0x62>
        } while(sets--);
  400ca0:	3e01      	subs	r6, #1
  400ca2:	4460      	add	r0, ip
  400ca4:	f1b6 3fff 	cmp.w	r6, #4294967295
  400ca8:	d1ef      	bne.n	400c8a <board_init+0x5e>
  400caa:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400cae:	4b2a      	ldr	r3, [pc, #168]	; (400d58 <board_init+0x12c>)
  400cb0:	695a      	ldr	r2, [r3, #20]
  400cb2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400cb6:	615a      	str	r2, [r3, #20]
  400cb8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400cbc:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400cc0:	4a26      	ldr	r2, [pc, #152]	; (400d5c <board_init+0x130>)
  400cc2:	4927      	ldr	r1, [pc, #156]	; (400d60 <board_init+0x134>)
  400cc4:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400cc6:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400cca:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400ccc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400cd0:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400cd4:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400cd8:	f022 0201 	bic.w	r2, r2, #1
  400cdc:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400ce0:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400ce4:	f022 0201 	bic.w	r2, r2, #1
  400ce8:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400cec:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400cf0:	f3bf 8f6f 	isb	sy
  400cf4:	200a      	movs	r0, #10
  400cf6:	4c1b      	ldr	r4, [pc, #108]	; (400d64 <board_init+0x138>)
  400cf8:	47a0      	blx	r4
  400cfa:	200b      	movs	r0, #11
  400cfc:	47a0      	blx	r4
  400cfe:	200c      	movs	r0, #12
  400d00:	47a0      	blx	r4
  400d02:	2010      	movs	r0, #16
  400d04:	47a0      	blx	r4
  400d06:	2011      	movs	r0, #17
  400d08:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400d0a:	4b17      	ldr	r3, [pc, #92]	; (400d68 <board_init+0x13c>)
  400d0c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400d10:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400d12:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400d16:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400d18:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400d1c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400d20:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400d22:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400d26:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400d28:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400d2c:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400d2e:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400d30:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400d34:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400d36:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400d3a:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400d3c:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400d3e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400d42:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400d44:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400d48:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400d4c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400d50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d52:	bf00      	nop
  400d54:	400e1850 	.word	0x400e1850
  400d58:	e000ed00 	.word	0xe000ed00
  400d5c:	400e0c00 	.word	0x400e0c00
  400d60:	5a00080c 	.word	0x5a00080c
  400d64:	00401171 	.word	0x00401171
  400d68:	400e1200 	.word	0x400e1200

00400d6c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400d6c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400d6e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d72:	d03a      	beq.n	400dea <pio_set_peripheral+0x7e>
  400d74:	d813      	bhi.n	400d9e <pio_set_peripheral+0x32>
  400d76:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d7a:	d025      	beq.n	400dc8 <pio_set_peripheral+0x5c>
  400d7c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d80:	d10a      	bne.n	400d98 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d82:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d84:	4313      	orrs	r3, r2
  400d86:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400d88:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d8a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d8c:	400b      	ands	r3, r1
  400d8e:	ea23 0302 	bic.w	r3, r3, r2
  400d92:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400d94:	6042      	str	r2, [r0, #4]
  400d96:	4770      	bx	lr
	switch (ul_type) {
  400d98:	2900      	cmp	r1, #0
  400d9a:	d1fb      	bne.n	400d94 <pio_set_peripheral+0x28>
  400d9c:	4770      	bx	lr
  400d9e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400da2:	d021      	beq.n	400de8 <pio_set_peripheral+0x7c>
  400da4:	d809      	bhi.n	400dba <pio_set_peripheral+0x4e>
  400da6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400daa:	d1f3      	bne.n	400d94 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400dac:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400dae:	4313      	orrs	r3, r2
  400db0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400db2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400db4:	4313      	orrs	r3, r2
  400db6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400db8:	e7ec      	b.n	400d94 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400dba:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400dbe:	d013      	beq.n	400de8 <pio_set_peripheral+0x7c>
  400dc0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400dc4:	d010      	beq.n	400de8 <pio_set_peripheral+0x7c>
  400dc6:	e7e5      	b.n	400d94 <pio_set_peripheral+0x28>
{
  400dc8:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400dca:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400dcc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400dce:	43d3      	mvns	r3, r2
  400dd0:	4021      	ands	r1, r4
  400dd2:	461c      	mov	r4, r3
  400dd4:	4019      	ands	r1, r3
  400dd6:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400dd8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400dda:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400ddc:	400b      	ands	r3, r1
  400dde:	4023      	ands	r3, r4
  400de0:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400de2:	6042      	str	r2, [r0, #4]
}
  400de4:	f85d 4b04 	ldr.w	r4, [sp], #4
  400de8:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400dea:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400dec:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400dee:	400b      	ands	r3, r1
  400df0:	ea23 0302 	bic.w	r3, r3, r2
  400df4:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400df6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400df8:	4313      	orrs	r3, r2
  400dfa:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400dfc:	e7ca      	b.n	400d94 <pio_set_peripheral+0x28>

00400dfe <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400dfe:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400e00:	f012 0f01 	tst.w	r2, #1
  400e04:	d10d      	bne.n	400e22 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400e06:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400e08:	f012 0f0a 	tst.w	r2, #10
  400e0c:	d00b      	beq.n	400e26 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400e0e:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400e10:	f012 0f02 	tst.w	r2, #2
  400e14:	d109      	bne.n	400e2a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400e16:	f012 0f08 	tst.w	r2, #8
  400e1a:	d008      	beq.n	400e2e <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400e1c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400e20:	e005      	b.n	400e2e <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400e22:	6641      	str	r1, [r0, #100]	; 0x64
  400e24:	e7f0      	b.n	400e08 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400e26:	6241      	str	r1, [r0, #36]	; 0x24
  400e28:	e7f2      	b.n	400e10 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400e2a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400e2e:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400e30:	6001      	str	r1, [r0, #0]
  400e32:	4770      	bx	lr

00400e34 <pio_set_output>:
{
  400e34:	b410      	push	{r4}
  400e36:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400e38:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400e3a:	b94c      	cbnz	r4, 400e50 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400e3c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400e3e:	b14b      	cbz	r3, 400e54 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400e40:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400e42:	b94a      	cbnz	r2, 400e58 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400e44:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400e46:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400e48:	6001      	str	r1, [r0, #0]
}
  400e4a:	f85d 4b04 	ldr.w	r4, [sp], #4
  400e4e:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400e50:	6641      	str	r1, [r0, #100]	; 0x64
  400e52:	e7f4      	b.n	400e3e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400e54:	6541      	str	r1, [r0, #84]	; 0x54
  400e56:	e7f4      	b.n	400e42 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400e58:	6301      	str	r1, [r0, #48]	; 0x30
  400e5a:	e7f4      	b.n	400e46 <pio_set_output+0x12>

00400e5c <pio_configure>:
{
  400e5c:	b570      	push	{r4, r5, r6, lr}
  400e5e:	b082      	sub	sp, #8
  400e60:	4605      	mov	r5, r0
  400e62:	4616      	mov	r6, r2
  400e64:	461c      	mov	r4, r3
	switch (ul_type) {
  400e66:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400e6a:	d014      	beq.n	400e96 <pio_configure+0x3a>
  400e6c:	d90a      	bls.n	400e84 <pio_configure+0x28>
  400e6e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400e72:	d024      	beq.n	400ebe <pio_configure+0x62>
  400e74:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e78:	d021      	beq.n	400ebe <pio_configure+0x62>
  400e7a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400e7e:	d017      	beq.n	400eb0 <pio_configure+0x54>
		return 0;
  400e80:	2000      	movs	r0, #0
  400e82:	e01a      	b.n	400eba <pio_configure+0x5e>
	switch (ul_type) {
  400e84:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400e88:	d005      	beq.n	400e96 <pio_configure+0x3a>
  400e8a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400e8e:	d002      	beq.n	400e96 <pio_configure+0x3a>
  400e90:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400e94:	d1f4      	bne.n	400e80 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400e96:	4632      	mov	r2, r6
  400e98:	4628      	mov	r0, r5
  400e9a:	4b11      	ldr	r3, [pc, #68]	; (400ee0 <pio_configure+0x84>)
  400e9c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e9e:	f014 0f01 	tst.w	r4, #1
  400ea2:	d102      	bne.n	400eaa <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400ea4:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400ea6:	2001      	movs	r0, #1
  400ea8:	e007      	b.n	400eba <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400eaa:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400eac:	2001      	movs	r0, #1
  400eae:	e004      	b.n	400eba <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400eb0:	461a      	mov	r2, r3
  400eb2:	4631      	mov	r1, r6
  400eb4:	4b0b      	ldr	r3, [pc, #44]	; (400ee4 <pio_configure+0x88>)
  400eb6:	4798      	blx	r3
	return 1;
  400eb8:	2001      	movs	r0, #1
}
  400eba:	b002      	add	sp, #8
  400ebc:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400ebe:	f004 0301 	and.w	r3, r4, #1
  400ec2:	9300      	str	r3, [sp, #0]
  400ec4:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400ec8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400ecc:	bf14      	ite	ne
  400ece:	2200      	movne	r2, #0
  400ed0:	2201      	moveq	r2, #1
  400ed2:	4631      	mov	r1, r6
  400ed4:	4628      	mov	r0, r5
  400ed6:	4c04      	ldr	r4, [pc, #16]	; (400ee8 <pio_configure+0x8c>)
  400ed8:	47a0      	blx	r4
	return 1;
  400eda:	2001      	movs	r0, #1
		break;
  400edc:	e7ed      	b.n	400eba <pio_configure+0x5e>
  400ede:	bf00      	nop
  400ee0:	00400d6d 	.word	0x00400d6d
  400ee4:	00400dff 	.word	0x00400dff
  400ee8:	00400e35 	.word	0x00400e35

00400eec <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400eec:	f012 0f10 	tst.w	r2, #16
  400ef0:	d012      	beq.n	400f18 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400ef2:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400ef6:	f012 0f20 	tst.w	r2, #32
  400efa:	d007      	beq.n	400f0c <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400efc:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400f00:	f012 0f40 	tst.w	r2, #64	; 0x40
  400f04:	d005      	beq.n	400f12 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400f06:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400f0a:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400f0c:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400f10:	e7f6      	b.n	400f00 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400f12:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400f16:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400f18:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400f1c:	4770      	bx	lr

00400f1e <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400f1e:	6401      	str	r1, [r0, #64]	; 0x40
  400f20:	4770      	bx	lr

00400f22 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400f22:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400f24:	4770      	bx	lr

00400f26 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400f26:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400f28:	4770      	bx	lr
	...

00400f2c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400f2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400f30:	4604      	mov	r4, r0
  400f32:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400f34:	4b0e      	ldr	r3, [pc, #56]	; (400f70 <pio_handler_process+0x44>)
  400f36:	4798      	blx	r3
  400f38:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400f3a:	4620      	mov	r0, r4
  400f3c:	4b0d      	ldr	r3, [pc, #52]	; (400f74 <pio_handler_process+0x48>)
  400f3e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400f40:	4005      	ands	r5, r0
  400f42:	d013      	beq.n	400f6c <pio_handler_process+0x40>
  400f44:	4c0c      	ldr	r4, [pc, #48]	; (400f78 <pio_handler_process+0x4c>)
  400f46:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400f4a:	e003      	b.n	400f54 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400f4c:	42b4      	cmp	r4, r6
  400f4e:	d00d      	beq.n	400f6c <pio_handler_process+0x40>
  400f50:	3410      	adds	r4, #16
		while (status != 0) {
  400f52:	b15d      	cbz	r5, 400f6c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400f54:	6820      	ldr	r0, [r4, #0]
  400f56:	4540      	cmp	r0, r8
  400f58:	d1f8      	bne.n	400f4c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400f5a:	6861      	ldr	r1, [r4, #4]
  400f5c:	4229      	tst	r1, r5
  400f5e:	d0f5      	beq.n	400f4c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400f60:	68e3      	ldr	r3, [r4, #12]
  400f62:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400f64:	6863      	ldr	r3, [r4, #4]
  400f66:	ea25 0503 	bic.w	r5, r5, r3
  400f6a:	e7ef      	b.n	400f4c <pio_handler_process+0x20>
  400f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400f70:	00400f23 	.word	0x00400f23
  400f74:	00400f27 	.word	0x00400f27
  400f78:	20400bf8 	.word	0x20400bf8

00400f7c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400f7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400f7e:	4c18      	ldr	r4, [pc, #96]	; (400fe0 <pio_handler_set+0x64>)
  400f80:	6826      	ldr	r6, [r4, #0]
  400f82:	2e06      	cmp	r6, #6
  400f84:	d82a      	bhi.n	400fdc <pio_handler_set+0x60>
  400f86:	f04f 0c00 	mov.w	ip, #0
  400f8a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f8c:	4f15      	ldr	r7, [pc, #84]	; (400fe4 <pio_handler_set+0x68>)
  400f8e:	e004      	b.n	400f9a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400f90:	3401      	adds	r4, #1
  400f92:	b2e4      	uxtb	r4, r4
  400f94:	46a4      	mov	ip, r4
  400f96:	42a6      	cmp	r6, r4
  400f98:	d309      	bcc.n	400fae <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400f9a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f9c:	0125      	lsls	r5, r4, #4
  400f9e:	597d      	ldr	r5, [r7, r5]
  400fa0:	428d      	cmp	r5, r1
  400fa2:	d1f5      	bne.n	400f90 <pio_handler_set+0x14>
  400fa4:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400fa8:	686d      	ldr	r5, [r5, #4]
  400faa:	4295      	cmp	r5, r2
  400fac:	d1f0      	bne.n	400f90 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400fae:	4d0d      	ldr	r5, [pc, #52]	; (400fe4 <pio_handler_set+0x68>)
  400fb0:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400fb4:	eb05 040e 	add.w	r4, r5, lr
  400fb8:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400fbc:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400fbe:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400fc0:	9906      	ldr	r1, [sp, #24]
  400fc2:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400fc4:	3601      	adds	r6, #1
  400fc6:	4566      	cmp	r6, ip
  400fc8:	d005      	beq.n	400fd6 <pio_handler_set+0x5a>
  400fca:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400fcc:	461a      	mov	r2, r3
  400fce:	4b06      	ldr	r3, [pc, #24]	; (400fe8 <pio_handler_set+0x6c>)
  400fd0:	4798      	blx	r3

	return 0;
  400fd2:	2000      	movs	r0, #0
  400fd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400fd6:	4902      	ldr	r1, [pc, #8]	; (400fe0 <pio_handler_set+0x64>)
  400fd8:	600e      	str	r6, [r1, #0]
  400fda:	e7f6      	b.n	400fca <pio_handler_set+0x4e>
		return 1;
  400fdc:	2001      	movs	r0, #1
}
  400fde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400fe0:	20400c68 	.word	0x20400c68
  400fe4:	20400bf8 	.word	0x20400bf8
  400fe8:	00400eed 	.word	0x00400eed

00400fec <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400fec:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400fee:	210a      	movs	r1, #10
  400ff0:	4801      	ldr	r0, [pc, #4]	; (400ff8 <PIOA_Handler+0xc>)
  400ff2:	4b02      	ldr	r3, [pc, #8]	; (400ffc <PIOA_Handler+0x10>)
  400ff4:	4798      	blx	r3
  400ff6:	bd08      	pop	{r3, pc}
  400ff8:	400e0e00 	.word	0x400e0e00
  400ffc:	00400f2d 	.word	0x00400f2d

00401000 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  401000:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  401002:	210b      	movs	r1, #11
  401004:	4801      	ldr	r0, [pc, #4]	; (40100c <PIOB_Handler+0xc>)
  401006:	4b02      	ldr	r3, [pc, #8]	; (401010 <PIOB_Handler+0x10>)
  401008:	4798      	blx	r3
  40100a:	bd08      	pop	{r3, pc}
  40100c:	400e1000 	.word	0x400e1000
  401010:	00400f2d 	.word	0x00400f2d

00401014 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  401014:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  401016:	210c      	movs	r1, #12
  401018:	4801      	ldr	r0, [pc, #4]	; (401020 <PIOC_Handler+0xc>)
  40101a:	4b02      	ldr	r3, [pc, #8]	; (401024 <PIOC_Handler+0x10>)
  40101c:	4798      	blx	r3
  40101e:	bd08      	pop	{r3, pc}
  401020:	400e1200 	.word	0x400e1200
  401024:	00400f2d 	.word	0x00400f2d

00401028 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  401028:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  40102a:	2110      	movs	r1, #16
  40102c:	4801      	ldr	r0, [pc, #4]	; (401034 <PIOD_Handler+0xc>)
  40102e:	4b02      	ldr	r3, [pc, #8]	; (401038 <PIOD_Handler+0x10>)
  401030:	4798      	blx	r3
  401032:	bd08      	pop	{r3, pc}
  401034:	400e1400 	.word	0x400e1400
  401038:	00400f2d 	.word	0x00400f2d

0040103c <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  40103c:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  40103e:	2111      	movs	r1, #17
  401040:	4801      	ldr	r0, [pc, #4]	; (401048 <PIOE_Handler+0xc>)
  401042:	4b02      	ldr	r3, [pc, #8]	; (40104c <PIOE_Handler+0x10>)
  401044:	4798      	blx	r3
  401046:	bd08      	pop	{r3, pc}
  401048:	400e1600 	.word	0x400e1600
  40104c:	00400f2d 	.word	0x00400f2d

00401050 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  401050:	2803      	cmp	r0, #3
  401052:	d011      	beq.n	401078 <pmc_mck_set_division+0x28>
  401054:	2804      	cmp	r0, #4
  401056:	d012      	beq.n	40107e <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  401058:	2802      	cmp	r0, #2
  40105a:	bf0c      	ite	eq
  40105c:	f44f 7180 	moveq.w	r1, #256	; 0x100
  401060:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  401062:	4a08      	ldr	r2, [pc, #32]	; (401084 <pmc_mck_set_division+0x34>)
  401064:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401066:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  40106a:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  40106c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40106e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401070:	f013 0f08 	tst.w	r3, #8
  401074:	d0fb      	beq.n	40106e <pmc_mck_set_division+0x1e>
}
  401076:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  401078:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  40107c:	e7f1      	b.n	401062 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  40107e:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  401082:	e7ee      	b.n	401062 <pmc_mck_set_division+0x12>
  401084:	400e0600 	.word	0x400e0600

00401088 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  401088:	4a17      	ldr	r2, [pc, #92]	; (4010e8 <pmc_switch_mck_to_pllack+0x60>)
  40108a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40108c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  401090:	4318      	orrs	r0, r3
  401092:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401094:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401096:	f013 0f08 	tst.w	r3, #8
  40109a:	d10a      	bne.n	4010b2 <pmc_switch_mck_to_pllack+0x2a>
  40109c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4010a0:	4911      	ldr	r1, [pc, #68]	; (4010e8 <pmc_switch_mck_to_pllack+0x60>)
  4010a2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4010a4:	f012 0f08 	tst.w	r2, #8
  4010a8:	d103      	bne.n	4010b2 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4010aa:	3b01      	subs	r3, #1
  4010ac:	d1f9      	bne.n	4010a2 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  4010ae:	2001      	movs	r0, #1
  4010b0:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  4010b2:	4a0d      	ldr	r2, [pc, #52]	; (4010e8 <pmc_switch_mck_to_pllack+0x60>)
  4010b4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4010b6:	f023 0303 	bic.w	r3, r3, #3
  4010ba:	f043 0302 	orr.w	r3, r3, #2
  4010be:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4010c0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010c2:	f013 0f08 	tst.w	r3, #8
  4010c6:	d10a      	bne.n	4010de <pmc_switch_mck_to_pllack+0x56>
  4010c8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4010cc:	4906      	ldr	r1, [pc, #24]	; (4010e8 <pmc_switch_mck_to_pllack+0x60>)
  4010ce:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  4010d0:	f012 0f08 	tst.w	r2, #8
  4010d4:	d105      	bne.n	4010e2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  4010d6:	3b01      	subs	r3, #1
  4010d8:	d1f9      	bne.n	4010ce <pmc_switch_mck_to_pllack+0x46>
			return 1;
  4010da:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  4010dc:	4770      	bx	lr
	return 0;
  4010de:	2000      	movs	r0, #0
  4010e0:	4770      	bx	lr
  4010e2:	2000      	movs	r0, #0
  4010e4:	4770      	bx	lr
  4010e6:	bf00      	nop
  4010e8:	400e0600 	.word	0x400e0600

004010ec <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  4010ec:	b9a0      	cbnz	r0, 401118 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4010ee:	480e      	ldr	r0, [pc, #56]	; (401128 <pmc_switch_mainck_to_xtal+0x3c>)
  4010f0:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  4010f2:	0209      	lsls	r1, r1, #8
  4010f4:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  4010f6:	4a0d      	ldr	r2, [pc, #52]	; (40112c <pmc_switch_mainck_to_xtal+0x40>)
  4010f8:	401a      	ands	r2, r3
  4010fa:	4b0d      	ldr	r3, [pc, #52]	; (401130 <pmc_switch_mainck_to_xtal+0x44>)
  4010fc:	4313      	orrs	r3, r2
  4010fe:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401100:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401102:	4602      	mov	r2, r0
  401104:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401106:	f013 0f01 	tst.w	r3, #1
  40110a:	d0fb      	beq.n	401104 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40110c:	4a06      	ldr	r2, [pc, #24]	; (401128 <pmc_switch_mainck_to_xtal+0x3c>)
  40110e:	6a11      	ldr	r1, [r2, #32]
  401110:	4b08      	ldr	r3, [pc, #32]	; (401134 <pmc_switch_mainck_to_xtal+0x48>)
  401112:	430b      	orrs	r3, r1
  401114:	6213      	str	r3, [r2, #32]
  401116:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401118:	4903      	ldr	r1, [pc, #12]	; (401128 <pmc_switch_mainck_to_xtal+0x3c>)
  40111a:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40111c:	4a06      	ldr	r2, [pc, #24]	; (401138 <pmc_switch_mainck_to_xtal+0x4c>)
  40111e:	401a      	ands	r2, r3
  401120:	4b06      	ldr	r3, [pc, #24]	; (40113c <pmc_switch_mainck_to_xtal+0x50>)
  401122:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401124:	620b      	str	r3, [r1, #32]
  401126:	4770      	bx	lr
  401128:	400e0600 	.word	0x400e0600
  40112c:	ffc8fffc 	.word	0xffc8fffc
  401130:	00370001 	.word	0x00370001
  401134:	01370000 	.word	0x01370000
  401138:	fec8fffc 	.word	0xfec8fffc
  40113c:	01370002 	.word	0x01370002

00401140 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401140:	4b02      	ldr	r3, [pc, #8]	; (40114c <pmc_osc_is_ready_mainck+0xc>)
  401142:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401144:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401148:	4770      	bx	lr
  40114a:	bf00      	nop
  40114c:	400e0600 	.word	0x400e0600

00401150 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401150:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401154:	4b01      	ldr	r3, [pc, #4]	; (40115c <pmc_disable_pllack+0xc>)
  401156:	629a      	str	r2, [r3, #40]	; 0x28
  401158:	4770      	bx	lr
  40115a:	bf00      	nop
  40115c:	400e0600 	.word	0x400e0600

00401160 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401160:	4b02      	ldr	r3, [pc, #8]	; (40116c <pmc_is_locked_pllack+0xc>)
  401162:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401164:	f000 0002 	and.w	r0, r0, #2
  401168:	4770      	bx	lr
  40116a:	bf00      	nop
  40116c:	400e0600 	.word	0x400e0600

00401170 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401170:	283f      	cmp	r0, #63	; 0x3f
  401172:	d81e      	bhi.n	4011b2 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401174:	281f      	cmp	r0, #31
  401176:	d80c      	bhi.n	401192 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401178:	4b11      	ldr	r3, [pc, #68]	; (4011c0 <pmc_enable_periph_clk+0x50>)
  40117a:	699a      	ldr	r2, [r3, #24]
  40117c:	2301      	movs	r3, #1
  40117e:	4083      	lsls	r3, r0
  401180:	4393      	bics	r3, r2
  401182:	d018      	beq.n	4011b6 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401184:	2301      	movs	r3, #1
  401186:	fa03 f000 	lsl.w	r0, r3, r0
  40118a:	4b0d      	ldr	r3, [pc, #52]	; (4011c0 <pmc_enable_periph_clk+0x50>)
  40118c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  40118e:	2000      	movs	r0, #0
  401190:	4770      	bx	lr
		ul_id -= 32;
  401192:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401194:	4b0a      	ldr	r3, [pc, #40]	; (4011c0 <pmc_enable_periph_clk+0x50>)
  401196:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40119a:	2301      	movs	r3, #1
  40119c:	4083      	lsls	r3, r0
  40119e:	4393      	bics	r3, r2
  4011a0:	d00b      	beq.n	4011ba <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4011a2:	2301      	movs	r3, #1
  4011a4:	fa03 f000 	lsl.w	r0, r3, r0
  4011a8:	4b05      	ldr	r3, [pc, #20]	; (4011c0 <pmc_enable_periph_clk+0x50>)
  4011aa:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4011ae:	2000      	movs	r0, #0
  4011b0:	4770      	bx	lr
		return 1;
  4011b2:	2001      	movs	r0, #1
  4011b4:	4770      	bx	lr
	return 0;
  4011b6:	2000      	movs	r0, #0
  4011b8:	4770      	bx	lr
  4011ba:	2000      	movs	r0, #0
}
  4011bc:	4770      	bx	lr
  4011be:	bf00      	nop
  4011c0:	400e0600 	.word	0x400e0600

004011c4 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  4011c4:	4770      	bx	lr
	...

004011c8 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  4011c8:	4a10      	ldr	r2, [pc, #64]	; (40120c <pmc_enable_waitmode+0x44>)
  4011ca:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  4011cc:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  4011d0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  4011d4:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  4011d6:	6a11      	ldr	r1, [r2, #32]
  4011d8:	4b0d      	ldr	r3, [pc, #52]	; (401210 <pmc_enable_waitmode+0x48>)
  4011da:	430b      	orrs	r3, r1
  4011dc:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4011de:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011e0:	f013 0f08 	tst.w	r3, #8
  4011e4:	d0fb      	beq.n	4011de <pmc_enable_waitmode+0x16>
  4011e6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  4011ea:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  4011ec:	3b01      	subs	r3, #1
  4011ee:	d1fc      	bne.n	4011ea <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  4011f0:	4a06      	ldr	r2, [pc, #24]	; (40120c <pmc_enable_waitmode+0x44>)
  4011f2:	6a13      	ldr	r3, [r2, #32]
  4011f4:	f013 0f08 	tst.w	r3, #8
  4011f8:	d0fb      	beq.n	4011f2 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  4011fa:	4a04      	ldr	r2, [pc, #16]	; (40120c <pmc_enable_waitmode+0x44>)
  4011fc:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  4011fe:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401202:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  401206:	6713      	str	r3, [r2, #112]	; 0x70
  401208:	4770      	bx	lr
  40120a:	bf00      	nop
  40120c:	400e0600 	.word	0x400e0600
  401210:	00370004 	.word	0x00370004

00401214 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  401214:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  401218:	1e43      	subs	r3, r0, #1
  40121a:	2b04      	cmp	r3, #4
  40121c:	f200 8107 	bhi.w	40142e <pmc_sleep+0x21a>
  401220:	e8df f013 	tbh	[pc, r3, lsl #1]
  401224:	00050005 	.word	0x00050005
  401228:	00150015 	.word	0x00150015
  40122c:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  40122e:	4a81      	ldr	r2, [pc, #516]	; (401434 <pmc_sleep+0x220>)
  401230:	6913      	ldr	r3, [r2, #16]
  401232:	f023 0304 	bic.w	r3, r3, #4
  401236:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  401238:	2201      	movs	r2, #1
  40123a:	4b7f      	ldr	r3, [pc, #508]	; (401438 <pmc_sleep+0x224>)
  40123c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40123e:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  401242:	b662      	cpsie	i
  __ASM volatile ("dsb");
  401244:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  401248:	bf30      	wfi
  40124a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40124e:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  401250:	2803      	cmp	r0, #3
  401252:	bf0c      	ite	eq
  401254:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  401256:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  40125a:	4b78      	ldr	r3, [pc, #480]	; (40143c <pmc_sleep+0x228>)
  40125c:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  40125e:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401260:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  401264:	2200      	movs	r2, #0
  401266:	4b74      	ldr	r3, [pc, #464]	; (401438 <pmc_sleep+0x224>)
  401268:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  40126a:	2201      	movs	r2, #1
  40126c:	4b74      	ldr	r3, [pc, #464]	; (401440 <pmc_sleep+0x22c>)
  40126e:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  401270:	4b74      	ldr	r3, [pc, #464]	; (401444 <pmc_sleep+0x230>)
  401272:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  401274:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  401276:	4a74      	ldr	r2, [pc, #464]	; (401448 <pmc_sleep+0x234>)
  401278:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  40127c:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  40127e:	4a73      	ldr	r2, [pc, #460]	; (40144c <pmc_sleep+0x238>)
  401280:	433a      	orrs	r2, r7
  401282:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  401284:	f005 0903 	and.w	r9, r5, #3
  401288:	f1b9 0f01 	cmp.w	r9, #1
  40128c:	f240 8089 	bls.w	4013a2 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  401290:	f025 0103 	bic.w	r1, r5, #3
  401294:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  401298:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40129a:	461a      	mov	r2, r3
  40129c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40129e:	f013 0f08 	tst.w	r3, #8
  4012a2:	d0fb      	beq.n	40129c <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  4012a4:	f011 0f70 	tst.w	r1, #112	; 0x70
  4012a8:	d008      	beq.n	4012bc <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  4012aa:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  4012ae:	4b65      	ldr	r3, [pc, #404]	; (401444 <pmc_sleep+0x230>)
  4012b0:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012b2:	461a      	mov	r2, r3
  4012b4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012b6:	f013 0f08 	tst.w	r3, #8
  4012ba:	d0fb      	beq.n	4012b4 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  4012bc:	4b64      	ldr	r3, [pc, #400]	; (401450 <pmc_sleep+0x23c>)
  4012be:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  4012c0:	4a60      	ldr	r2, [pc, #384]	; (401444 <pmc_sleep+0x230>)
  4012c2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012c4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  4012c8:	d0fb      	beq.n	4012c2 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  4012ca:	4a5e      	ldr	r2, [pc, #376]	; (401444 <pmc_sleep+0x230>)
  4012cc:	6a11      	ldr	r1, [r2, #32]
  4012ce:	4b61      	ldr	r3, [pc, #388]	; (401454 <pmc_sleep+0x240>)
  4012d0:	400b      	ands	r3, r1
  4012d2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4012d6:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4012d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012da:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4012de:	d0fb      	beq.n	4012d8 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  4012e0:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  4012e4:	4a58      	ldr	r2, [pc, #352]	; (401448 <pmc_sleep+0x234>)
  4012e6:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  4012e8:	2c04      	cmp	r4, #4
  4012ea:	d05c      	beq.n	4013a6 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  4012ec:	4c52      	ldr	r4, [pc, #328]	; (401438 <pmc_sleep+0x224>)
  4012ee:	2301      	movs	r3, #1
  4012f0:	7023      	strb	r3, [r4, #0]
  4012f2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4012f6:	b662      	cpsie	i

		pmc_enable_waitmode();
  4012f8:	4b57      	ldr	r3, [pc, #348]	; (401458 <pmc_sleep+0x244>)
  4012fa:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  4012fc:	b672      	cpsid	i
  4012fe:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  401302:	2300      	movs	r3, #0
  401304:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  401306:	f017 0f02 	tst.w	r7, #2
  40130a:	d055      	beq.n	4013b8 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40130c:	4a4d      	ldr	r2, [pc, #308]	; (401444 <pmc_sleep+0x230>)
  40130e:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401310:	4952      	ldr	r1, [pc, #328]	; (40145c <pmc_sleep+0x248>)
  401312:	4019      	ands	r1, r3
  401314:	4b52      	ldr	r3, [pc, #328]	; (401460 <pmc_sleep+0x24c>)
  401316:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401318:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40131a:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  40131c:	4b51      	ldr	r3, [pc, #324]	; (401464 <pmc_sleep+0x250>)
  40131e:	400b      	ands	r3, r1
  401320:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401324:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  401326:	4b50      	ldr	r3, [pc, #320]	; (401468 <pmc_sleep+0x254>)
  401328:	4033      	ands	r3, r6
  40132a:	2b00      	cmp	r3, #0
  40132c:	d06e      	beq.n	40140c <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  40132e:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  401332:	4b44      	ldr	r3, [pc, #272]	; (401444 <pmc_sleep+0x230>)
  401334:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  401336:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  401338:	f1b9 0f02 	cmp.w	r9, #2
  40133c:	d104      	bne.n	401348 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  40133e:	4a41      	ldr	r2, [pc, #260]	; (401444 <pmc_sleep+0x230>)
  401340:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401342:	f013 0f02 	tst.w	r3, #2
  401346:	d0fb      	beq.n	401340 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  401348:	4a3e      	ldr	r2, [pc, #248]	; (401444 <pmc_sleep+0x230>)
  40134a:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  40134c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  401350:	f005 0070 	and.w	r0, r5, #112	; 0x70
  401354:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401356:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401358:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40135a:	f013 0f08 	tst.w	r3, #8
  40135e:	d0fb      	beq.n	401358 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  401360:	4b39      	ldr	r3, [pc, #228]	; (401448 <pmc_sleep+0x234>)
  401362:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  401366:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  40136a:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40136c:	461a      	mov	r2, r3
  40136e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401370:	f013 0f08 	tst.w	r3, #8
  401374:	d0fb      	beq.n	40136e <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  401376:	4a33      	ldr	r2, [pc, #204]	; (401444 <pmc_sleep+0x230>)
  401378:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40137a:	420b      	tst	r3, r1
  40137c:	d0fc      	beq.n	401378 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  40137e:	2200      	movs	r2, #0
  401380:	4b2f      	ldr	r3, [pc, #188]	; (401440 <pmc_sleep+0x22c>)
  401382:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401384:	4b39      	ldr	r3, [pc, #228]	; (40146c <pmc_sleep+0x258>)
  401386:	681b      	ldr	r3, [r3, #0]
  401388:	b11b      	cbz	r3, 401392 <pmc_sleep+0x17e>
			callback_clocks_restored();
  40138a:	4798      	blx	r3
			callback_clocks_restored = NULL;
  40138c:	2200      	movs	r2, #0
  40138e:	4b37      	ldr	r3, [pc, #220]	; (40146c <pmc_sleep+0x258>)
  401390:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  401392:	2201      	movs	r2, #1
  401394:	4b28      	ldr	r3, [pc, #160]	; (401438 <pmc_sleep+0x224>)
  401396:	701a      	strb	r2, [r3, #0]
  401398:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40139c:	b662      	cpsie	i
  40139e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  4013a2:	4629      	mov	r1, r5
  4013a4:	e77e      	b.n	4012a4 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4013a6:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  4013aa:	6a11      	ldr	r1, [r2, #32]
  4013ac:	4b30      	ldr	r3, [pc, #192]	; (401470 <pmc_sleep+0x25c>)
  4013ae:	400b      	ands	r3, r1
  4013b0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4013b4:	6213      	str	r3, [r2, #32]
  4013b6:	e799      	b.n	4012ec <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  4013b8:	f017 0f01 	tst.w	r7, #1
  4013bc:	d0b3      	beq.n	401326 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  4013be:	4b21      	ldr	r3, [pc, #132]	; (401444 <pmc_sleep+0x230>)
  4013c0:	6a1b      	ldr	r3, [r3, #32]
  4013c2:	f013 0f01 	tst.w	r3, #1
  4013c6:	d10b      	bne.n	4013e0 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4013c8:	491e      	ldr	r1, [pc, #120]	; (401444 <pmc_sleep+0x230>)
  4013ca:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  4013cc:	4a29      	ldr	r2, [pc, #164]	; (401474 <pmc_sleep+0x260>)
  4013ce:	401a      	ands	r2, r3
  4013d0:	4b29      	ldr	r3, [pc, #164]	; (401478 <pmc_sleep+0x264>)
  4013d2:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4013d4:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4013d6:	460a      	mov	r2, r1
  4013d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4013da:	f013 0f01 	tst.w	r3, #1
  4013de:	d0fb      	beq.n	4013d8 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  4013e0:	4b18      	ldr	r3, [pc, #96]	; (401444 <pmc_sleep+0x230>)
  4013e2:	6a1b      	ldr	r3, [r3, #32]
  4013e4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4013e8:	d108      	bne.n	4013fc <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4013ea:	4a16      	ldr	r2, [pc, #88]	; (401444 <pmc_sleep+0x230>)
  4013ec:	6a11      	ldr	r1, [r2, #32]
  4013ee:	4b23      	ldr	r3, [pc, #140]	; (40147c <pmc_sleep+0x268>)
  4013f0:	430b      	orrs	r3, r1
  4013f2:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4013f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4013f6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4013fa:	d0fb      	beq.n	4013f4 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4013fc:	4a11      	ldr	r2, [pc, #68]	; (401444 <pmc_sleep+0x230>)
  4013fe:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401400:	4b18      	ldr	r3, [pc, #96]	; (401464 <pmc_sleep+0x250>)
  401402:	400b      	ands	r3, r1
  401404:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401408:	6213      	str	r3, [r2, #32]
  40140a:	e78c      	b.n	401326 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  40140c:	2100      	movs	r1, #0
  40140e:	e793      	b.n	401338 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  401410:	4a08      	ldr	r2, [pc, #32]	; (401434 <pmc_sleep+0x220>)
  401412:	6913      	ldr	r3, [r2, #16]
  401414:	f043 0304 	orr.w	r3, r3, #4
  401418:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  40141a:	4a19      	ldr	r2, [pc, #100]	; (401480 <pmc_sleep+0x26c>)
  40141c:	4b19      	ldr	r3, [pc, #100]	; (401484 <pmc_sleep+0x270>)
  40141e:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  401420:	2201      	movs	r2, #1
  401422:	4b05      	ldr	r3, [pc, #20]	; (401438 <pmc_sleep+0x224>)
  401424:	701a      	strb	r2, [r3, #0]
  401426:	f3bf 8f5f 	dmb	sy
  40142a:	b662      	cpsie	i
  __ASM volatile ("wfi");
  40142c:	bf30      	wfi
  40142e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401432:	bf00      	nop
  401434:	e000ed00 	.word	0xe000ed00
  401438:	20400018 	.word	0x20400018
  40143c:	004011c5 	.word	0x004011c5
  401440:	20400c6c 	.word	0x20400c6c
  401444:	400e0600 	.word	0x400e0600
  401448:	400e0c00 	.word	0x400e0c00
  40144c:	00370008 	.word	0x00370008
  401450:	00401151 	.word	0x00401151
  401454:	fec8ffff 	.word	0xfec8ffff
  401458:	004011c9 	.word	0x004011c9
  40145c:	fec8fffc 	.word	0xfec8fffc
  401460:	01370002 	.word	0x01370002
  401464:	ffc8ff87 	.word	0xffc8ff87
  401468:	07ff0000 	.word	0x07ff0000
  40146c:	20400c70 	.word	0x20400c70
  401470:	ffc8fffe 	.word	0xffc8fffe
  401474:	ffc8fffc 	.word	0xffc8fffc
  401478:	00370001 	.word	0x00370001
  40147c:	01370000 	.word	0x01370000
  401480:	a5000004 	.word	0xa5000004
  401484:	400e1810 	.word	0x400e1810

00401488 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401488:	e7fe      	b.n	401488 <Dummy_Handler>
	...

0040148c <Reset_Handler>:
{
  40148c:	b500      	push	{lr}
  40148e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401490:	4b25      	ldr	r3, [pc, #148]	; (401528 <Reset_Handler+0x9c>)
  401492:	4a26      	ldr	r2, [pc, #152]	; (40152c <Reset_Handler+0xa0>)
  401494:	429a      	cmp	r2, r3
  401496:	d010      	beq.n	4014ba <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401498:	4b25      	ldr	r3, [pc, #148]	; (401530 <Reset_Handler+0xa4>)
  40149a:	4a23      	ldr	r2, [pc, #140]	; (401528 <Reset_Handler+0x9c>)
  40149c:	429a      	cmp	r2, r3
  40149e:	d20c      	bcs.n	4014ba <Reset_Handler+0x2e>
  4014a0:	3b01      	subs	r3, #1
  4014a2:	1a9b      	subs	r3, r3, r2
  4014a4:	f023 0303 	bic.w	r3, r3, #3
  4014a8:	3304      	adds	r3, #4
  4014aa:	4413      	add	r3, r2
  4014ac:	491f      	ldr	r1, [pc, #124]	; (40152c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4014ae:	f851 0b04 	ldr.w	r0, [r1], #4
  4014b2:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4014b6:	429a      	cmp	r2, r3
  4014b8:	d1f9      	bne.n	4014ae <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4014ba:	4b1e      	ldr	r3, [pc, #120]	; (401534 <Reset_Handler+0xa8>)
  4014bc:	4a1e      	ldr	r2, [pc, #120]	; (401538 <Reset_Handler+0xac>)
  4014be:	429a      	cmp	r2, r3
  4014c0:	d20a      	bcs.n	4014d8 <Reset_Handler+0x4c>
  4014c2:	3b01      	subs	r3, #1
  4014c4:	1a9b      	subs	r3, r3, r2
  4014c6:	f023 0303 	bic.w	r3, r3, #3
  4014ca:	3304      	adds	r3, #4
  4014cc:	4413      	add	r3, r2
                *pDest++ = 0;
  4014ce:	2100      	movs	r1, #0
  4014d0:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4014d4:	4293      	cmp	r3, r2
  4014d6:	d1fb      	bne.n	4014d0 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4014d8:	4a18      	ldr	r2, [pc, #96]	; (40153c <Reset_Handler+0xb0>)
  4014da:	4b19      	ldr	r3, [pc, #100]	; (401540 <Reset_Handler+0xb4>)
  4014dc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4014e0:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4014e2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4014e6:	fab3 f383 	clz	r3, r3
  4014ea:	095b      	lsrs	r3, r3, #5
  4014ec:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4014ee:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4014f0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4014f4:	2200      	movs	r2, #0
  4014f6:	4b13      	ldr	r3, [pc, #76]	; (401544 <Reset_Handler+0xb8>)
  4014f8:	701a      	strb	r2, [r3, #0]
	return flags;
  4014fa:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4014fc:	4a12      	ldr	r2, [pc, #72]	; (401548 <Reset_Handler+0xbc>)
  4014fe:	6813      	ldr	r3, [r2, #0]
  401500:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401504:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401506:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40150a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40150e:	b129      	cbz	r1, 40151c <Reset_Handler+0x90>
		cpu_irq_enable();
  401510:	2201      	movs	r2, #1
  401512:	4b0c      	ldr	r3, [pc, #48]	; (401544 <Reset_Handler+0xb8>)
  401514:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401516:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40151a:	b662      	cpsie	i
        __libc_init_array();
  40151c:	4b0b      	ldr	r3, [pc, #44]	; (40154c <Reset_Handler+0xc0>)
  40151e:	4798      	blx	r3
        main();
  401520:	4b0b      	ldr	r3, [pc, #44]	; (401550 <Reset_Handler+0xc4>)
  401522:	4798      	blx	r3
  401524:	e7fe      	b.n	401524 <Reset_Handler+0x98>
  401526:	bf00      	nop
  401528:	20400000 	.word	0x20400000
  40152c:	004070f4 	.word	0x004070f4
  401530:	204009d8 	.word	0x204009d8
  401534:	20400cf0 	.word	0x20400cf0
  401538:	204009d8 	.word	0x204009d8
  40153c:	e000ed00 	.word	0xe000ed00
  401540:	00400000 	.word	0x00400000
  401544:	20400018 	.word	0x20400018
  401548:	e000ed88 	.word	0xe000ed88
  40154c:	00402275 	.word	0x00402275
  401550:	004019c5 	.word	0x004019c5

00401554 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401554:	4b3b      	ldr	r3, [pc, #236]	; (401644 <SystemCoreClockUpdate+0xf0>)
  401556:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401558:	f003 0303 	and.w	r3, r3, #3
  40155c:	2b01      	cmp	r3, #1
  40155e:	d01d      	beq.n	40159c <SystemCoreClockUpdate+0x48>
  401560:	b183      	cbz	r3, 401584 <SystemCoreClockUpdate+0x30>
  401562:	2b02      	cmp	r3, #2
  401564:	d036      	beq.n	4015d4 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401566:	4b37      	ldr	r3, [pc, #220]	; (401644 <SystemCoreClockUpdate+0xf0>)
  401568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40156a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40156e:	2b70      	cmp	r3, #112	; 0x70
  401570:	d05f      	beq.n	401632 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401572:	4b34      	ldr	r3, [pc, #208]	; (401644 <SystemCoreClockUpdate+0xf0>)
  401574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401576:	4934      	ldr	r1, [pc, #208]	; (401648 <SystemCoreClockUpdate+0xf4>)
  401578:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40157c:	680b      	ldr	r3, [r1, #0]
  40157e:	40d3      	lsrs	r3, r2
  401580:	600b      	str	r3, [r1, #0]
  401582:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401584:	4b31      	ldr	r3, [pc, #196]	; (40164c <SystemCoreClockUpdate+0xf8>)
  401586:	695b      	ldr	r3, [r3, #20]
  401588:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40158c:	bf14      	ite	ne
  40158e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401592:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401596:	4b2c      	ldr	r3, [pc, #176]	; (401648 <SystemCoreClockUpdate+0xf4>)
  401598:	601a      	str	r2, [r3, #0]
  40159a:	e7e4      	b.n	401566 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40159c:	4b29      	ldr	r3, [pc, #164]	; (401644 <SystemCoreClockUpdate+0xf0>)
  40159e:	6a1b      	ldr	r3, [r3, #32]
  4015a0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4015a4:	d003      	beq.n	4015ae <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4015a6:	4a2a      	ldr	r2, [pc, #168]	; (401650 <SystemCoreClockUpdate+0xfc>)
  4015a8:	4b27      	ldr	r3, [pc, #156]	; (401648 <SystemCoreClockUpdate+0xf4>)
  4015aa:	601a      	str	r2, [r3, #0]
  4015ac:	e7db      	b.n	401566 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4015ae:	4a29      	ldr	r2, [pc, #164]	; (401654 <SystemCoreClockUpdate+0x100>)
  4015b0:	4b25      	ldr	r3, [pc, #148]	; (401648 <SystemCoreClockUpdate+0xf4>)
  4015b2:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4015b4:	4b23      	ldr	r3, [pc, #140]	; (401644 <SystemCoreClockUpdate+0xf0>)
  4015b6:	6a1b      	ldr	r3, [r3, #32]
  4015b8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4015bc:	2b10      	cmp	r3, #16
  4015be:	d005      	beq.n	4015cc <SystemCoreClockUpdate+0x78>
  4015c0:	2b20      	cmp	r3, #32
  4015c2:	d1d0      	bne.n	401566 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4015c4:	4a22      	ldr	r2, [pc, #136]	; (401650 <SystemCoreClockUpdate+0xfc>)
  4015c6:	4b20      	ldr	r3, [pc, #128]	; (401648 <SystemCoreClockUpdate+0xf4>)
  4015c8:	601a      	str	r2, [r3, #0]
          break;
  4015ca:	e7cc      	b.n	401566 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4015cc:	4a22      	ldr	r2, [pc, #136]	; (401658 <SystemCoreClockUpdate+0x104>)
  4015ce:	4b1e      	ldr	r3, [pc, #120]	; (401648 <SystemCoreClockUpdate+0xf4>)
  4015d0:	601a      	str	r2, [r3, #0]
          break;
  4015d2:	e7c8      	b.n	401566 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4015d4:	4b1b      	ldr	r3, [pc, #108]	; (401644 <SystemCoreClockUpdate+0xf0>)
  4015d6:	6a1b      	ldr	r3, [r3, #32]
  4015d8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4015dc:	d016      	beq.n	40160c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4015de:	4a1c      	ldr	r2, [pc, #112]	; (401650 <SystemCoreClockUpdate+0xfc>)
  4015e0:	4b19      	ldr	r3, [pc, #100]	; (401648 <SystemCoreClockUpdate+0xf4>)
  4015e2:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4015e4:	4b17      	ldr	r3, [pc, #92]	; (401644 <SystemCoreClockUpdate+0xf0>)
  4015e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4015e8:	f003 0303 	and.w	r3, r3, #3
  4015ec:	2b02      	cmp	r3, #2
  4015ee:	d1ba      	bne.n	401566 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4015f0:	4a14      	ldr	r2, [pc, #80]	; (401644 <SystemCoreClockUpdate+0xf0>)
  4015f2:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4015f4:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4015f6:	4814      	ldr	r0, [pc, #80]	; (401648 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4015f8:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4015fc:	6803      	ldr	r3, [r0, #0]
  4015fe:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401602:	b2d2      	uxtb	r2, r2
  401604:	fbb3 f3f2 	udiv	r3, r3, r2
  401608:	6003      	str	r3, [r0, #0]
  40160a:	e7ac      	b.n	401566 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40160c:	4a11      	ldr	r2, [pc, #68]	; (401654 <SystemCoreClockUpdate+0x100>)
  40160e:	4b0e      	ldr	r3, [pc, #56]	; (401648 <SystemCoreClockUpdate+0xf4>)
  401610:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401612:	4b0c      	ldr	r3, [pc, #48]	; (401644 <SystemCoreClockUpdate+0xf0>)
  401614:	6a1b      	ldr	r3, [r3, #32]
  401616:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40161a:	2b10      	cmp	r3, #16
  40161c:	d005      	beq.n	40162a <SystemCoreClockUpdate+0xd6>
  40161e:	2b20      	cmp	r3, #32
  401620:	d1e0      	bne.n	4015e4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401622:	4a0b      	ldr	r2, [pc, #44]	; (401650 <SystemCoreClockUpdate+0xfc>)
  401624:	4b08      	ldr	r3, [pc, #32]	; (401648 <SystemCoreClockUpdate+0xf4>)
  401626:	601a      	str	r2, [r3, #0]
          break;
  401628:	e7dc      	b.n	4015e4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40162a:	4a0b      	ldr	r2, [pc, #44]	; (401658 <SystemCoreClockUpdate+0x104>)
  40162c:	4b06      	ldr	r3, [pc, #24]	; (401648 <SystemCoreClockUpdate+0xf4>)
  40162e:	601a      	str	r2, [r3, #0]
          break;
  401630:	e7d8      	b.n	4015e4 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401632:	4a05      	ldr	r2, [pc, #20]	; (401648 <SystemCoreClockUpdate+0xf4>)
  401634:	6813      	ldr	r3, [r2, #0]
  401636:	4909      	ldr	r1, [pc, #36]	; (40165c <SystemCoreClockUpdate+0x108>)
  401638:	fba1 1303 	umull	r1, r3, r1, r3
  40163c:	085b      	lsrs	r3, r3, #1
  40163e:	6013      	str	r3, [r2, #0]
  401640:	4770      	bx	lr
  401642:	bf00      	nop
  401644:	400e0600 	.word	0x400e0600
  401648:	2040001c 	.word	0x2040001c
  40164c:	400e1810 	.word	0x400e1810
  401650:	00b71b00 	.word	0x00b71b00
  401654:	003d0900 	.word	0x003d0900
  401658:	007a1200 	.word	0x007a1200
  40165c:	aaaaaaab 	.word	0xaaaaaaab

00401660 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401660:	4b16      	ldr	r3, [pc, #88]	; (4016bc <system_init_flash+0x5c>)
  401662:	4298      	cmp	r0, r3
  401664:	d913      	bls.n	40168e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401666:	4b16      	ldr	r3, [pc, #88]	; (4016c0 <system_init_flash+0x60>)
  401668:	4298      	cmp	r0, r3
  40166a:	d915      	bls.n	401698 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  40166c:	4b15      	ldr	r3, [pc, #84]	; (4016c4 <system_init_flash+0x64>)
  40166e:	4298      	cmp	r0, r3
  401670:	d916      	bls.n	4016a0 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401672:	4b15      	ldr	r3, [pc, #84]	; (4016c8 <system_init_flash+0x68>)
  401674:	4298      	cmp	r0, r3
  401676:	d917      	bls.n	4016a8 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401678:	4b14      	ldr	r3, [pc, #80]	; (4016cc <system_init_flash+0x6c>)
  40167a:	4298      	cmp	r0, r3
  40167c:	d918      	bls.n	4016b0 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40167e:	4b14      	ldr	r3, [pc, #80]	; (4016d0 <system_init_flash+0x70>)
  401680:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401682:	bf94      	ite	ls
  401684:	4a13      	ldrls	r2, [pc, #76]	; (4016d4 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401686:	4a14      	ldrhi	r2, [pc, #80]	; (4016d8 <system_init_flash+0x78>)
  401688:	4b14      	ldr	r3, [pc, #80]	; (4016dc <system_init_flash+0x7c>)
  40168a:	601a      	str	r2, [r3, #0]
  40168c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40168e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401692:	4b12      	ldr	r3, [pc, #72]	; (4016dc <system_init_flash+0x7c>)
  401694:	601a      	str	r2, [r3, #0]
  401696:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401698:	4a11      	ldr	r2, [pc, #68]	; (4016e0 <system_init_flash+0x80>)
  40169a:	4b10      	ldr	r3, [pc, #64]	; (4016dc <system_init_flash+0x7c>)
  40169c:	601a      	str	r2, [r3, #0]
  40169e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4016a0:	4a10      	ldr	r2, [pc, #64]	; (4016e4 <system_init_flash+0x84>)
  4016a2:	4b0e      	ldr	r3, [pc, #56]	; (4016dc <system_init_flash+0x7c>)
  4016a4:	601a      	str	r2, [r3, #0]
  4016a6:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4016a8:	4a0f      	ldr	r2, [pc, #60]	; (4016e8 <system_init_flash+0x88>)
  4016aa:	4b0c      	ldr	r3, [pc, #48]	; (4016dc <system_init_flash+0x7c>)
  4016ac:	601a      	str	r2, [r3, #0]
  4016ae:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4016b0:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4016b4:	4b09      	ldr	r3, [pc, #36]	; (4016dc <system_init_flash+0x7c>)
  4016b6:	601a      	str	r2, [r3, #0]
  4016b8:	4770      	bx	lr
  4016ba:	bf00      	nop
  4016bc:	015ef3bf 	.word	0x015ef3bf
  4016c0:	02bde77f 	.word	0x02bde77f
  4016c4:	041cdb3f 	.word	0x041cdb3f
  4016c8:	057bceff 	.word	0x057bceff
  4016cc:	06dac2bf 	.word	0x06dac2bf
  4016d0:	0839b67f 	.word	0x0839b67f
  4016d4:	04000500 	.word	0x04000500
  4016d8:	04000600 	.word	0x04000600
  4016dc:	400e0c00 	.word	0x400e0c00
  4016e0:	04000100 	.word	0x04000100
  4016e4:	04000200 	.word	0x04000200
  4016e8:	04000300 	.word	0x04000300

004016ec <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4016ec:	4b0a      	ldr	r3, [pc, #40]	; (401718 <_sbrk+0x2c>)
  4016ee:	681b      	ldr	r3, [r3, #0]
  4016f0:	b153      	cbz	r3, 401708 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4016f2:	4b09      	ldr	r3, [pc, #36]	; (401718 <_sbrk+0x2c>)
  4016f4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4016f6:	181a      	adds	r2, r3, r0
  4016f8:	4908      	ldr	r1, [pc, #32]	; (40171c <_sbrk+0x30>)
  4016fa:	4291      	cmp	r1, r2
  4016fc:	db08      	blt.n	401710 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4016fe:	4610      	mov	r0, r2
  401700:	4a05      	ldr	r2, [pc, #20]	; (401718 <_sbrk+0x2c>)
  401702:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401704:	4618      	mov	r0, r3
  401706:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401708:	4a05      	ldr	r2, [pc, #20]	; (401720 <_sbrk+0x34>)
  40170a:	4b03      	ldr	r3, [pc, #12]	; (401718 <_sbrk+0x2c>)
  40170c:	601a      	str	r2, [r3, #0]
  40170e:	e7f0      	b.n	4016f2 <_sbrk+0x6>
		return (caddr_t) -1;	
  401710:	f04f 30ff 	mov.w	r0, #4294967295
}
  401714:	4770      	bx	lr
  401716:	bf00      	nop
  401718:	20400c74 	.word	0x20400c74
  40171c:	2045fffc 	.word	0x2045fffc
  401720:	20402ef0 	.word	0x20402ef0

00401724 <Button1_Handler>:
volatile char what = 0;


static void Button1_Handler(uint32_t id, uint32_t mask)
{
	mag_pulses = mag_pulses+1;
  401724:	4a02      	ldr	r2, [pc, #8]	; (401730 <Button1_Handler+0xc>)
  401726:	6813      	ldr	r3, [r2, #0]
  401728:	3301      	adds	r3, #1
  40172a:	6013      	str	r3, [r2, #0]
  40172c:	4770      	bx	lr
  40172e:	bf00      	nop
  401730:	20400c84 	.word	0x20400c84

00401734 <Button2_Handler>:
}
static void Button2_Handler(uint32_t id, uint32_t mask)
{
  401734:	4770      	bx	lr

00401736 <Button3_Handler>:
	
}
static void Button3_Handler(uint32_t id, uint32_t mask)
{
  401736:	4770      	bx	lr

00401738 <RTC_Handler>:
	
}

void RTC_Handler(void)
{
  401738:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40173c:	b08c      	sub	sp, #48	; 0x30
	uint32_t ul_status = rtc_get_status(RTC);
  40173e:	483e      	ldr	r0, [pc, #248]	; (401838 <RTC_Handler+0x100>)
  401740:	4b3e      	ldr	r3, [pc, #248]	; (40183c <RTC_Handler+0x104>)
  401742:	4798      	blx	r3
  401744:	4604      	mov	r4, r0
	/*
	*  Verifica por qual motivo entrou
	*  na interrupcao, se foi por segundo
	*  ou Alarm
	*/
	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  401746:	f010 0f04 	tst.w	r0, #4
  40174a:	d113      	bne.n	401774 <RTC_Handler+0x3c>
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
	}
	
	/* Time or date alarm */
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  40174c:	f014 0f02 	tst.w	r4, #2
  401750:	d115      	bne.n	40177e <RTC_Handler+0x46>
			rtc_set_date_alarm(RTC, 1, MONTH2, 1, DAY2);
			rtc_set_time_alarm(RTC, 1, HOUR2, 1, MINUTE2, 1, SECOND2+4);	
	}
	
	
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  401752:	4d39      	ldr	r5, [pc, #228]	; (401838 <RTC_Handler+0x100>)
  401754:	2101      	movs	r1, #1
  401756:	4628      	mov	r0, r5
  401758:	4c39      	ldr	r4, [pc, #228]	; (401840 <RTC_Handler+0x108>)
  40175a:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  40175c:	2108      	movs	r1, #8
  40175e:	4628      	mov	r0, r5
  401760:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  401762:	2110      	movs	r1, #16
  401764:	4628      	mov	r0, r5
  401766:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);
  401768:	2120      	movs	r1, #32
  40176a:	4628      	mov	r0, r5
  40176c:	47a0      	blx	r4
	
	
	
}
  40176e:	b00c      	add	sp, #48	; 0x30
  401770:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  401774:	2104      	movs	r1, #4
  401776:	4830      	ldr	r0, [pc, #192]	; (401838 <RTC_Handler+0x100>)
  401778:	4b31      	ldr	r3, [pc, #196]	; (401840 <RTC_Handler+0x108>)
  40177a:	4798      	blx	r3
  40177c:	e7e6      	b.n	40174c <RTC_Handler+0x14>
			rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  40177e:	4d2e      	ldr	r5, [pc, #184]	; (401838 <RTC_Handler+0x100>)
  401780:	2102      	movs	r1, #2
  401782:	4628      	mov	r0, r5
  401784:	4b2e      	ldr	r3, [pc, #184]	; (401840 <RTC_Handler+0x108>)
  401786:	4798      	blx	r3
			vel = 2*3.1415*raio*mag_pulses/(4);
  401788:	4f2e      	ldr	r7, [pc, #184]	; (401844 <RTC_Handler+0x10c>)
  40178a:	e9d7 0100 	ldrd	r0, r1, [r7]
  40178e:	4e2e      	ldr	r6, [pc, #184]	; (401848 <RTC_Handler+0x110>)
  401790:	f8d6 a000 	ldr.w	sl, [r6]
  401794:	4c2d      	ldr	r4, [pc, #180]	; (40184c <RTC_Handler+0x114>)
  401796:	a326      	add	r3, pc, #152	; (adr r3, 401830 <RTC_Handler+0xf8>)
  401798:	e9d3 2300 	ldrd	r2, r3, [r3]
  40179c:	47a0      	blx	r4
  40179e:	4680      	mov	r8, r0
  4017a0:	4689      	mov	r9, r1
  4017a2:	4650      	mov	r0, sl
  4017a4:	4b2a      	ldr	r3, [pc, #168]	; (401850 <RTC_Handler+0x118>)
  4017a6:	4798      	blx	r3
  4017a8:	4602      	mov	r2, r0
  4017aa:	460b      	mov	r3, r1
  4017ac:	4640      	mov	r0, r8
  4017ae:	4649      	mov	r1, r9
  4017b0:	47a0      	blx	r4
  4017b2:	2200      	movs	r2, #0
  4017b4:	4b27      	ldr	r3, [pc, #156]	; (401854 <RTC_Handler+0x11c>)
  4017b6:	47a0      	blx	r4
  4017b8:	4b27      	ldr	r3, [pc, #156]	; (401858 <RTC_Handler+0x120>)
  4017ba:	e9c3 0100 	strd	r0, r1, [r3]
			distance += 2*3.1415*raio;  
  4017be:	e9d7 0100 	ldrd	r0, r1, [r7]
  4017c2:	4f26      	ldr	r7, [pc, #152]	; (40185c <RTC_Handler+0x124>)
  4017c4:	e9d7 8900 	ldrd	r8, r9, [r7]
  4017c8:	a319      	add	r3, pc, #100	; (adr r3, 401830 <RTC_Handler+0xf8>)
  4017ca:	e9d3 2300 	ldrd	r2, r3, [r3]
  4017ce:	47a0      	blx	r4
  4017d0:	4642      	mov	r2, r8
  4017d2:	464b      	mov	r3, r9
  4017d4:	4c22      	ldr	r4, [pc, #136]	; (401860 <RTC_Handler+0x128>)
  4017d6:	47a0      	blx	r4
  4017d8:	e9c7 0100 	strd	r0, r1, [r7]
			mag_pulses = 0;
  4017dc:	2300      	movs	r3, #0
  4017de:	6033      	str	r3, [r6, #0]
			flag_draw = true;
  4017e0:	2401      	movs	r4, #1
  4017e2:	4b20      	ldr	r3, [pc, #128]	; (401864 <RTC_Handler+0x12c>)
  4017e4:	701c      	strb	r4, [r3, #0]
			rtc_get_date(RTC,&YEAR2,&MONTH2,&DAY2,&WEEK2);
  4017e6:	ab08      	add	r3, sp, #32
  4017e8:	9300      	str	r3, [sp, #0]
  4017ea:	ab07      	add	r3, sp, #28
  4017ec:	aa06      	add	r2, sp, #24
  4017ee:	a905      	add	r1, sp, #20
  4017f0:	4628      	mov	r0, r5
  4017f2:	4e1d      	ldr	r6, [pc, #116]	; (401868 <RTC_Handler+0x130>)
  4017f4:	47b0      	blx	r6
			rtc_get_time(RTC,&HOUR2,&MINUTE2,&SECOND2);
  4017f6:	ab0b      	add	r3, sp, #44	; 0x2c
  4017f8:	aa0a      	add	r2, sp, #40	; 0x28
  4017fa:	a909      	add	r1, sp, #36	; 0x24
  4017fc:	4628      	mov	r0, r5
  4017fe:	4e1b      	ldr	r6, [pc, #108]	; (40186c <RTC_Handler+0x134>)
  401800:	47b0      	blx	r6
			rtc_set_date_alarm(RTC, 1, MONTH2, 1, DAY2);
  401802:	9b07      	ldr	r3, [sp, #28]
  401804:	9300      	str	r3, [sp, #0]
  401806:	4623      	mov	r3, r4
  401808:	9a06      	ldr	r2, [sp, #24]
  40180a:	4621      	mov	r1, r4
  40180c:	4628      	mov	r0, r5
  40180e:	4e18      	ldr	r6, [pc, #96]	; (401870 <RTC_Handler+0x138>)
  401810:	47b0      	blx	r6
			rtc_set_time_alarm(RTC, 1, HOUR2, 1, MINUTE2, 1, SECOND2+4);	
  401812:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401814:	3304      	adds	r3, #4
  401816:	9302      	str	r3, [sp, #8]
  401818:	9401      	str	r4, [sp, #4]
  40181a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40181c:	9300      	str	r3, [sp, #0]
  40181e:	4623      	mov	r3, r4
  401820:	9a09      	ldr	r2, [sp, #36]	; 0x24
  401822:	4621      	mov	r1, r4
  401824:	4628      	mov	r0, r5
  401826:	4c13      	ldr	r4, [pc, #76]	; (401874 <RTC_Handler+0x13c>)
  401828:	47a0      	blx	r4
  40182a:	e792      	b.n	401752 <RTC_Handler+0x1a>
  40182c:	f3af 8000 	nop.w
  401830:	c083126f 	.word	0xc083126f
  401834:	401921ca 	.word	0x401921ca
  401838:	400e1860 	.word	0x400e1860
  40183c:	004004d1 	.word	0x004004d1
  401840:	004004d5 	.word	0x004004d5
  401844:	20400020 	.word	0x20400020
  401848:	20400c84 	.word	0x20400c84
  40184c:	00401e51 	.word	0x00401e51
  401850:	00401d85 	.word	0x00401d85
  401854:	3fd00000 	.word	0x3fd00000
  401858:	20400c88 	.word	0x20400c88
  40185c:	20400c78 	.word	0x20400c78
  401860:	00401aed 	.word	0x00401aed
  401864:	20400c80 	.word	0x20400c80
  401868:	00400345 	.word	0x00400345
  40186c:	004001c7 	.word	0x004001c7
  401870:	00400471 	.word	0x00400471
  401874:	004002b1 	.word	0x004002b1

00401878 <BUT_init>:
void BUT_init(void){
  401878:	b5f0      	push	{r4, r5, r6, r7, lr}
  40187a:	b083      	sub	sp, #12
	/* config. pino botao em modo de entrada */
	pmc_enable_periph_clk(BUT1_PIO_ID);
  40187c:	2010      	movs	r0, #16
  40187e:	4c2a      	ldr	r4, [pc, #168]	; (401928 <BUT_init+0xb0>)
  401880:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT2_PIO_ID);
  401882:	200c      	movs	r0, #12
  401884:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT3_PIO_ID);
  401886:	200a      	movs	r0, #10
  401888:	47a0      	blx	r4
	pio_set_input(BUT1_PIO, BUT1_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40188a:	4c28      	ldr	r4, [pc, #160]	; (40192c <BUT_init+0xb4>)
  40188c:	2209      	movs	r2, #9
  40188e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401892:	4620      	mov	r0, r4
  401894:	4f26      	ldr	r7, [pc, #152]	; (401930 <BUT_init+0xb8>)
  401896:	47b8      	blx	r7
	pio_set_input(BUT2_PIO, BUT2_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401898:	4e26      	ldr	r6, [pc, #152]	; (401934 <BUT_init+0xbc>)
  40189a:	2209      	movs	r2, #9
  40189c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4018a0:	4630      	mov	r0, r6
  4018a2:	47b8      	blx	r7
	pio_set_input(BUT3_PIO, BUT3_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4018a4:	4d24      	ldr	r5, [pc, #144]	; (401938 <BUT_init+0xc0>)
  4018a6:	2209      	movs	r2, #9
  4018a8:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4018ac:	4628      	mov	r0, r5
  4018ae:	47b8      	blx	r7

	/* config. interrupcao em borda de descida no botao do kit */
	/* indica funcao (but_Handler) a ser chamada quando houver uma interrup??o */
	pio_enable_interrupt(BUT1_PIO, BUT1_PIN_MASK);
  4018b0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4018b4:	4620      	mov	r0, r4
  4018b6:	4f21      	ldr	r7, [pc, #132]	; (40193c <BUT_init+0xc4>)
  4018b8:	47b8      	blx	r7
	pio_enable_interrupt(BUT2_PIO, BUT2_PIN_MASK);
  4018ba:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4018be:	4630      	mov	r0, r6
  4018c0:	47b8      	blx	r7
	pio_enable_interrupt(BUT3_PIO, BUT3_PIN_MASK);
  4018c2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4018c6:	4628      	mov	r0, r5
  4018c8:	47b8      	blx	r7
	pio_handler_set(BUT1_PIO, BUT1_PIO_ID, BUT1_PIN_MASK, PIO_IT_FALL_EDGE, Button1_Handler);
  4018ca:	4b1d      	ldr	r3, [pc, #116]	; (401940 <BUT_init+0xc8>)
  4018cc:	9300      	str	r3, [sp, #0]
  4018ce:	2350      	movs	r3, #80	; 0x50
  4018d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4018d4:	2110      	movs	r1, #16
  4018d6:	4620      	mov	r0, r4
  4018d8:	4c1a      	ldr	r4, [pc, #104]	; (401944 <BUT_init+0xcc>)
  4018da:	47a0      	blx	r4
	pio_handler_set(BUT2_PIO, BUT2_PIO_ID, BUT2_PIN_MASK, PIO_IT_FALL_EDGE, Button2_Handler);
  4018dc:	4b1a      	ldr	r3, [pc, #104]	; (401948 <BUT_init+0xd0>)
  4018de:	9300      	str	r3, [sp, #0]
  4018e0:	2350      	movs	r3, #80	; 0x50
  4018e2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4018e6:	210c      	movs	r1, #12
  4018e8:	4630      	mov	r0, r6
  4018ea:	47a0      	blx	r4
	pio_handler_set(BUT3_PIO, BUT3_PIO_ID, BUT3_PIN_MASK, PIO_IT_FALL_EDGE, Button3_Handler);
  4018ec:	4b17      	ldr	r3, [pc, #92]	; (40194c <BUT_init+0xd4>)
  4018ee:	9300      	str	r3, [sp, #0]
  4018f0:	2350      	movs	r3, #80	; 0x50
  4018f2:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4018f6:	210a      	movs	r1, #10
  4018f8:	4628      	mov	r0, r5
  4018fa:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4018fc:	4b14      	ldr	r3, [pc, #80]	; (401950 <BUT_init+0xd8>)
  4018fe:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401902:	601a      	str	r2, [r3, #0]
  401904:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  401908:	601a      	str	r2, [r3, #0]
  40190a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40190e:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401910:	2240      	movs	r2, #64	; 0x40
  401912:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
  401916:	2260      	movs	r2, #96	; 0x60
  401918:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  40191c:	2280      	movs	r2, #128	; 0x80
  40191e:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
	NVIC_EnableIRQ(BUT3_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 2);
	NVIC_SetPriority(BUT2_PIO_ID, 3);
	NVIC_SetPriority(BUT3_PIO_ID, 4);
	
};
  401922:	b003      	add	sp, #12
  401924:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401926:	bf00      	nop
  401928:	00401171 	.word	0x00401171
  40192c:	400e1400 	.word	0x400e1400
  401930:	00400dff 	.word	0x00400dff
  401934:	400e1200 	.word	0x400e1200
  401938:	400e0e00 	.word	0x400e0e00
  40193c:	00400f1f 	.word	0x00400f1f
  401940:	00401725 	.word	0x00401725
  401944:	00400f7d 	.word	0x00400f7d
  401948:	00401735 	.word	0x00401735
  40194c:	00401737 	.word	0x00401737
  401950:	e000e100 	.word	0xe000e100

00401954 <RTC_init>:
void RTC_init(){
  401954:	b530      	push	{r4, r5, lr}
  401956:	b083      	sub	sp, #12
	/* Configura o PMC */
	pmc_enable_periph_clk(ID_RTC);
  401958:	2002      	movs	r0, #2
  40195a:	4b13      	ldr	r3, [pc, #76]	; (4019a8 <RTC_init+0x54>)
  40195c:	4798      	blx	r3

	/* Default RTC configuration, 24-hour mode */
	rtc_set_hour_mode(RTC, 0);
  40195e:	4c13      	ldr	r4, [pc, #76]	; (4019ac <RTC_init+0x58>)
  401960:	2100      	movs	r1, #0
  401962:	4620      	mov	r0, r4
  401964:	4b12      	ldr	r3, [pc, #72]	; (4019b0 <RTC_init+0x5c>)
  401966:	4798      	blx	r3

	/* Configura data e hora manualmente */
	rtc_set_date(RTC, YEAR, MOUNTH, DAY, WEEK);
  401968:	230c      	movs	r3, #12
  40196a:	9300      	str	r3, [sp, #0]
  40196c:	2313      	movs	r3, #19
  40196e:	2203      	movs	r2, #3
  401970:	f240 71e2 	movw	r1, #2018	; 0x7e2
  401974:	4620      	mov	r0, r4
  401976:	4d0f      	ldr	r5, [pc, #60]	; (4019b4 <RTC_init+0x60>)
  401978:	47a8      	blx	r5
	rtc_set_time(RTC, HOUR, MINUTE, SECOND);
  40197a:	2300      	movs	r3, #0
  40197c:	222d      	movs	r2, #45	; 0x2d
  40197e:	210f      	movs	r1, #15
  401980:	4620      	mov	r0, r4
  401982:	4d0d      	ldr	r5, [pc, #52]	; (4019b8 <RTC_init+0x64>)
  401984:	47a8      	blx	r5
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401986:	4b0d      	ldr	r3, [pc, #52]	; (4019bc <RTC_init+0x68>)
  401988:	2204      	movs	r2, #4
  40198a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40198e:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401992:	2100      	movs	r1, #0
  401994:	f883 1302 	strb.w	r1, [r3, #770]	; 0x302
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401998:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(RTC_IRQn);
	NVIC_SetPriority(RTC_IRQn, 0);
	NVIC_EnableIRQ(RTC_IRQn);

	/* Ativa interrupcao via alarme */
	rtc_enable_interrupt(RTC,  RTC_IER_ALREN);
  40199a:	2102      	movs	r1, #2
  40199c:	4620      	mov	r0, r4
  40199e:	4b08      	ldr	r3, [pc, #32]	; (4019c0 <RTC_init+0x6c>)
  4019a0:	4798      	blx	r3

}
  4019a2:	b003      	add	sp, #12
  4019a4:	bd30      	pop	{r4, r5, pc}
  4019a6:	bf00      	nop
  4019a8:	00401171 	.word	0x00401171
  4019ac:	400e1860 	.word	0x400e1860
  4019b0:	004001ad 	.word	0x004001ad
  4019b4:	004003b9 	.word	0x004003b9
  4019b8:	00400221 	.word	0x00400221
  4019bc:	e000e100 	.word	0xe000e100
  4019c0:	004001c3 	.word	0x004001c3

004019c4 <main>:

int main (void)
{
  4019c4:	b580      	push	{r7, lr}
  4019c6:	b08c      	sub	sp, #48	; 0x30
	/* Insert system clock initialization code here (sysclk_init()). */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4019c8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4019cc:	4b2f      	ldr	r3, [pc, #188]	; (401a8c <main+0xc8>)
  4019ce:	605a      	str	r2, [r3, #4]
	board_init();
  4019d0:	4b2f      	ldr	r3, [pc, #188]	; (401a90 <main+0xcc>)
  4019d2:	4798      	blx	r3
	sysclk_init();
  4019d4:	4b2f      	ldr	r3, [pc, #188]	; (401a94 <main+0xd0>)
  4019d6:	4798      	blx	r3
	RTC_init();
  4019d8:	4b2f      	ldr	r3, [pc, #188]	; (401a98 <main+0xd4>)
  4019da:	4798      	blx	r3

	delay_init();
	BUT_init();
  4019dc:	4b2f      	ldr	r3, [pc, #188]	; (401a9c <main+0xd8>)
  4019de:	4798      	blx	r3
	gfx_mono_ssd1306_init();
  4019e0:	4b2f      	ldr	r3, [pc, #188]	; (401aa0 <main+0xdc>)
  4019e2:	4798      	blx	r3
	char buffer[32];
	rtc_set_date_alarm(RTC, 1, MOUNTH, 1, DAY);
  4019e4:	4c2f      	ldr	r4, [pc, #188]	; (401aa4 <main+0xe0>)
  4019e6:	2313      	movs	r3, #19
  4019e8:	9300      	str	r3, [sp, #0]
  4019ea:	2301      	movs	r3, #1
  4019ec:	2203      	movs	r2, #3
  4019ee:	4619      	mov	r1, r3
  4019f0:	4620      	mov	r0, r4
  4019f2:	4d2d      	ldr	r5, [pc, #180]	; (401aa8 <main+0xe4>)
  4019f4:	47a8      	blx	r5
	rtc_set_time_alarm(RTC, 1, HOUR, 1, MINUTE, 1, SECOND+4);
  4019f6:	2304      	movs	r3, #4
  4019f8:	9302      	str	r3, [sp, #8]
  4019fa:	2101      	movs	r1, #1
  4019fc:	9101      	str	r1, [sp, #4]
  4019fe:	232d      	movs	r3, #45	; 0x2d
  401a00:	9300      	str	r3, [sp, #0]
  401a02:	460b      	mov	r3, r1
  401a04:	220f      	movs	r2, #15
  401a06:	4620      	mov	r0, r4
  401a08:	4c28      	ldr	r4, [pc, #160]	; (401aac <main+0xe8>)
  401a0a:	47a0      	blx	r4
	
	
  /* Insert application code here, after the board has been initialized. */
	while(1) {
		//gfx_mono_draw_string("0", 50,16, &sysfont);
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401a0c:	4e28      	ldr	r6, [pc, #160]	; (401ab0 <main+0xec>)
		
		if(flag_draw){
  401a0e:	4c29      	ldr	r4, [pc, #164]	; (401ab4 <main+0xf0>)
			if(what==0){
  401a10:	4f29      	ldr	r7, [pc, #164]	; (401ab8 <main+0xf4>)
  401a12:	e005      	b.n	401a20 <main+0x5c>
				sprintf(&buffer,"%f",vel);
				gfx_mono_draw_string("Vel: ",5,16,&sysfont);
				gfx_mono_draw_string(buffer,50,16,&sysfont);
			}
			if(what==1){
  401a14:	783b      	ldrb	r3, [r7, #0]
  401a16:	b2db      	uxtb	r3, r3
  401a18:	2b01      	cmp	r3, #1
  401a1a:	d020      	beq.n	401a5e <main+0x9a>
				sprintf(&buffer,"%d",distance);
				gfx_mono_draw_string("Dist: ",16,16,&sysfont);
				gfx_mono_draw_string(buffer,50,16,&sysfont);
			}
			flag_draw = false;
  401a1c:	2300      	movs	r3, #0
  401a1e:	7023      	strb	r3, [r4, #0]
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401a20:	2502      	movs	r5, #2
  401a22:	4628      	mov	r0, r5
  401a24:	47b0      	blx	r6
		if(flag_draw){
  401a26:	7823      	ldrb	r3, [r4, #0]
  401a28:	2b00      	cmp	r3, #0
  401a2a:	d0fa      	beq.n	401a22 <main+0x5e>
			if(what==0){
  401a2c:	783b      	ldrb	r3, [r7, #0]
  401a2e:	2b00      	cmp	r3, #0
  401a30:	d1f0      	bne.n	401a14 <main+0x50>
				sprintf(&buffer,"%f",vel);
  401a32:	4b22      	ldr	r3, [pc, #136]	; (401abc <main+0xf8>)
  401a34:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a38:	4921      	ldr	r1, [pc, #132]	; (401ac0 <main+0xfc>)
  401a3a:	a804      	add	r0, sp, #16
  401a3c:	4d21      	ldr	r5, [pc, #132]	; (401ac4 <main+0x100>)
  401a3e:	47a8      	blx	r5
				gfx_mono_draw_string("Vel: ",5,16,&sysfont);
  401a40:	f8df 8098 	ldr.w	r8, [pc, #152]	; 401adc <main+0x118>
  401a44:	4643      	mov	r3, r8
  401a46:	2210      	movs	r2, #16
  401a48:	2105      	movs	r1, #5
  401a4a:	481f      	ldr	r0, [pc, #124]	; (401ac8 <main+0x104>)
  401a4c:	4d1f      	ldr	r5, [pc, #124]	; (401acc <main+0x108>)
  401a4e:	47a8      	blx	r5
				gfx_mono_draw_string(buffer,50,16,&sysfont);
  401a50:	4643      	mov	r3, r8
  401a52:	2210      	movs	r2, #16
  401a54:	2132      	movs	r1, #50	; 0x32
  401a56:	eb0d 0002 	add.w	r0, sp, r2
  401a5a:	47a8      	blx	r5
  401a5c:	e7da      	b.n	401a14 <main+0x50>
				sprintf(&buffer,"%d",distance);
  401a5e:	4b1c      	ldr	r3, [pc, #112]	; (401ad0 <main+0x10c>)
  401a60:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a64:	491b      	ldr	r1, [pc, #108]	; (401ad4 <main+0x110>)
  401a66:	a804      	add	r0, sp, #16
  401a68:	4d16      	ldr	r5, [pc, #88]	; (401ac4 <main+0x100>)
  401a6a:	47a8      	blx	r5
				gfx_mono_draw_string("Dist: ",16,16,&sysfont);
  401a6c:	f8df 806c 	ldr.w	r8, [pc, #108]	; 401adc <main+0x118>
  401a70:	4643      	mov	r3, r8
  401a72:	2210      	movs	r2, #16
  401a74:	4611      	mov	r1, r2
  401a76:	4818      	ldr	r0, [pc, #96]	; (401ad8 <main+0x114>)
  401a78:	4d14      	ldr	r5, [pc, #80]	; (401acc <main+0x108>)
  401a7a:	47a8      	blx	r5
				gfx_mono_draw_string(buffer,50,16,&sysfont);
  401a7c:	4643      	mov	r3, r8
  401a7e:	2210      	movs	r2, #16
  401a80:	2132      	movs	r1, #50	; 0x32
  401a82:	eb0d 0002 	add.w	r0, sp, r2
  401a86:	47a8      	blx	r5
  401a88:	e7c8      	b.n	401a1c <main+0x58>
  401a8a:	bf00      	nop
  401a8c:	400e1850 	.word	0x400e1850
  401a90:	00400c2d 	.word	0x00400c2d
  401a94:	00400bbd 	.word	0x00400bbd
  401a98:	00401955 	.word	0x00401955
  401a9c:	00401879 	.word	0x00401879
  401aa0:	0040089d 	.word	0x0040089d
  401aa4:	400e1860 	.word	0x400e1860
  401aa8:	00400471 	.word	0x00400471
  401aac:	004002b1 	.word	0x004002b1
  401ab0:	00401215 	.word	0x00401215
  401ab4:	20400c80 	.word	0x20400c80
  401ab8:	20400c90 	.word	0x20400c90
  401abc:	20400c88 	.word	0x20400c88
  401ac0:	00406e28 	.word	0x00406e28
  401ac4:	00402361 	.word	0x00402361
  401ac8:	00406e2c 	.word	0x00406e2c
  401acc:	00400805 	.word	0x00400805
  401ad0:	20400c78 	.word	0x20400c78
  401ad4:	00406e34 	.word	0x00406e34
  401ad8:	00406e38 	.word	0x00406e38
  401adc:	2040000c 	.word	0x2040000c

00401ae0 <__aeabi_drsub>:
  401ae0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401ae4:	e002      	b.n	401aec <__adddf3>
  401ae6:	bf00      	nop

00401ae8 <__aeabi_dsub>:
  401ae8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401aec <__adddf3>:
  401aec:	b530      	push	{r4, r5, lr}
  401aee:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401af2:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401af6:	ea94 0f05 	teq	r4, r5
  401afa:	bf08      	it	eq
  401afc:	ea90 0f02 	teqeq	r0, r2
  401b00:	bf1f      	itttt	ne
  401b02:	ea54 0c00 	orrsne.w	ip, r4, r0
  401b06:	ea55 0c02 	orrsne.w	ip, r5, r2
  401b0a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401b0e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401b12:	f000 80e2 	beq.w	401cda <__adddf3+0x1ee>
  401b16:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401b1a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401b1e:	bfb8      	it	lt
  401b20:	426d      	neglt	r5, r5
  401b22:	dd0c      	ble.n	401b3e <__adddf3+0x52>
  401b24:	442c      	add	r4, r5
  401b26:	ea80 0202 	eor.w	r2, r0, r2
  401b2a:	ea81 0303 	eor.w	r3, r1, r3
  401b2e:	ea82 0000 	eor.w	r0, r2, r0
  401b32:	ea83 0101 	eor.w	r1, r3, r1
  401b36:	ea80 0202 	eor.w	r2, r0, r2
  401b3a:	ea81 0303 	eor.w	r3, r1, r3
  401b3e:	2d36      	cmp	r5, #54	; 0x36
  401b40:	bf88      	it	hi
  401b42:	bd30      	pophi	{r4, r5, pc}
  401b44:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401b48:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401b4c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401b50:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401b54:	d002      	beq.n	401b5c <__adddf3+0x70>
  401b56:	4240      	negs	r0, r0
  401b58:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401b5c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401b60:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401b64:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401b68:	d002      	beq.n	401b70 <__adddf3+0x84>
  401b6a:	4252      	negs	r2, r2
  401b6c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401b70:	ea94 0f05 	teq	r4, r5
  401b74:	f000 80a7 	beq.w	401cc6 <__adddf3+0x1da>
  401b78:	f1a4 0401 	sub.w	r4, r4, #1
  401b7c:	f1d5 0e20 	rsbs	lr, r5, #32
  401b80:	db0d      	blt.n	401b9e <__adddf3+0xb2>
  401b82:	fa02 fc0e 	lsl.w	ip, r2, lr
  401b86:	fa22 f205 	lsr.w	r2, r2, r5
  401b8a:	1880      	adds	r0, r0, r2
  401b8c:	f141 0100 	adc.w	r1, r1, #0
  401b90:	fa03 f20e 	lsl.w	r2, r3, lr
  401b94:	1880      	adds	r0, r0, r2
  401b96:	fa43 f305 	asr.w	r3, r3, r5
  401b9a:	4159      	adcs	r1, r3
  401b9c:	e00e      	b.n	401bbc <__adddf3+0xd0>
  401b9e:	f1a5 0520 	sub.w	r5, r5, #32
  401ba2:	f10e 0e20 	add.w	lr, lr, #32
  401ba6:	2a01      	cmp	r2, #1
  401ba8:	fa03 fc0e 	lsl.w	ip, r3, lr
  401bac:	bf28      	it	cs
  401bae:	f04c 0c02 	orrcs.w	ip, ip, #2
  401bb2:	fa43 f305 	asr.w	r3, r3, r5
  401bb6:	18c0      	adds	r0, r0, r3
  401bb8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401bbc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401bc0:	d507      	bpl.n	401bd2 <__adddf3+0xe6>
  401bc2:	f04f 0e00 	mov.w	lr, #0
  401bc6:	f1dc 0c00 	rsbs	ip, ip, #0
  401bca:	eb7e 0000 	sbcs.w	r0, lr, r0
  401bce:	eb6e 0101 	sbc.w	r1, lr, r1
  401bd2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401bd6:	d31b      	bcc.n	401c10 <__adddf3+0x124>
  401bd8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401bdc:	d30c      	bcc.n	401bf8 <__adddf3+0x10c>
  401bde:	0849      	lsrs	r1, r1, #1
  401be0:	ea5f 0030 	movs.w	r0, r0, rrx
  401be4:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401be8:	f104 0401 	add.w	r4, r4, #1
  401bec:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401bf0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401bf4:	f080 809a 	bcs.w	401d2c <__adddf3+0x240>
  401bf8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401bfc:	bf08      	it	eq
  401bfe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401c02:	f150 0000 	adcs.w	r0, r0, #0
  401c06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401c0a:	ea41 0105 	orr.w	r1, r1, r5
  401c0e:	bd30      	pop	{r4, r5, pc}
  401c10:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401c14:	4140      	adcs	r0, r0
  401c16:	eb41 0101 	adc.w	r1, r1, r1
  401c1a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401c1e:	f1a4 0401 	sub.w	r4, r4, #1
  401c22:	d1e9      	bne.n	401bf8 <__adddf3+0x10c>
  401c24:	f091 0f00 	teq	r1, #0
  401c28:	bf04      	itt	eq
  401c2a:	4601      	moveq	r1, r0
  401c2c:	2000      	moveq	r0, #0
  401c2e:	fab1 f381 	clz	r3, r1
  401c32:	bf08      	it	eq
  401c34:	3320      	addeq	r3, #32
  401c36:	f1a3 030b 	sub.w	r3, r3, #11
  401c3a:	f1b3 0220 	subs.w	r2, r3, #32
  401c3e:	da0c      	bge.n	401c5a <__adddf3+0x16e>
  401c40:	320c      	adds	r2, #12
  401c42:	dd08      	ble.n	401c56 <__adddf3+0x16a>
  401c44:	f102 0c14 	add.w	ip, r2, #20
  401c48:	f1c2 020c 	rsb	r2, r2, #12
  401c4c:	fa01 f00c 	lsl.w	r0, r1, ip
  401c50:	fa21 f102 	lsr.w	r1, r1, r2
  401c54:	e00c      	b.n	401c70 <__adddf3+0x184>
  401c56:	f102 0214 	add.w	r2, r2, #20
  401c5a:	bfd8      	it	le
  401c5c:	f1c2 0c20 	rsble	ip, r2, #32
  401c60:	fa01 f102 	lsl.w	r1, r1, r2
  401c64:	fa20 fc0c 	lsr.w	ip, r0, ip
  401c68:	bfdc      	itt	le
  401c6a:	ea41 010c 	orrle.w	r1, r1, ip
  401c6e:	4090      	lslle	r0, r2
  401c70:	1ae4      	subs	r4, r4, r3
  401c72:	bfa2      	ittt	ge
  401c74:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401c78:	4329      	orrge	r1, r5
  401c7a:	bd30      	popge	{r4, r5, pc}
  401c7c:	ea6f 0404 	mvn.w	r4, r4
  401c80:	3c1f      	subs	r4, #31
  401c82:	da1c      	bge.n	401cbe <__adddf3+0x1d2>
  401c84:	340c      	adds	r4, #12
  401c86:	dc0e      	bgt.n	401ca6 <__adddf3+0x1ba>
  401c88:	f104 0414 	add.w	r4, r4, #20
  401c8c:	f1c4 0220 	rsb	r2, r4, #32
  401c90:	fa20 f004 	lsr.w	r0, r0, r4
  401c94:	fa01 f302 	lsl.w	r3, r1, r2
  401c98:	ea40 0003 	orr.w	r0, r0, r3
  401c9c:	fa21 f304 	lsr.w	r3, r1, r4
  401ca0:	ea45 0103 	orr.w	r1, r5, r3
  401ca4:	bd30      	pop	{r4, r5, pc}
  401ca6:	f1c4 040c 	rsb	r4, r4, #12
  401caa:	f1c4 0220 	rsb	r2, r4, #32
  401cae:	fa20 f002 	lsr.w	r0, r0, r2
  401cb2:	fa01 f304 	lsl.w	r3, r1, r4
  401cb6:	ea40 0003 	orr.w	r0, r0, r3
  401cba:	4629      	mov	r1, r5
  401cbc:	bd30      	pop	{r4, r5, pc}
  401cbe:	fa21 f004 	lsr.w	r0, r1, r4
  401cc2:	4629      	mov	r1, r5
  401cc4:	bd30      	pop	{r4, r5, pc}
  401cc6:	f094 0f00 	teq	r4, #0
  401cca:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401cce:	bf06      	itte	eq
  401cd0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401cd4:	3401      	addeq	r4, #1
  401cd6:	3d01      	subne	r5, #1
  401cd8:	e74e      	b.n	401b78 <__adddf3+0x8c>
  401cda:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401cde:	bf18      	it	ne
  401ce0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401ce4:	d029      	beq.n	401d3a <__adddf3+0x24e>
  401ce6:	ea94 0f05 	teq	r4, r5
  401cea:	bf08      	it	eq
  401cec:	ea90 0f02 	teqeq	r0, r2
  401cf0:	d005      	beq.n	401cfe <__adddf3+0x212>
  401cf2:	ea54 0c00 	orrs.w	ip, r4, r0
  401cf6:	bf04      	itt	eq
  401cf8:	4619      	moveq	r1, r3
  401cfa:	4610      	moveq	r0, r2
  401cfc:	bd30      	pop	{r4, r5, pc}
  401cfe:	ea91 0f03 	teq	r1, r3
  401d02:	bf1e      	ittt	ne
  401d04:	2100      	movne	r1, #0
  401d06:	2000      	movne	r0, #0
  401d08:	bd30      	popne	{r4, r5, pc}
  401d0a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401d0e:	d105      	bne.n	401d1c <__adddf3+0x230>
  401d10:	0040      	lsls	r0, r0, #1
  401d12:	4149      	adcs	r1, r1
  401d14:	bf28      	it	cs
  401d16:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401d1a:	bd30      	pop	{r4, r5, pc}
  401d1c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401d20:	bf3c      	itt	cc
  401d22:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401d26:	bd30      	popcc	{r4, r5, pc}
  401d28:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401d2c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401d30:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401d34:	f04f 0000 	mov.w	r0, #0
  401d38:	bd30      	pop	{r4, r5, pc}
  401d3a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401d3e:	bf1a      	itte	ne
  401d40:	4619      	movne	r1, r3
  401d42:	4610      	movne	r0, r2
  401d44:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401d48:	bf1c      	itt	ne
  401d4a:	460b      	movne	r3, r1
  401d4c:	4602      	movne	r2, r0
  401d4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401d52:	bf06      	itte	eq
  401d54:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401d58:	ea91 0f03 	teqeq	r1, r3
  401d5c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401d60:	bd30      	pop	{r4, r5, pc}
  401d62:	bf00      	nop

00401d64 <__aeabi_ui2d>:
  401d64:	f090 0f00 	teq	r0, #0
  401d68:	bf04      	itt	eq
  401d6a:	2100      	moveq	r1, #0
  401d6c:	4770      	bxeq	lr
  401d6e:	b530      	push	{r4, r5, lr}
  401d70:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d74:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d78:	f04f 0500 	mov.w	r5, #0
  401d7c:	f04f 0100 	mov.w	r1, #0
  401d80:	e750      	b.n	401c24 <__adddf3+0x138>
  401d82:	bf00      	nop

00401d84 <__aeabi_i2d>:
  401d84:	f090 0f00 	teq	r0, #0
  401d88:	bf04      	itt	eq
  401d8a:	2100      	moveq	r1, #0
  401d8c:	4770      	bxeq	lr
  401d8e:	b530      	push	{r4, r5, lr}
  401d90:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401d94:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401d98:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401d9c:	bf48      	it	mi
  401d9e:	4240      	negmi	r0, r0
  401da0:	f04f 0100 	mov.w	r1, #0
  401da4:	e73e      	b.n	401c24 <__adddf3+0x138>
  401da6:	bf00      	nop

00401da8 <__aeabi_f2d>:
  401da8:	0042      	lsls	r2, r0, #1
  401daa:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401dae:	ea4f 0131 	mov.w	r1, r1, rrx
  401db2:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401db6:	bf1f      	itttt	ne
  401db8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401dbc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401dc0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401dc4:	4770      	bxne	lr
  401dc6:	f092 0f00 	teq	r2, #0
  401dca:	bf14      	ite	ne
  401dcc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401dd0:	4770      	bxeq	lr
  401dd2:	b530      	push	{r4, r5, lr}
  401dd4:	f44f 7460 	mov.w	r4, #896	; 0x380
  401dd8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401ddc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401de0:	e720      	b.n	401c24 <__adddf3+0x138>
  401de2:	bf00      	nop

00401de4 <__aeabi_ul2d>:
  401de4:	ea50 0201 	orrs.w	r2, r0, r1
  401de8:	bf08      	it	eq
  401dea:	4770      	bxeq	lr
  401dec:	b530      	push	{r4, r5, lr}
  401dee:	f04f 0500 	mov.w	r5, #0
  401df2:	e00a      	b.n	401e0a <__aeabi_l2d+0x16>

00401df4 <__aeabi_l2d>:
  401df4:	ea50 0201 	orrs.w	r2, r0, r1
  401df8:	bf08      	it	eq
  401dfa:	4770      	bxeq	lr
  401dfc:	b530      	push	{r4, r5, lr}
  401dfe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401e02:	d502      	bpl.n	401e0a <__aeabi_l2d+0x16>
  401e04:	4240      	negs	r0, r0
  401e06:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401e0a:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401e0e:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401e12:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401e16:	f43f aedc 	beq.w	401bd2 <__adddf3+0xe6>
  401e1a:	f04f 0203 	mov.w	r2, #3
  401e1e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401e22:	bf18      	it	ne
  401e24:	3203      	addne	r2, #3
  401e26:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401e2a:	bf18      	it	ne
  401e2c:	3203      	addne	r2, #3
  401e2e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401e32:	f1c2 0320 	rsb	r3, r2, #32
  401e36:	fa00 fc03 	lsl.w	ip, r0, r3
  401e3a:	fa20 f002 	lsr.w	r0, r0, r2
  401e3e:	fa01 fe03 	lsl.w	lr, r1, r3
  401e42:	ea40 000e 	orr.w	r0, r0, lr
  401e46:	fa21 f102 	lsr.w	r1, r1, r2
  401e4a:	4414      	add	r4, r2
  401e4c:	e6c1      	b.n	401bd2 <__adddf3+0xe6>
  401e4e:	bf00      	nop

00401e50 <__aeabi_dmul>:
  401e50:	b570      	push	{r4, r5, r6, lr}
  401e52:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401e56:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401e5a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401e5e:	bf1d      	ittte	ne
  401e60:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401e64:	ea94 0f0c 	teqne	r4, ip
  401e68:	ea95 0f0c 	teqne	r5, ip
  401e6c:	f000 f8de 	bleq	40202c <__aeabi_dmul+0x1dc>
  401e70:	442c      	add	r4, r5
  401e72:	ea81 0603 	eor.w	r6, r1, r3
  401e76:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401e7a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401e7e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401e82:	bf18      	it	ne
  401e84:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401e88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401e8c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401e90:	d038      	beq.n	401f04 <__aeabi_dmul+0xb4>
  401e92:	fba0 ce02 	umull	ip, lr, r0, r2
  401e96:	f04f 0500 	mov.w	r5, #0
  401e9a:	fbe1 e502 	umlal	lr, r5, r1, r2
  401e9e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401ea2:	fbe0 e503 	umlal	lr, r5, r0, r3
  401ea6:	f04f 0600 	mov.w	r6, #0
  401eaa:	fbe1 5603 	umlal	r5, r6, r1, r3
  401eae:	f09c 0f00 	teq	ip, #0
  401eb2:	bf18      	it	ne
  401eb4:	f04e 0e01 	orrne.w	lr, lr, #1
  401eb8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401ebc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401ec0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401ec4:	d204      	bcs.n	401ed0 <__aeabi_dmul+0x80>
  401ec6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401eca:	416d      	adcs	r5, r5
  401ecc:	eb46 0606 	adc.w	r6, r6, r6
  401ed0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401ed4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401ed8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401edc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401ee0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401ee4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401ee8:	bf88      	it	hi
  401eea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401eee:	d81e      	bhi.n	401f2e <__aeabi_dmul+0xde>
  401ef0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401ef4:	bf08      	it	eq
  401ef6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401efa:	f150 0000 	adcs.w	r0, r0, #0
  401efe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401f02:	bd70      	pop	{r4, r5, r6, pc}
  401f04:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401f08:	ea46 0101 	orr.w	r1, r6, r1
  401f0c:	ea40 0002 	orr.w	r0, r0, r2
  401f10:	ea81 0103 	eor.w	r1, r1, r3
  401f14:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401f18:	bfc2      	ittt	gt
  401f1a:	ebd4 050c 	rsbsgt	r5, r4, ip
  401f1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401f22:	bd70      	popgt	{r4, r5, r6, pc}
  401f24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401f28:	f04f 0e00 	mov.w	lr, #0
  401f2c:	3c01      	subs	r4, #1
  401f2e:	f300 80ab 	bgt.w	402088 <__aeabi_dmul+0x238>
  401f32:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401f36:	bfde      	ittt	le
  401f38:	2000      	movle	r0, #0
  401f3a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401f3e:	bd70      	pople	{r4, r5, r6, pc}
  401f40:	f1c4 0400 	rsb	r4, r4, #0
  401f44:	3c20      	subs	r4, #32
  401f46:	da35      	bge.n	401fb4 <__aeabi_dmul+0x164>
  401f48:	340c      	adds	r4, #12
  401f4a:	dc1b      	bgt.n	401f84 <__aeabi_dmul+0x134>
  401f4c:	f104 0414 	add.w	r4, r4, #20
  401f50:	f1c4 0520 	rsb	r5, r4, #32
  401f54:	fa00 f305 	lsl.w	r3, r0, r5
  401f58:	fa20 f004 	lsr.w	r0, r0, r4
  401f5c:	fa01 f205 	lsl.w	r2, r1, r5
  401f60:	ea40 0002 	orr.w	r0, r0, r2
  401f64:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401f68:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401f6c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401f70:	fa21 f604 	lsr.w	r6, r1, r4
  401f74:	eb42 0106 	adc.w	r1, r2, r6
  401f78:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401f7c:	bf08      	it	eq
  401f7e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401f82:	bd70      	pop	{r4, r5, r6, pc}
  401f84:	f1c4 040c 	rsb	r4, r4, #12
  401f88:	f1c4 0520 	rsb	r5, r4, #32
  401f8c:	fa00 f304 	lsl.w	r3, r0, r4
  401f90:	fa20 f005 	lsr.w	r0, r0, r5
  401f94:	fa01 f204 	lsl.w	r2, r1, r4
  401f98:	ea40 0002 	orr.w	r0, r0, r2
  401f9c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401fa0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401fa4:	f141 0100 	adc.w	r1, r1, #0
  401fa8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401fac:	bf08      	it	eq
  401fae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401fb2:	bd70      	pop	{r4, r5, r6, pc}
  401fb4:	f1c4 0520 	rsb	r5, r4, #32
  401fb8:	fa00 f205 	lsl.w	r2, r0, r5
  401fbc:	ea4e 0e02 	orr.w	lr, lr, r2
  401fc0:	fa20 f304 	lsr.w	r3, r0, r4
  401fc4:	fa01 f205 	lsl.w	r2, r1, r5
  401fc8:	ea43 0302 	orr.w	r3, r3, r2
  401fcc:	fa21 f004 	lsr.w	r0, r1, r4
  401fd0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401fd4:	fa21 f204 	lsr.w	r2, r1, r4
  401fd8:	ea20 0002 	bic.w	r0, r0, r2
  401fdc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401fe0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401fe4:	bf08      	it	eq
  401fe6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401fea:	bd70      	pop	{r4, r5, r6, pc}
  401fec:	f094 0f00 	teq	r4, #0
  401ff0:	d10f      	bne.n	402012 <__aeabi_dmul+0x1c2>
  401ff2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401ff6:	0040      	lsls	r0, r0, #1
  401ff8:	eb41 0101 	adc.w	r1, r1, r1
  401ffc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402000:	bf08      	it	eq
  402002:	3c01      	subeq	r4, #1
  402004:	d0f7      	beq.n	401ff6 <__aeabi_dmul+0x1a6>
  402006:	ea41 0106 	orr.w	r1, r1, r6
  40200a:	f095 0f00 	teq	r5, #0
  40200e:	bf18      	it	ne
  402010:	4770      	bxne	lr
  402012:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  402016:	0052      	lsls	r2, r2, #1
  402018:	eb43 0303 	adc.w	r3, r3, r3
  40201c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  402020:	bf08      	it	eq
  402022:	3d01      	subeq	r5, #1
  402024:	d0f7      	beq.n	402016 <__aeabi_dmul+0x1c6>
  402026:	ea43 0306 	orr.w	r3, r3, r6
  40202a:	4770      	bx	lr
  40202c:	ea94 0f0c 	teq	r4, ip
  402030:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402034:	bf18      	it	ne
  402036:	ea95 0f0c 	teqne	r5, ip
  40203a:	d00c      	beq.n	402056 <__aeabi_dmul+0x206>
  40203c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402040:	bf18      	it	ne
  402042:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402046:	d1d1      	bne.n	401fec <__aeabi_dmul+0x19c>
  402048:	ea81 0103 	eor.w	r1, r1, r3
  40204c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402050:	f04f 0000 	mov.w	r0, #0
  402054:	bd70      	pop	{r4, r5, r6, pc}
  402056:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40205a:	bf06      	itte	eq
  40205c:	4610      	moveq	r0, r2
  40205e:	4619      	moveq	r1, r3
  402060:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402064:	d019      	beq.n	40209a <__aeabi_dmul+0x24a>
  402066:	ea94 0f0c 	teq	r4, ip
  40206a:	d102      	bne.n	402072 <__aeabi_dmul+0x222>
  40206c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  402070:	d113      	bne.n	40209a <__aeabi_dmul+0x24a>
  402072:	ea95 0f0c 	teq	r5, ip
  402076:	d105      	bne.n	402084 <__aeabi_dmul+0x234>
  402078:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  40207c:	bf1c      	itt	ne
  40207e:	4610      	movne	r0, r2
  402080:	4619      	movne	r1, r3
  402082:	d10a      	bne.n	40209a <__aeabi_dmul+0x24a>
  402084:	ea81 0103 	eor.w	r1, r1, r3
  402088:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40208c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402090:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402094:	f04f 0000 	mov.w	r0, #0
  402098:	bd70      	pop	{r4, r5, r6, pc}
  40209a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40209e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4020a2:	bd70      	pop	{r4, r5, r6, pc}

004020a4 <__aeabi_ddiv>:
  4020a4:	b570      	push	{r4, r5, r6, lr}
  4020a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4020aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4020ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4020b2:	bf1d      	ittte	ne
  4020b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4020b8:	ea94 0f0c 	teqne	r4, ip
  4020bc:	ea95 0f0c 	teqne	r5, ip
  4020c0:	f000 f8a7 	bleq	402212 <__aeabi_ddiv+0x16e>
  4020c4:	eba4 0405 	sub.w	r4, r4, r5
  4020c8:	ea81 0e03 	eor.w	lr, r1, r3
  4020cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4020d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4020d4:	f000 8088 	beq.w	4021e8 <__aeabi_ddiv+0x144>
  4020d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4020dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4020e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4020e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4020e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4020ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4020f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4020f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4020f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4020fc:	429d      	cmp	r5, r3
  4020fe:	bf08      	it	eq
  402100:	4296      	cmpeq	r6, r2
  402102:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  402106:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40210a:	d202      	bcs.n	402112 <__aeabi_ddiv+0x6e>
  40210c:	085b      	lsrs	r3, r3, #1
  40210e:	ea4f 0232 	mov.w	r2, r2, rrx
  402112:	1ab6      	subs	r6, r6, r2
  402114:	eb65 0503 	sbc.w	r5, r5, r3
  402118:	085b      	lsrs	r3, r3, #1
  40211a:	ea4f 0232 	mov.w	r2, r2, rrx
  40211e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  402122:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  402126:	ebb6 0e02 	subs.w	lr, r6, r2
  40212a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40212e:	bf22      	ittt	cs
  402130:	1ab6      	subcs	r6, r6, r2
  402132:	4675      	movcs	r5, lr
  402134:	ea40 000c 	orrcs.w	r0, r0, ip
  402138:	085b      	lsrs	r3, r3, #1
  40213a:	ea4f 0232 	mov.w	r2, r2, rrx
  40213e:	ebb6 0e02 	subs.w	lr, r6, r2
  402142:	eb75 0e03 	sbcs.w	lr, r5, r3
  402146:	bf22      	ittt	cs
  402148:	1ab6      	subcs	r6, r6, r2
  40214a:	4675      	movcs	r5, lr
  40214c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402150:	085b      	lsrs	r3, r3, #1
  402152:	ea4f 0232 	mov.w	r2, r2, rrx
  402156:	ebb6 0e02 	subs.w	lr, r6, r2
  40215a:	eb75 0e03 	sbcs.w	lr, r5, r3
  40215e:	bf22      	ittt	cs
  402160:	1ab6      	subcs	r6, r6, r2
  402162:	4675      	movcs	r5, lr
  402164:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  402168:	085b      	lsrs	r3, r3, #1
  40216a:	ea4f 0232 	mov.w	r2, r2, rrx
  40216e:	ebb6 0e02 	subs.w	lr, r6, r2
  402172:	eb75 0e03 	sbcs.w	lr, r5, r3
  402176:	bf22      	ittt	cs
  402178:	1ab6      	subcs	r6, r6, r2
  40217a:	4675      	movcs	r5, lr
  40217c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402180:	ea55 0e06 	orrs.w	lr, r5, r6
  402184:	d018      	beq.n	4021b8 <__aeabi_ddiv+0x114>
  402186:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40218a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40218e:	ea4f 1606 	mov.w	r6, r6, lsl #4
  402192:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  402196:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40219a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40219e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4021a2:	d1c0      	bne.n	402126 <__aeabi_ddiv+0x82>
  4021a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4021a8:	d10b      	bne.n	4021c2 <__aeabi_ddiv+0x11e>
  4021aa:	ea41 0100 	orr.w	r1, r1, r0
  4021ae:	f04f 0000 	mov.w	r0, #0
  4021b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4021b6:	e7b6      	b.n	402126 <__aeabi_ddiv+0x82>
  4021b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4021bc:	bf04      	itt	eq
  4021be:	4301      	orreq	r1, r0
  4021c0:	2000      	moveq	r0, #0
  4021c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4021c6:	bf88      	it	hi
  4021c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4021cc:	f63f aeaf 	bhi.w	401f2e <__aeabi_dmul+0xde>
  4021d0:	ebb5 0c03 	subs.w	ip, r5, r3
  4021d4:	bf04      	itt	eq
  4021d6:	ebb6 0c02 	subseq.w	ip, r6, r2
  4021da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4021de:	f150 0000 	adcs.w	r0, r0, #0
  4021e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4021e6:	bd70      	pop	{r4, r5, r6, pc}
  4021e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4021ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4021f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4021f4:	bfc2      	ittt	gt
  4021f6:	ebd4 050c 	rsbsgt	r5, r4, ip
  4021fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4021fe:	bd70      	popgt	{r4, r5, r6, pc}
  402200:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402204:	f04f 0e00 	mov.w	lr, #0
  402208:	3c01      	subs	r4, #1
  40220a:	e690      	b.n	401f2e <__aeabi_dmul+0xde>
  40220c:	ea45 0e06 	orr.w	lr, r5, r6
  402210:	e68d      	b.n	401f2e <__aeabi_dmul+0xde>
  402212:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402216:	ea94 0f0c 	teq	r4, ip
  40221a:	bf08      	it	eq
  40221c:	ea95 0f0c 	teqeq	r5, ip
  402220:	f43f af3b 	beq.w	40209a <__aeabi_dmul+0x24a>
  402224:	ea94 0f0c 	teq	r4, ip
  402228:	d10a      	bne.n	402240 <__aeabi_ddiv+0x19c>
  40222a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40222e:	f47f af34 	bne.w	40209a <__aeabi_dmul+0x24a>
  402232:	ea95 0f0c 	teq	r5, ip
  402236:	f47f af25 	bne.w	402084 <__aeabi_dmul+0x234>
  40223a:	4610      	mov	r0, r2
  40223c:	4619      	mov	r1, r3
  40223e:	e72c      	b.n	40209a <__aeabi_dmul+0x24a>
  402240:	ea95 0f0c 	teq	r5, ip
  402244:	d106      	bne.n	402254 <__aeabi_ddiv+0x1b0>
  402246:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40224a:	f43f aefd 	beq.w	402048 <__aeabi_dmul+0x1f8>
  40224e:	4610      	mov	r0, r2
  402250:	4619      	mov	r1, r3
  402252:	e722      	b.n	40209a <__aeabi_dmul+0x24a>
  402254:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402258:	bf18      	it	ne
  40225a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40225e:	f47f aec5 	bne.w	401fec <__aeabi_dmul+0x19c>
  402262:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  402266:	f47f af0d 	bne.w	402084 <__aeabi_dmul+0x234>
  40226a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40226e:	f47f aeeb 	bne.w	402048 <__aeabi_dmul+0x1f8>
  402272:	e712      	b.n	40209a <__aeabi_dmul+0x24a>

00402274 <__libc_init_array>:
  402274:	b570      	push	{r4, r5, r6, lr}
  402276:	4e0f      	ldr	r6, [pc, #60]	; (4022b4 <__libc_init_array+0x40>)
  402278:	4d0f      	ldr	r5, [pc, #60]	; (4022b8 <__libc_init_array+0x44>)
  40227a:	1b76      	subs	r6, r6, r5
  40227c:	10b6      	asrs	r6, r6, #2
  40227e:	bf18      	it	ne
  402280:	2400      	movne	r4, #0
  402282:	d005      	beq.n	402290 <__libc_init_array+0x1c>
  402284:	3401      	adds	r4, #1
  402286:	f855 3b04 	ldr.w	r3, [r5], #4
  40228a:	4798      	blx	r3
  40228c:	42a6      	cmp	r6, r4
  40228e:	d1f9      	bne.n	402284 <__libc_init_array+0x10>
  402290:	4e0a      	ldr	r6, [pc, #40]	; (4022bc <__libc_init_array+0x48>)
  402292:	4d0b      	ldr	r5, [pc, #44]	; (4022c0 <__libc_init_array+0x4c>)
  402294:	1b76      	subs	r6, r6, r5
  402296:	f004 ff17 	bl	4070c8 <_init>
  40229a:	10b6      	asrs	r6, r6, #2
  40229c:	bf18      	it	ne
  40229e:	2400      	movne	r4, #0
  4022a0:	d006      	beq.n	4022b0 <__libc_init_array+0x3c>
  4022a2:	3401      	adds	r4, #1
  4022a4:	f855 3b04 	ldr.w	r3, [r5], #4
  4022a8:	4798      	blx	r3
  4022aa:	42a6      	cmp	r6, r4
  4022ac:	d1f9      	bne.n	4022a2 <__libc_init_array+0x2e>
  4022ae:	bd70      	pop	{r4, r5, r6, pc}
  4022b0:	bd70      	pop	{r4, r5, r6, pc}
  4022b2:	bf00      	nop
  4022b4:	004070d4 	.word	0x004070d4
  4022b8:	004070d4 	.word	0x004070d4
  4022bc:	004070dc 	.word	0x004070dc
  4022c0:	004070d4 	.word	0x004070d4

004022c4 <memset>:
  4022c4:	b470      	push	{r4, r5, r6}
  4022c6:	0786      	lsls	r6, r0, #30
  4022c8:	d046      	beq.n	402358 <memset+0x94>
  4022ca:	1e54      	subs	r4, r2, #1
  4022cc:	2a00      	cmp	r2, #0
  4022ce:	d041      	beq.n	402354 <memset+0x90>
  4022d0:	b2ca      	uxtb	r2, r1
  4022d2:	4603      	mov	r3, r0
  4022d4:	e002      	b.n	4022dc <memset+0x18>
  4022d6:	f114 34ff 	adds.w	r4, r4, #4294967295
  4022da:	d33b      	bcc.n	402354 <memset+0x90>
  4022dc:	f803 2b01 	strb.w	r2, [r3], #1
  4022e0:	079d      	lsls	r5, r3, #30
  4022e2:	d1f8      	bne.n	4022d6 <memset+0x12>
  4022e4:	2c03      	cmp	r4, #3
  4022e6:	d92e      	bls.n	402346 <memset+0x82>
  4022e8:	b2cd      	uxtb	r5, r1
  4022ea:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4022ee:	2c0f      	cmp	r4, #15
  4022f0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4022f4:	d919      	bls.n	40232a <memset+0x66>
  4022f6:	f103 0210 	add.w	r2, r3, #16
  4022fa:	4626      	mov	r6, r4
  4022fc:	3e10      	subs	r6, #16
  4022fe:	2e0f      	cmp	r6, #15
  402300:	f842 5c10 	str.w	r5, [r2, #-16]
  402304:	f842 5c0c 	str.w	r5, [r2, #-12]
  402308:	f842 5c08 	str.w	r5, [r2, #-8]
  40230c:	f842 5c04 	str.w	r5, [r2, #-4]
  402310:	f102 0210 	add.w	r2, r2, #16
  402314:	d8f2      	bhi.n	4022fc <memset+0x38>
  402316:	f1a4 0210 	sub.w	r2, r4, #16
  40231a:	f022 020f 	bic.w	r2, r2, #15
  40231e:	f004 040f 	and.w	r4, r4, #15
  402322:	3210      	adds	r2, #16
  402324:	2c03      	cmp	r4, #3
  402326:	4413      	add	r3, r2
  402328:	d90d      	bls.n	402346 <memset+0x82>
  40232a:	461e      	mov	r6, r3
  40232c:	4622      	mov	r2, r4
  40232e:	3a04      	subs	r2, #4
  402330:	2a03      	cmp	r2, #3
  402332:	f846 5b04 	str.w	r5, [r6], #4
  402336:	d8fa      	bhi.n	40232e <memset+0x6a>
  402338:	1f22      	subs	r2, r4, #4
  40233a:	f022 0203 	bic.w	r2, r2, #3
  40233e:	3204      	adds	r2, #4
  402340:	4413      	add	r3, r2
  402342:	f004 0403 	and.w	r4, r4, #3
  402346:	b12c      	cbz	r4, 402354 <memset+0x90>
  402348:	b2c9      	uxtb	r1, r1
  40234a:	441c      	add	r4, r3
  40234c:	f803 1b01 	strb.w	r1, [r3], #1
  402350:	429c      	cmp	r4, r3
  402352:	d1fb      	bne.n	40234c <memset+0x88>
  402354:	bc70      	pop	{r4, r5, r6}
  402356:	4770      	bx	lr
  402358:	4614      	mov	r4, r2
  40235a:	4603      	mov	r3, r0
  40235c:	e7c2      	b.n	4022e4 <memset+0x20>
  40235e:	bf00      	nop

00402360 <sprintf>:
  402360:	b40e      	push	{r1, r2, r3}
  402362:	b5f0      	push	{r4, r5, r6, r7, lr}
  402364:	b09c      	sub	sp, #112	; 0x70
  402366:	ab21      	add	r3, sp, #132	; 0x84
  402368:	490f      	ldr	r1, [pc, #60]	; (4023a8 <sprintf+0x48>)
  40236a:	f853 2b04 	ldr.w	r2, [r3], #4
  40236e:	9301      	str	r3, [sp, #4]
  402370:	4605      	mov	r5, r0
  402372:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  402376:	6808      	ldr	r0, [r1, #0]
  402378:	9502      	str	r5, [sp, #8]
  40237a:	f44f 7702 	mov.w	r7, #520	; 0x208
  40237e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402382:	a902      	add	r1, sp, #8
  402384:	9506      	str	r5, [sp, #24]
  402386:	f8ad 7014 	strh.w	r7, [sp, #20]
  40238a:	9404      	str	r4, [sp, #16]
  40238c:	9407      	str	r4, [sp, #28]
  40238e:	f8ad 6016 	strh.w	r6, [sp, #22]
  402392:	f000 f80b 	bl	4023ac <_svfprintf_r>
  402396:	9b02      	ldr	r3, [sp, #8]
  402398:	2200      	movs	r2, #0
  40239a:	701a      	strb	r2, [r3, #0]
  40239c:	b01c      	add	sp, #112	; 0x70
  40239e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4023a2:	b003      	add	sp, #12
  4023a4:	4770      	bx	lr
  4023a6:	bf00      	nop
  4023a8:	20400028 	.word	0x20400028

004023ac <_svfprintf_r>:
  4023ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4023b0:	b0c3      	sub	sp, #268	; 0x10c
  4023b2:	460c      	mov	r4, r1
  4023b4:	910b      	str	r1, [sp, #44]	; 0x2c
  4023b6:	4692      	mov	sl, r2
  4023b8:	930f      	str	r3, [sp, #60]	; 0x3c
  4023ba:	900c      	str	r0, [sp, #48]	; 0x30
  4023bc:	f002 fa0c 	bl	4047d8 <_localeconv_r>
  4023c0:	6803      	ldr	r3, [r0, #0]
  4023c2:	931a      	str	r3, [sp, #104]	; 0x68
  4023c4:	4618      	mov	r0, r3
  4023c6:	f003 f8db 	bl	405580 <strlen>
  4023ca:	89a3      	ldrh	r3, [r4, #12]
  4023cc:	9019      	str	r0, [sp, #100]	; 0x64
  4023ce:	0619      	lsls	r1, r3, #24
  4023d0:	d503      	bpl.n	4023da <_svfprintf_r+0x2e>
  4023d2:	6923      	ldr	r3, [r4, #16]
  4023d4:	2b00      	cmp	r3, #0
  4023d6:	f001 8003 	beq.w	4033e0 <_svfprintf_r+0x1034>
  4023da:	2300      	movs	r3, #0
  4023dc:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4023e0:	9313      	str	r3, [sp, #76]	; 0x4c
  4023e2:	9315      	str	r3, [sp, #84]	; 0x54
  4023e4:	9314      	str	r3, [sp, #80]	; 0x50
  4023e6:	9327      	str	r3, [sp, #156]	; 0x9c
  4023e8:	9326      	str	r3, [sp, #152]	; 0x98
  4023ea:	9318      	str	r3, [sp, #96]	; 0x60
  4023ec:	931b      	str	r3, [sp, #108]	; 0x6c
  4023ee:	9309      	str	r3, [sp, #36]	; 0x24
  4023f0:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4023f4:	46c8      	mov	r8, r9
  4023f6:	9316      	str	r3, [sp, #88]	; 0x58
  4023f8:	9317      	str	r3, [sp, #92]	; 0x5c
  4023fa:	f89a 3000 	ldrb.w	r3, [sl]
  4023fe:	4654      	mov	r4, sl
  402400:	b1e3      	cbz	r3, 40243c <_svfprintf_r+0x90>
  402402:	2b25      	cmp	r3, #37	; 0x25
  402404:	d102      	bne.n	40240c <_svfprintf_r+0x60>
  402406:	e019      	b.n	40243c <_svfprintf_r+0x90>
  402408:	2b25      	cmp	r3, #37	; 0x25
  40240a:	d003      	beq.n	402414 <_svfprintf_r+0x68>
  40240c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402410:	2b00      	cmp	r3, #0
  402412:	d1f9      	bne.n	402408 <_svfprintf_r+0x5c>
  402414:	eba4 050a 	sub.w	r5, r4, sl
  402418:	b185      	cbz	r5, 40243c <_svfprintf_r+0x90>
  40241a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40241c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40241e:	f8c8 a000 	str.w	sl, [r8]
  402422:	3301      	adds	r3, #1
  402424:	442a      	add	r2, r5
  402426:	2b07      	cmp	r3, #7
  402428:	f8c8 5004 	str.w	r5, [r8, #4]
  40242c:	9227      	str	r2, [sp, #156]	; 0x9c
  40242e:	9326      	str	r3, [sp, #152]	; 0x98
  402430:	dc7f      	bgt.n	402532 <_svfprintf_r+0x186>
  402432:	f108 0808 	add.w	r8, r8, #8
  402436:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402438:	442b      	add	r3, r5
  40243a:	9309      	str	r3, [sp, #36]	; 0x24
  40243c:	7823      	ldrb	r3, [r4, #0]
  40243e:	2b00      	cmp	r3, #0
  402440:	d07f      	beq.n	402542 <_svfprintf_r+0x196>
  402442:	2300      	movs	r3, #0
  402444:	461a      	mov	r2, r3
  402446:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40244a:	4619      	mov	r1, r3
  40244c:	930d      	str	r3, [sp, #52]	; 0x34
  40244e:	469b      	mov	fp, r3
  402450:	f04f 30ff 	mov.w	r0, #4294967295
  402454:	7863      	ldrb	r3, [r4, #1]
  402456:	900a      	str	r0, [sp, #40]	; 0x28
  402458:	f104 0a01 	add.w	sl, r4, #1
  40245c:	f10a 0a01 	add.w	sl, sl, #1
  402460:	f1a3 0020 	sub.w	r0, r3, #32
  402464:	2858      	cmp	r0, #88	; 0x58
  402466:	f200 83c1 	bhi.w	402bec <_svfprintf_r+0x840>
  40246a:	e8df f010 	tbh	[pc, r0, lsl #1]
  40246e:	0238      	.short	0x0238
  402470:	03bf03bf 	.word	0x03bf03bf
  402474:	03bf0240 	.word	0x03bf0240
  402478:	03bf03bf 	.word	0x03bf03bf
  40247c:	03bf03bf 	.word	0x03bf03bf
  402480:	024503bf 	.word	0x024503bf
  402484:	03bf0203 	.word	0x03bf0203
  402488:	026b005d 	.word	0x026b005d
  40248c:	028603bf 	.word	0x028603bf
  402490:	039d039d 	.word	0x039d039d
  402494:	039d039d 	.word	0x039d039d
  402498:	039d039d 	.word	0x039d039d
  40249c:	039d039d 	.word	0x039d039d
  4024a0:	03bf039d 	.word	0x03bf039d
  4024a4:	03bf03bf 	.word	0x03bf03bf
  4024a8:	03bf03bf 	.word	0x03bf03bf
  4024ac:	03bf03bf 	.word	0x03bf03bf
  4024b0:	03bf03bf 	.word	0x03bf03bf
  4024b4:	033703bf 	.word	0x033703bf
  4024b8:	03bf0357 	.word	0x03bf0357
  4024bc:	03bf0357 	.word	0x03bf0357
  4024c0:	03bf03bf 	.word	0x03bf03bf
  4024c4:	039803bf 	.word	0x039803bf
  4024c8:	03bf03bf 	.word	0x03bf03bf
  4024cc:	03bf03ad 	.word	0x03bf03ad
  4024d0:	03bf03bf 	.word	0x03bf03bf
  4024d4:	03bf03bf 	.word	0x03bf03bf
  4024d8:	03bf0259 	.word	0x03bf0259
  4024dc:	031e03bf 	.word	0x031e03bf
  4024e0:	03bf03bf 	.word	0x03bf03bf
  4024e4:	03bf03bf 	.word	0x03bf03bf
  4024e8:	03bf03bf 	.word	0x03bf03bf
  4024ec:	03bf03bf 	.word	0x03bf03bf
  4024f0:	03bf03bf 	.word	0x03bf03bf
  4024f4:	02db02c6 	.word	0x02db02c6
  4024f8:	03570357 	.word	0x03570357
  4024fc:	028b0357 	.word	0x028b0357
  402500:	03bf02db 	.word	0x03bf02db
  402504:	029003bf 	.word	0x029003bf
  402508:	029d03bf 	.word	0x029d03bf
  40250c:	02b401cc 	.word	0x02b401cc
  402510:	03bf0208 	.word	0x03bf0208
  402514:	03bf01e1 	.word	0x03bf01e1
  402518:	03bf007e 	.word	0x03bf007e
  40251c:	020d03bf 	.word	0x020d03bf
  402520:	980d      	ldr	r0, [sp, #52]	; 0x34
  402522:	930f      	str	r3, [sp, #60]	; 0x3c
  402524:	4240      	negs	r0, r0
  402526:	900d      	str	r0, [sp, #52]	; 0x34
  402528:	f04b 0b04 	orr.w	fp, fp, #4
  40252c:	f89a 3000 	ldrb.w	r3, [sl]
  402530:	e794      	b.n	40245c <_svfprintf_r+0xb0>
  402532:	aa25      	add	r2, sp, #148	; 0x94
  402534:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402536:	980c      	ldr	r0, [sp, #48]	; 0x30
  402538:	f003 f890 	bl	40565c <__ssprint_r>
  40253c:	b940      	cbnz	r0, 402550 <_svfprintf_r+0x1a4>
  40253e:	46c8      	mov	r8, r9
  402540:	e779      	b.n	402436 <_svfprintf_r+0x8a>
  402542:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402544:	b123      	cbz	r3, 402550 <_svfprintf_r+0x1a4>
  402546:	980c      	ldr	r0, [sp, #48]	; 0x30
  402548:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40254a:	aa25      	add	r2, sp, #148	; 0x94
  40254c:	f003 f886 	bl	40565c <__ssprint_r>
  402550:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402552:	899b      	ldrh	r3, [r3, #12]
  402554:	f013 0f40 	tst.w	r3, #64	; 0x40
  402558:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40255a:	bf18      	it	ne
  40255c:	f04f 33ff 	movne.w	r3, #4294967295
  402560:	9309      	str	r3, [sp, #36]	; 0x24
  402562:	9809      	ldr	r0, [sp, #36]	; 0x24
  402564:	b043      	add	sp, #268	; 0x10c
  402566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40256a:	f01b 0f20 	tst.w	fp, #32
  40256e:	9311      	str	r3, [sp, #68]	; 0x44
  402570:	f040 81dd 	bne.w	40292e <_svfprintf_r+0x582>
  402574:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402576:	f01b 0f10 	tst.w	fp, #16
  40257a:	4613      	mov	r3, r2
  40257c:	f040 856e 	bne.w	40305c <_svfprintf_r+0xcb0>
  402580:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402584:	f000 856a 	beq.w	40305c <_svfprintf_r+0xcb0>
  402588:	8814      	ldrh	r4, [r2, #0]
  40258a:	3204      	adds	r2, #4
  40258c:	2500      	movs	r5, #0
  40258e:	2301      	movs	r3, #1
  402590:	920f      	str	r2, [sp, #60]	; 0x3c
  402592:	2700      	movs	r7, #0
  402594:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402598:	990a      	ldr	r1, [sp, #40]	; 0x28
  40259a:	1c4a      	adds	r2, r1, #1
  40259c:	f000 8265 	beq.w	402a6a <_svfprintf_r+0x6be>
  4025a0:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  4025a4:	9207      	str	r2, [sp, #28]
  4025a6:	ea54 0205 	orrs.w	r2, r4, r5
  4025aa:	f040 8264 	bne.w	402a76 <_svfprintf_r+0x6ca>
  4025ae:	2900      	cmp	r1, #0
  4025b0:	f040 843c 	bne.w	402e2c <_svfprintf_r+0xa80>
  4025b4:	2b00      	cmp	r3, #0
  4025b6:	f040 84d7 	bne.w	402f68 <_svfprintf_r+0xbbc>
  4025ba:	f01b 0301 	ands.w	r3, fp, #1
  4025be:	930e      	str	r3, [sp, #56]	; 0x38
  4025c0:	f000 8604 	beq.w	4031cc <_svfprintf_r+0xe20>
  4025c4:	ae42      	add	r6, sp, #264	; 0x108
  4025c6:	2330      	movs	r3, #48	; 0x30
  4025c8:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4025cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4025ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4025d0:	4293      	cmp	r3, r2
  4025d2:	bfb8      	it	lt
  4025d4:	4613      	movlt	r3, r2
  4025d6:	9308      	str	r3, [sp, #32]
  4025d8:	2300      	movs	r3, #0
  4025da:	9312      	str	r3, [sp, #72]	; 0x48
  4025dc:	b117      	cbz	r7, 4025e4 <_svfprintf_r+0x238>
  4025de:	9b08      	ldr	r3, [sp, #32]
  4025e0:	3301      	adds	r3, #1
  4025e2:	9308      	str	r3, [sp, #32]
  4025e4:	9b07      	ldr	r3, [sp, #28]
  4025e6:	f013 0302 	ands.w	r3, r3, #2
  4025ea:	9310      	str	r3, [sp, #64]	; 0x40
  4025ec:	d002      	beq.n	4025f4 <_svfprintf_r+0x248>
  4025ee:	9b08      	ldr	r3, [sp, #32]
  4025f0:	3302      	adds	r3, #2
  4025f2:	9308      	str	r3, [sp, #32]
  4025f4:	9b07      	ldr	r3, [sp, #28]
  4025f6:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4025fa:	f040 830e 	bne.w	402c1a <_svfprintf_r+0x86e>
  4025fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402600:	9a08      	ldr	r2, [sp, #32]
  402602:	eba3 0b02 	sub.w	fp, r3, r2
  402606:	f1bb 0f00 	cmp.w	fp, #0
  40260a:	f340 8306 	ble.w	402c1a <_svfprintf_r+0x86e>
  40260e:	f1bb 0f10 	cmp.w	fp, #16
  402612:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402614:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402616:	dd29      	ble.n	40266c <_svfprintf_r+0x2c0>
  402618:	4643      	mov	r3, r8
  40261a:	4621      	mov	r1, r4
  40261c:	46a8      	mov	r8, r5
  40261e:	2710      	movs	r7, #16
  402620:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402622:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402624:	e006      	b.n	402634 <_svfprintf_r+0x288>
  402626:	f1ab 0b10 	sub.w	fp, fp, #16
  40262a:	f1bb 0f10 	cmp.w	fp, #16
  40262e:	f103 0308 	add.w	r3, r3, #8
  402632:	dd18      	ble.n	402666 <_svfprintf_r+0x2ba>
  402634:	3201      	adds	r2, #1
  402636:	48b7      	ldr	r0, [pc, #732]	; (402914 <_svfprintf_r+0x568>)
  402638:	9226      	str	r2, [sp, #152]	; 0x98
  40263a:	3110      	adds	r1, #16
  40263c:	2a07      	cmp	r2, #7
  40263e:	9127      	str	r1, [sp, #156]	; 0x9c
  402640:	e883 0081 	stmia.w	r3, {r0, r7}
  402644:	ddef      	ble.n	402626 <_svfprintf_r+0x27a>
  402646:	aa25      	add	r2, sp, #148	; 0x94
  402648:	4629      	mov	r1, r5
  40264a:	4620      	mov	r0, r4
  40264c:	f003 f806 	bl	40565c <__ssprint_r>
  402650:	2800      	cmp	r0, #0
  402652:	f47f af7d 	bne.w	402550 <_svfprintf_r+0x1a4>
  402656:	f1ab 0b10 	sub.w	fp, fp, #16
  40265a:	f1bb 0f10 	cmp.w	fp, #16
  40265e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402660:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402662:	464b      	mov	r3, r9
  402664:	dce6      	bgt.n	402634 <_svfprintf_r+0x288>
  402666:	4645      	mov	r5, r8
  402668:	460c      	mov	r4, r1
  40266a:	4698      	mov	r8, r3
  40266c:	3201      	adds	r2, #1
  40266e:	4ba9      	ldr	r3, [pc, #676]	; (402914 <_svfprintf_r+0x568>)
  402670:	9226      	str	r2, [sp, #152]	; 0x98
  402672:	445c      	add	r4, fp
  402674:	2a07      	cmp	r2, #7
  402676:	9427      	str	r4, [sp, #156]	; 0x9c
  402678:	e888 0808 	stmia.w	r8, {r3, fp}
  40267c:	f300 8498 	bgt.w	402fb0 <_svfprintf_r+0xc04>
  402680:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402684:	f108 0808 	add.w	r8, r8, #8
  402688:	b177      	cbz	r7, 4026a8 <_svfprintf_r+0x2fc>
  40268a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40268c:	3301      	adds	r3, #1
  40268e:	3401      	adds	r4, #1
  402690:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402694:	2201      	movs	r2, #1
  402696:	2b07      	cmp	r3, #7
  402698:	9427      	str	r4, [sp, #156]	; 0x9c
  40269a:	9326      	str	r3, [sp, #152]	; 0x98
  40269c:	e888 0006 	stmia.w	r8, {r1, r2}
  4026a0:	f300 83db 	bgt.w	402e5a <_svfprintf_r+0xaae>
  4026a4:	f108 0808 	add.w	r8, r8, #8
  4026a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4026aa:	b16b      	cbz	r3, 4026c8 <_svfprintf_r+0x31c>
  4026ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026ae:	3301      	adds	r3, #1
  4026b0:	3402      	adds	r4, #2
  4026b2:	a91e      	add	r1, sp, #120	; 0x78
  4026b4:	2202      	movs	r2, #2
  4026b6:	2b07      	cmp	r3, #7
  4026b8:	9427      	str	r4, [sp, #156]	; 0x9c
  4026ba:	9326      	str	r3, [sp, #152]	; 0x98
  4026bc:	e888 0006 	stmia.w	r8, {r1, r2}
  4026c0:	f300 83d6 	bgt.w	402e70 <_svfprintf_r+0xac4>
  4026c4:	f108 0808 	add.w	r8, r8, #8
  4026c8:	2d80      	cmp	r5, #128	; 0x80
  4026ca:	f000 8315 	beq.w	402cf8 <_svfprintf_r+0x94c>
  4026ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4026d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4026d2:	1a9f      	subs	r7, r3, r2
  4026d4:	2f00      	cmp	r7, #0
  4026d6:	dd36      	ble.n	402746 <_svfprintf_r+0x39a>
  4026d8:	2f10      	cmp	r7, #16
  4026da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026dc:	4d8e      	ldr	r5, [pc, #568]	; (402918 <_svfprintf_r+0x56c>)
  4026de:	dd27      	ble.n	402730 <_svfprintf_r+0x384>
  4026e0:	4642      	mov	r2, r8
  4026e2:	4621      	mov	r1, r4
  4026e4:	46b0      	mov	r8, r6
  4026e6:	f04f 0b10 	mov.w	fp, #16
  4026ea:	462e      	mov	r6, r5
  4026ec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4026ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4026f0:	e004      	b.n	4026fc <_svfprintf_r+0x350>
  4026f2:	3f10      	subs	r7, #16
  4026f4:	2f10      	cmp	r7, #16
  4026f6:	f102 0208 	add.w	r2, r2, #8
  4026fa:	dd15      	ble.n	402728 <_svfprintf_r+0x37c>
  4026fc:	3301      	adds	r3, #1
  4026fe:	3110      	adds	r1, #16
  402700:	2b07      	cmp	r3, #7
  402702:	9127      	str	r1, [sp, #156]	; 0x9c
  402704:	9326      	str	r3, [sp, #152]	; 0x98
  402706:	e882 0840 	stmia.w	r2, {r6, fp}
  40270a:	ddf2      	ble.n	4026f2 <_svfprintf_r+0x346>
  40270c:	aa25      	add	r2, sp, #148	; 0x94
  40270e:	4629      	mov	r1, r5
  402710:	4620      	mov	r0, r4
  402712:	f002 ffa3 	bl	40565c <__ssprint_r>
  402716:	2800      	cmp	r0, #0
  402718:	f47f af1a 	bne.w	402550 <_svfprintf_r+0x1a4>
  40271c:	3f10      	subs	r7, #16
  40271e:	2f10      	cmp	r7, #16
  402720:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402722:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402724:	464a      	mov	r2, r9
  402726:	dce9      	bgt.n	4026fc <_svfprintf_r+0x350>
  402728:	4635      	mov	r5, r6
  40272a:	460c      	mov	r4, r1
  40272c:	4646      	mov	r6, r8
  40272e:	4690      	mov	r8, r2
  402730:	3301      	adds	r3, #1
  402732:	443c      	add	r4, r7
  402734:	2b07      	cmp	r3, #7
  402736:	9427      	str	r4, [sp, #156]	; 0x9c
  402738:	9326      	str	r3, [sp, #152]	; 0x98
  40273a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40273e:	f300 8381 	bgt.w	402e44 <_svfprintf_r+0xa98>
  402742:	f108 0808 	add.w	r8, r8, #8
  402746:	9b07      	ldr	r3, [sp, #28]
  402748:	05df      	lsls	r7, r3, #23
  40274a:	f100 8268 	bmi.w	402c1e <_svfprintf_r+0x872>
  40274e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402750:	990e      	ldr	r1, [sp, #56]	; 0x38
  402752:	f8c8 6000 	str.w	r6, [r8]
  402756:	3301      	adds	r3, #1
  402758:	440c      	add	r4, r1
  40275a:	2b07      	cmp	r3, #7
  40275c:	9427      	str	r4, [sp, #156]	; 0x9c
  40275e:	f8c8 1004 	str.w	r1, [r8, #4]
  402762:	9326      	str	r3, [sp, #152]	; 0x98
  402764:	f300 834d 	bgt.w	402e02 <_svfprintf_r+0xa56>
  402768:	f108 0808 	add.w	r8, r8, #8
  40276c:	9b07      	ldr	r3, [sp, #28]
  40276e:	075b      	lsls	r3, r3, #29
  402770:	d53a      	bpl.n	4027e8 <_svfprintf_r+0x43c>
  402772:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402774:	9a08      	ldr	r2, [sp, #32]
  402776:	1a9d      	subs	r5, r3, r2
  402778:	2d00      	cmp	r5, #0
  40277a:	dd35      	ble.n	4027e8 <_svfprintf_r+0x43c>
  40277c:	2d10      	cmp	r5, #16
  40277e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402780:	dd20      	ble.n	4027c4 <_svfprintf_r+0x418>
  402782:	2610      	movs	r6, #16
  402784:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402786:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40278a:	e004      	b.n	402796 <_svfprintf_r+0x3ea>
  40278c:	3d10      	subs	r5, #16
  40278e:	2d10      	cmp	r5, #16
  402790:	f108 0808 	add.w	r8, r8, #8
  402794:	dd16      	ble.n	4027c4 <_svfprintf_r+0x418>
  402796:	3301      	adds	r3, #1
  402798:	4a5e      	ldr	r2, [pc, #376]	; (402914 <_svfprintf_r+0x568>)
  40279a:	9326      	str	r3, [sp, #152]	; 0x98
  40279c:	3410      	adds	r4, #16
  40279e:	2b07      	cmp	r3, #7
  4027a0:	9427      	str	r4, [sp, #156]	; 0x9c
  4027a2:	e888 0044 	stmia.w	r8, {r2, r6}
  4027a6:	ddf1      	ble.n	40278c <_svfprintf_r+0x3e0>
  4027a8:	aa25      	add	r2, sp, #148	; 0x94
  4027aa:	4659      	mov	r1, fp
  4027ac:	4638      	mov	r0, r7
  4027ae:	f002 ff55 	bl	40565c <__ssprint_r>
  4027b2:	2800      	cmp	r0, #0
  4027b4:	f47f aecc 	bne.w	402550 <_svfprintf_r+0x1a4>
  4027b8:	3d10      	subs	r5, #16
  4027ba:	2d10      	cmp	r5, #16
  4027bc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027c0:	46c8      	mov	r8, r9
  4027c2:	dce8      	bgt.n	402796 <_svfprintf_r+0x3ea>
  4027c4:	3301      	adds	r3, #1
  4027c6:	4a53      	ldr	r2, [pc, #332]	; (402914 <_svfprintf_r+0x568>)
  4027c8:	9326      	str	r3, [sp, #152]	; 0x98
  4027ca:	442c      	add	r4, r5
  4027cc:	2b07      	cmp	r3, #7
  4027ce:	9427      	str	r4, [sp, #156]	; 0x9c
  4027d0:	e888 0024 	stmia.w	r8, {r2, r5}
  4027d4:	dd08      	ble.n	4027e8 <_svfprintf_r+0x43c>
  4027d6:	aa25      	add	r2, sp, #148	; 0x94
  4027d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027da:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027dc:	f002 ff3e 	bl	40565c <__ssprint_r>
  4027e0:	2800      	cmp	r0, #0
  4027e2:	f47f aeb5 	bne.w	402550 <_svfprintf_r+0x1a4>
  4027e6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4027ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4027ec:	9908      	ldr	r1, [sp, #32]
  4027ee:	428a      	cmp	r2, r1
  4027f0:	bfac      	ite	ge
  4027f2:	189b      	addge	r3, r3, r2
  4027f4:	185b      	addlt	r3, r3, r1
  4027f6:	9309      	str	r3, [sp, #36]	; 0x24
  4027f8:	2c00      	cmp	r4, #0
  4027fa:	f040 830d 	bne.w	402e18 <_svfprintf_r+0xa6c>
  4027fe:	2300      	movs	r3, #0
  402800:	9326      	str	r3, [sp, #152]	; 0x98
  402802:	46c8      	mov	r8, r9
  402804:	e5f9      	b.n	4023fa <_svfprintf_r+0x4e>
  402806:	9311      	str	r3, [sp, #68]	; 0x44
  402808:	f01b 0320 	ands.w	r3, fp, #32
  40280c:	f040 81e3 	bne.w	402bd6 <_svfprintf_r+0x82a>
  402810:	f01b 0210 	ands.w	r2, fp, #16
  402814:	f040 842e 	bne.w	403074 <_svfprintf_r+0xcc8>
  402818:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  40281c:	f000 842a 	beq.w	403074 <_svfprintf_r+0xcc8>
  402820:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402822:	4613      	mov	r3, r2
  402824:	460a      	mov	r2, r1
  402826:	3204      	adds	r2, #4
  402828:	880c      	ldrh	r4, [r1, #0]
  40282a:	920f      	str	r2, [sp, #60]	; 0x3c
  40282c:	2500      	movs	r5, #0
  40282e:	e6b0      	b.n	402592 <_svfprintf_r+0x1e6>
  402830:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402832:	9311      	str	r3, [sp, #68]	; 0x44
  402834:	6816      	ldr	r6, [r2, #0]
  402836:	2400      	movs	r4, #0
  402838:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  40283c:	1d15      	adds	r5, r2, #4
  40283e:	2e00      	cmp	r6, #0
  402840:	f000 86a7 	beq.w	403592 <_svfprintf_r+0x11e6>
  402844:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402846:	1c53      	adds	r3, r2, #1
  402848:	f000 8609 	beq.w	40345e <_svfprintf_r+0x10b2>
  40284c:	4621      	mov	r1, r4
  40284e:	4630      	mov	r0, r6
  402850:	f002 fa86 	bl	404d60 <memchr>
  402854:	2800      	cmp	r0, #0
  402856:	f000 86e1 	beq.w	40361c <_svfprintf_r+0x1270>
  40285a:	1b83      	subs	r3, r0, r6
  40285c:	930e      	str	r3, [sp, #56]	; 0x38
  40285e:	940a      	str	r4, [sp, #40]	; 0x28
  402860:	950f      	str	r5, [sp, #60]	; 0x3c
  402862:	f8cd b01c 	str.w	fp, [sp, #28]
  402866:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40286a:	9308      	str	r3, [sp, #32]
  40286c:	9412      	str	r4, [sp, #72]	; 0x48
  40286e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402872:	e6b3      	b.n	4025dc <_svfprintf_r+0x230>
  402874:	f89a 3000 	ldrb.w	r3, [sl]
  402878:	2201      	movs	r2, #1
  40287a:	212b      	movs	r1, #43	; 0x2b
  40287c:	e5ee      	b.n	40245c <_svfprintf_r+0xb0>
  40287e:	f04b 0b20 	orr.w	fp, fp, #32
  402882:	f89a 3000 	ldrb.w	r3, [sl]
  402886:	e5e9      	b.n	40245c <_svfprintf_r+0xb0>
  402888:	9311      	str	r3, [sp, #68]	; 0x44
  40288a:	2a00      	cmp	r2, #0
  40288c:	f040 8795 	bne.w	4037ba <_svfprintf_r+0x140e>
  402890:	4b22      	ldr	r3, [pc, #136]	; (40291c <_svfprintf_r+0x570>)
  402892:	9318      	str	r3, [sp, #96]	; 0x60
  402894:	f01b 0f20 	tst.w	fp, #32
  402898:	f040 8111 	bne.w	402abe <_svfprintf_r+0x712>
  40289c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40289e:	f01b 0f10 	tst.w	fp, #16
  4028a2:	4613      	mov	r3, r2
  4028a4:	f040 83e1 	bne.w	40306a <_svfprintf_r+0xcbe>
  4028a8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4028ac:	f000 83dd 	beq.w	40306a <_svfprintf_r+0xcbe>
  4028b0:	3304      	adds	r3, #4
  4028b2:	8814      	ldrh	r4, [r2, #0]
  4028b4:	930f      	str	r3, [sp, #60]	; 0x3c
  4028b6:	2500      	movs	r5, #0
  4028b8:	f01b 0f01 	tst.w	fp, #1
  4028bc:	f000 810c 	beq.w	402ad8 <_svfprintf_r+0x72c>
  4028c0:	ea54 0305 	orrs.w	r3, r4, r5
  4028c4:	f000 8108 	beq.w	402ad8 <_svfprintf_r+0x72c>
  4028c8:	2330      	movs	r3, #48	; 0x30
  4028ca:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4028ce:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4028d2:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4028d6:	f04b 0b02 	orr.w	fp, fp, #2
  4028da:	2302      	movs	r3, #2
  4028dc:	e659      	b.n	402592 <_svfprintf_r+0x1e6>
  4028de:	f89a 3000 	ldrb.w	r3, [sl]
  4028e2:	2900      	cmp	r1, #0
  4028e4:	f47f adba 	bne.w	40245c <_svfprintf_r+0xb0>
  4028e8:	2201      	movs	r2, #1
  4028ea:	2120      	movs	r1, #32
  4028ec:	e5b6      	b.n	40245c <_svfprintf_r+0xb0>
  4028ee:	f04b 0b01 	orr.w	fp, fp, #1
  4028f2:	f89a 3000 	ldrb.w	r3, [sl]
  4028f6:	e5b1      	b.n	40245c <_svfprintf_r+0xb0>
  4028f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4028fa:	6823      	ldr	r3, [r4, #0]
  4028fc:	930d      	str	r3, [sp, #52]	; 0x34
  4028fe:	4618      	mov	r0, r3
  402900:	2800      	cmp	r0, #0
  402902:	4623      	mov	r3, r4
  402904:	f103 0304 	add.w	r3, r3, #4
  402908:	f6ff ae0a 	blt.w	402520 <_svfprintf_r+0x174>
  40290c:	930f      	str	r3, [sp, #60]	; 0x3c
  40290e:	f89a 3000 	ldrb.w	r3, [sl]
  402912:	e5a3      	b.n	40245c <_svfprintf_r+0xb0>
  402914:	00406e88 	.word	0x00406e88
  402918:	00406e98 	.word	0x00406e98
  40291c:	00406e68 	.word	0x00406e68
  402920:	f04b 0b10 	orr.w	fp, fp, #16
  402924:	f01b 0f20 	tst.w	fp, #32
  402928:	9311      	str	r3, [sp, #68]	; 0x44
  40292a:	f43f ae23 	beq.w	402574 <_svfprintf_r+0x1c8>
  40292e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402930:	3507      	adds	r5, #7
  402932:	f025 0307 	bic.w	r3, r5, #7
  402936:	f103 0208 	add.w	r2, r3, #8
  40293a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40293e:	920f      	str	r2, [sp, #60]	; 0x3c
  402940:	2301      	movs	r3, #1
  402942:	e626      	b.n	402592 <_svfprintf_r+0x1e6>
  402944:	f89a 3000 	ldrb.w	r3, [sl]
  402948:	2b2a      	cmp	r3, #42	; 0x2a
  40294a:	f10a 0401 	add.w	r4, sl, #1
  40294e:	f000 8727 	beq.w	4037a0 <_svfprintf_r+0x13f4>
  402952:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402956:	2809      	cmp	r0, #9
  402958:	46a2      	mov	sl, r4
  40295a:	f200 86ad 	bhi.w	4036b8 <_svfprintf_r+0x130c>
  40295e:	2300      	movs	r3, #0
  402960:	461c      	mov	r4, r3
  402962:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402966:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40296a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40296e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402972:	2809      	cmp	r0, #9
  402974:	d9f5      	bls.n	402962 <_svfprintf_r+0x5b6>
  402976:	940a      	str	r4, [sp, #40]	; 0x28
  402978:	e572      	b.n	402460 <_svfprintf_r+0xb4>
  40297a:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40297e:	f89a 3000 	ldrb.w	r3, [sl]
  402982:	e56b      	b.n	40245c <_svfprintf_r+0xb0>
  402984:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402988:	f89a 3000 	ldrb.w	r3, [sl]
  40298c:	e566      	b.n	40245c <_svfprintf_r+0xb0>
  40298e:	f89a 3000 	ldrb.w	r3, [sl]
  402992:	2b6c      	cmp	r3, #108	; 0x6c
  402994:	bf03      	ittte	eq
  402996:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40299a:	f04b 0b20 	orreq.w	fp, fp, #32
  40299e:	f10a 0a01 	addeq.w	sl, sl, #1
  4029a2:	f04b 0b10 	orrne.w	fp, fp, #16
  4029a6:	e559      	b.n	40245c <_svfprintf_r+0xb0>
  4029a8:	2a00      	cmp	r2, #0
  4029aa:	f040 8711 	bne.w	4037d0 <_svfprintf_r+0x1424>
  4029ae:	f01b 0f20 	tst.w	fp, #32
  4029b2:	f040 84f9 	bne.w	4033a8 <_svfprintf_r+0xffc>
  4029b6:	f01b 0f10 	tst.w	fp, #16
  4029ba:	f040 84ac 	bne.w	403316 <_svfprintf_r+0xf6a>
  4029be:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4029c2:	f000 84a8 	beq.w	403316 <_svfprintf_r+0xf6a>
  4029c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4029c8:	6813      	ldr	r3, [r2, #0]
  4029ca:	3204      	adds	r2, #4
  4029cc:	920f      	str	r2, [sp, #60]	; 0x3c
  4029ce:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4029d2:	801a      	strh	r2, [r3, #0]
  4029d4:	e511      	b.n	4023fa <_svfprintf_r+0x4e>
  4029d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4029d8:	4bb3      	ldr	r3, [pc, #716]	; (402ca8 <_svfprintf_r+0x8fc>)
  4029da:	680c      	ldr	r4, [r1, #0]
  4029dc:	9318      	str	r3, [sp, #96]	; 0x60
  4029de:	2230      	movs	r2, #48	; 0x30
  4029e0:	2378      	movs	r3, #120	; 0x78
  4029e2:	3104      	adds	r1, #4
  4029e4:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4029e8:	9311      	str	r3, [sp, #68]	; 0x44
  4029ea:	f04b 0b02 	orr.w	fp, fp, #2
  4029ee:	910f      	str	r1, [sp, #60]	; 0x3c
  4029f0:	2500      	movs	r5, #0
  4029f2:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4029f6:	2302      	movs	r3, #2
  4029f8:	e5cb      	b.n	402592 <_svfprintf_r+0x1e6>
  4029fa:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4029fc:	9311      	str	r3, [sp, #68]	; 0x44
  4029fe:	680a      	ldr	r2, [r1, #0]
  402a00:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402a04:	2300      	movs	r3, #0
  402a06:	460a      	mov	r2, r1
  402a08:	461f      	mov	r7, r3
  402a0a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402a0e:	3204      	adds	r2, #4
  402a10:	2301      	movs	r3, #1
  402a12:	9308      	str	r3, [sp, #32]
  402a14:	f8cd b01c 	str.w	fp, [sp, #28]
  402a18:	970a      	str	r7, [sp, #40]	; 0x28
  402a1a:	9712      	str	r7, [sp, #72]	; 0x48
  402a1c:	920f      	str	r2, [sp, #60]	; 0x3c
  402a1e:	930e      	str	r3, [sp, #56]	; 0x38
  402a20:	ae28      	add	r6, sp, #160	; 0xa0
  402a22:	e5df      	b.n	4025e4 <_svfprintf_r+0x238>
  402a24:	9311      	str	r3, [sp, #68]	; 0x44
  402a26:	2a00      	cmp	r2, #0
  402a28:	f040 86ea 	bne.w	403800 <_svfprintf_r+0x1454>
  402a2c:	f01b 0f20 	tst.w	fp, #32
  402a30:	d15d      	bne.n	402aee <_svfprintf_r+0x742>
  402a32:	f01b 0f10 	tst.w	fp, #16
  402a36:	f040 8308 	bne.w	40304a <_svfprintf_r+0xc9e>
  402a3a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402a3e:	f000 8304 	beq.w	40304a <_svfprintf_r+0xc9e>
  402a42:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a44:	f9b1 4000 	ldrsh.w	r4, [r1]
  402a48:	3104      	adds	r1, #4
  402a4a:	17e5      	asrs	r5, r4, #31
  402a4c:	4622      	mov	r2, r4
  402a4e:	462b      	mov	r3, r5
  402a50:	910f      	str	r1, [sp, #60]	; 0x3c
  402a52:	2a00      	cmp	r2, #0
  402a54:	f173 0300 	sbcs.w	r3, r3, #0
  402a58:	db58      	blt.n	402b0c <_svfprintf_r+0x760>
  402a5a:	990a      	ldr	r1, [sp, #40]	; 0x28
  402a5c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a60:	1c4a      	adds	r2, r1, #1
  402a62:	f04f 0301 	mov.w	r3, #1
  402a66:	f47f ad9b 	bne.w	4025a0 <_svfprintf_r+0x1f4>
  402a6a:	ea54 0205 	orrs.w	r2, r4, r5
  402a6e:	f000 81df 	beq.w	402e30 <_svfprintf_r+0xa84>
  402a72:	f8cd b01c 	str.w	fp, [sp, #28]
  402a76:	2b01      	cmp	r3, #1
  402a78:	f000 827b 	beq.w	402f72 <_svfprintf_r+0xbc6>
  402a7c:	2b02      	cmp	r3, #2
  402a7e:	f040 8206 	bne.w	402e8e <_svfprintf_r+0xae2>
  402a82:	9818      	ldr	r0, [sp, #96]	; 0x60
  402a84:	464e      	mov	r6, r9
  402a86:	0923      	lsrs	r3, r4, #4
  402a88:	f004 010f 	and.w	r1, r4, #15
  402a8c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402a90:	092a      	lsrs	r2, r5, #4
  402a92:	461c      	mov	r4, r3
  402a94:	4615      	mov	r5, r2
  402a96:	5c43      	ldrb	r3, [r0, r1]
  402a98:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402a9c:	ea54 0305 	orrs.w	r3, r4, r5
  402aa0:	d1f1      	bne.n	402a86 <_svfprintf_r+0x6da>
  402aa2:	eba9 0306 	sub.w	r3, r9, r6
  402aa6:	930e      	str	r3, [sp, #56]	; 0x38
  402aa8:	e590      	b.n	4025cc <_svfprintf_r+0x220>
  402aaa:	9311      	str	r3, [sp, #68]	; 0x44
  402aac:	2a00      	cmp	r2, #0
  402aae:	f040 86a3 	bne.w	4037f8 <_svfprintf_r+0x144c>
  402ab2:	4b7e      	ldr	r3, [pc, #504]	; (402cac <_svfprintf_r+0x900>)
  402ab4:	9318      	str	r3, [sp, #96]	; 0x60
  402ab6:	f01b 0f20 	tst.w	fp, #32
  402aba:	f43f aeef 	beq.w	40289c <_svfprintf_r+0x4f0>
  402abe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402ac0:	3507      	adds	r5, #7
  402ac2:	f025 0307 	bic.w	r3, r5, #7
  402ac6:	f103 0208 	add.w	r2, r3, #8
  402aca:	f01b 0f01 	tst.w	fp, #1
  402ace:	920f      	str	r2, [sp, #60]	; 0x3c
  402ad0:	e9d3 4500 	ldrd	r4, r5, [r3]
  402ad4:	f47f aef4 	bne.w	4028c0 <_svfprintf_r+0x514>
  402ad8:	2302      	movs	r3, #2
  402ada:	e55a      	b.n	402592 <_svfprintf_r+0x1e6>
  402adc:	9311      	str	r3, [sp, #68]	; 0x44
  402ade:	2a00      	cmp	r2, #0
  402ae0:	f040 8686 	bne.w	4037f0 <_svfprintf_r+0x1444>
  402ae4:	f04b 0b10 	orr.w	fp, fp, #16
  402ae8:	f01b 0f20 	tst.w	fp, #32
  402aec:	d0a1      	beq.n	402a32 <_svfprintf_r+0x686>
  402aee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402af0:	3507      	adds	r5, #7
  402af2:	f025 0507 	bic.w	r5, r5, #7
  402af6:	e9d5 2300 	ldrd	r2, r3, [r5]
  402afa:	2a00      	cmp	r2, #0
  402afc:	f105 0108 	add.w	r1, r5, #8
  402b00:	461d      	mov	r5, r3
  402b02:	f173 0300 	sbcs.w	r3, r3, #0
  402b06:	910f      	str	r1, [sp, #60]	; 0x3c
  402b08:	4614      	mov	r4, r2
  402b0a:	daa6      	bge.n	402a5a <_svfprintf_r+0x6ae>
  402b0c:	272d      	movs	r7, #45	; 0x2d
  402b0e:	4264      	negs	r4, r4
  402b10:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402b14:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402b18:	2301      	movs	r3, #1
  402b1a:	e53d      	b.n	402598 <_svfprintf_r+0x1ec>
  402b1c:	9311      	str	r3, [sp, #68]	; 0x44
  402b1e:	2a00      	cmp	r2, #0
  402b20:	f040 8662 	bne.w	4037e8 <_svfprintf_r+0x143c>
  402b24:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b26:	3507      	adds	r5, #7
  402b28:	f025 0307 	bic.w	r3, r5, #7
  402b2c:	f103 0208 	add.w	r2, r3, #8
  402b30:	920f      	str	r2, [sp, #60]	; 0x3c
  402b32:	681a      	ldr	r2, [r3, #0]
  402b34:	9215      	str	r2, [sp, #84]	; 0x54
  402b36:	685b      	ldr	r3, [r3, #4]
  402b38:	9314      	str	r3, [sp, #80]	; 0x50
  402b3a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402b3c:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402b3e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402b42:	4628      	mov	r0, r5
  402b44:	4621      	mov	r1, r4
  402b46:	f04f 32ff 	mov.w	r2, #4294967295
  402b4a:	4b59      	ldr	r3, [pc, #356]	; (402cb0 <_svfprintf_r+0x904>)
  402b4c:	f003 fa82 	bl	406054 <__aeabi_dcmpun>
  402b50:	2800      	cmp	r0, #0
  402b52:	f040 834a 	bne.w	4031ea <_svfprintf_r+0xe3e>
  402b56:	4628      	mov	r0, r5
  402b58:	4621      	mov	r1, r4
  402b5a:	f04f 32ff 	mov.w	r2, #4294967295
  402b5e:	4b54      	ldr	r3, [pc, #336]	; (402cb0 <_svfprintf_r+0x904>)
  402b60:	f003 fa5a 	bl	406018 <__aeabi_dcmple>
  402b64:	2800      	cmp	r0, #0
  402b66:	f040 8340 	bne.w	4031ea <_svfprintf_r+0xe3e>
  402b6a:	a815      	add	r0, sp, #84	; 0x54
  402b6c:	c80d      	ldmia	r0, {r0, r2, r3}
  402b6e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402b70:	f003 fa48 	bl	406004 <__aeabi_dcmplt>
  402b74:	2800      	cmp	r0, #0
  402b76:	f040 8530 	bne.w	4035da <_svfprintf_r+0x122e>
  402b7a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402b7e:	4e4d      	ldr	r6, [pc, #308]	; (402cb4 <_svfprintf_r+0x908>)
  402b80:	4b4d      	ldr	r3, [pc, #308]	; (402cb8 <_svfprintf_r+0x90c>)
  402b82:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402b86:	9007      	str	r0, [sp, #28]
  402b88:	9811      	ldr	r0, [sp, #68]	; 0x44
  402b8a:	2203      	movs	r2, #3
  402b8c:	2100      	movs	r1, #0
  402b8e:	9208      	str	r2, [sp, #32]
  402b90:	910a      	str	r1, [sp, #40]	; 0x28
  402b92:	2847      	cmp	r0, #71	; 0x47
  402b94:	bfd8      	it	le
  402b96:	461e      	movle	r6, r3
  402b98:	920e      	str	r2, [sp, #56]	; 0x38
  402b9a:	9112      	str	r1, [sp, #72]	; 0x48
  402b9c:	e51e      	b.n	4025dc <_svfprintf_r+0x230>
  402b9e:	f04b 0b08 	orr.w	fp, fp, #8
  402ba2:	f89a 3000 	ldrb.w	r3, [sl]
  402ba6:	e459      	b.n	40245c <_svfprintf_r+0xb0>
  402ba8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402bac:	2300      	movs	r3, #0
  402bae:	461c      	mov	r4, r3
  402bb0:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402bb4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402bb8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402bbc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402bc0:	2809      	cmp	r0, #9
  402bc2:	d9f5      	bls.n	402bb0 <_svfprintf_r+0x804>
  402bc4:	940d      	str	r4, [sp, #52]	; 0x34
  402bc6:	e44b      	b.n	402460 <_svfprintf_r+0xb4>
  402bc8:	f04b 0b10 	orr.w	fp, fp, #16
  402bcc:	9311      	str	r3, [sp, #68]	; 0x44
  402bce:	f01b 0320 	ands.w	r3, fp, #32
  402bd2:	f43f ae1d 	beq.w	402810 <_svfprintf_r+0x464>
  402bd6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402bd8:	3507      	adds	r5, #7
  402bda:	f025 0307 	bic.w	r3, r5, #7
  402bde:	f103 0208 	add.w	r2, r3, #8
  402be2:	e9d3 4500 	ldrd	r4, r5, [r3]
  402be6:	920f      	str	r2, [sp, #60]	; 0x3c
  402be8:	2300      	movs	r3, #0
  402bea:	e4d2      	b.n	402592 <_svfprintf_r+0x1e6>
  402bec:	9311      	str	r3, [sp, #68]	; 0x44
  402bee:	2a00      	cmp	r2, #0
  402bf0:	f040 85e7 	bne.w	4037c2 <_svfprintf_r+0x1416>
  402bf4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402bf6:	2a00      	cmp	r2, #0
  402bf8:	f43f aca3 	beq.w	402542 <_svfprintf_r+0x196>
  402bfc:	2300      	movs	r3, #0
  402bfe:	2101      	movs	r1, #1
  402c00:	461f      	mov	r7, r3
  402c02:	9108      	str	r1, [sp, #32]
  402c04:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402c08:	f8cd b01c 	str.w	fp, [sp, #28]
  402c0c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402c10:	930a      	str	r3, [sp, #40]	; 0x28
  402c12:	9312      	str	r3, [sp, #72]	; 0x48
  402c14:	910e      	str	r1, [sp, #56]	; 0x38
  402c16:	ae28      	add	r6, sp, #160	; 0xa0
  402c18:	e4e4      	b.n	4025e4 <_svfprintf_r+0x238>
  402c1a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c1c:	e534      	b.n	402688 <_svfprintf_r+0x2dc>
  402c1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c20:	2b65      	cmp	r3, #101	; 0x65
  402c22:	f340 80a7 	ble.w	402d74 <_svfprintf_r+0x9c8>
  402c26:	a815      	add	r0, sp, #84	; 0x54
  402c28:	c80d      	ldmia	r0, {r0, r2, r3}
  402c2a:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c2c:	f003 f9e0 	bl	405ff0 <__aeabi_dcmpeq>
  402c30:	2800      	cmp	r0, #0
  402c32:	f000 8150 	beq.w	402ed6 <_svfprintf_r+0xb2a>
  402c36:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c38:	4a20      	ldr	r2, [pc, #128]	; (402cbc <_svfprintf_r+0x910>)
  402c3a:	f8c8 2000 	str.w	r2, [r8]
  402c3e:	3301      	adds	r3, #1
  402c40:	3401      	adds	r4, #1
  402c42:	2201      	movs	r2, #1
  402c44:	2b07      	cmp	r3, #7
  402c46:	9427      	str	r4, [sp, #156]	; 0x9c
  402c48:	9326      	str	r3, [sp, #152]	; 0x98
  402c4a:	f8c8 2004 	str.w	r2, [r8, #4]
  402c4e:	f300 836a 	bgt.w	403326 <_svfprintf_r+0xf7a>
  402c52:	f108 0808 	add.w	r8, r8, #8
  402c56:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c58:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402c5a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c5c:	4293      	cmp	r3, r2
  402c5e:	db03      	blt.n	402c68 <_svfprintf_r+0x8bc>
  402c60:	9b07      	ldr	r3, [sp, #28]
  402c62:	07dd      	lsls	r5, r3, #31
  402c64:	f57f ad82 	bpl.w	40276c <_svfprintf_r+0x3c0>
  402c68:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c6a:	9919      	ldr	r1, [sp, #100]	; 0x64
  402c6c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402c6e:	f8c8 2000 	str.w	r2, [r8]
  402c72:	3301      	adds	r3, #1
  402c74:	440c      	add	r4, r1
  402c76:	2b07      	cmp	r3, #7
  402c78:	f8c8 1004 	str.w	r1, [r8, #4]
  402c7c:	9427      	str	r4, [sp, #156]	; 0x9c
  402c7e:	9326      	str	r3, [sp, #152]	; 0x98
  402c80:	f300 839e 	bgt.w	4033c0 <_svfprintf_r+0x1014>
  402c84:	f108 0808 	add.w	r8, r8, #8
  402c88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c8a:	1e5e      	subs	r6, r3, #1
  402c8c:	2e00      	cmp	r6, #0
  402c8e:	f77f ad6d 	ble.w	40276c <_svfprintf_r+0x3c0>
  402c92:	2e10      	cmp	r6, #16
  402c94:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c96:	4d0a      	ldr	r5, [pc, #40]	; (402cc0 <_svfprintf_r+0x914>)
  402c98:	f340 81f5 	ble.w	403086 <_svfprintf_r+0xcda>
  402c9c:	4622      	mov	r2, r4
  402c9e:	2710      	movs	r7, #16
  402ca0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ca4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ca6:	e013      	b.n	402cd0 <_svfprintf_r+0x924>
  402ca8:	00406e68 	.word	0x00406e68
  402cac:	00406e54 	.word	0x00406e54
  402cb0:	7fefffff 	.word	0x7fefffff
  402cb4:	00406e48 	.word	0x00406e48
  402cb8:	00406e44 	.word	0x00406e44
  402cbc:	00406e84 	.word	0x00406e84
  402cc0:	00406e98 	.word	0x00406e98
  402cc4:	f108 0808 	add.w	r8, r8, #8
  402cc8:	3e10      	subs	r6, #16
  402cca:	2e10      	cmp	r6, #16
  402ccc:	f340 81da 	ble.w	403084 <_svfprintf_r+0xcd8>
  402cd0:	3301      	adds	r3, #1
  402cd2:	3210      	adds	r2, #16
  402cd4:	2b07      	cmp	r3, #7
  402cd6:	9227      	str	r2, [sp, #156]	; 0x9c
  402cd8:	9326      	str	r3, [sp, #152]	; 0x98
  402cda:	e888 00a0 	stmia.w	r8, {r5, r7}
  402cde:	ddf1      	ble.n	402cc4 <_svfprintf_r+0x918>
  402ce0:	aa25      	add	r2, sp, #148	; 0x94
  402ce2:	4621      	mov	r1, r4
  402ce4:	4658      	mov	r0, fp
  402ce6:	f002 fcb9 	bl	40565c <__ssprint_r>
  402cea:	2800      	cmp	r0, #0
  402cec:	f47f ac30 	bne.w	402550 <_svfprintf_r+0x1a4>
  402cf0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402cf2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cf4:	46c8      	mov	r8, r9
  402cf6:	e7e7      	b.n	402cc8 <_svfprintf_r+0x91c>
  402cf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402cfa:	9a08      	ldr	r2, [sp, #32]
  402cfc:	1a9f      	subs	r7, r3, r2
  402cfe:	2f00      	cmp	r7, #0
  402d00:	f77f ace5 	ble.w	4026ce <_svfprintf_r+0x322>
  402d04:	2f10      	cmp	r7, #16
  402d06:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d08:	4db6      	ldr	r5, [pc, #728]	; (402fe4 <_svfprintf_r+0xc38>)
  402d0a:	dd27      	ble.n	402d5c <_svfprintf_r+0x9b0>
  402d0c:	4642      	mov	r2, r8
  402d0e:	4621      	mov	r1, r4
  402d10:	46b0      	mov	r8, r6
  402d12:	f04f 0b10 	mov.w	fp, #16
  402d16:	462e      	mov	r6, r5
  402d18:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402d1a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402d1c:	e004      	b.n	402d28 <_svfprintf_r+0x97c>
  402d1e:	3f10      	subs	r7, #16
  402d20:	2f10      	cmp	r7, #16
  402d22:	f102 0208 	add.w	r2, r2, #8
  402d26:	dd15      	ble.n	402d54 <_svfprintf_r+0x9a8>
  402d28:	3301      	adds	r3, #1
  402d2a:	3110      	adds	r1, #16
  402d2c:	2b07      	cmp	r3, #7
  402d2e:	9127      	str	r1, [sp, #156]	; 0x9c
  402d30:	9326      	str	r3, [sp, #152]	; 0x98
  402d32:	e882 0840 	stmia.w	r2, {r6, fp}
  402d36:	ddf2      	ble.n	402d1e <_svfprintf_r+0x972>
  402d38:	aa25      	add	r2, sp, #148	; 0x94
  402d3a:	4629      	mov	r1, r5
  402d3c:	4620      	mov	r0, r4
  402d3e:	f002 fc8d 	bl	40565c <__ssprint_r>
  402d42:	2800      	cmp	r0, #0
  402d44:	f47f ac04 	bne.w	402550 <_svfprintf_r+0x1a4>
  402d48:	3f10      	subs	r7, #16
  402d4a:	2f10      	cmp	r7, #16
  402d4c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402d4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d50:	464a      	mov	r2, r9
  402d52:	dce9      	bgt.n	402d28 <_svfprintf_r+0x97c>
  402d54:	4635      	mov	r5, r6
  402d56:	460c      	mov	r4, r1
  402d58:	4646      	mov	r6, r8
  402d5a:	4690      	mov	r8, r2
  402d5c:	3301      	adds	r3, #1
  402d5e:	443c      	add	r4, r7
  402d60:	2b07      	cmp	r3, #7
  402d62:	9427      	str	r4, [sp, #156]	; 0x9c
  402d64:	9326      	str	r3, [sp, #152]	; 0x98
  402d66:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d6a:	f300 8232 	bgt.w	4031d2 <_svfprintf_r+0xe26>
  402d6e:	f108 0808 	add.w	r8, r8, #8
  402d72:	e4ac      	b.n	4026ce <_svfprintf_r+0x322>
  402d74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d76:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402d78:	2b01      	cmp	r3, #1
  402d7a:	f340 81fe 	ble.w	40317a <_svfprintf_r+0xdce>
  402d7e:	3701      	adds	r7, #1
  402d80:	3401      	adds	r4, #1
  402d82:	2301      	movs	r3, #1
  402d84:	2f07      	cmp	r7, #7
  402d86:	9427      	str	r4, [sp, #156]	; 0x9c
  402d88:	9726      	str	r7, [sp, #152]	; 0x98
  402d8a:	f8c8 6000 	str.w	r6, [r8]
  402d8e:	f8c8 3004 	str.w	r3, [r8, #4]
  402d92:	f300 8203 	bgt.w	40319c <_svfprintf_r+0xdf0>
  402d96:	f108 0808 	add.w	r8, r8, #8
  402d9a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402d9c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402d9e:	f8c8 3000 	str.w	r3, [r8]
  402da2:	3701      	adds	r7, #1
  402da4:	4414      	add	r4, r2
  402da6:	2f07      	cmp	r7, #7
  402da8:	9427      	str	r4, [sp, #156]	; 0x9c
  402daa:	9726      	str	r7, [sp, #152]	; 0x98
  402dac:	f8c8 2004 	str.w	r2, [r8, #4]
  402db0:	f300 8200 	bgt.w	4031b4 <_svfprintf_r+0xe08>
  402db4:	f108 0808 	add.w	r8, r8, #8
  402db8:	a815      	add	r0, sp, #84	; 0x54
  402dba:	c80d      	ldmia	r0, {r0, r2, r3}
  402dbc:	9914      	ldr	r1, [sp, #80]	; 0x50
  402dbe:	f003 f917 	bl	405ff0 <__aeabi_dcmpeq>
  402dc2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402dc4:	2800      	cmp	r0, #0
  402dc6:	f040 8101 	bne.w	402fcc <_svfprintf_r+0xc20>
  402dca:	3b01      	subs	r3, #1
  402dcc:	3701      	adds	r7, #1
  402dce:	3601      	adds	r6, #1
  402dd0:	441c      	add	r4, r3
  402dd2:	2f07      	cmp	r7, #7
  402dd4:	9726      	str	r7, [sp, #152]	; 0x98
  402dd6:	9427      	str	r4, [sp, #156]	; 0x9c
  402dd8:	f8c8 6000 	str.w	r6, [r8]
  402ddc:	f8c8 3004 	str.w	r3, [r8, #4]
  402de0:	f300 8127 	bgt.w	403032 <_svfprintf_r+0xc86>
  402de4:	f108 0808 	add.w	r8, r8, #8
  402de8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402dea:	f8c8 2004 	str.w	r2, [r8, #4]
  402dee:	3701      	adds	r7, #1
  402df0:	4414      	add	r4, r2
  402df2:	ab21      	add	r3, sp, #132	; 0x84
  402df4:	2f07      	cmp	r7, #7
  402df6:	9427      	str	r4, [sp, #156]	; 0x9c
  402df8:	9726      	str	r7, [sp, #152]	; 0x98
  402dfa:	f8c8 3000 	str.w	r3, [r8]
  402dfe:	f77f acb3 	ble.w	402768 <_svfprintf_r+0x3bc>
  402e02:	aa25      	add	r2, sp, #148	; 0x94
  402e04:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e06:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e08:	f002 fc28 	bl	40565c <__ssprint_r>
  402e0c:	2800      	cmp	r0, #0
  402e0e:	f47f ab9f 	bne.w	402550 <_svfprintf_r+0x1a4>
  402e12:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e14:	46c8      	mov	r8, r9
  402e16:	e4a9      	b.n	40276c <_svfprintf_r+0x3c0>
  402e18:	aa25      	add	r2, sp, #148	; 0x94
  402e1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e1c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e1e:	f002 fc1d 	bl	40565c <__ssprint_r>
  402e22:	2800      	cmp	r0, #0
  402e24:	f43f aceb 	beq.w	4027fe <_svfprintf_r+0x452>
  402e28:	f7ff bb92 	b.w	402550 <_svfprintf_r+0x1a4>
  402e2c:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402e30:	2b01      	cmp	r3, #1
  402e32:	f000 8134 	beq.w	40309e <_svfprintf_r+0xcf2>
  402e36:	2b02      	cmp	r3, #2
  402e38:	d125      	bne.n	402e86 <_svfprintf_r+0xada>
  402e3a:	f8cd b01c 	str.w	fp, [sp, #28]
  402e3e:	2400      	movs	r4, #0
  402e40:	2500      	movs	r5, #0
  402e42:	e61e      	b.n	402a82 <_svfprintf_r+0x6d6>
  402e44:	aa25      	add	r2, sp, #148	; 0x94
  402e46:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e48:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e4a:	f002 fc07 	bl	40565c <__ssprint_r>
  402e4e:	2800      	cmp	r0, #0
  402e50:	f47f ab7e 	bne.w	402550 <_svfprintf_r+0x1a4>
  402e54:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e56:	46c8      	mov	r8, r9
  402e58:	e475      	b.n	402746 <_svfprintf_r+0x39a>
  402e5a:	aa25      	add	r2, sp, #148	; 0x94
  402e5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e5e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e60:	f002 fbfc 	bl	40565c <__ssprint_r>
  402e64:	2800      	cmp	r0, #0
  402e66:	f47f ab73 	bne.w	402550 <_svfprintf_r+0x1a4>
  402e6a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e6c:	46c8      	mov	r8, r9
  402e6e:	e41b      	b.n	4026a8 <_svfprintf_r+0x2fc>
  402e70:	aa25      	add	r2, sp, #148	; 0x94
  402e72:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e74:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e76:	f002 fbf1 	bl	40565c <__ssprint_r>
  402e7a:	2800      	cmp	r0, #0
  402e7c:	f47f ab68 	bne.w	402550 <_svfprintf_r+0x1a4>
  402e80:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e82:	46c8      	mov	r8, r9
  402e84:	e420      	b.n	4026c8 <_svfprintf_r+0x31c>
  402e86:	f8cd b01c 	str.w	fp, [sp, #28]
  402e8a:	2400      	movs	r4, #0
  402e8c:	2500      	movs	r5, #0
  402e8e:	4649      	mov	r1, r9
  402e90:	e000      	b.n	402e94 <_svfprintf_r+0xae8>
  402e92:	4631      	mov	r1, r6
  402e94:	08e2      	lsrs	r2, r4, #3
  402e96:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402e9a:	08e8      	lsrs	r0, r5, #3
  402e9c:	f004 0307 	and.w	r3, r4, #7
  402ea0:	4605      	mov	r5, r0
  402ea2:	4614      	mov	r4, r2
  402ea4:	3330      	adds	r3, #48	; 0x30
  402ea6:	ea54 0205 	orrs.w	r2, r4, r5
  402eaa:	f801 3c01 	strb.w	r3, [r1, #-1]
  402eae:	f101 36ff 	add.w	r6, r1, #4294967295
  402eb2:	d1ee      	bne.n	402e92 <_svfprintf_r+0xae6>
  402eb4:	9a07      	ldr	r2, [sp, #28]
  402eb6:	07d2      	lsls	r2, r2, #31
  402eb8:	f57f adf3 	bpl.w	402aa2 <_svfprintf_r+0x6f6>
  402ebc:	2b30      	cmp	r3, #48	; 0x30
  402ebe:	f43f adf0 	beq.w	402aa2 <_svfprintf_r+0x6f6>
  402ec2:	3902      	subs	r1, #2
  402ec4:	2330      	movs	r3, #48	; 0x30
  402ec6:	f806 3c01 	strb.w	r3, [r6, #-1]
  402eca:	eba9 0301 	sub.w	r3, r9, r1
  402ece:	930e      	str	r3, [sp, #56]	; 0x38
  402ed0:	460e      	mov	r6, r1
  402ed2:	f7ff bb7b 	b.w	4025cc <_svfprintf_r+0x220>
  402ed6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402ed8:	2900      	cmp	r1, #0
  402eda:	f340 822e 	ble.w	40333a <_svfprintf_r+0xf8e>
  402ede:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ee0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402ee2:	4293      	cmp	r3, r2
  402ee4:	bfa8      	it	ge
  402ee6:	4613      	movge	r3, r2
  402ee8:	2b00      	cmp	r3, #0
  402eea:	461f      	mov	r7, r3
  402eec:	dd0d      	ble.n	402f0a <_svfprintf_r+0xb5e>
  402eee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ef0:	f8c8 6000 	str.w	r6, [r8]
  402ef4:	3301      	adds	r3, #1
  402ef6:	443c      	add	r4, r7
  402ef8:	2b07      	cmp	r3, #7
  402efa:	9427      	str	r4, [sp, #156]	; 0x9c
  402efc:	f8c8 7004 	str.w	r7, [r8, #4]
  402f00:	9326      	str	r3, [sp, #152]	; 0x98
  402f02:	f300 831f 	bgt.w	403544 <_svfprintf_r+0x1198>
  402f06:	f108 0808 	add.w	r8, r8, #8
  402f0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f0c:	2f00      	cmp	r7, #0
  402f0e:	bfa8      	it	ge
  402f10:	1bdb      	subge	r3, r3, r7
  402f12:	2b00      	cmp	r3, #0
  402f14:	461f      	mov	r7, r3
  402f16:	f340 80d6 	ble.w	4030c6 <_svfprintf_r+0xd1a>
  402f1a:	2f10      	cmp	r7, #16
  402f1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f1e:	4d31      	ldr	r5, [pc, #196]	; (402fe4 <_svfprintf_r+0xc38>)
  402f20:	f340 81ed 	ble.w	4032fe <_svfprintf_r+0xf52>
  402f24:	4642      	mov	r2, r8
  402f26:	4621      	mov	r1, r4
  402f28:	46b0      	mov	r8, r6
  402f2a:	f04f 0b10 	mov.w	fp, #16
  402f2e:	462e      	mov	r6, r5
  402f30:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402f32:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402f34:	e004      	b.n	402f40 <_svfprintf_r+0xb94>
  402f36:	3208      	adds	r2, #8
  402f38:	3f10      	subs	r7, #16
  402f3a:	2f10      	cmp	r7, #16
  402f3c:	f340 81db 	ble.w	4032f6 <_svfprintf_r+0xf4a>
  402f40:	3301      	adds	r3, #1
  402f42:	3110      	adds	r1, #16
  402f44:	2b07      	cmp	r3, #7
  402f46:	9127      	str	r1, [sp, #156]	; 0x9c
  402f48:	9326      	str	r3, [sp, #152]	; 0x98
  402f4a:	e882 0840 	stmia.w	r2, {r6, fp}
  402f4e:	ddf2      	ble.n	402f36 <_svfprintf_r+0xb8a>
  402f50:	aa25      	add	r2, sp, #148	; 0x94
  402f52:	4629      	mov	r1, r5
  402f54:	4620      	mov	r0, r4
  402f56:	f002 fb81 	bl	40565c <__ssprint_r>
  402f5a:	2800      	cmp	r0, #0
  402f5c:	f47f aaf8 	bne.w	402550 <_svfprintf_r+0x1a4>
  402f60:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402f62:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f64:	464a      	mov	r2, r9
  402f66:	e7e7      	b.n	402f38 <_svfprintf_r+0xb8c>
  402f68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402f6a:	930e      	str	r3, [sp, #56]	; 0x38
  402f6c:	464e      	mov	r6, r9
  402f6e:	f7ff bb2d 	b.w	4025cc <_svfprintf_r+0x220>
  402f72:	2d00      	cmp	r5, #0
  402f74:	bf08      	it	eq
  402f76:	2c0a      	cmpeq	r4, #10
  402f78:	f0c0 808f 	bcc.w	40309a <_svfprintf_r+0xcee>
  402f7c:	464e      	mov	r6, r9
  402f7e:	4620      	mov	r0, r4
  402f80:	4629      	mov	r1, r5
  402f82:	220a      	movs	r2, #10
  402f84:	2300      	movs	r3, #0
  402f86:	f003 f8a3 	bl	4060d0 <__aeabi_uldivmod>
  402f8a:	3230      	adds	r2, #48	; 0x30
  402f8c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402f90:	4620      	mov	r0, r4
  402f92:	4629      	mov	r1, r5
  402f94:	2300      	movs	r3, #0
  402f96:	220a      	movs	r2, #10
  402f98:	f003 f89a 	bl	4060d0 <__aeabi_uldivmod>
  402f9c:	4604      	mov	r4, r0
  402f9e:	460d      	mov	r5, r1
  402fa0:	ea54 0305 	orrs.w	r3, r4, r5
  402fa4:	d1eb      	bne.n	402f7e <_svfprintf_r+0xbd2>
  402fa6:	eba9 0306 	sub.w	r3, r9, r6
  402faa:	930e      	str	r3, [sp, #56]	; 0x38
  402fac:	f7ff bb0e 	b.w	4025cc <_svfprintf_r+0x220>
  402fb0:	aa25      	add	r2, sp, #148	; 0x94
  402fb2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402fb4:	980c      	ldr	r0, [sp, #48]	; 0x30
  402fb6:	f002 fb51 	bl	40565c <__ssprint_r>
  402fba:	2800      	cmp	r0, #0
  402fbc:	f47f aac8 	bne.w	402550 <_svfprintf_r+0x1a4>
  402fc0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402fc4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402fc6:	46c8      	mov	r8, r9
  402fc8:	f7ff bb5e 	b.w	402688 <_svfprintf_r+0x2dc>
  402fcc:	1e5e      	subs	r6, r3, #1
  402fce:	2e00      	cmp	r6, #0
  402fd0:	f77f af0a 	ble.w	402de8 <_svfprintf_r+0xa3c>
  402fd4:	2e10      	cmp	r6, #16
  402fd6:	4d03      	ldr	r5, [pc, #12]	; (402fe4 <_svfprintf_r+0xc38>)
  402fd8:	dd22      	ble.n	403020 <_svfprintf_r+0xc74>
  402fda:	4622      	mov	r2, r4
  402fdc:	f04f 0b10 	mov.w	fp, #16
  402fe0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402fe2:	e006      	b.n	402ff2 <_svfprintf_r+0xc46>
  402fe4:	00406e98 	.word	0x00406e98
  402fe8:	3e10      	subs	r6, #16
  402fea:	2e10      	cmp	r6, #16
  402fec:	f108 0808 	add.w	r8, r8, #8
  402ff0:	dd15      	ble.n	40301e <_svfprintf_r+0xc72>
  402ff2:	3701      	adds	r7, #1
  402ff4:	3210      	adds	r2, #16
  402ff6:	2f07      	cmp	r7, #7
  402ff8:	9227      	str	r2, [sp, #156]	; 0x9c
  402ffa:	9726      	str	r7, [sp, #152]	; 0x98
  402ffc:	e888 0820 	stmia.w	r8, {r5, fp}
  403000:	ddf2      	ble.n	402fe8 <_svfprintf_r+0xc3c>
  403002:	aa25      	add	r2, sp, #148	; 0x94
  403004:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403006:	4620      	mov	r0, r4
  403008:	f002 fb28 	bl	40565c <__ssprint_r>
  40300c:	2800      	cmp	r0, #0
  40300e:	f47f aa9f 	bne.w	402550 <_svfprintf_r+0x1a4>
  403012:	3e10      	subs	r6, #16
  403014:	2e10      	cmp	r6, #16
  403016:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403018:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40301a:	46c8      	mov	r8, r9
  40301c:	dce9      	bgt.n	402ff2 <_svfprintf_r+0xc46>
  40301e:	4614      	mov	r4, r2
  403020:	3701      	adds	r7, #1
  403022:	4434      	add	r4, r6
  403024:	2f07      	cmp	r7, #7
  403026:	9427      	str	r4, [sp, #156]	; 0x9c
  403028:	9726      	str	r7, [sp, #152]	; 0x98
  40302a:	e888 0060 	stmia.w	r8, {r5, r6}
  40302e:	f77f aed9 	ble.w	402de4 <_svfprintf_r+0xa38>
  403032:	aa25      	add	r2, sp, #148	; 0x94
  403034:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403036:	980c      	ldr	r0, [sp, #48]	; 0x30
  403038:	f002 fb10 	bl	40565c <__ssprint_r>
  40303c:	2800      	cmp	r0, #0
  40303e:	f47f aa87 	bne.w	402550 <_svfprintf_r+0x1a4>
  403042:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403044:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403046:	46c8      	mov	r8, r9
  403048:	e6ce      	b.n	402de8 <_svfprintf_r+0xa3c>
  40304a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40304c:	6814      	ldr	r4, [r2, #0]
  40304e:	4613      	mov	r3, r2
  403050:	3304      	adds	r3, #4
  403052:	17e5      	asrs	r5, r4, #31
  403054:	930f      	str	r3, [sp, #60]	; 0x3c
  403056:	4622      	mov	r2, r4
  403058:	462b      	mov	r3, r5
  40305a:	e4fa      	b.n	402a52 <_svfprintf_r+0x6a6>
  40305c:	3204      	adds	r2, #4
  40305e:	681c      	ldr	r4, [r3, #0]
  403060:	920f      	str	r2, [sp, #60]	; 0x3c
  403062:	2301      	movs	r3, #1
  403064:	2500      	movs	r5, #0
  403066:	f7ff ba94 	b.w	402592 <_svfprintf_r+0x1e6>
  40306a:	681c      	ldr	r4, [r3, #0]
  40306c:	3304      	adds	r3, #4
  40306e:	930f      	str	r3, [sp, #60]	; 0x3c
  403070:	2500      	movs	r5, #0
  403072:	e421      	b.n	4028b8 <_svfprintf_r+0x50c>
  403074:	990f      	ldr	r1, [sp, #60]	; 0x3c
  403076:	460a      	mov	r2, r1
  403078:	3204      	adds	r2, #4
  40307a:	680c      	ldr	r4, [r1, #0]
  40307c:	920f      	str	r2, [sp, #60]	; 0x3c
  40307e:	2500      	movs	r5, #0
  403080:	f7ff ba87 	b.w	402592 <_svfprintf_r+0x1e6>
  403084:	4614      	mov	r4, r2
  403086:	3301      	adds	r3, #1
  403088:	4434      	add	r4, r6
  40308a:	2b07      	cmp	r3, #7
  40308c:	9427      	str	r4, [sp, #156]	; 0x9c
  40308e:	9326      	str	r3, [sp, #152]	; 0x98
  403090:	e888 0060 	stmia.w	r8, {r5, r6}
  403094:	f77f ab68 	ble.w	402768 <_svfprintf_r+0x3bc>
  403098:	e6b3      	b.n	402e02 <_svfprintf_r+0xa56>
  40309a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40309e:	f8cd b01c 	str.w	fp, [sp, #28]
  4030a2:	ae42      	add	r6, sp, #264	; 0x108
  4030a4:	3430      	adds	r4, #48	; 0x30
  4030a6:	2301      	movs	r3, #1
  4030a8:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4030ac:	930e      	str	r3, [sp, #56]	; 0x38
  4030ae:	f7ff ba8d 	b.w	4025cc <_svfprintf_r+0x220>
  4030b2:	aa25      	add	r2, sp, #148	; 0x94
  4030b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030b8:	f002 fad0 	bl	40565c <__ssprint_r>
  4030bc:	2800      	cmp	r0, #0
  4030be:	f47f aa47 	bne.w	402550 <_svfprintf_r+0x1a4>
  4030c2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030c4:	46c8      	mov	r8, r9
  4030c6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4030c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4030ca:	429a      	cmp	r2, r3
  4030cc:	db44      	blt.n	403158 <_svfprintf_r+0xdac>
  4030ce:	9b07      	ldr	r3, [sp, #28]
  4030d0:	07d9      	lsls	r1, r3, #31
  4030d2:	d441      	bmi.n	403158 <_svfprintf_r+0xdac>
  4030d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4030d6:	9812      	ldr	r0, [sp, #72]	; 0x48
  4030d8:	1a9a      	subs	r2, r3, r2
  4030da:	1a1d      	subs	r5, r3, r0
  4030dc:	4295      	cmp	r5, r2
  4030de:	bfa8      	it	ge
  4030e0:	4615      	movge	r5, r2
  4030e2:	2d00      	cmp	r5, #0
  4030e4:	dd0e      	ble.n	403104 <_svfprintf_r+0xd58>
  4030e6:	9926      	ldr	r1, [sp, #152]	; 0x98
  4030e8:	f8c8 5004 	str.w	r5, [r8, #4]
  4030ec:	3101      	adds	r1, #1
  4030ee:	4406      	add	r6, r0
  4030f0:	442c      	add	r4, r5
  4030f2:	2907      	cmp	r1, #7
  4030f4:	f8c8 6000 	str.w	r6, [r8]
  4030f8:	9427      	str	r4, [sp, #156]	; 0x9c
  4030fa:	9126      	str	r1, [sp, #152]	; 0x98
  4030fc:	f300 823b 	bgt.w	403576 <_svfprintf_r+0x11ca>
  403100:	f108 0808 	add.w	r8, r8, #8
  403104:	2d00      	cmp	r5, #0
  403106:	bfac      	ite	ge
  403108:	1b56      	subge	r6, r2, r5
  40310a:	4616      	movlt	r6, r2
  40310c:	2e00      	cmp	r6, #0
  40310e:	f77f ab2d 	ble.w	40276c <_svfprintf_r+0x3c0>
  403112:	2e10      	cmp	r6, #16
  403114:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403116:	4db0      	ldr	r5, [pc, #704]	; (4033d8 <_svfprintf_r+0x102c>)
  403118:	ddb5      	ble.n	403086 <_svfprintf_r+0xcda>
  40311a:	4622      	mov	r2, r4
  40311c:	2710      	movs	r7, #16
  40311e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403122:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403124:	e004      	b.n	403130 <_svfprintf_r+0xd84>
  403126:	f108 0808 	add.w	r8, r8, #8
  40312a:	3e10      	subs	r6, #16
  40312c:	2e10      	cmp	r6, #16
  40312e:	dda9      	ble.n	403084 <_svfprintf_r+0xcd8>
  403130:	3301      	adds	r3, #1
  403132:	3210      	adds	r2, #16
  403134:	2b07      	cmp	r3, #7
  403136:	9227      	str	r2, [sp, #156]	; 0x9c
  403138:	9326      	str	r3, [sp, #152]	; 0x98
  40313a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40313e:	ddf2      	ble.n	403126 <_svfprintf_r+0xd7a>
  403140:	aa25      	add	r2, sp, #148	; 0x94
  403142:	4621      	mov	r1, r4
  403144:	4658      	mov	r0, fp
  403146:	f002 fa89 	bl	40565c <__ssprint_r>
  40314a:	2800      	cmp	r0, #0
  40314c:	f47f aa00 	bne.w	402550 <_svfprintf_r+0x1a4>
  403150:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403152:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403154:	46c8      	mov	r8, r9
  403156:	e7e8      	b.n	40312a <_svfprintf_r+0xd7e>
  403158:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40315a:	9819      	ldr	r0, [sp, #100]	; 0x64
  40315c:	991a      	ldr	r1, [sp, #104]	; 0x68
  40315e:	f8c8 1000 	str.w	r1, [r8]
  403162:	3301      	adds	r3, #1
  403164:	4404      	add	r4, r0
  403166:	2b07      	cmp	r3, #7
  403168:	9427      	str	r4, [sp, #156]	; 0x9c
  40316a:	f8c8 0004 	str.w	r0, [r8, #4]
  40316e:	9326      	str	r3, [sp, #152]	; 0x98
  403170:	f300 81f5 	bgt.w	40355e <_svfprintf_r+0x11b2>
  403174:	f108 0808 	add.w	r8, r8, #8
  403178:	e7ac      	b.n	4030d4 <_svfprintf_r+0xd28>
  40317a:	9b07      	ldr	r3, [sp, #28]
  40317c:	07da      	lsls	r2, r3, #31
  40317e:	f53f adfe 	bmi.w	402d7e <_svfprintf_r+0x9d2>
  403182:	3701      	adds	r7, #1
  403184:	3401      	adds	r4, #1
  403186:	2301      	movs	r3, #1
  403188:	2f07      	cmp	r7, #7
  40318a:	9427      	str	r4, [sp, #156]	; 0x9c
  40318c:	9726      	str	r7, [sp, #152]	; 0x98
  40318e:	f8c8 6000 	str.w	r6, [r8]
  403192:	f8c8 3004 	str.w	r3, [r8, #4]
  403196:	f77f ae25 	ble.w	402de4 <_svfprintf_r+0xa38>
  40319a:	e74a      	b.n	403032 <_svfprintf_r+0xc86>
  40319c:	aa25      	add	r2, sp, #148	; 0x94
  40319e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031a0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031a2:	f002 fa5b 	bl	40565c <__ssprint_r>
  4031a6:	2800      	cmp	r0, #0
  4031a8:	f47f a9d2 	bne.w	402550 <_svfprintf_r+0x1a4>
  4031ac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031ae:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4031b0:	46c8      	mov	r8, r9
  4031b2:	e5f2      	b.n	402d9a <_svfprintf_r+0x9ee>
  4031b4:	aa25      	add	r2, sp, #148	; 0x94
  4031b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031b8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031ba:	f002 fa4f 	bl	40565c <__ssprint_r>
  4031be:	2800      	cmp	r0, #0
  4031c0:	f47f a9c6 	bne.w	402550 <_svfprintf_r+0x1a4>
  4031c4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031c6:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4031c8:	46c8      	mov	r8, r9
  4031ca:	e5f5      	b.n	402db8 <_svfprintf_r+0xa0c>
  4031cc:	464e      	mov	r6, r9
  4031ce:	f7ff b9fd 	b.w	4025cc <_svfprintf_r+0x220>
  4031d2:	aa25      	add	r2, sp, #148	; 0x94
  4031d4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031d6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031d8:	f002 fa40 	bl	40565c <__ssprint_r>
  4031dc:	2800      	cmp	r0, #0
  4031de:	f47f a9b7 	bne.w	402550 <_svfprintf_r+0x1a4>
  4031e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031e4:	46c8      	mov	r8, r9
  4031e6:	f7ff ba72 	b.w	4026ce <_svfprintf_r+0x322>
  4031ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4031ec:	4622      	mov	r2, r4
  4031ee:	4620      	mov	r0, r4
  4031f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4031f2:	4623      	mov	r3, r4
  4031f4:	4621      	mov	r1, r4
  4031f6:	f002 ff2d 	bl	406054 <__aeabi_dcmpun>
  4031fa:	2800      	cmp	r0, #0
  4031fc:	f040 8286 	bne.w	40370c <_svfprintf_r+0x1360>
  403200:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403202:	3301      	adds	r3, #1
  403204:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403206:	f023 0320 	bic.w	r3, r3, #32
  40320a:	930e      	str	r3, [sp, #56]	; 0x38
  40320c:	f000 81e2 	beq.w	4035d4 <_svfprintf_r+0x1228>
  403210:	2b47      	cmp	r3, #71	; 0x47
  403212:	f000 811e 	beq.w	403452 <_svfprintf_r+0x10a6>
  403216:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  40321a:	9307      	str	r3, [sp, #28]
  40321c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40321e:	1e1f      	subs	r7, r3, #0
  403220:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403222:	9308      	str	r3, [sp, #32]
  403224:	bfbb      	ittet	lt
  403226:	463b      	movlt	r3, r7
  403228:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  40322c:	2300      	movge	r3, #0
  40322e:	232d      	movlt	r3, #45	; 0x2d
  403230:	9310      	str	r3, [sp, #64]	; 0x40
  403232:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403234:	2b66      	cmp	r3, #102	; 0x66
  403236:	f000 81bb 	beq.w	4035b0 <_svfprintf_r+0x1204>
  40323a:	2b46      	cmp	r3, #70	; 0x46
  40323c:	f000 80df 	beq.w	4033fe <_svfprintf_r+0x1052>
  403240:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403242:	9a08      	ldr	r2, [sp, #32]
  403244:	2b45      	cmp	r3, #69	; 0x45
  403246:	bf0c      	ite	eq
  403248:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  40324a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  40324c:	a823      	add	r0, sp, #140	; 0x8c
  40324e:	a920      	add	r1, sp, #128	; 0x80
  403250:	bf08      	it	eq
  403252:	1c5d      	addeq	r5, r3, #1
  403254:	9004      	str	r0, [sp, #16]
  403256:	9103      	str	r1, [sp, #12]
  403258:	a81f      	add	r0, sp, #124	; 0x7c
  40325a:	2102      	movs	r1, #2
  40325c:	463b      	mov	r3, r7
  40325e:	9002      	str	r0, [sp, #8]
  403260:	9501      	str	r5, [sp, #4]
  403262:	9100      	str	r1, [sp, #0]
  403264:	980c      	ldr	r0, [sp, #48]	; 0x30
  403266:	f000 fb73 	bl	403950 <_dtoa_r>
  40326a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40326c:	2b67      	cmp	r3, #103	; 0x67
  40326e:	4606      	mov	r6, r0
  403270:	f040 81e0 	bne.w	403634 <_svfprintf_r+0x1288>
  403274:	f01b 0f01 	tst.w	fp, #1
  403278:	f000 8246 	beq.w	403708 <_svfprintf_r+0x135c>
  40327c:	1974      	adds	r4, r6, r5
  40327e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403280:	9808      	ldr	r0, [sp, #32]
  403282:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403284:	4639      	mov	r1, r7
  403286:	f002 feb3 	bl	405ff0 <__aeabi_dcmpeq>
  40328a:	2800      	cmp	r0, #0
  40328c:	f040 8165 	bne.w	40355a <_svfprintf_r+0x11ae>
  403290:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403292:	42a3      	cmp	r3, r4
  403294:	d206      	bcs.n	4032a4 <_svfprintf_r+0xef8>
  403296:	2130      	movs	r1, #48	; 0x30
  403298:	1c5a      	adds	r2, r3, #1
  40329a:	9223      	str	r2, [sp, #140]	; 0x8c
  40329c:	7019      	strb	r1, [r3, #0]
  40329e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032a0:	429c      	cmp	r4, r3
  4032a2:	d8f9      	bhi.n	403298 <_svfprintf_r+0xeec>
  4032a4:	1b9b      	subs	r3, r3, r6
  4032a6:	9313      	str	r3, [sp, #76]	; 0x4c
  4032a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4032aa:	2b47      	cmp	r3, #71	; 0x47
  4032ac:	f000 80e9 	beq.w	403482 <_svfprintf_r+0x10d6>
  4032b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032b2:	2b65      	cmp	r3, #101	; 0x65
  4032b4:	f340 81cd 	ble.w	403652 <_svfprintf_r+0x12a6>
  4032b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032ba:	2b66      	cmp	r3, #102	; 0x66
  4032bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4032be:	9312      	str	r3, [sp, #72]	; 0x48
  4032c0:	f000 819e 	beq.w	403600 <_svfprintf_r+0x1254>
  4032c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4032c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4032c8:	4619      	mov	r1, r3
  4032ca:	4291      	cmp	r1, r2
  4032cc:	f300 818a 	bgt.w	4035e4 <_svfprintf_r+0x1238>
  4032d0:	f01b 0f01 	tst.w	fp, #1
  4032d4:	f040 8213 	bne.w	4036fe <_svfprintf_r+0x1352>
  4032d8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4032dc:	9308      	str	r3, [sp, #32]
  4032de:	2367      	movs	r3, #103	; 0x67
  4032e0:	920e      	str	r2, [sp, #56]	; 0x38
  4032e2:	9311      	str	r3, [sp, #68]	; 0x44
  4032e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4032e6:	2b00      	cmp	r3, #0
  4032e8:	f040 80c4 	bne.w	403474 <_svfprintf_r+0x10c8>
  4032ec:	930a      	str	r3, [sp, #40]	; 0x28
  4032ee:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4032f2:	f7ff b973 	b.w	4025dc <_svfprintf_r+0x230>
  4032f6:	4635      	mov	r5, r6
  4032f8:	460c      	mov	r4, r1
  4032fa:	4646      	mov	r6, r8
  4032fc:	4690      	mov	r8, r2
  4032fe:	3301      	adds	r3, #1
  403300:	443c      	add	r4, r7
  403302:	2b07      	cmp	r3, #7
  403304:	9427      	str	r4, [sp, #156]	; 0x9c
  403306:	9326      	str	r3, [sp, #152]	; 0x98
  403308:	e888 00a0 	stmia.w	r8, {r5, r7}
  40330c:	f73f aed1 	bgt.w	4030b2 <_svfprintf_r+0xd06>
  403310:	f108 0808 	add.w	r8, r8, #8
  403314:	e6d7      	b.n	4030c6 <_svfprintf_r+0xd1a>
  403316:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403318:	6813      	ldr	r3, [r2, #0]
  40331a:	3204      	adds	r2, #4
  40331c:	920f      	str	r2, [sp, #60]	; 0x3c
  40331e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403320:	601a      	str	r2, [r3, #0]
  403322:	f7ff b86a 	b.w	4023fa <_svfprintf_r+0x4e>
  403326:	aa25      	add	r2, sp, #148	; 0x94
  403328:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40332a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40332c:	f002 f996 	bl	40565c <__ssprint_r>
  403330:	2800      	cmp	r0, #0
  403332:	f47f a90d 	bne.w	402550 <_svfprintf_r+0x1a4>
  403336:	46c8      	mov	r8, r9
  403338:	e48d      	b.n	402c56 <_svfprintf_r+0x8aa>
  40333a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40333c:	4a27      	ldr	r2, [pc, #156]	; (4033dc <_svfprintf_r+0x1030>)
  40333e:	f8c8 2000 	str.w	r2, [r8]
  403342:	3301      	adds	r3, #1
  403344:	3401      	adds	r4, #1
  403346:	2201      	movs	r2, #1
  403348:	2b07      	cmp	r3, #7
  40334a:	9427      	str	r4, [sp, #156]	; 0x9c
  40334c:	9326      	str	r3, [sp, #152]	; 0x98
  40334e:	f8c8 2004 	str.w	r2, [r8, #4]
  403352:	dc72      	bgt.n	40343a <_svfprintf_r+0x108e>
  403354:	f108 0808 	add.w	r8, r8, #8
  403358:	b929      	cbnz	r1, 403366 <_svfprintf_r+0xfba>
  40335a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40335c:	b91b      	cbnz	r3, 403366 <_svfprintf_r+0xfba>
  40335e:	9b07      	ldr	r3, [sp, #28]
  403360:	07d8      	lsls	r0, r3, #31
  403362:	f57f aa03 	bpl.w	40276c <_svfprintf_r+0x3c0>
  403366:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403368:	9819      	ldr	r0, [sp, #100]	; 0x64
  40336a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40336c:	f8c8 2000 	str.w	r2, [r8]
  403370:	3301      	adds	r3, #1
  403372:	4602      	mov	r2, r0
  403374:	4422      	add	r2, r4
  403376:	2b07      	cmp	r3, #7
  403378:	9227      	str	r2, [sp, #156]	; 0x9c
  40337a:	f8c8 0004 	str.w	r0, [r8, #4]
  40337e:	9326      	str	r3, [sp, #152]	; 0x98
  403380:	f300 818d 	bgt.w	40369e <_svfprintf_r+0x12f2>
  403384:	f108 0808 	add.w	r8, r8, #8
  403388:	2900      	cmp	r1, #0
  40338a:	f2c0 8165 	blt.w	403658 <_svfprintf_r+0x12ac>
  40338e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403390:	f8c8 6000 	str.w	r6, [r8]
  403394:	3301      	adds	r3, #1
  403396:	188c      	adds	r4, r1, r2
  403398:	2b07      	cmp	r3, #7
  40339a:	9427      	str	r4, [sp, #156]	; 0x9c
  40339c:	9326      	str	r3, [sp, #152]	; 0x98
  40339e:	f8c8 1004 	str.w	r1, [r8, #4]
  4033a2:	f77f a9e1 	ble.w	402768 <_svfprintf_r+0x3bc>
  4033a6:	e52c      	b.n	402e02 <_svfprintf_r+0xa56>
  4033a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4033aa:	9909      	ldr	r1, [sp, #36]	; 0x24
  4033ac:	6813      	ldr	r3, [r2, #0]
  4033ae:	17cd      	asrs	r5, r1, #31
  4033b0:	4608      	mov	r0, r1
  4033b2:	3204      	adds	r2, #4
  4033b4:	4629      	mov	r1, r5
  4033b6:	920f      	str	r2, [sp, #60]	; 0x3c
  4033b8:	e9c3 0100 	strd	r0, r1, [r3]
  4033bc:	f7ff b81d 	b.w	4023fa <_svfprintf_r+0x4e>
  4033c0:	aa25      	add	r2, sp, #148	; 0x94
  4033c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4033c4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4033c6:	f002 f949 	bl	40565c <__ssprint_r>
  4033ca:	2800      	cmp	r0, #0
  4033cc:	f47f a8c0 	bne.w	402550 <_svfprintf_r+0x1a4>
  4033d0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4033d2:	46c8      	mov	r8, r9
  4033d4:	e458      	b.n	402c88 <_svfprintf_r+0x8dc>
  4033d6:	bf00      	nop
  4033d8:	00406e98 	.word	0x00406e98
  4033dc:	00406e84 	.word	0x00406e84
  4033e0:	2140      	movs	r1, #64	; 0x40
  4033e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4033e4:	f001 fa0a 	bl	4047fc <_malloc_r>
  4033e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4033ea:	6010      	str	r0, [r2, #0]
  4033ec:	6110      	str	r0, [r2, #16]
  4033ee:	2800      	cmp	r0, #0
  4033f0:	f000 81f2 	beq.w	4037d8 <_svfprintf_r+0x142c>
  4033f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4033f6:	2340      	movs	r3, #64	; 0x40
  4033f8:	6153      	str	r3, [r2, #20]
  4033fa:	f7fe bfee 	b.w	4023da <_svfprintf_r+0x2e>
  4033fe:	a823      	add	r0, sp, #140	; 0x8c
  403400:	a920      	add	r1, sp, #128	; 0x80
  403402:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403404:	9004      	str	r0, [sp, #16]
  403406:	9103      	str	r1, [sp, #12]
  403408:	a81f      	add	r0, sp, #124	; 0x7c
  40340a:	2103      	movs	r1, #3
  40340c:	9002      	str	r0, [sp, #8]
  40340e:	9a08      	ldr	r2, [sp, #32]
  403410:	9401      	str	r4, [sp, #4]
  403412:	463b      	mov	r3, r7
  403414:	9100      	str	r1, [sp, #0]
  403416:	980c      	ldr	r0, [sp, #48]	; 0x30
  403418:	f000 fa9a 	bl	403950 <_dtoa_r>
  40341c:	4625      	mov	r5, r4
  40341e:	4606      	mov	r6, r0
  403420:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403422:	2b46      	cmp	r3, #70	; 0x46
  403424:	eb06 0405 	add.w	r4, r6, r5
  403428:	f47f af29 	bne.w	40327e <_svfprintf_r+0xed2>
  40342c:	7833      	ldrb	r3, [r6, #0]
  40342e:	2b30      	cmp	r3, #48	; 0x30
  403430:	f000 8178 	beq.w	403724 <_svfprintf_r+0x1378>
  403434:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403436:	442c      	add	r4, r5
  403438:	e721      	b.n	40327e <_svfprintf_r+0xed2>
  40343a:	aa25      	add	r2, sp, #148	; 0x94
  40343c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40343e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403440:	f002 f90c 	bl	40565c <__ssprint_r>
  403444:	2800      	cmp	r0, #0
  403446:	f47f a883 	bne.w	402550 <_svfprintf_r+0x1a4>
  40344a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40344c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40344e:	46c8      	mov	r8, r9
  403450:	e782      	b.n	403358 <_svfprintf_r+0xfac>
  403452:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403454:	2b00      	cmp	r3, #0
  403456:	bf08      	it	eq
  403458:	2301      	moveq	r3, #1
  40345a:	930a      	str	r3, [sp, #40]	; 0x28
  40345c:	e6db      	b.n	403216 <_svfprintf_r+0xe6a>
  40345e:	4630      	mov	r0, r6
  403460:	940a      	str	r4, [sp, #40]	; 0x28
  403462:	f002 f88d 	bl	405580 <strlen>
  403466:	950f      	str	r5, [sp, #60]	; 0x3c
  403468:	900e      	str	r0, [sp, #56]	; 0x38
  40346a:	f8cd b01c 	str.w	fp, [sp, #28]
  40346e:	4603      	mov	r3, r0
  403470:	f7ff b9f9 	b.w	402866 <_svfprintf_r+0x4ba>
  403474:	272d      	movs	r7, #45	; 0x2d
  403476:	2300      	movs	r3, #0
  403478:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40347c:	930a      	str	r3, [sp, #40]	; 0x28
  40347e:	f7ff b8ae 	b.w	4025de <_svfprintf_r+0x232>
  403482:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403484:	9312      	str	r3, [sp, #72]	; 0x48
  403486:	461a      	mov	r2, r3
  403488:	3303      	adds	r3, #3
  40348a:	db04      	blt.n	403496 <_svfprintf_r+0x10ea>
  40348c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40348e:	4619      	mov	r1, r3
  403490:	4291      	cmp	r1, r2
  403492:	f6bf af17 	bge.w	4032c4 <_svfprintf_r+0xf18>
  403496:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403498:	3b02      	subs	r3, #2
  40349a:	9311      	str	r3, [sp, #68]	; 0x44
  40349c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4034a0:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  4034a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034a6:	3b01      	subs	r3, #1
  4034a8:	2b00      	cmp	r3, #0
  4034aa:	931f      	str	r3, [sp, #124]	; 0x7c
  4034ac:	bfbd      	ittte	lt
  4034ae:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4034b0:	f1c3 0301 	rsblt	r3, r3, #1
  4034b4:	222d      	movlt	r2, #45	; 0x2d
  4034b6:	222b      	movge	r2, #43	; 0x2b
  4034b8:	2b09      	cmp	r3, #9
  4034ba:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4034be:	f340 8116 	ble.w	4036ee <_svfprintf_r+0x1342>
  4034c2:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  4034c6:	4620      	mov	r0, r4
  4034c8:	4dab      	ldr	r5, [pc, #684]	; (403778 <_svfprintf_r+0x13cc>)
  4034ca:	e000      	b.n	4034ce <_svfprintf_r+0x1122>
  4034cc:	4610      	mov	r0, r2
  4034ce:	fb85 1203 	smull	r1, r2, r5, r3
  4034d2:	17d9      	asrs	r1, r3, #31
  4034d4:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4034d8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4034dc:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4034e0:	3230      	adds	r2, #48	; 0x30
  4034e2:	2909      	cmp	r1, #9
  4034e4:	f800 2c01 	strb.w	r2, [r0, #-1]
  4034e8:	460b      	mov	r3, r1
  4034ea:	f100 32ff 	add.w	r2, r0, #4294967295
  4034ee:	dced      	bgt.n	4034cc <_svfprintf_r+0x1120>
  4034f0:	3330      	adds	r3, #48	; 0x30
  4034f2:	3802      	subs	r0, #2
  4034f4:	b2d9      	uxtb	r1, r3
  4034f6:	4284      	cmp	r4, r0
  4034f8:	f802 1c01 	strb.w	r1, [r2, #-1]
  4034fc:	f240 8165 	bls.w	4037ca <_svfprintf_r+0x141e>
  403500:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403504:	4613      	mov	r3, r2
  403506:	e001      	b.n	40350c <_svfprintf_r+0x1160>
  403508:	f813 1b01 	ldrb.w	r1, [r3], #1
  40350c:	f800 1b01 	strb.w	r1, [r0], #1
  403510:	42a3      	cmp	r3, r4
  403512:	d1f9      	bne.n	403508 <_svfprintf_r+0x115c>
  403514:	3301      	adds	r3, #1
  403516:	1a9b      	subs	r3, r3, r2
  403518:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  40351c:	4413      	add	r3, r2
  40351e:	aa21      	add	r2, sp, #132	; 0x84
  403520:	1a9b      	subs	r3, r3, r2
  403522:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403524:	931b      	str	r3, [sp, #108]	; 0x6c
  403526:	2a01      	cmp	r2, #1
  403528:	4413      	add	r3, r2
  40352a:	930e      	str	r3, [sp, #56]	; 0x38
  40352c:	f340 8119 	ble.w	403762 <_svfprintf_r+0x13b6>
  403530:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403532:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403534:	4413      	add	r3, r2
  403536:	930e      	str	r3, [sp, #56]	; 0x38
  403538:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40353c:	9308      	str	r3, [sp, #32]
  40353e:	2300      	movs	r3, #0
  403540:	9312      	str	r3, [sp, #72]	; 0x48
  403542:	e6cf      	b.n	4032e4 <_svfprintf_r+0xf38>
  403544:	aa25      	add	r2, sp, #148	; 0x94
  403546:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403548:	980c      	ldr	r0, [sp, #48]	; 0x30
  40354a:	f002 f887 	bl	40565c <__ssprint_r>
  40354e:	2800      	cmp	r0, #0
  403550:	f47e affe 	bne.w	402550 <_svfprintf_r+0x1a4>
  403554:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403556:	46c8      	mov	r8, r9
  403558:	e4d7      	b.n	402f0a <_svfprintf_r+0xb5e>
  40355a:	4623      	mov	r3, r4
  40355c:	e6a2      	b.n	4032a4 <_svfprintf_r+0xef8>
  40355e:	aa25      	add	r2, sp, #148	; 0x94
  403560:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403562:	980c      	ldr	r0, [sp, #48]	; 0x30
  403564:	f002 f87a 	bl	40565c <__ssprint_r>
  403568:	2800      	cmp	r0, #0
  40356a:	f47e aff1 	bne.w	402550 <_svfprintf_r+0x1a4>
  40356e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403570:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403572:	46c8      	mov	r8, r9
  403574:	e5ae      	b.n	4030d4 <_svfprintf_r+0xd28>
  403576:	aa25      	add	r2, sp, #148	; 0x94
  403578:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40357a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40357c:	f002 f86e 	bl	40565c <__ssprint_r>
  403580:	2800      	cmp	r0, #0
  403582:	f47e afe5 	bne.w	402550 <_svfprintf_r+0x1a4>
  403586:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403588:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40358a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40358c:	1a9a      	subs	r2, r3, r2
  40358e:	46c8      	mov	r8, r9
  403590:	e5b8      	b.n	403104 <_svfprintf_r+0xd58>
  403592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403594:	9612      	str	r6, [sp, #72]	; 0x48
  403596:	2b06      	cmp	r3, #6
  403598:	bf28      	it	cs
  40359a:	2306      	movcs	r3, #6
  40359c:	960a      	str	r6, [sp, #40]	; 0x28
  40359e:	4637      	mov	r7, r6
  4035a0:	9308      	str	r3, [sp, #32]
  4035a2:	950f      	str	r5, [sp, #60]	; 0x3c
  4035a4:	f8cd b01c 	str.w	fp, [sp, #28]
  4035a8:	930e      	str	r3, [sp, #56]	; 0x38
  4035aa:	4e74      	ldr	r6, [pc, #464]	; (40377c <_svfprintf_r+0x13d0>)
  4035ac:	f7ff b816 	b.w	4025dc <_svfprintf_r+0x230>
  4035b0:	a823      	add	r0, sp, #140	; 0x8c
  4035b2:	a920      	add	r1, sp, #128	; 0x80
  4035b4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4035b6:	9004      	str	r0, [sp, #16]
  4035b8:	9103      	str	r1, [sp, #12]
  4035ba:	a81f      	add	r0, sp, #124	; 0x7c
  4035bc:	2103      	movs	r1, #3
  4035be:	9002      	str	r0, [sp, #8]
  4035c0:	9a08      	ldr	r2, [sp, #32]
  4035c2:	9501      	str	r5, [sp, #4]
  4035c4:	463b      	mov	r3, r7
  4035c6:	9100      	str	r1, [sp, #0]
  4035c8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035ca:	f000 f9c1 	bl	403950 <_dtoa_r>
  4035ce:	4606      	mov	r6, r0
  4035d0:	1944      	adds	r4, r0, r5
  4035d2:	e72b      	b.n	40342c <_svfprintf_r+0x1080>
  4035d4:	2306      	movs	r3, #6
  4035d6:	930a      	str	r3, [sp, #40]	; 0x28
  4035d8:	e61d      	b.n	403216 <_svfprintf_r+0xe6a>
  4035da:	272d      	movs	r7, #45	; 0x2d
  4035dc:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4035e0:	f7ff bacd 	b.w	402b7e <_svfprintf_r+0x7d2>
  4035e4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4035e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4035e8:	4413      	add	r3, r2
  4035ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4035ec:	930e      	str	r3, [sp, #56]	; 0x38
  4035ee:	2a00      	cmp	r2, #0
  4035f0:	f340 80b0 	ble.w	403754 <_svfprintf_r+0x13a8>
  4035f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4035f8:	9308      	str	r3, [sp, #32]
  4035fa:	2367      	movs	r3, #103	; 0x67
  4035fc:	9311      	str	r3, [sp, #68]	; 0x44
  4035fe:	e671      	b.n	4032e4 <_svfprintf_r+0xf38>
  403600:	2b00      	cmp	r3, #0
  403602:	f340 80c3 	ble.w	40378c <_svfprintf_r+0x13e0>
  403606:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403608:	2a00      	cmp	r2, #0
  40360a:	f040 8099 	bne.w	403740 <_svfprintf_r+0x1394>
  40360e:	f01b 0f01 	tst.w	fp, #1
  403612:	f040 8095 	bne.w	403740 <_svfprintf_r+0x1394>
  403616:	9308      	str	r3, [sp, #32]
  403618:	930e      	str	r3, [sp, #56]	; 0x38
  40361a:	e663      	b.n	4032e4 <_svfprintf_r+0xf38>
  40361c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40361e:	9308      	str	r3, [sp, #32]
  403620:	930e      	str	r3, [sp, #56]	; 0x38
  403622:	900a      	str	r0, [sp, #40]	; 0x28
  403624:	950f      	str	r5, [sp, #60]	; 0x3c
  403626:	f8cd b01c 	str.w	fp, [sp, #28]
  40362a:	9012      	str	r0, [sp, #72]	; 0x48
  40362c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403630:	f7fe bfd4 	b.w	4025dc <_svfprintf_r+0x230>
  403634:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403636:	2b47      	cmp	r3, #71	; 0x47
  403638:	f47f ae20 	bne.w	40327c <_svfprintf_r+0xed0>
  40363c:	f01b 0f01 	tst.w	fp, #1
  403640:	f47f aeee 	bne.w	403420 <_svfprintf_r+0x1074>
  403644:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403646:	1b9b      	subs	r3, r3, r6
  403648:	9313      	str	r3, [sp, #76]	; 0x4c
  40364a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40364c:	2b47      	cmp	r3, #71	; 0x47
  40364e:	f43f af18 	beq.w	403482 <_svfprintf_r+0x10d6>
  403652:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403654:	9312      	str	r3, [sp, #72]	; 0x48
  403656:	e721      	b.n	40349c <_svfprintf_r+0x10f0>
  403658:	424f      	negs	r7, r1
  40365a:	3110      	adds	r1, #16
  40365c:	4d48      	ldr	r5, [pc, #288]	; (403780 <_svfprintf_r+0x13d4>)
  40365e:	da2f      	bge.n	4036c0 <_svfprintf_r+0x1314>
  403660:	2410      	movs	r4, #16
  403662:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403666:	e004      	b.n	403672 <_svfprintf_r+0x12c6>
  403668:	f108 0808 	add.w	r8, r8, #8
  40366c:	3f10      	subs	r7, #16
  40366e:	2f10      	cmp	r7, #16
  403670:	dd26      	ble.n	4036c0 <_svfprintf_r+0x1314>
  403672:	3301      	adds	r3, #1
  403674:	3210      	adds	r2, #16
  403676:	2b07      	cmp	r3, #7
  403678:	9227      	str	r2, [sp, #156]	; 0x9c
  40367a:	9326      	str	r3, [sp, #152]	; 0x98
  40367c:	f8c8 5000 	str.w	r5, [r8]
  403680:	f8c8 4004 	str.w	r4, [r8, #4]
  403684:	ddf0      	ble.n	403668 <_svfprintf_r+0x12bc>
  403686:	aa25      	add	r2, sp, #148	; 0x94
  403688:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40368a:	4658      	mov	r0, fp
  40368c:	f001 ffe6 	bl	40565c <__ssprint_r>
  403690:	2800      	cmp	r0, #0
  403692:	f47e af5d 	bne.w	402550 <_svfprintf_r+0x1a4>
  403696:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403698:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40369a:	46c8      	mov	r8, r9
  40369c:	e7e6      	b.n	40366c <_svfprintf_r+0x12c0>
  40369e:	aa25      	add	r2, sp, #148	; 0x94
  4036a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036a2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036a4:	f001 ffda 	bl	40565c <__ssprint_r>
  4036a8:	2800      	cmp	r0, #0
  4036aa:	f47e af51 	bne.w	402550 <_svfprintf_r+0x1a4>
  4036ae:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4036b0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036b4:	46c8      	mov	r8, r9
  4036b6:	e667      	b.n	403388 <_svfprintf_r+0xfdc>
  4036b8:	2000      	movs	r0, #0
  4036ba:	900a      	str	r0, [sp, #40]	; 0x28
  4036bc:	f7fe bed0 	b.w	402460 <_svfprintf_r+0xb4>
  4036c0:	3301      	adds	r3, #1
  4036c2:	443a      	add	r2, r7
  4036c4:	2b07      	cmp	r3, #7
  4036c6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4036ca:	9227      	str	r2, [sp, #156]	; 0x9c
  4036cc:	9326      	str	r3, [sp, #152]	; 0x98
  4036ce:	f108 0808 	add.w	r8, r8, #8
  4036d2:	f77f ae5c 	ble.w	40338e <_svfprintf_r+0xfe2>
  4036d6:	aa25      	add	r2, sp, #148	; 0x94
  4036d8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036da:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036dc:	f001 ffbe 	bl	40565c <__ssprint_r>
  4036e0:	2800      	cmp	r0, #0
  4036e2:	f47e af35 	bne.w	402550 <_svfprintf_r+0x1a4>
  4036e6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036ea:	46c8      	mov	r8, r9
  4036ec:	e64f      	b.n	40338e <_svfprintf_r+0xfe2>
  4036ee:	3330      	adds	r3, #48	; 0x30
  4036f0:	2230      	movs	r2, #48	; 0x30
  4036f2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4036f6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4036fa:	ab22      	add	r3, sp, #136	; 0x88
  4036fc:	e70f      	b.n	40351e <_svfprintf_r+0x1172>
  4036fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403700:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403702:	4413      	add	r3, r2
  403704:	930e      	str	r3, [sp, #56]	; 0x38
  403706:	e775      	b.n	4035f4 <_svfprintf_r+0x1248>
  403708:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40370a:	e5cb      	b.n	4032a4 <_svfprintf_r+0xef8>
  40370c:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40370e:	4e1d      	ldr	r6, [pc, #116]	; (403784 <_svfprintf_r+0x13d8>)
  403710:	2b00      	cmp	r3, #0
  403712:	bfb6      	itet	lt
  403714:	272d      	movlt	r7, #45	; 0x2d
  403716:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40371a:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40371e:	4b1a      	ldr	r3, [pc, #104]	; (403788 <_svfprintf_r+0x13dc>)
  403720:	f7ff ba2f 	b.w	402b82 <_svfprintf_r+0x7d6>
  403724:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403726:	9808      	ldr	r0, [sp, #32]
  403728:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40372a:	4639      	mov	r1, r7
  40372c:	f002 fc60 	bl	405ff0 <__aeabi_dcmpeq>
  403730:	2800      	cmp	r0, #0
  403732:	f47f ae7f 	bne.w	403434 <_svfprintf_r+0x1088>
  403736:	f1c5 0501 	rsb	r5, r5, #1
  40373a:	951f      	str	r5, [sp, #124]	; 0x7c
  40373c:	442c      	add	r4, r5
  40373e:	e59e      	b.n	40327e <_svfprintf_r+0xed2>
  403740:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403742:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403744:	4413      	add	r3, r2
  403746:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403748:	441a      	add	r2, r3
  40374a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40374e:	920e      	str	r2, [sp, #56]	; 0x38
  403750:	9308      	str	r3, [sp, #32]
  403752:	e5c7      	b.n	4032e4 <_svfprintf_r+0xf38>
  403754:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403756:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403758:	f1c3 0301 	rsb	r3, r3, #1
  40375c:	441a      	add	r2, r3
  40375e:	4613      	mov	r3, r2
  403760:	e7d0      	b.n	403704 <_svfprintf_r+0x1358>
  403762:	f01b 0301 	ands.w	r3, fp, #1
  403766:	9312      	str	r3, [sp, #72]	; 0x48
  403768:	f47f aee2 	bne.w	403530 <_svfprintf_r+0x1184>
  40376c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40376e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403772:	9308      	str	r3, [sp, #32]
  403774:	e5b6      	b.n	4032e4 <_svfprintf_r+0xf38>
  403776:	bf00      	nop
  403778:	66666667 	.word	0x66666667
  40377c:	00406e7c 	.word	0x00406e7c
  403780:	00406e98 	.word	0x00406e98
  403784:	00406e50 	.word	0x00406e50
  403788:	00406e4c 	.word	0x00406e4c
  40378c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40378e:	b913      	cbnz	r3, 403796 <_svfprintf_r+0x13ea>
  403790:	f01b 0f01 	tst.w	fp, #1
  403794:	d002      	beq.n	40379c <_svfprintf_r+0x13f0>
  403796:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403798:	3301      	adds	r3, #1
  40379a:	e7d4      	b.n	403746 <_svfprintf_r+0x139a>
  40379c:	2301      	movs	r3, #1
  40379e:	e73a      	b.n	403616 <_svfprintf_r+0x126a>
  4037a0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4037a2:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4037a6:	6828      	ldr	r0, [r5, #0]
  4037a8:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4037ac:	900a      	str	r0, [sp, #40]	; 0x28
  4037ae:	4628      	mov	r0, r5
  4037b0:	3004      	adds	r0, #4
  4037b2:	46a2      	mov	sl, r4
  4037b4:	900f      	str	r0, [sp, #60]	; 0x3c
  4037b6:	f7fe be51 	b.w	40245c <_svfprintf_r+0xb0>
  4037ba:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037be:	f7ff b867 	b.w	402890 <_svfprintf_r+0x4e4>
  4037c2:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037c6:	f7ff ba15 	b.w	402bf4 <_svfprintf_r+0x848>
  4037ca:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4037ce:	e6a6      	b.n	40351e <_svfprintf_r+0x1172>
  4037d0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037d4:	f7ff b8eb 	b.w	4029ae <_svfprintf_r+0x602>
  4037d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4037da:	230c      	movs	r3, #12
  4037dc:	6013      	str	r3, [r2, #0]
  4037de:	f04f 33ff 	mov.w	r3, #4294967295
  4037e2:	9309      	str	r3, [sp, #36]	; 0x24
  4037e4:	f7fe bebd 	b.w	402562 <_svfprintf_r+0x1b6>
  4037e8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037ec:	f7ff b99a 	b.w	402b24 <_svfprintf_r+0x778>
  4037f0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037f4:	f7ff b976 	b.w	402ae4 <_svfprintf_r+0x738>
  4037f8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037fc:	f7ff b959 	b.w	402ab2 <_svfprintf_r+0x706>
  403800:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403804:	f7ff b912 	b.w	402a2c <_svfprintf_r+0x680>

00403808 <register_fini>:
  403808:	4b02      	ldr	r3, [pc, #8]	; (403814 <register_fini+0xc>)
  40380a:	b113      	cbz	r3, 403812 <register_fini+0xa>
  40380c:	4802      	ldr	r0, [pc, #8]	; (403818 <register_fini+0x10>)
  40380e:	f000 b805 	b.w	40381c <atexit>
  403812:	4770      	bx	lr
  403814:	00000000 	.word	0x00000000
  403818:	004047a5 	.word	0x004047a5

0040381c <atexit>:
  40381c:	2300      	movs	r3, #0
  40381e:	4601      	mov	r1, r0
  403820:	461a      	mov	r2, r3
  403822:	4618      	mov	r0, r3
  403824:	f001 bf98 	b.w	405758 <__register_exitproc>

00403828 <quorem>:
  403828:	6902      	ldr	r2, [r0, #16]
  40382a:	690b      	ldr	r3, [r1, #16]
  40382c:	4293      	cmp	r3, r2
  40382e:	f300 808d 	bgt.w	40394c <quorem+0x124>
  403832:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403836:	f103 38ff 	add.w	r8, r3, #4294967295
  40383a:	f101 0714 	add.w	r7, r1, #20
  40383e:	f100 0b14 	add.w	fp, r0, #20
  403842:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403846:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40384a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40384e:	b083      	sub	sp, #12
  403850:	3201      	adds	r2, #1
  403852:	fbb3 f9f2 	udiv	r9, r3, r2
  403856:	eb0b 0304 	add.w	r3, fp, r4
  40385a:	9400      	str	r4, [sp, #0]
  40385c:	eb07 0a04 	add.w	sl, r7, r4
  403860:	9301      	str	r3, [sp, #4]
  403862:	f1b9 0f00 	cmp.w	r9, #0
  403866:	d039      	beq.n	4038dc <quorem+0xb4>
  403868:	2500      	movs	r5, #0
  40386a:	462e      	mov	r6, r5
  40386c:	46bc      	mov	ip, r7
  40386e:	46de      	mov	lr, fp
  403870:	f85c 4b04 	ldr.w	r4, [ip], #4
  403874:	f8de 3000 	ldr.w	r3, [lr]
  403878:	b2a2      	uxth	r2, r4
  40387a:	fb09 5502 	mla	r5, r9, r2, r5
  40387e:	0c22      	lsrs	r2, r4, #16
  403880:	0c2c      	lsrs	r4, r5, #16
  403882:	fb09 4202 	mla	r2, r9, r2, r4
  403886:	b2ad      	uxth	r5, r5
  403888:	1b75      	subs	r5, r6, r5
  40388a:	b296      	uxth	r6, r2
  40388c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403890:	fa15 f383 	uxtah	r3, r5, r3
  403894:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403898:	b29b      	uxth	r3, r3
  40389a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40389e:	45e2      	cmp	sl, ip
  4038a0:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4038a4:	f84e 3b04 	str.w	r3, [lr], #4
  4038a8:	ea4f 4626 	mov.w	r6, r6, asr #16
  4038ac:	d2e0      	bcs.n	403870 <quorem+0x48>
  4038ae:	9b00      	ldr	r3, [sp, #0]
  4038b0:	f85b 3003 	ldr.w	r3, [fp, r3]
  4038b4:	b993      	cbnz	r3, 4038dc <quorem+0xb4>
  4038b6:	9c01      	ldr	r4, [sp, #4]
  4038b8:	1f23      	subs	r3, r4, #4
  4038ba:	459b      	cmp	fp, r3
  4038bc:	d20c      	bcs.n	4038d8 <quorem+0xb0>
  4038be:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4038c2:	b94b      	cbnz	r3, 4038d8 <quorem+0xb0>
  4038c4:	f1a4 0308 	sub.w	r3, r4, #8
  4038c8:	e002      	b.n	4038d0 <quorem+0xa8>
  4038ca:	681a      	ldr	r2, [r3, #0]
  4038cc:	3b04      	subs	r3, #4
  4038ce:	b91a      	cbnz	r2, 4038d8 <quorem+0xb0>
  4038d0:	459b      	cmp	fp, r3
  4038d2:	f108 38ff 	add.w	r8, r8, #4294967295
  4038d6:	d3f8      	bcc.n	4038ca <quorem+0xa2>
  4038d8:	f8c0 8010 	str.w	r8, [r0, #16]
  4038dc:	4604      	mov	r4, r0
  4038de:	f001 fd33 	bl	405348 <__mcmp>
  4038e2:	2800      	cmp	r0, #0
  4038e4:	db2e      	blt.n	403944 <quorem+0x11c>
  4038e6:	f109 0901 	add.w	r9, r9, #1
  4038ea:	465d      	mov	r5, fp
  4038ec:	2300      	movs	r3, #0
  4038ee:	f857 1b04 	ldr.w	r1, [r7], #4
  4038f2:	6828      	ldr	r0, [r5, #0]
  4038f4:	b28a      	uxth	r2, r1
  4038f6:	1a9a      	subs	r2, r3, r2
  4038f8:	0c0b      	lsrs	r3, r1, #16
  4038fa:	fa12 f280 	uxtah	r2, r2, r0
  4038fe:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403902:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403906:	b292      	uxth	r2, r2
  403908:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40390c:	45ba      	cmp	sl, r7
  40390e:	f845 2b04 	str.w	r2, [r5], #4
  403912:	ea4f 4323 	mov.w	r3, r3, asr #16
  403916:	d2ea      	bcs.n	4038ee <quorem+0xc6>
  403918:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  40391c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403920:	b982      	cbnz	r2, 403944 <quorem+0x11c>
  403922:	1f1a      	subs	r2, r3, #4
  403924:	4593      	cmp	fp, r2
  403926:	d20b      	bcs.n	403940 <quorem+0x118>
  403928:	f853 2c04 	ldr.w	r2, [r3, #-4]
  40392c:	b942      	cbnz	r2, 403940 <quorem+0x118>
  40392e:	3b08      	subs	r3, #8
  403930:	e002      	b.n	403938 <quorem+0x110>
  403932:	681a      	ldr	r2, [r3, #0]
  403934:	3b04      	subs	r3, #4
  403936:	b91a      	cbnz	r2, 403940 <quorem+0x118>
  403938:	459b      	cmp	fp, r3
  40393a:	f108 38ff 	add.w	r8, r8, #4294967295
  40393e:	d3f8      	bcc.n	403932 <quorem+0x10a>
  403940:	f8c4 8010 	str.w	r8, [r4, #16]
  403944:	4648      	mov	r0, r9
  403946:	b003      	add	sp, #12
  403948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40394c:	2000      	movs	r0, #0
  40394e:	4770      	bx	lr

00403950 <_dtoa_r>:
  403950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403954:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403956:	b09b      	sub	sp, #108	; 0x6c
  403958:	4604      	mov	r4, r0
  40395a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40395c:	4692      	mov	sl, r2
  40395e:	469b      	mov	fp, r3
  403960:	b141      	cbz	r1, 403974 <_dtoa_r+0x24>
  403962:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403964:	604a      	str	r2, [r1, #4]
  403966:	2301      	movs	r3, #1
  403968:	4093      	lsls	r3, r2
  40396a:	608b      	str	r3, [r1, #8]
  40396c:	f001 fb14 	bl	404f98 <_Bfree>
  403970:	2300      	movs	r3, #0
  403972:	6423      	str	r3, [r4, #64]	; 0x40
  403974:	f1bb 0f00 	cmp.w	fp, #0
  403978:	465d      	mov	r5, fp
  40397a:	db35      	blt.n	4039e8 <_dtoa_r+0x98>
  40397c:	2300      	movs	r3, #0
  40397e:	6033      	str	r3, [r6, #0]
  403980:	4b9d      	ldr	r3, [pc, #628]	; (403bf8 <_dtoa_r+0x2a8>)
  403982:	43ab      	bics	r3, r5
  403984:	d015      	beq.n	4039b2 <_dtoa_r+0x62>
  403986:	4650      	mov	r0, sl
  403988:	4659      	mov	r1, fp
  40398a:	2200      	movs	r2, #0
  40398c:	2300      	movs	r3, #0
  40398e:	f002 fb2f 	bl	405ff0 <__aeabi_dcmpeq>
  403992:	4680      	mov	r8, r0
  403994:	2800      	cmp	r0, #0
  403996:	d02d      	beq.n	4039f4 <_dtoa_r+0xa4>
  403998:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40399a:	2301      	movs	r3, #1
  40399c:	6013      	str	r3, [r2, #0]
  40399e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4039a0:	2b00      	cmp	r3, #0
  4039a2:	f000 80bd 	beq.w	403b20 <_dtoa_r+0x1d0>
  4039a6:	4895      	ldr	r0, [pc, #596]	; (403bfc <_dtoa_r+0x2ac>)
  4039a8:	6018      	str	r0, [r3, #0]
  4039aa:	3801      	subs	r0, #1
  4039ac:	b01b      	add	sp, #108	; 0x6c
  4039ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039b2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4039b4:	f242 730f 	movw	r3, #9999	; 0x270f
  4039b8:	6013      	str	r3, [r2, #0]
  4039ba:	f1ba 0f00 	cmp.w	sl, #0
  4039be:	d10d      	bne.n	4039dc <_dtoa_r+0x8c>
  4039c0:	f3c5 0513 	ubfx	r5, r5, #0, #20
  4039c4:	b955      	cbnz	r5, 4039dc <_dtoa_r+0x8c>
  4039c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4039c8:	488d      	ldr	r0, [pc, #564]	; (403c00 <_dtoa_r+0x2b0>)
  4039ca:	2b00      	cmp	r3, #0
  4039cc:	d0ee      	beq.n	4039ac <_dtoa_r+0x5c>
  4039ce:	f100 0308 	add.w	r3, r0, #8
  4039d2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4039d4:	6013      	str	r3, [r2, #0]
  4039d6:	b01b      	add	sp, #108	; 0x6c
  4039d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4039de:	4889      	ldr	r0, [pc, #548]	; (403c04 <_dtoa_r+0x2b4>)
  4039e0:	2b00      	cmp	r3, #0
  4039e2:	d0e3      	beq.n	4039ac <_dtoa_r+0x5c>
  4039e4:	1cc3      	adds	r3, r0, #3
  4039e6:	e7f4      	b.n	4039d2 <_dtoa_r+0x82>
  4039e8:	2301      	movs	r3, #1
  4039ea:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4039ee:	6033      	str	r3, [r6, #0]
  4039f0:	46ab      	mov	fp, r5
  4039f2:	e7c5      	b.n	403980 <_dtoa_r+0x30>
  4039f4:	aa18      	add	r2, sp, #96	; 0x60
  4039f6:	ab19      	add	r3, sp, #100	; 0x64
  4039f8:	9201      	str	r2, [sp, #4]
  4039fa:	9300      	str	r3, [sp, #0]
  4039fc:	4652      	mov	r2, sl
  4039fe:	465b      	mov	r3, fp
  403a00:	4620      	mov	r0, r4
  403a02:	f001 fd41 	bl	405488 <__d2b>
  403a06:	0d2b      	lsrs	r3, r5, #20
  403a08:	4681      	mov	r9, r0
  403a0a:	d071      	beq.n	403af0 <_dtoa_r+0x1a0>
  403a0c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403a10:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403a14:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403a16:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403a1a:	4650      	mov	r0, sl
  403a1c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403a20:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403a24:	2200      	movs	r2, #0
  403a26:	4b78      	ldr	r3, [pc, #480]	; (403c08 <_dtoa_r+0x2b8>)
  403a28:	f7fe f85e 	bl	401ae8 <__aeabi_dsub>
  403a2c:	a36c      	add	r3, pc, #432	; (adr r3, 403be0 <_dtoa_r+0x290>)
  403a2e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a32:	f7fe fa0d 	bl	401e50 <__aeabi_dmul>
  403a36:	a36c      	add	r3, pc, #432	; (adr r3, 403be8 <_dtoa_r+0x298>)
  403a38:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a3c:	f7fe f856 	bl	401aec <__adddf3>
  403a40:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403a44:	4630      	mov	r0, r6
  403a46:	f7fe f99d 	bl	401d84 <__aeabi_i2d>
  403a4a:	a369      	add	r3, pc, #420	; (adr r3, 403bf0 <_dtoa_r+0x2a0>)
  403a4c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a50:	f7fe f9fe 	bl	401e50 <__aeabi_dmul>
  403a54:	4602      	mov	r2, r0
  403a56:	460b      	mov	r3, r1
  403a58:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403a5c:	f7fe f846 	bl	401aec <__adddf3>
  403a60:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403a64:	f002 fb0c 	bl	406080 <__aeabi_d2iz>
  403a68:	2200      	movs	r2, #0
  403a6a:	9002      	str	r0, [sp, #8]
  403a6c:	2300      	movs	r3, #0
  403a6e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403a72:	f002 fac7 	bl	406004 <__aeabi_dcmplt>
  403a76:	2800      	cmp	r0, #0
  403a78:	f040 8173 	bne.w	403d62 <_dtoa_r+0x412>
  403a7c:	9d02      	ldr	r5, [sp, #8]
  403a7e:	2d16      	cmp	r5, #22
  403a80:	f200 815d 	bhi.w	403d3e <_dtoa_r+0x3ee>
  403a84:	4b61      	ldr	r3, [pc, #388]	; (403c0c <_dtoa_r+0x2bc>)
  403a86:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403a8a:	e9d3 0100 	ldrd	r0, r1, [r3]
  403a8e:	4652      	mov	r2, sl
  403a90:	465b      	mov	r3, fp
  403a92:	f002 fad5 	bl	406040 <__aeabi_dcmpgt>
  403a96:	2800      	cmp	r0, #0
  403a98:	f000 81c5 	beq.w	403e26 <_dtoa_r+0x4d6>
  403a9c:	1e6b      	subs	r3, r5, #1
  403a9e:	9302      	str	r3, [sp, #8]
  403aa0:	2300      	movs	r3, #0
  403aa2:	930e      	str	r3, [sp, #56]	; 0x38
  403aa4:	1bbf      	subs	r7, r7, r6
  403aa6:	1e7b      	subs	r3, r7, #1
  403aa8:	9306      	str	r3, [sp, #24]
  403aaa:	f100 8154 	bmi.w	403d56 <_dtoa_r+0x406>
  403aae:	2300      	movs	r3, #0
  403ab0:	9308      	str	r3, [sp, #32]
  403ab2:	9b02      	ldr	r3, [sp, #8]
  403ab4:	2b00      	cmp	r3, #0
  403ab6:	f2c0 8145 	blt.w	403d44 <_dtoa_r+0x3f4>
  403aba:	9a06      	ldr	r2, [sp, #24]
  403abc:	930d      	str	r3, [sp, #52]	; 0x34
  403abe:	4611      	mov	r1, r2
  403ac0:	4419      	add	r1, r3
  403ac2:	2300      	movs	r3, #0
  403ac4:	9106      	str	r1, [sp, #24]
  403ac6:	930c      	str	r3, [sp, #48]	; 0x30
  403ac8:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403aca:	2b09      	cmp	r3, #9
  403acc:	d82a      	bhi.n	403b24 <_dtoa_r+0x1d4>
  403ace:	2b05      	cmp	r3, #5
  403ad0:	f340 865b 	ble.w	40478a <_dtoa_r+0xe3a>
  403ad4:	3b04      	subs	r3, #4
  403ad6:	9324      	str	r3, [sp, #144]	; 0x90
  403ad8:	2500      	movs	r5, #0
  403ada:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403adc:	3b02      	subs	r3, #2
  403ade:	2b03      	cmp	r3, #3
  403ae0:	f200 8642 	bhi.w	404768 <_dtoa_r+0xe18>
  403ae4:	e8df f013 	tbh	[pc, r3, lsl #1]
  403ae8:	02c903d4 	.word	0x02c903d4
  403aec:	046103df 	.word	0x046103df
  403af0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403af2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403af4:	443e      	add	r6, r7
  403af6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403afa:	2b20      	cmp	r3, #32
  403afc:	f340 818e 	ble.w	403e1c <_dtoa_r+0x4cc>
  403b00:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403b04:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403b08:	409d      	lsls	r5, r3
  403b0a:	fa2a f000 	lsr.w	r0, sl, r0
  403b0e:	4328      	orrs	r0, r5
  403b10:	f7fe f928 	bl	401d64 <__aeabi_ui2d>
  403b14:	2301      	movs	r3, #1
  403b16:	3e01      	subs	r6, #1
  403b18:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403b1c:	9314      	str	r3, [sp, #80]	; 0x50
  403b1e:	e781      	b.n	403a24 <_dtoa_r+0xd4>
  403b20:	483b      	ldr	r0, [pc, #236]	; (403c10 <_dtoa_r+0x2c0>)
  403b22:	e743      	b.n	4039ac <_dtoa_r+0x5c>
  403b24:	2100      	movs	r1, #0
  403b26:	6461      	str	r1, [r4, #68]	; 0x44
  403b28:	4620      	mov	r0, r4
  403b2a:	9125      	str	r1, [sp, #148]	; 0x94
  403b2c:	f001 fa0e 	bl	404f4c <_Balloc>
  403b30:	f04f 33ff 	mov.w	r3, #4294967295
  403b34:	930a      	str	r3, [sp, #40]	; 0x28
  403b36:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b38:	930f      	str	r3, [sp, #60]	; 0x3c
  403b3a:	2301      	movs	r3, #1
  403b3c:	9004      	str	r0, [sp, #16]
  403b3e:	6420      	str	r0, [r4, #64]	; 0x40
  403b40:	9224      	str	r2, [sp, #144]	; 0x90
  403b42:	930b      	str	r3, [sp, #44]	; 0x2c
  403b44:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403b46:	2b00      	cmp	r3, #0
  403b48:	f2c0 80d9 	blt.w	403cfe <_dtoa_r+0x3ae>
  403b4c:	9a02      	ldr	r2, [sp, #8]
  403b4e:	2a0e      	cmp	r2, #14
  403b50:	f300 80d5 	bgt.w	403cfe <_dtoa_r+0x3ae>
  403b54:	4b2d      	ldr	r3, [pc, #180]	; (403c0c <_dtoa_r+0x2bc>)
  403b56:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b5e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403b62:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403b64:	2b00      	cmp	r3, #0
  403b66:	f2c0 83ba 	blt.w	4042de <_dtoa_r+0x98e>
  403b6a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403b6e:	4650      	mov	r0, sl
  403b70:	462a      	mov	r2, r5
  403b72:	4633      	mov	r3, r6
  403b74:	4659      	mov	r1, fp
  403b76:	f7fe fa95 	bl	4020a4 <__aeabi_ddiv>
  403b7a:	f002 fa81 	bl	406080 <__aeabi_d2iz>
  403b7e:	4680      	mov	r8, r0
  403b80:	f7fe f900 	bl	401d84 <__aeabi_i2d>
  403b84:	462a      	mov	r2, r5
  403b86:	4633      	mov	r3, r6
  403b88:	f7fe f962 	bl	401e50 <__aeabi_dmul>
  403b8c:	460b      	mov	r3, r1
  403b8e:	4602      	mov	r2, r0
  403b90:	4659      	mov	r1, fp
  403b92:	4650      	mov	r0, sl
  403b94:	f7fd ffa8 	bl	401ae8 <__aeabi_dsub>
  403b98:	9d04      	ldr	r5, [sp, #16]
  403b9a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403b9e:	702b      	strb	r3, [r5, #0]
  403ba0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ba2:	2b01      	cmp	r3, #1
  403ba4:	4606      	mov	r6, r0
  403ba6:	460f      	mov	r7, r1
  403ba8:	f105 0501 	add.w	r5, r5, #1
  403bac:	d068      	beq.n	403c80 <_dtoa_r+0x330>
  403bae:	2200      	movs	r2, #0
  403bb0:	4b18      	ldr	r3, [pc, #96]	; (403c14 <_dtoa_r+0x2c4>)
  403bb2:	f7fe f94d 	bl	401e50 <__aeabi_dmul>
  403bb6:	2200      	movs	r2, #0
  403bb8:	2300      	movs	r3, #0
  403bba:	4606      	mov	r6, r0
  403bbc:	460f      	mov	r7, r1
  403bbe:	f002 fa17 	bl	405ff0 <__aeabi_dcmpeq>
  403bc2:	2800      	cmp	r0, #0
  403bc4:	f040 8088 	bne.w	403cd8 <_dtoa_r+0x388>
  403bc8:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403bcc:	f04f 0a00 	mov.w	sl, #0
  403bd0:	f8df b040 	ldr.w	fp, [pc, #64]	; 403c14 <_dtoa_r+0x2c4>
  403bd4:	940c      	str	r4, [sp, #48]	; 0x30
  403bd6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403bda:	e028      	b.n	403c2e <_dtoa_r+0x2de>
  403bdc:	f3af 8000 	nop.w
  403be0:	636f4361 	.word	0x636f4361
  403be4:	3fd287a7 	.word	0x3fd287a7
  403be8:	8b60c8b3 	.word	0x8b60c8b3
  403bec:	3fc68a28 	.word	0x3fc68a28
  403bf0:	509f79fb 	.word	0x509f79fb
  403bf4:	3fd34413 	.word	0x3fd34413
  403bf8:	7ff00000 	.word	0x7ff00000
  403bfc:	00406e85 	.word	0x00406e85
  403c00:	00406ea8 	.word	0x00406ea8
  403c04:	00406eb4 	.word	0x00406eb4
  403c08:	3ff80000 	.word	0x3ff80000
  403c0c:	00406ee0 	.word	0x00406ee0
  403c10:	00406e84 	.word	0x00406e84
  403c14:	40240000 	.word	0x40240000
  403c18:	f7fe f91a 	bl	401e50 <__aeabi_dmul>
  403c1c:	2200      	movs	r2, #0
  403c1e:	2300      	movs	r3, #0
  403c20:	4606      	mov	r6, r0
  403c22:	460f      	mov	r7, r1
  403c24:	f002 f9e4 	bl	405ff0 <__aeabi_dcmpeq>
  403c28:	2800      	cmp	r0, #0
  403c2a:	f040 83c1 	bne.w	4043b0 <_dtoa_r+0xa60>
  403c2e:	4642      	mov	r2, r8
  403c30:	464b      	mov	r3, r9
  403c32:	4630      	mov	r0, r6
  403c34:	4639      	mov	r1, r7
  403c36:	f7fe fa35 	bl	4020a4 <__aeabi_ddiv>
  403c3a:	f002 fa21 	bl	406080 <__aeabi_d2iz>
  403c3e:	4604      	mov	r4, r0
  403c40:	f7fe f8a0 	bl	401d84 <__aeabi_i2d>
  403c44:	4642      	mov	r2, r8
  403c46:	464b      	mov	r3, r9
  403c48:	f7fe f902 	bl	401e50 <__aeabi_dmul>
  403c4c:	4602      	mov	r2, r0
  403c4e:	460b      	mov	r3, r1
  403c50:	4630      	mov	r0, r6
  403c52:	4639      	mov	r1, r7
  403c54:	f7fd ff48 	bl	401ae8 <__aeabi_dsub>
  403c58:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403c5c:	9e04      	ldr	r6, [sp, #16]
  403c5e:	f805 eb01 	strb.w	lr, [r5], #1
  403c62:	eba5 0e06 	sub.w	lr, r5, r6
  403c66:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403c68:	45b6      	cmp	lr, r6
  403c6a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403c6e:	4652      	mov	r2, sl
  403c70:	465b      	mov	r3, fp
  403c72:	d1d1      	bne.n	403c18 <_dtoa_r+0x2c8>
  403c74:	46a0      	mov	r8, r4
  403c76:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403c7a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403c7c:	4606      	mov	r6, r0
  403c7e:	460f      	mov	r7, r1
  403c80:	4632      	mov	r2, r6
  403c82:	463b      	mov	r3, r7
  403c84:	4630      	mov	r0, r6
  403c86:	4639      	mov	r1, r7
  403c88:	f7fd ff30 	bl	401aec <__adddf3>
  403c8c:	4606      	mov	r6, r0
  403c8e:	460f      	mov	r7, r1
  403c90:	4602      	mov	r2, r0
  403c92:	460b      	mov	r3, r1
  403c94:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403c98:	f002 f9b4 	bl	406004 <__aeabi_dcmplt>
  403c9c:	b948      	cbnz	r0, 403cb2 <_dtoa_r+0x362>
  403c9e:	4632      	mov	r2, r6
  403ca0:	463b      	mov	r3, r7
  403ca2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403ca6:	f002 f9a3 	bl	405ff0 <__aeabi_dcmpeq>
  403caa:	b1a8      	cbz	r0, 403cd8 <_dtoa_r+0x388>
  403cac:	f018 0f01 	tst.w	r8, #1
  403cb0:	d012      	beq.n	403cd8 <_dtoa_r+0x388>
  403cb2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403cb6:	9a04      	ldr	r2, [sp, #16]
  403cb8:	1e6b      	subs	r3, r5, #1
  403cba:	e004      	b.n	403cc6 <_dtoa_r+0x376>
  403cbc:	429a      	cmp	r2, r3
  403cbe:	f000 8401 	beq.w	4044c4 <_dtoa_r+0xb74>
  403cc2:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403cc6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403cca:	f103 0501 	add.w	r5, r3, #1
  403cce:	d0f5      	beq.n	403cbc <_dtoa_r+0x36c>
  403cd0:	f108 0801 	add.w	r8, r8, #1
  403cd4:	f883 8000 	strb.w	r8, [r3]
  403cd8:	4649      	mov	r1, r9
  403cda:	4620      	mov	r0, r4
  403cdc:	f001 f95c 	bl	404f98 <_Bfree>
  403ce0:	2200      	movs	r2, #0
  403ce2:	9b02      	ldr	r3, [sp, #8]
  403ce4:	702a      	strb	r2, [r5, #0]
  403ce6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403ce8:	3301      	adds	r3, #1
  403cea:	6013      	str	r3, [r2, #0]
  403cec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403cee:	2b00      	cmp	r3, #0
  403cf0:	f000 839e 	beq.w	404430 <_dtoa_r+0xae0>
  403cf4:	9804      	ldr	r0, [sp, #16]
  403cf6:	601d      	str	r5, [r3, #0]
  403cf8:	b01b      	add	sp, #108	; 0x6c
  403cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403cfe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403d00:	2a00      	cmp	r2, #0
  403d02:	d03e      	beq.n	403d82 <_dtoa_r+0x432>
  403d04:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403d06:	2a01      	cmp	r2, #1
  403d08:	f340 8311 	ble.w	40432e <_dtoa_r+0x9de>
  403d0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403d10:	1e5f      	subs	r7, r3, #1
  403d12:	42ba      	cmp	r2, r7
  403d14:	f2c0 838f 	blt.w	404436 <_dtoa_r+0xae6>
  403d18:	1bd7      	subs	r7, r2, r7
  403d1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d1c:	2b00      	cmp	r3, #0
  403d1e:	f2c0 848b 	blt.w	404638 <_dtoa_r+0xce8>
  403d22:	9d08      	ldr	r5, [sp, #32]
  403d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d26:	9a08      	ldr	r2, [sp, #32]
  403d28:	441a      	add	r2, r3
  403d2a:	9208      	str	r2, [sp, #32]
  403d2c:	9a06      	ldr	r2, [sp, #24]
  403d2e:	2101      	movs	r1, #1
  403d30:	441a      	add	r2, r3
  403d32:	4620      	mov	r0, r4
  403d34:	9206      	str	r2, [sp, #24]
  403d36:	f001 f9c9 	bl	4050cc <__i2b>
  403d3a:	4606      	mov	r6, r0
  403d3c:	e024      	b.n	403d88 <_dtoa_r+0x438>
  403d3e:	2301      	movs	r3, #1
  403d40:	930e      	str	r3, [sp, #56]	; 0x38
  403d42:	e6af      	b.n	403aa4 <_dtoa_r+0x154>
  403d44:	9a08      	ldr	r2, [sp, #32]
  403d46:	9b02      	ldr	r3, [sp, #8]
  403d48:	1ad2      	subs	r2, r2, r3
  403d4a:	425b      	negs	r3, r3
  403d4c:	930c      	str	r3, [sp, #48]	; 0x30
  403d4e:	2300      	movs	r3, #0
  403d50:	9208      	str	r2, [sp, #32]
  403d52:	930d      	str	r3, [sp, #52]	; 0x34
  403d54:	e6b8      	b.n	403ac8 <_dtoa_r+0x178>
  403d56:	f1c7 0301 	rsb	r3, r7, #1
  403d5a:	9308      	str	r3, [sp, #32]
  403d5c:	2300      	movs	r3, #0
  403d5e:	9306      	str	r3, [sp, #24]
  403d60:	e6a7      	b.n	403ab2 <_dtoa_r+0x162>
  403d62:	9d02      	ldr	r5, [sp, #8]
  403d64:	4628      	mov	r0, r5
  403d66:	f7fe f80d 	bl	401d84 <__aeabi_i2d>
  403d6a:	4602      	mov	r2, r0
  403d6c:	460b      	mov	r3, r1
  403d6e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403d72:	f002 f93d 	bl	405ff0 <__aeabi_dcmpeq>
  403d76:	2800      	cmp	r0, #0
  403d78:	f47f ae80 	bne.w	403a7c <_dtoa_r+0x12c>
  403d7c:	1e6b      	subs	r3, r5, #1
  403d7e:	9302      	str	r3, [sp, #8]
  403d80:	e67c      	b.n	403a7c <_dtoa_r+0x12c>
  403d82:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403d84:	9d08      	ldr	r5, [sp, #32]
  403d86:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403d88:	2d00      	cmp	r5, #0
  403d8a:	dd0c      	ble.n	403da6 <_dtoa_r+0x456>
  403d8c:	9906      	ldr	r1, [sp, #24]
  403d8e:	2900      	cmp	r1, #0
  403d90:	460b      	mov	r3, r1
  403d92:	dd08      	ble.n	403da6 <_dtoa_r+0x456>
  403d94:	42a9      	cmp	r1, r5
  403d96:	9a08      	ldr	r2, [sp, #32]
  403d98:	bfa8      	it	ge
  403d9a:	462b      	movge	r3, r5
  403d9c:	1ad2      	subs	r2, r2, r3
  403d9e:	1aed      	subs	r5, r5, r3
  403da0:	1acb      	subs	r3, r1, r3
  403da2:	9208      	str	r2, [sp, #32]
  403da4:	9306      	str	r3, [sp, #24]
  403da6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403da8:	b1d3      	cbz	r3, 403de0 <_dtoa_r+0x490>
  403daa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403dac:	2b00      	cmp	r3, #0
  403dae:	f000 82b7 	beq.w	404320 <_dtoa_r+0x9d0>
  403db2:	2f00      	cmp	r7, #0
  403db4:	dd10      	ble.n	403dd8 <_dtoa_r+0x488>
  403db6:	4631      	mov	r1, r6
  403db8:	463a      	mov	r2, r7
  403dba:	4620      	mov	r0, r4
  403dbc:	f001 fa22 	bl	405204 <__pow5mult>
  403dc0:	464a      	mov	r2, r9
  403dc2:	4601      	mov	r1, r0
  403dc4:	4606      	mov	r6, r0
  403dc6:	4620      	mov	r0, r4
  403dc8:	f001 f98a 	bl	4050e0 <__multiply>
  403dcc:	4649      	mov	r1, r9
  403dce:	4680      	mov	r8, r0
  403dd0:	4620      	mov	r0, r4
  403dd2:	f001 f8e1 	bl	404f98 <_Bfree>
  403dd6:	46c1      	mov	r9, r8
  403dd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403dda:	1bda      	subs	r2, r3, r7
  403ddc:	f040 82a1 	bne.w	404322 <_dtoa_r+0x9d2>
  403de0:	2101      	movs	r1, #1
  403de2:	4620      	mov	r0, r4
  403de4:	f001 f972 	bl	4050cc <__i2b>
  403de8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403dea:	2b00      	cmp	r3, #0
  403dec:	4680      	mov	r8, r0
  403dee:	dd1c      	ble.n	403e2a <_dtoa_r+0x4da>
  403df0:	4601      	mov	r1, r0
  403df2:	461a      	mov	r2, r3
  403df4:	4620      	mov	r0, r4
  403df6:	f001 fa05 	bl	405204 <__pow5mult>
  403dfa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403dfc:	2b01      	cmp	r3, #1
  403dfe:	4680      	mov	r8, r0
  403e00:	f340 8254 	ble.w	4042ac <_dtoa_r+0x95c>
  403e04:	2300      	movs	r3, #0
  403e06:	930c      	str	r3, [sp, #48]	; 0x30
  403e08:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403e0c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403e10:	6918      	ldr	r0, [r3, #16]
  403e12:	f001 f90b 	bl	40502c <__hi0bits>
  403e16:	f1c0 0020 	rsb	r0, r0, #32
  403e1a:	e010      	b.n	403e3e <_dtoa_r+0x4ee>
  403e1c:	f1c3 0520 	rsb	r5, r3, #32
  403e20:	fa0a f005 	lsl.w	r0, sl, r5
  403e24:	e674      	b.n	403b10 <_dtoa_r+0x1c0>
  403e26:	900e      	str	r0, [sp, #56]	; 0x38
  403e28:	e63c      	b.n	403aa4 <_dtoa_r+0x154>
  403e2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e2c:	2b01      	cmp	r3, #1
  403e2e:	f340 8287 	ble.w	404340 <_dtoa_r+0x9f0>
  403e32:	2300      	movs	r3, #0
  403e34:	930c      	str	r3, [sp, #48]	; 0x30
  403e36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e38:	2001      	movs	r0, #1
  403e3a:	2b00      	cmp	r3, #0
  403e3c:	d1e4      	bne.n	403e08 <_dtoa_r+0x4b8>
  403e3e:	9a06      	ldr	r2, [sp, #24]
  403e40:	4410      	add	r0, r2
  403e42:	f010 001f 	ands.w	r0, r0, #31
  403e46:	f000 80a1 	beq.w	403f8c <_dtoa_r+0x63c>
  403e4a:	f1c0 0320 	rsb	r3, r0, #32
  403e4e:	2b04      	cmp	r3, #4
  403e50:	f340 849e 	ble.w	404790 <_dtoa_r+0xe40>
  403e54:	9b08      	ldr	r3, [sp, #32]
  403e56:	f1c0 001c 	rsb	r0, r0, #28
  403e5a:	4403      	add	r3, r0
  403e5c:	9308      	str	r3, [sp, #32]
  403e5e:	4613      	mov	r3, r2
  403e60:	4403      	add	r3, r0
  403e62:	4405      	add	r5, r0
  403e64:	9306      	str	r3, [sp, #24]
  403e66:	9b08      	ldr	r3, [sp, #32]
  403e68:	2b00      	cmp	r3, #0
  403e6a:	dd05      	ble.n	403e78 <_dtoa_r+0x528>
  403e6c:	4649      	mov	r1, r9
  403e6e:	461a      	mov	r2, r3
  403e70:	4620      	mov	r0, r4
  403e72:	f001 fa17 	bl	4052a4 <__lshift>
  403e76:	4681      	mov	r9, r0
  403e78:	9b06      	ldr	r3, [sp, #24]
  403e7a:	2b00      	cmp	r3, #0
  403e7c:	dd05      	ble.n	403e8a <_dtoa_r+0x53a>
  403e7e:	4641      	mov	r1, r8
  403e80:	461a      	mov	r2, r3
  403e82:	4620      	mov	r0, r4
  403e84:	f001 fa0e 	bl	4052a4 <__lshift>
  403e88:	4680      	mov	r8, r0
  403e8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403e8c:	2b00      	cmp	r3, #0
  403e8e:	f040 8086 	bne.w	403f9e <_dtoa_r+0x64e>
  403e92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e94:	2b00      	cmp	r3, #0
  403e96:	f340 8266 	ble.w	404366 <_dtoa_r+0xa16>
  403e9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e9c:	2b00      	cmp	r3, #0
  403e9e:	f000 8098 	beq.w	403fd2 <_dtoa_r+0x682>
  403ea2:	2d00      	cmp	r5, #0
  403ea4:	dd05      	ble.n	403eb2 <_dtoa_r+0x562>
  403ea6:	4631      	mov	r1, r6
  403ea8:	462a      	mov	r2, r5
  403eaa:	4620      	mov	r0, r4
  403eac:	f001 f9fa 	bl	4052a4 <__lshift>
  403eb0:	4606      	mov	r6, r0
  403eb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403eb4:	2b00      	cmp	r3, #0
  403eb6:	f040 8337 	bne.w	404528 <_dtoa_r+0xbd8>
  403eba:	9606      	str	r6, [sp, #24]
  403ebc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ebe:	9a04      	ldr	r2, [sp, #16]
  403ec0:	f8dd b018 	ldr.w	fp, [sp, #24]
  403ec4:	3b01      	subs	r3, #1
  403ec6:	18d3      	adds	r3, r2, r3
  403ec8:	930b      	str	r3, [sp, #44]	; 0x2c
  403eca:	f00a 0301 	and.w	r3, sl, #1
  403ece:	930c      	str	r3, [sp, #48]	; 0x30
  403ed0:	4617      	mov	r7, r2
  403ed2:	46c2      	mov	sl, r8
  403ed4:	4651      	mov	r1, sl
  403ed6:	4648      	mov	r0, r9
  403ed8:	f7ff fca6 	bl	403828 <quorem>
  403edc:	4631      	mov	r1, r6
  403ede:	4605      	mov	r5, r0
  403ee0:	4648      	mov	r0, r9
  403ee2:	f001 fa31 	bl	405348 <__mcmp>
  403ee6:	465a      	mov	r2, fp
  403ee8:	900a      	str	r0, [sp, #40]	; 0x28
  403eea:	4651      	mov	r1, sl
  403eec:	4620      	mov	r0, r4
  403eee:	f001 fa47 	bl	405380 <__mdiff>
  403ef2:	68c2      	ldr	r2, [r0, #12]
  403ef4:	4680      	mov	r8, r0
  403ef6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403efa:	2a00      	cmp	r2, #0
  403efc:	f040 822b 	bne.w	404356 <_dtoa_r+0xa06>
  403f00:	4601      	mov	r1, r0
  403f02:	4648      	mov	r0, r9
  403f04:	9308      	str	r3, [sp, #32]
  403f06:	f001 fa1f 	bl	405348 <__mcmp>
  403f0a:	4641      	mov	r1, r8
  403f0c:	9006      	str	r0, [sp, #24]
  403f0e:	4620      	mov	r0, r4
  403f10:	f001 f842 	bl	404f98 <_Bfree>
  403f14:	9a06      	ldr	r2, [sp, #24]
  403f16:	9b08      	ldr	r3, [sp, #32]
  403f18:	b932      	cbnz	r2, 403f28 <_dtoa_r+0x5d8>
  403f1a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f1c:	b921      	cbnz	r1, 403f28 <_dtoa_r+0x5d8>
  403f1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f20:	2a00      	cmp	r2, #0
  403f22:	f000 83ef 	beq.w	404704 <_dtoa_r+0xdb4>
  403f26:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403f28:	990a      	ldr	r1, [sp, #40]	; 0x28
  403f2a:	2900      	cmp	r1, #0
  403f2c:	f2c0 829f 	blt.w	40446e <_dtoa_r+0xb1e>
  403f30:	d105      	bne.n	403f3e <_dtoa_r+0x5ee>
  403f32:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f34:	b919      	cbnz	r1, 403f3e <_dtoa_r+0x5ee>
  403f36:	990c      	ldr	r1, [sp, #48]	; 0x30
  403f38:	2900      	cmp	r1, #0
  403f3a:	f000 8298 	beq.w	40446e <_dtoa_r+0xb1e>
  403f3e:	2a00      	cmp	r2, #0
  403f40:	f300 8306 	bgt.w	404550 <_dtoa_r+0xc00>
  403f44:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403f46:	703b      	strb	r3, [r7, #0]
  403f48:	f107 0801 	add.w	r8, r7, #1
  403f4c:	4297      	cmp	r7, r2
  403f4e:	4645      	mov	r5, r8
  403f50:	f000 830c 	beq.w	40456c <_dtoa_r+0xc1c>
  403f54:	4649      	mov	r1, r9
  403f56:	2300      	movs	r3, #0
  403f58:	220a      	movs	r2, #10
  403f5a:	4620      	mov	r0, r4
  403f5c:	f001 f826 	bl	404fac <__multadd>
  403f60:	455e      	cmp	r6, fp
  403f62:	4681      	mov	r9, r0
  403f64:	4631      	mov	r1, r6
  403f66:	f04f 0300 	mov.w	r3, #0
  403f6a:	f04f 020a 	mov.w	r2, #10
  403f6e:	4620      	mov	r0, r4
  403f70:	f000 81eb 	beq.w	40434a <_dtoa_r+0x9fa>
  403f74:	f001 f81a 	bl	404fac <__multadd>
  403f78:	4659      	mov	r1, fp
  403f7a:	4606      	mov	r6, r0
  403f7c:	2300      	movs	r3, #0
  403f7e:	220a      	movs	r2, #10
  403f80:	4620      	mov	r0, r4
  403f82:	f001 f813 	bl	404fac <__multadd>
  403f86:	4647      	mov	r7, r8
  403f88:	4683      	mov	fp, r0
  403f8a:	e7a3      	b.n	403ed4 <_dtoa_r+0x584>
  403f8c:	201c      	movs	r0, #28
  403f8e:	9b08      	ldr	r3, [sp, #32]
  403f90:	4403      	add	r3, r0
  403f92:	9308      	str	r3, [sp, #32]
  403f94:	9b06      	ldr	r3, [sp, #24]
  403f96:	4403      	add	r3, r0
  403f98:	4405      	add	r5, r0
  403f9a:	9306      	str	r3, [sp, #24]
  403f9c:	e763      	b.n	403e66 <_dtoa_r+0x516>
  403f9e:	4641      	mov	r1, r8
  403fa0:	4648      	mov	r0, r9
  403fa2:	f001 f9d1 	bl	405348 <__mcmp>
  403fa6:	2800      	cmp	r0, #0
  403fa8:	f6bf af73 	bge.w	403e92 <_dtoa_r+0x542>
  403fac:	9f02      	ldr	r7, [sp, #8]
  403fae:	4649      	mov	r1, r9
  403fb0:	2300      	movs	r3, #0
  403fb2:	220a      	movs	r2, #10
  403fb4:	4620      	mov	r0, r4
  403fb6:	3f01      	subs	r7, #1
  403fb8:	9702      	str	r7, [sp, #8]
  403fba:	f000 fff7 	bl	404fac <__multadd>
  403fbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403fc0:	4681      	mov	r9, r0
  403fc2:	2b00      	cmp	r3, #0
  403fc4:	f040 83b6 	bne.w	404734 <_dtoa_r+0xde4>
  403fc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403fca:	2b00      	cmp	r3, #0
  403fcc:	f340 83bf 	ble.w	40474e <_dtoa_r+0xdfe>
  403fd0:	930a      	str	r3, [sp, #40]	; 0x28
  403fd2:	f8dd b010 	ldr.w	fp, [sp, #16]
  403fd6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403fd8:	465d      	mov	r5, fp
  403fda:	e002      	b.n	403fe2 <_dtoa_r+0x692>
  403fdc:	f000 ffe6 	bl	404fac <__multadd>
  403fe0:	4681      	mov	r9, r0
  403fe2:	4641      	mov	r1, r8
  403fe4:	4648      	mov	r0, r9
  403fe6:	f7ff fc1f 	bl	403828 <quorem>
  403fea:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403fee:	f805 ab01 	strb.w	sl, [r5], #1
  403ff2:	eba5 030b 	sub.w	r3, r5, fp
  403ff6:	42bb      	cmp	r3, r7
  403ff8:	f04f 020a 	mov.w	r2, #10
  403ffc:	f04f 0300 	mov.w	r3, #0
  404000:	4649      	mov	r1, r9
  404002:	4620      	mov	r0, r4
  404004:	dbea      	blt.n	403fdc <_dtoa_r+0x68c>
  404006:	9b04      	ldr	r3, [sp, #16]
  404008:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40400a:	2a01      	cmp	r2, #1
  40400c:	bfac      	ite	ge
  40400e:	189b      	addge	r3, r3, r2
  404010:	3301      	addlt	r3, #1
  404012:	461d      	mov	r5, r3
  404014:	f04f 0b00 	mov.w	fp, #0
  404018:	4649      	mov	r1, r9
  40401a:	2201      	movs	r2, #1
  40401c:	4620      	mov	r0, r4
  40401e:	f001 f941 	bl	4052a4 <__lshift>
  404022:	4641      	mov	r1, r8
  404024:	4681      	mov	r9, r0
  404026:	f001 f98f 	bl	405348 <__mcmp>
  40402a:	2800      	cmp	r0, #0
  40402c:	f340 823d 	ble.w	4044aa <_dtoa_r+0xb5a>
  404030:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  404034:	9904      	ldr	r1, [sp, #16]
  404036:	1e6b      	subs	r3, r5, #1
  404038:	e004      	b.n	404044 <_dtoa_r+0x6f4>
  40403a:	428b      	cmp	r3, r1
  40403c:	f000 81ae 	beq.w	40439c <_dtoa_r+0xa4c>
  404040:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  404044:	2a39      	cmp	r2, #57	; 0x39
  404046:	f103 0501 	add.w	r5, r3, #1
  40404a:	d0f6      	beq.n	40403a <_dtoa_r+0x6ea>
  40404c:	3201      	adds	r2, #1
  40404e:	701a      	strb	r2, [r3, #0]
  404050:	4641      	mov	r1, r8
  404052:	4620      	mov	r0, r4
  404054:	f000 ffa0 	bl	404f98 <_Bfree>
  404058:	2e00      	cmp	r6, #0
  40405a:	f43f ae3d 	beq.w	403cd8 <_dtoa_r+0x388>
  40405e:	f1bb 0f00 	cmp.w	fp, #0
  404062:	d005      	beq.n	404070 <_dtoa_r+0x720>
  404064:	45b3      	cmp	fp, r6
  404066:	d003      	beq.n	404070 <_dtoa_r+0x720>
  404068:	4659      	mov	r1, fp
  40406a:	4620      	mov	r0, r4
  40406c:	f000 ff94 	bl	404f98 <_Bfree>
  404070:	4631      	mov	r1, r6
  404072:	4620      	mov	r0, r4
  404074:	f000 ff90 	bl	404f98 <_Bfree>
  404078:	e62e      	b.n	403cd8 <_dtoa_r+0x388>
  40407a:	2300      	movs	r3, #0
  40407c:	930b      	str	r3, [sp, #44]	; 0x2c
  40407e:	9b02      	ldr	r3, [sp, #8]
  404080:	9a25      	ldr	r2, [sp, #148]	; 0x94
  404082:	4413      	add	r3, r2
  404084:	930f      	str	r3, [sp, #60]	; 0x3c
  404086:	3301      	adds	r3, #1
  404088:	2b01      	cmp	r3, #1
  40408a:	461f      	mov	r7, r3
  40408c:	461e      	mov	r6, r3
  40408e:	930a      	str	r3, [sp, #40]	; 0x28
  404090:	bfb8      	it	lt
  404092:	2701      	movlt	r7, #1
  404094:	2100      	movs	r1, #0
  404096:	2f17      	cmp	r7, #23
  404098:	6461      	str	r1, [r4, #68]	; 0x44
  40409a:	d90a      	bls.n	4040b2 <_dtoa_r+0x762>
  40409c:	2201      	movs	r2, #1
  40409e:	2304      	movs	r3, #4
  4040a0:	005b      	lsls	r3, r3, #1
  4040a2:	f103 0014 	add.w	r0, r3, #20
  4040a6:	4287      	cmp	r7, r0
  4040a8:	4611      	mov	r1, r2
  4040aa:	f102 0201 	add.w	r2, r2, #1
  4040ae:	d2f7      	bcs.n	4040a0 <_dtoa_r+0x750>
  4040b0:	6461      	str	r1, [r4, #68]	; 0x44
  4040b2:	4620      	mov	r0, r4
  4040b4:	f000 ff4a 	bl	404f4c <_Balloc>
  4040b8:	2e0e      	cmp	r6, #14
  4040ba:	9004      	str	r0, [sp, #16]
  4040bc:	6420      	str	r0, [r4, #64]	; 0x40
  4040be:	f63f ad41 	bhi.w	403b44 <_dtoa_r+0x1f4>
  4040c2:	2d00      	cmp	r5, #0
  4040c4:	f43f ad3e 	beq.w	403b44 <_dtoa_r+0x1f4>
  4040c8:	9902      	ldr	r1, [sp, #8]
  4040ca:	2900      	cmp	r1, #0
  4040cc:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4040d0:	f340 8202 	ble.w	4044d8 <_dtoa_r+0xb88>
  4040d4:	4bb8      	ldr	r3, [pc, #736]	; (4043b8 <_dtoa_r+0xa68>)
  4040d6:	f001 020f 	and.w	r2, r1, #15
  4040da:	110d      	asrs	r5, r1, #4
  4040dc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4040e0:	06e9      	lsls	r1, r5, #27
  4040e2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4040e6:	f140 81ae 	bpl.w	404446 <_dtoa_r+0xaf6>
  4040ea:	4bb4      	ldr	r3, [pc, #720]	; (4043bc <_dtoa_r+0xa6c>)
  4040ec:	4650      	mov	r0, sl
  4040ee:	4659      	mov	r1, fp
  4040f0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4040f4:	f7fd ffd6 	bl	4020a4 <__aeabi_ddiv>
  4040f8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4040fc:	f005 050f 	and.w	r5, r5, #15
  404100:	f04f 0a03 	mov.w	sl, #3
  404104:	b18d      	cbz	r5, 40412a <_dtoa_r+0x7da>
  404106:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4043bc <_dtoa_r+0xa6c>
  40410a:	07ea      	lsls	r2, r5, #31
  40410c:	d509      	bpl.n	404122 <_dtoa_r+0x7d2>
  40410e:	4630      	mov	r0, r6
  404110:	4639      	mov	r1, r7
  404112:	e9d8 2300 	ldrd	r2, r3, [r8]
  404116:	f7fd fe9b 	bl	401e50 <__aeabi_dmul>
  40411a:	f10a 0a01 	add.w	sl, sl, #1
  40411e:	4606      	mov	r6, r0
  404120:	460f      	mov	r7, r1
  404122:	106d      	asrs	r5, r5, #1
  404124:	f108 0808 	add.w	r8, r8, #8
  404128:	d1ef      	bne.n	40410a <_dtoa_r+0x7ba>
  40412a:	463b      	mov	r3, r7
  40412c:	4632      	mov	r2, r6
  40412e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404132:	f7fd ffb7 	bl	4020a4 <__aeabi_ddiv>
  404136:	4607      	mov	r7, r0
  404138:	4688      	mov	r8, r1
  40413a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40413c:	b143      	cbz	r3, 404150 <_dtoa_r+0x800>
  40413e:	2200      	movs	r2, #0
  404140:	4b9f      	ldr	r3, [pc, #636]	; (4043c0 <_dtoa_r+0xa70>)
  404142:	4638      	mov	r0, r7
  404144:	4641      	mov	r1, r8
  404146:	f001 ff5d 	bl	406004 <__aeabi_dcmplt>
  40414a:	2800      	cmp	r0, #0
  40414c:	f040 8286 	bne.w	40465c <_dtoa_r+0xd0c>
  404150:	4650      	mov	r0, sl
  404152:	f7fd fe17 	bl	401d84 <__aeabi_i2d>
  404156:	463a      	mov	r2, r7
  404158:	4643      	mov	r3, r8
  40415a:	f7fd fe79 	bl	401e50 <__aeabi_dmul>
  40415e:	4b99      	ldr	r3, [pc, #612]	; (4043c4 <_dtoa_r+0xa74>)
  404160:	2200      	movs	r2, #0
  404162:	f7fd fcc3 	bl	401aec <__adddf3>
  404166:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404168:	4605      	mov	r5, r0
  40416a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40416e:	2b00      	cmp	r3, #0
  404170:	f000 813e 	beq.w	4043f0 <_dtoa_r+0xaa0>
  404174:	9b02      	ldr	r3, [sp, #8]
  404176:	9315      	str	r3, [sp, #84]	; 0x54
  404178:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40417a:	9312      	str	r3, [sp, #72]	; 0x48
  40417c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40417e:	2b00      	cmp	r3, #0
  404180:	f000 81fa 	beq.w	404578 <_dtoa_r+0xc28>
  404184:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404186:	4b8c      	ldr	r3, [pc, #560]	; (4043b8 <_dtoa_r+0xa68>)
  404188:	498f      	ldr	r1, [pc, #572]	; (4043c8 <_dtoa_r+0xa78>)
  40418a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40418e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  404192:	2000      	movs	r0, #0
  404194:	f7fd ff86 	bl	4020a4 <__aeabi_ddiv>
  404198:	462a      	mov	r2, r5
  40419a:	4633      	mov	r3, r6
  40419c:	f7fd fca4 	bl	401ae8 <__aeabi_dsub>
  4041a0:	4682      	mov	sl, r0
  4041a2:	468b      	mov	fp, r1
  4041a4:	4638      	mov	r0, r7
  4041a6:	4641      	mov	r1, r8
  4041a8:	f001 ff6a 	bl	406080 <__aeabi_d2iz>
  4041ac:	4605      	mov	r5, r0
  4041ae:	f7fd fde9 	bl	401d84 <__aeabi_i2d>
  4041b2:	4602      	mov	r2, r0
  4041b4:	460b      	mov	r3, r1
  4041b6:	4638      	mov	r0, r7
  4041b8:	4641      	mov	r1, r8
  4041ba:	f7fd fc95 	bl	401ae8 <__aeabi_dsub>
  4041be:	3530      	adds	r5, #48	; 0x30
  4041c0:	fa5f f885 	uxtb.w	r8, r5
  4041c4:	9d04      	ldr	r5, [sp, #16]
  4041c6:	4606      	mov	r6, r0
  4041c8:	460f      	mov	r7, r1
  4041ca:	f885 8000 	strb.w	r8, [r5]
  4041ce:	4602      	mov	r2, r0
  4041d0:	460b      	mov	r3, r1
  4041d2:	4650      	mov	r0, sl
  4041d4:	4659      	mov	r1, fp
  4041d6:	3501      	adds	r5, #1
  4041d8:	f001 ff32 	bl	406040 <__aeabi_dcmpgt>
  4041dc:	2800      	cmp	r0, #0
  4041de:	d154      	bne.n	40428a <_dtoa_r+0x93a>
  4041e0:	4632      	mov	r2, r6
  4041e2:	463b      	mov	r3, r7
  4041e4:	2000      	movs	r0, #0
  4041e6:	4976      	ldr	r1, [pc, #472]	; (4043c0 <_dtoa_r+0xa70>)
  4041e8:	f7fd fc7e 	bl	401ae8 <__aeabi_dsub>
  4041ec:	4602      	mov	r2, r0
  4041ee:	460b      	mov	r3, r1
  4041f0:	4650      	mov	r0, sl
  4041f2:	4659      	mov	r1, fp
  4041f4:	f001 ff24 	bl	406040 <__aeabi_dcmpgt>
  4041f8:	2800      	cmp	r0, #0
  4041fa:	f040 8270 	bne.w	4046de <_dtoa_r+0xd8e>
  4041fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404200:	2a01      	cmp	r2, #1
  404202:	f000 8111 	beq.w	404428 <_dtoa_r+0xad8>
  404206:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404208:	9a04      	ldr	r2, [sp, #16]
  40420a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40420e:	4413      	add	r3, r2
  404210:	4699      	mov	r9, r3
  404212:	e00d      	b.n	404230 <_dtoa_r+0x8e0>
  404214:	2000      	movs	r0, #0
  404216:	496a      	ldr	r1, [pc, #424]	; (4043c0 <_dtoa_r+0xa70>)
  404218:	f7fd fc66 	bl	401ae8 <__aeabi_dsub>
  40421c:	4652      	mov	r2, sl
  40421e:	465b      	mov	r3, fp
  404220:	f001 fef0 	bl	406004 <__aeabi_dcmplt>
  404224:	2800      	cmp	r0, #0
  404226:	f040 8258 	bne.w	4046da <_dtoa_r+0xd8a>
  40422a:	454d      	cmp	r5, r9
  40422c:	f000 80fa 	beq.w	404424 <_dtoa_r+0xad4>
  404230:	4650      	mov	r0, sl
  404232:	4659      	mov	r1, fp
  404234:	2200      	movs	r2, #0
  404236:	4b65      	ldr	r3, [pc, #404]	; (4043cc <_dtoa_r+0xa7c>)
  404238:	f7fd fe0a 	bl	401e50 <__aeabi_dmul>
  40423c:	2200      	movs	r2, #0
  40423e:	4b63      	ldr	r3, [pc, #396]	; (4043cc <_dtoa_r+0xa7c>)
  404240:	4682      	mov	sl, r0
  404242:	468b      	mov	fp, r1
  404244:	4630      	mov	r0, r6
  404246:	4639      	mov	r1, r7
  404248:	f7fd fe02 	bl	401e50 <__aeabi_dmul>
  40424c:	460f      	mov	r7, r1
  40424e:	4606      	mov	r6, r0
  404250:	f001 ff16 	bl	406080 <__aeabi_d2iz>
  404254:	4680      	mov	r8, r0
  404256:	f7fd fd95 	bl	401d84 <__aeabi_i2d>
  40425a:	4602      	mov	r2, r0
  40425c:	460b      	mov	r3, r1
  40425e:	4630      	mov	r0, r6
  404260:	4639      	mov	r1, r7
  404262:	f7fd fc41 	bl	401ae8 <__aeabi_dsub>
  404266:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40426a:	fa5f f888 	uxtb.w	r8, r8
  40426e:	4652      	mov	r2, sl
  404270:	465b      	mov	r3, fp
  404272:	f805 8b01 	strb.w	r8, [r5], #1
  404276:	4606      	mov	r6, r0
  404278:	460f      	mov	r7, r1
  40427a:	f001 fec3 	bl	406004 <__aeabi_dcmplt>
  40427e:	4632      	mov	r2, r6
  404280:	463b      	mov	r3, r7
  404282:	2800      	cmp	r0, #0
  404284:	d0c6      	beq.n	404214 <_dtoa_r+0x8c4>
  404286:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40428a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40428c:	9302      	str	r3, [sp, #8]
  40428e:	e523      	b.n	403cd8 <_dtoa_r+0x388>
  404290:	2300      	movs	r3, #0
  404292:	930b      	str	r3, [sp, #44]	; 0x2c
  404294:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404296:	2b00      	cmp	r3, #0
  404298:	f340 80dc 	ble.w	404454 <_dtoa_r+0xb04>
  40429c:	461f      	mov	r7, r3
  40429e:	461e      	mov	r6, r3
  4042a0:	930f      	str	r3, [sp, #60]	; 0x3c
  4042a2:	930a      	str	r3, [sp, #40]	; 0x28
  4042a4:	e6f6      	b.n	404094 <_dtoa_r+0x744>
  4042a6:	2301      	movs	r3, #1
  4042a8:	930b      	str	r3, [sp, #44]	; 0x2c
  4042aa:	e7f3      	b.n	404294 <_dtoa_r+0x944>
  4042ac:	f1ba 0f00 	cmp.w	sl, #0
  4042b0:	f47f ada8 	bne.w	403e04 <_dtoa_r+0x4b4>
  4042b4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4042b8:	2b00      	cmp	r3, #0
  4042ba:	f47f adba 	bne.w	403e32 <_dtoa_r+0x4e2>
  4042be:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  4042c2:	0d3f      	lsrs	r7, r7, #20
  4042c4:	053f      	lsls	r7, r7, #20
  4042c6:	2f00      	cmp	r7, #0
  4042c8:	f000 820d 	beq.w	4046e6 <_dtoa_r+0xd96>
  4042cc:	9b08      	ldr	r3, [sp, #32]
  4042ce:	3301      	adds	r3, #1
  4042d0:	9308      	str	r3, [sp, #32]
  4042d2:	9b06      	ldr	r3, [sp, #24]
  4042d4:	3301      	adds	r3, #1
  4042d6:	9306      	str	r3, [sp, #24]
  4042d8:	2301      	movs	r3, #1
  4042da:	930c      	str	r3, [sp, #48]	; 0x30
  4042dc:	e5ab      	b.n	403e36 <_dtoa_r+0x4e6>
  4042de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4042e0:	2b00      	cmp	r3, #0
  4042e2:	f73f ac42 	bgt.w	403b6a <_dtoa_r+0x21a>
  4042e6:	f040 8221 	bne.w	40472c <_dtoa_r+0xddc>
  4042ea:	2200      	movs	r2, #0
  4042ec:	4b38      	ldr	r3, [pc, #224]	; (4043d0 <_dtoa_r+0xa80>)
  4042ee:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4042f2:	f7fd fdad 	bl	401e50 <__aeabi_dmul>
  4042f6:	4652      	mov	r2, sl
  4042f8:	465b      	mov	r3, fp
  4042fa:	f001 fe97 	bl	40602c <__aeabi_dcmpge>
  4042fe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  404302:	4646      	mov	r6, r8
  404304:	2800      	cmp	r0, #0
  404306:	d041      	beq.n	40438c <_dtoa_r+0xa3c>
  404308:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40430a:	9d04      	ldr	r5, [sp, #16]
  40430c:	43db      	mvns	r3, r3
  40430e:	9302      	str	r3, [sp, #8]
  404310:	4641      	mov	r1, r8
  404312:	4620      	mov	r0, r4
  404314:	f000 fe40 	bl	404f98 <_Bfree>
  404318:	2e00      	cmp	r6, #0
  40431a:	f43f acdd 	beq.w	403cd8 <_dtoa_r+0x388>
  40431e:	e6a7      	b.n	404070 <_dtoa_r+0x720>
  404320:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404322:	4649      	mov	r1, r9
  404324:	4620      	mov	r0, r4
  404326:	f000 ff6d 	bl	405204 <__pow5mult>
  40432a:	4681      	mov	r9, r0
  40432c:	e558      	b.n	403de0 <_dtoa_r+0x490>
  40432e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404330:	2a00      	cmp	r2, #0
  404332:	f000 8187 	beq.w	404644 <_dtoa_r+0xcf4>
  404336:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40433a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40433c:	9d08      	ldr	r5, [sp, #32]
  40433e:	e4f2      	b.n	403d26 <_dtoa_r+0x3d6>
  404340:	f1ba 0f00 	cmp.w	sl, #0
  404344:	f47f ad75 	bne.w	403e32 <_dtoa_r+0x4e2>
  404348:	e7b4      	b.n	4042b4 <_dtoa_r+0x964>
  40434a:	f000 fe2f 	bl	404fac <__multadd>
  40434e:	4647      	mov	r7, r8
  404350:	4606      	mov	r6, r0
  404352:	4683      	mov	fp, r0
  404354:	e5be      	b.n	403ed4 <_dtoa_r+0x584>
  404356:	4601      	mov	r1, r0
  404358:	4620      	mov	r0, r4
  40435a:	9306      	str	r3, [sp, #24]
  40435c:	f000 fe1c 	bl	404f98 <_Bfree>
  404360:	2201      	movs	r2, #1
  404362:	9b06      	ldr	r3, [sp, #24]
  404364:	e5e0      	b.n	403f28 <_dtoa_r+0x5d8>
  404366:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404368:	2b02      	cmp	r3, #2
  40436a:	f77f ad96 	ble.w	403e9a <_dtoa_r+0x54a>
  40436e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404370:	2b00      	cmp	r3, #0
  404372:	d1c9      	bne.n	404308 <_dtoa_r+0x9b8>
  404374:	4641      	mov	r1, r8
  404376:	2205      	movs	r2, #5
  404378:	4620      	mov	r0, r4
  40437a:	f000 fe17 	bl	404fac <__multadd>
  40437e:	4601      	mov	r1, r0
  404380:	4680      	mov	r8, r0
  404382:	4648      	mov	r0, r9
  404384:	f000 ffe0 	bl	405348 <__mcmp>
  404388:	2800      	cmp	r0, #0
  40438a:	ddbd      	ble.n	404308 <_dtoa_r+0x9b8>
  40438c:	9a02      	ldr	r2, [sp, #8]
  40438e:	9904      	ldr	r1, [sp, #16]
  404390:	2331      	movs	r3, #49	; 0x31
  404392:	3201      	adds	r2, #1
  404394:	9202      	str	r2, [sp, #8]
  404396:	700b      	strb	r3, [r1, #0]
  404398:	1c4d      	adds	r5, r1, #1
  40439a:	e7b9      	b.n	404310 <_dtoa_r+0x9c0>
  40439c:	9a02      	ldr	r2, [sp, #8]
  40439e:	3201      	adds	r2, #1
  4043a0:	9202      	str	r2, [sp, #8]
  4043a2:	9a04      	ldr	r2, [sp, #16]
  4043a4:	2331      	movs	r3, #49	; 0x31
  4043a6:	7013      	strb	r3, [r2, #0]
  4043a8:	e652      	b.n	404050 <_dtoa_r+0x700>
  4043aa:	2301      	movs	r3, #1
  4043ac:	930b      	str	r3, [sp, #44]	; 0x2c
  4043ae:	e666      	b.n	40407e <_dtoa_r+0x72e>
  4043b0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4043b4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4043b6:	e48f      	b.n	403cd8 <_dtoa_r+0x388>
  4043b8:	00406ee0 	.word	0x00406ee0
  4043bc:	00406eb8 	.word	0x00406eb8
  4043c0:	3ff00000 	.word	0x3ff00000
  4043c4:	401c0000 	.word	0x401c0000
  4043c8:	3fe00000 	.word	0x3fe00000
  4043cc:	40240000 	.word	0x40240000
  4043d0:	40140000 	.word	0x40140000
  4043d4:	4650      	mov	r0, sl
  4043d6:	f7fd fcd5 	bl	401d84 <__aeabi_i2d>
  4043da:	463a      	mov	r2, r7
  4043dc:	4643      	mov	r3, r8
  4043de:	f7fd fd37 	bl	401e50 <__aeabi_dmul>
  4043e2:	2200      	movs	r2, #0
  4043e4:	4bc1      	ldr	r3, [pc, #772]	; (4046ec <_dtoa_r+0xd9c>)
  4043e6:	f7fd fb81 	bl	401aec <__adddf3>
  4043ea:	4605      	mov	r5, r0
  4043ec:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4043f0:	4641      	mov	r1, r8
  4043f2:	2200      	movs	r2, #0
  4043f4:	4bbe      	ldr	r3, [pc, #760]	; (4046f0 <_dtoa_r+0xda0>)
  4043f6:	4638      	mov	r0, r7
  4043f8:	f7fd fb76 	bl	401ae8 <__aeabi_dsub>
  4043fc:	462a      	mov	r2, r5
  4043fe:	4633      	mov	r3, r6
  404400:	4682      	mov	sl, r0
  404402:	468b      	mov	fp, r1
  404404:	f001 fe1c 	bl	406040 <__aeabi_dcmpgt>
  404408:	4680      	mov	r8, r0
  40440a:	2800      	cmp	r0, #0
  40440c:	f040 8110 	bne.w	404630 <_dtoa_r+0xce0>
  404410:	462a      	mov	r2, r5
  404412:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404416:	4650      	mov	r0, sl
  404418:	4659      	mov	r1, fp
  40441a:	f001 fdf3 	bl	406004 <__aeabi_dcmplt>
  40441e:	b118      	cbz	r0, 404428 <_dtoa_r+0xad8>
  404420:	4646      	mov	r6, r8
  404422:	e771      	b.n	404308 <_dtoa_r+0x9b8>
  404424:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404428:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  40442c:	f7ff bb8a 	b.w	403b44 <_dtoa_r+0x1f4>
  404430:	9804      	ldr	r0, [sp, #16]
  404432:	f7ff babb 	b.w	4039ac <_dtoa_r+0x5c>
  404436:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404438:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40443a:	970c      	str	r7, [sp, #48]	; 0x30
  40443c:	1afb      	subs	r3, r7, r3
  40443e:	441a      	add	r2, r3
  404440:	920d      	str	r2, [sp, #52]	; 0x34
  404442:	2700      	movs	r7, #0
  404444:	e469      	b.n	403d1a <_dtoa_r+0x3ca>
  404446:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  40444a:	f04f 0a02 	mov.w	sl, #2
  40444e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404452:	e657      	b.n	404104 <_dtoa_r+0x7b4>
  404454:	2100      	movs	r1, #0
  404456:	2301      	movs	r3, #1
  404458:	6461      	str	r1, [r4, #68]	; 0x44
  40445a:	4620      	mov	r0, r4
  40445c:	9325      	str	r3, [sp, #148]	; 0x94
  40445e:	f000 fd75 	bl	404f4c <_Balloc>
  404462:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404464:	9004      	str	r0, [sp, #16]
  404466:	6420      	str	r0, [r4, #64]	; 0x40
  404468:	930a      	str	r3, [sp, #40]	; 0x28
  40446a:	930f      	str	r3, [sp, #60]	; 0x3c
  40446c:	e629      	b.n	4040c2 <_dtoa_r+0x772>
  40446e:	2a00      	cmp	r2, #0
  404470:	46d0      	mov	r8, sl
  404472:	f8cd b018 	str.w	fp, [sp, #24]
  404476:	469a      	mov	sl, r3
  404478:	dd11      	ble.n	40449e <_dtoa_r+0xb4e>
  40447a:	4649      	mov	r1, r9
  40447c:	2201      	movs	r2, #1
  40447e:	4620      	mov	r0, r4
  404480:	f000 ff10 	bl	4052a4 <__lshift>
  404484:	4641      	mov	r1, r8
  404486:	4681      	mov	r9, r0
  404488:	f000 ff5e 	bl	405348 <__mcmp>
  40448c:	2800      	cmp	r0, #0
  40448e:	f340 8146 	ble.w	40471e <_dtoa_r+0xdce>
  404492:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404496:	f000 8106 	beq.w	4046a6 <_dtoa_r+0xd56>
  40449a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40449e:	46b3      	mov	fp, r6
  4044a0:	f887 a000 	strb.w	sl, [r7]
  4044a4:	1c7d      	adds	r5, r7, #1
  4044a6:	9e06      	ldr	r6, [sp, #24]
  4044a8:	e5d2      	b.n	404050 <_dtoa_r+0x700>
  4044aa:	d104      	bne.n	4044b6 <_dtoa_r+0xb66>
  4044ac:	f01a 0f01 	tst.w	sl, #1
  4044b0:	d001      	beq.n	4044b6 <_dtoa_r+0xb66>
  4044b2:	e5bd      	b.n	404030 <_dtoa_r+0x6e0>
  4044b4:	4615      	mov	r5, r2
  4044b6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4044ba:	2b30      	cmp	r3, #48	; 0x30
  4044bc:	f105 32ff 	add.w	r2, r5, #4294967295
  4044c0:	d0f8      	beq.n	4044b4 <_dtoa_r+0xb64>
  4044c2:	e5c5      	b.n	404050 <_dtoa_r+0x700>
  4044c4:	9904      	ldr	r1, [sp, #16]
  4044c6:	2230      	movs	r2, #48	; 0x30
  4044c8:	700a      	strb	r2, [r1, #0]
  4044ca:	9a02      	ldr	r2, [sp, #8]
  4044cc:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4044d0:	3201      	adds	r2, #1
  4044d2:	9202      	str	r2, [sp, #8]
  4044d4:	f7ff bbfc 	b.w	403cd0 <_dtoa_r+0x380>
  4044d8:	f000 80bb 	beq.w	404652 <_dtoa_r+0xd02>
  4044dc:	9b02      	ldr	r3, [sp, #8]
  4044de:	425d      	negs	r5, r3
  4044e0:	4b84      	ldr	r3, [pc, #528]	; (4046f4 <_dtoa_r+0xda4>)
  4044e2:	f005 020f 	and.w	r2, r5, #15
  4044e6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4044ea:	e9d3 2300 	ldrd	r2, r3, [r3]
  4044ee:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4044f2:	f7fd fcad 	bl	401e50 <__aeabi_dmul>
  4044f6:	112d      	asrs	r5, r5, #4
  4044f8:	4607      	mov	r7, r0
  4044fa:	4688      	mov	r8, r1
  4044fc:	f000 812c 	beq.w	404758 <_dtoa_r+0xe08>
  404500:	4e7d      	ldr	r6, [pc, #500]	; (4046f8 <_dtoa_r+0xda8>)
  404502:	f04f 0a02 	mov.w	sl, #2
  404506:	07eb      	lsls	r3, r5, #31
  404508:	d509      	bpl.n	40451e <_dtoa_r+0xbce>
  40450a:	4638      	mov	r0, r7
  40450c:	4641      	mov	r1, r8
  40450e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404512:	f7fd fc9d 	bl	401e50 <__aeabi_dmul>
  404516:	f10a 0a01 	add.w	sl, sl, #1
  40451a:	4607      	mov	r7, r0
  40451c:	4688      	mov	r8, r1
  40451e:	106d      	asrs	r5, r5, #1
  404520:	f106 0608 	add.w	r6, r6, #8
  404524:	d1ef      	bne.n	404506 <_dtoa_r+0xbb6>
  404526:	e608      	b.n	40413a <_dtoa_r+0x7ea>
  404528:	6871      	ldr	r1, [r6, #4]
  40452a:	4620      	mov	r0, r4
  40452c:	f000 fd0e 	bl	404f4c <_Balloc>
  404530:	6933      	ldr	r3, [r6, #16]
  404532:	3302      	adds	r3, #2
  404534:	009a      	lsls	r2, r3, #2
  404536:	4605      	mov	r5, r0
  404538:	f106 010c 	add.w	r1, r6, #12
  40453c:	300c      	adds	r0, #12
  40453e:	f000 fc5f 	bl	404e00 <memcpy>
  404542:	4629      	mov	r1, r5
  404544:	2201      	movs	r2, #1
  404546:	4620      	mov	r0, r4
  404548:	f000 feac 	bl	4052a4 <__lshift>
  40454c:	9006      	str	r0, [sp, #24]
  40454e:	e4b5      	b.n	403ebc <_dtoa_r+0x56c>
  404550:	2b39      	cmp	r3, #57	; 0x39
  404552:	f8cd b018 	str.w	fp, [sp, #24]
  404556:	46d0      	mov	r8, sl
  404558:	f000 80a5 	beq.w	4046a6 <_dtoa_r+0xd56>
  40455c:	f103 0a01 	add.w	sl, r3, #1
  404560:	46b3      	mov	fp, r6
  404562:	f887 a000 	strb.w	sl, [r7]
  404566:	1c7d      	adds	r5, r7, #1
  404568:	9e06      	ldr	r6, [sp, #24]
  40456a:	e571      	b.n	404050 <_dtoa_r+0x700>
  40456c:	465a      	mov	r2, fp
  40456e:	46d0      	mov	r8, sl
  404570:	46b3      	mov	fp, r6
  404572:	469a      	mov	sl, r3
  404574:	4616      	mov	r6, r2
  404576:	e54f      	b.n	404018 <_dtoa_r+0x6c8>
  404578:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40457a:	495e      	ldr	r1, [pc, #376]	; (4046f4 <_dtoa_r+0xda4>)
  40457c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404580:	462a      	mov	r2, r5
  404582:	4633      	mov	r3, r6
  404584:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404588:	f7fd fc62 	bl	401e50 <__aeabi_dmul>
  40458c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404590:	4638      	mov	r0, r7
  404592:	4641      	mov	r1, r8
  404594:	f001 fd74 	bl	406080 <__aeabi_d2iz>
  404598:	4605      	mov	r5, r0
  40459a:	f7fd fbf3 	bl	401d84 <__aeabi_i2d>
  40459e:	460b      	mov	r3, r1
  4045a0:	4602      	mov	r2, r0
  4045a2:	4641      	mov	r1, r8
  4045a4:	4638      	mov	r0, r7
  4045a6:	f7fd fa9f 	bl	401ae8 <__aeabi_dsub>
  4045aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4045ac:	460f      	mov	r7, r1
  4045ae:	9904      	ldr	r1, [sp, #16]
  4045b0:	3530      	adds	r5, #48	; 0x30
  4045b2:	2b01      	cmp	r3, #1
  4045b4:	700d      	strb	r5, [r1, #0]
  4045b6:	4606      	mov	r6, r0
  4045b8:	f101 0501 	add.w	r5, r1, #1
  4045bc:	d026      	beq.n	40460c <_dtoa_r+0xcbc>
  4045be:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4045c0:	9a04      	ldr	r2, [sp, #16]
  4045c2:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404700 <_dtoa_r+0xdb0>
  4045c6:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4045ca:	4413      	add	r3, r2
  4045cc:	f04f 0a00 	mov.w	sl, #0
  4045d0:	4699      	mov	r9, r3
  4045d2:	4652      	mov	r2, sl
  4045d4:	465b      	mov	r3, fp
  4045d6:	4630      	mov	r0, r6
  4045d8:	4639      	mov	r1, r7
  4045da:	f7fd fc39 	bl	401e50 <__aeabi_dmul>
  4045de:	460f      	mov	r7, r1
  4045e0:	4606      	mov	r6, r0
  4045e2:	f001 fd4d 	bl	406080 <__aeabi_d2iz>
  4045e6:	4680      	mov	r8, r0
  4045e8:	f7fd fbcc 	bl	401d84 <__aeabi_i2d>
  4045ec:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4045f0:	4602      	mov	r2, r0
  4045f2:	460b      	mov	r3, r1
  4045f4:	4630      	mov	r0, r6
  4045f6:	4639      	mov	r1, r7
  4045f8:	f7fd fa76 	bl	401ae8 <__aeabi_dsub>
  4045fc:	f805 8b01 	strb.w	r8, [r5], #1
  404600:	454d      	cmp	r5, r9
  404602:	4606      	mov	r6, r0
  404604:	460f      	mov	r7, r1
  404606:	d1e4      	bne.n	4045d2 <_dtoa_r+0xc82>
  404608:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40460c:	4b3b      	ldr	r3, [pc, #236]	; (4046fc <_dtoa_r+0xdac>)
  40460e:	2200      	movs	r2, #0
  404610:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404614:	f7fd fa6a 	bl	401aec <__adddf3>
  404618:	4632      	mov	r2, r6
  40461a:	463b      	mov	r3, r7
  40461c:	f001 fcf2 	bl	406004 <__aeabi_dcmplt>
  404620:	2800      	cmp	r0, #0
  404622:	d046      	beq.n	4046b2 <_dtoa_r+0xd62>
  404624:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404626:	9302      	str	r3, [sp, #8]
  404628:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40462c:	f7ff bb43 	b.w	403cb6 <_dtoa_r+0x366>
  404630:	f04f 0800 	mov.w	r8, #0
  404634:	4646      	mov	r6, r8
  404636:	e6a9      	b.n	40438c <_dtoa_r+0xa3c>
  404638:	9b08      	ldr	r3, [sp, #32]
  40463a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40463c:	1a9d      	subs	r5, r3, r2
  40463e:	2300      	movs	r3, #0
  404640:	f7ff bb71 	b.w	403d26 <_dtoa_r+0x3d6>
  404644:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404646:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404648:	9d08      	ldr	r5, [sp, #32]
  40464a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40464e:	f7ff bb6a 	b.w	403d26 <_dtoa_r+0x3d6>
  404652:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404656:	f04f 0a02 	mov.w	sl, #2
  40465a:	e56e      	b.n	40413a <_dtoa_r+0x7ea>
  40465c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40465e:	2b00      	cmp	r3, #0
  404660:	f43f aeb8 	beq.w	4043d4 <_dtoa_r+0xa84>
  404664:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404666:	2b00      	cmp	r3, #0
  404668:	f77f aede 	ble.w	404428 <_dtoa_r+0xad8>
  40466c:	2200      	movs	r2, #0
  40466e:	4b24      	ldr	r3, [pc, #144]	; (404700 <_dtoa_r+0xdb0>)
  404670:	4638      	mov	r0, r7
  404672:	4641      	mov	r1, r8
  404674:	f7fd fbec 	bl	401e50 <__aeabi_dmul>
  404678:	4607      	mov	r7, r0
  40467a:	4688      	mov	r8, r1
  40467c:	f10a 0001 	add.w	r0, sl, #1
  404680:	f7fd fb80 	bl	401d84 <__aeabi_i2d>
  404684:	463a      	mov	r2, r7
  404686:	4643      	mov	r3, r8
  404688:	f7fd fbe2 	bl	401e50 <__aeabi_dmul>
  40468c:	2200      	movs	r2, #0
  40468e:	4b17      	ldr	r3, [pc, #92]	; (4046ec <_dtoa_r+0xd9c>)
  404690:	f7fd fa2c 	bl	401aec <__adddf3>
  404694:	9a02      	ldr	r2, [sp, #8]
  404696:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404698:	9312      	str	r3, [sp, #72]	; 0x48
  40469a:	3a01      	subs	r2, #1
  40469c:	4605      	mov	r5, r0
  40469e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4046a2:	9215      	str	r2, [sp, #84]	; 0x54
  4046a4:	e56a      	b.n	40417c <_dtoa_r+0x82c>
  4046a6:	2239      	movs	r2, #57	; 0x39
  4046a8:	46b3      	mov	fp, r6
  4046aa:	703a      	strb	r2, [r7, #0]
  4046ac:	9e06      	ldr	r6, [sp, #24]
  4046ae:	1c7d      	adds	r5, r7, #1
  4046b0:	e4c0      	b.n	404034 <_dtoa_r+0x6e4>
  4046b2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4046b6:	2000      	movs	r0, #0
  4046b8:	4910      	ldr	r1, [pc, #64]	; (4046fc <_dtoa_r+0xdac>)
  4046ba:	f7fd fa15 	bl	401ae8 <__aeabi_dsub>
  4046be:	4632      	mov	r2, r6
  4046c0:	463b      	mov	r3, r7
  4046c2:	f001 fcbd 	bl	406040 <__aeabi_dcmpgt>
  4046c6:	b908      	cbnz	r0, 4046cc <_dtoa_r+0xd7c>
  4046c8:	e6ae      	b.n	404428 <_dtoa_r+0xad8>
  4046ca:	4615      	mov	r5, r2
  4046cc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4046d0:	2b30      	cmp	r3, #48	; 0x30
  4046d2:	f105 32ff 	add.w	r2, r5, #4294967295
  4046d6:	d0f8      	beq.n	4046ca <_dtoa_r+0xd7a>
  4046d8:	e5d7      	b.n	40428a <_dtoa_r+0x93a>
  4046da:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4046de:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4046e0:	9302      	str	r3, [sp, #8]
  4046e2:	f7ff bae8 	b.w	403cb6 <_dtoa_r+0x366>
  4046e6:	970c      	str	r7, [sp, #48]	; 0x30
  4046e8:	f7ff bba5 	b.w	403e36 <_dtoa_r+0x4e6>
  4046ec:	401c0000 	.word	0x401c0000
  4046f0:	40140000 	.word	0x40140000
  4046f4:	00406ee0 	.word	0x00406ee0
  4046f8:	00406eb8 	.word	0x00406eb8
  4046fc:	3fe00000 	.word	0x3fe00000
  404700:	40240000 	.word	0x40240000
  404704:	2b39      	cmp	r3, #57	; 0x39
  404706:	f8cd b018 	str.w	fp, [sp, #24]
  40470a:	46d0      	mov	r8, sl
  40470c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404710:	469a      	mov	sl, r3
  404712:	d0c8      	beq.n	4046a6 <_dtoa_r+0xd56>
  404714:	f1bb 0f00 	cmp.w	fp, #0
  404718:	f73f aebf 	bgt.w	40449a <_dtoa_r+0xb4a>
  40471c:	e6bf      	b.n	40449e <_dtoa_r+0xb4e>
  40471e:	f47f aebe 	bne.w	40449e <_dtoa_r+0xb4e>
  404722:	f01a 0f01 	tst.w	sl, #1
  404726:	f43f aeba 	beq.w	40449e <_dtoa_r+0xb4e>
  40472a:	e6b2      	b.n	404492 <_dtoa_r+0xb42>
  40472c:	f04f 0800 	mov.w	r8, #0
  404730:	4646      	mov	r6, r8
  404732:	e5e9      	b.n	404308 <_dtoa_r+0x9b8>
  404734:	4631      	mov	r1, r6
  404736:	2300      	movs	r3, #0
  404738:	220a      	movs	r2, #10
  40473a:	4620      	mov	r0, r4
  40473c:	f000 fc36 	bl	404fac <__multadd>
  404740:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404742:	2b00      	cmp	r3, #0
  404744:	4606      	mov	r6, r0
  404746:	dd0a      	ble.n	40475e <_dtoa_r+0xe0e>
  404748:	930a      	str	r3, [sp, #40]	; 0x28
  40474a:	f7ff bbaa 	b.w	403ea2 <_dtoa_r+0x552>
  40474e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404750:	2b02      	cmp	r3, #2
  404752:	dc23      	bgt.n	40479c <_dtoa_r+0xe4c>
  404754:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404756:	e43b      	b.n	403fd0 <_dtoa_r+0x680>
  404758:	f04f 0a02 	mov.w	sl, #2
  40475c:	e4ed      	b.n	40413a <_dtoa_r+0x7ea>
  40475e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404760:	2b02      	cmp	r3, #2
  404762:	dc1b      	bgt.n	40479c <_dtoa_r+0xe4c>
  404764:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404766:	e7ef      	b.n	404748 <_dtoa_r+0xdf8>
  404768:	2500      	movs	r5, #0
  40476a:	6465      	str	r5, [r4, #68]	; 0x44
  40476c:	4629      	mov	r1, r5
  40476e:	4620      	mov	r0, r4
  404770:	f000 fbec 	bl	404f4c <_Balloc>
  404774:	f04f 33ff 	mov.w	r3, #4294967295
  404778:	930a      	str	r3, [sp, #40]	; 0x28
  40477a:	930f      	str	r3, [sp, #60]	; 0x3c
  40477c:	2301      	movs	r3, #1
  40477e:	9004      	str	r0, [sp, #16]
  404780:	9525      	str	r5, [sp, #148]	; 0x94
  404782:	6420      	str	r0, [r4, #64]	; 0x40
  404784:	930b      	str	r3, [sp, #44]	; 0x2c
  404786:	f7ff b9dd 	b.w	403b44 <_dtoa_r+0x1f4>
  40478a:	2501      	movs	r5, #1
  40478c:	f7ff b9a5 	b.w	403ada <_dtoa_r+0x18a>
  404790:	f43f ab69 	beq.w	403e66 <_dtoa_r+0x516>
  404794:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404798:	f7ff bbf9 	b.w	403f8e <_dtoa_r+0x63e>
  40479c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40479e:	930a      	str	r3, [sp, #40]	; 0x28
  4047a0:	e5e5      	b.n	40436e <_dtoa_r+0xa1e>
  4047a2:	bf00      	nop

004047a4 <__libc_fini_array>:
  4047a4:	b538      	push	{r3, r4, r5, lr}
  4047a6:	4c0a      	ldr	r4, [pc, #40]	; (4047d0 <__libc_fini_array+0x2c>)
  4047a8:	4d0a      	ldr	r5, [pc, #40]	; (4047d4 <__libc_fini_array+0x30>)
  4047aa:	1b64      	subs	r4, r4, r5
  4047ac:	10a4      	asrs	r4, r4, #2
  4047ae:	d00a      	beq.n	4047c6 <__libc_fini_array+0x22>
  4047b0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4047b4:	3b01      	subs	r3, #1
  4047b6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4047ba:	3c01      	subs	r4, #1
  4047bc:	f855 3904 	ldr.w	r3, [r5], #-4
  4047c0:	4798      	blx	r3
  4047c2:	2c00      	cmp	r4, #0
  4047c4:	d1f9      	bne.n	4047ba <__libc_fini_array+0x16>
  4047c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4047ca:	f002 bc87 	b.w	4070dc <_fini>
  4047ce:	bf00      	nop
  4047d0:	004070ec 	.word	0x004070ec
  4047d4:	004070e8 	.word	0x004070e8

004047d8 <_localeconv_r>:
  4047d8:	4a04      	ldr	r2, [pc, #16]	; (4047ec <_localeconv_r+0x14>)
  4047da:	4b05      	ldr	r3, [pc, #20]	; (4047f0 <_localeconv_r+0x18>)
  4047dc:	6812      	ldr	r2, [r2, #0]
  4047de:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4047e0:	2800      	cmp	r0, #0
  4047e2:	bf08      	it	eq
  4047e4:	4618      	moveq	r0, r3
  4047e6:	30f0      	adds	r0, #240	; 0xf0
  4047e8:	4770      	bx	lr
  4047ea:	bf00      	nop
  4047ec:	20400028 	.word	0x20400028
  4047f0:	2040086c 	.word	0x2040086c

004047f4 <__retarget_lock_acquire_recursive>:
  4047f4:	4770      	bx	lr
  4047f6:	bf00      	nop

004047f8 <__retarget_lock_release_recursive>:
  4047f8:	4770      	bx	lr
  4047fa:	bf00      	nop

004047fc <_malloc_r>:
  4047fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404800:	f101 060b 	add.w	r6, r1, #11
  404804:	2e16      	cmp	r6, #22
  404806:	b083      	sub	sp, #12
  404808:	4605      	mov	r5, r0
  40480a:	f240 809e 	bls.w	40494a <_malloc_r+0x14e>
  40480e:	f036 0607 	bics.w	r6, r6, #7
  404812:	f100 80bd 	bmi.w	404990 <_malloc_r+0x194>
  404816:	42b1      	cmp	r1, r6
  404818:	f200 80ba 	bhi.w	404990 <_malloc_r+0x194>
  40481c:	f000 fb8a 	bl	404f34 <__malloc_lock>
  404820:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404824:	f0c0 8293 	bcc.w	404d4e <_malloc_r+0x552>
  404828:	0a73      	lsrs	r3, r6, #9
  40482a:	f000 80b8 	beq.w	40499e <_malloc_r+0x1a2>
  40482e:	2b04      	cmp	r3, #4
  404830:	f200 8179 	bhi.w	404b26 <_malloc_r+0x32a>
  404834:	09b3      	lsrs	r3, r6, #6
  404836:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40483a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40483e:	00c3      	lsls	r3, r0, #3
  404840:	4fbf      	ldr	r7, [pc, #764]	; (404b40 <_malloc_r+0x344>)
  404842:	443b      	add	r3, r7
  404844:	f1a3 0108 	sub.w	r1, r3, #8
  404848:	685c      	ldr	r4, [r3, #4]
  40484a:	42a1      	cmp	r1, r4
  40484c:	d106      	bne.n	40485c <_malloc_r+0x60>
  40484e:	e00c      	b.n	40486a <_malloc_r+0x6e>
  404850:	2a00      	cmp	r2, #0
  404852:	f280 80aa 	bge.w	4049aa <_malloc_r+0x1ae>
  404856:	68e4      	ldr	r4, [r4, #12]
  404858:	42a1      	cmp	r1, r4
  40485a:	d006      	beq.n	40486a <_malloc_r+0x6e>
  40485c:	6863      	ldr	r3, [r4, #4]
  40485e:	f023 0303 	bic.w	r3, r3, #3
  404862:	1b9a      	subs	r2, r3, r6
  404864:	2a0f      	cmp	r2, #15
  404866:	ddf3      	ble.n	404850 <_malloc_r+0x54>
  404868:	4670      	mov	r0, lr
  40486a:	693c      	ldr	r4, [r7, #16]
  40486c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404b54 <_malloc_r+0x358>
  404870:	4574      	cmp	r4, lr
  404872:	f000 81ab 	beq.w	404bcc <_malloc_r+0x3d0>
  404876:	6863      	ldr	r3, [r4, #4]
  404878:	f023 0303 	bic.w	r3, r3, #3
  40487c:	1b9a      	subs	r2, r3, r6
  40487e:	2a0f      	cmp	r2, #15
  404880:	f300 8190 	bgt.w	404ba4 <_malloc_r+0x3a8>
  404884:	2a00      	cmp	r2, #0
  404886:	f8c7 e014 	str.w	lr, [r7, #20]
  40488a:	f8c7 e010 	str.w	lr, [r7, #16]
  40488e:	f280 809d 	bge.w	4049cc <_malloc_r+0x1d0>
  404892:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404896:	f080 8161 	bcs.w	404b5c <_malloc_r+0x360>
  40489a:	08db      	lsrs	r3, r3, #3
  40489c:	f103 0c01 	add.w	ip, r3, #1
  4048a0:	1099      	asrs	r1, r3, #2
  4048a2:	687a      	ldr	r2, [r7, #4]
  4048a4:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4048a8:	f8c4 8008 	str.w	r8, [r4, #8]
  4048ac:	2301      	movs	r3, #1
  4048ae:	408b      	lsls	r3, r1
  4048b0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4048b4:	4313      	orrs	r3, r2
  4048b6:	3908      	subs	r1, #8
  4048b8:	60e1      	str	r1, [r4, #12]
  4048ba:	607b      	str	r3, [r7, #4]
  4048bc:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4048c0:	f8c8 400c 	str.w	r4, [r8, #12]
  4048c4:	1082      	asrs	r2, r0, #2
  4048c6:	2401      	movs	r4, #1
  4048c8:	4094      	lsls	r4, r2
  4048ca:	429c      	cmp	r4, r3
  4048cc:	f200 808b 	bhi.w	4049e6 <_malloc_r+0x1ea>
  4048d0:	421c      	tst	r4, r3
  4048d2:	d106      	bne.n	4048e2 <_malloc_r+0xe6>
  4048d4:	f020 0003 	bic.w	r0, r0, #3
  4048d8:	0064      	lsls	r4, r4, #1
  4048da:	421c      	tst	r4, r3
  4048dc:	f100 0004 	add.w	r0, r0, #4
  4048e0:	d0fa      	beq.n	4048d8 <_malloc_r+0xdc>
  4048e2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4048e6:	46cc      	mov	ip, r9
  4048e8:	4680      	mov	r8, r0
  4048ea:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4048ee:	459c      	cmp	ip, r3
  4048f0:	d107      	bne.n	404902 <_malloc_r+0x106>
  4048f2:	e16d      	b.n	404bd0 <_malloc_r+0x3d4>
  4048f4:	2a00      	cmp	r2, #0
  4048f6:	f280 817b 	bge.w	404bf0 <_malloc_r+0x3f4>
  4048fa:	68db      	ldr	r3, [r3, #12]
  4048fc:	459c      	cmp	ip, r3
  4048fe:	f000 8167 	beq.w	404bd0 <_malloc_r+0x3d4>
  404902:	6859      	ldr	r1, [r3, #4]
  404904:	f021 0103 	bic.w	r1, r1, #3
  404908:	1b8a      	subs	r2, r1, r6
  40490a:	2a0f      	cmp	r2, #15
  40490c:	ddf2      	ble.n	4048f4 <_malloc_r+0xf8>
  40490e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404912:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404916:	9300      	str	r3, [sp, #0]
  404918:	199c      	adds	r4, r3, r6
  40491a:	4628      	mov	r0, r5
  40491c:	f046 0601 	orr.w	r6, r6, #1
  404920:	f042 0501 	orr.w	r5, r2, #1
  404924:	605e      	str	r6, [r3, #4]
  404926:	f8c8 c00c 	str.w	ip, [r8, #12]
  40492a:	f8cc 8008 	str.w	r8, [ip, #8]
  40492e:	617c      	str	r4, [r7, #20]
  404930:	613c      	str	r4, [r7, #16]
  404932:	f8c4 e00c 	str.w	lr, [r4, #12]
  404936:	f8c4 e008 	str.w	lr, [r4, #8]
  40493a:	6065      	str	r5, [r4, #4]
  40493c:	505a      	str	r2, [r3, r1]
  40493e:	f000 faff 	bl	404f40 <__malloc_unlock>
  404942:	9b00      	ldr	r3, [sp, #0]
  404944:	f103 0408 	add.w	r4, r3, #8
  404948:	e01e      	b.n	404988 <_malloc_r+0x18c>
  40494a:	2910      	cmp	r1, #16
  40494c:	d820      	bhi.n	404990 <_malloc_r+0x194>
  40494e:	f000 faf1 	bl	404f34 <__malloc_lock>
  404952:	2610      	movs	r6, #16
  404954:	2318      	movs	r3, #24
  404956:	2002      	movs	r0, #2
  404958:	4f79      	ldr	r7, [pc, #484]	; (404b40 <_malloc_r+0x344>)
  40495a:	443b      	add	r3, r7
  40495c:	f1a3 0208 	sub.w	r2, r3, #8
  404960:	685c      	ldr	r4, [r3, #4]
  404962:	4294      	cmp	r4, r2
  404964:	f000 813d 	beq.w	404be2 <_malloc_r+0x3e6>
  404968:	6863      	ldr	r3, [r4, #4]
  40496a:	68e1      	ldr	r1, [r4, #12]
  40496c:	68a6      	ldr	r6, [r4, #8]
  40496e:	f023 0303 	bic.w	r3, r3, #3
  404972:	4423      	add	r3, r4
  404974:	4628      	mov	r0, r5
  404976:	685a      	ldr	r2, [r3, #4]
  404978:	60f1      	str	r1, [r6, #12]
  40497a:	f042 0201 	orr.w	r2, r2, #1
  40497e:	608e      	str	r6, [r1, #8]
  404980:	605a      	str	r2, [r3, #4]
  404982:	f000 fadd 	bl	404f40 <__malloc_unlock>
  404986:	3408      	adds	r4, #8
  404988:	4620      	mov	r0, r4
  40498a:	b003      	add	sp, #12
  40498c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404990:	2400      	movs	r4, #0
  404992:	230c      	movs	r3, #12
  404994:	4620      	mov	r0, r4
  404996:	602b      	str	r3, [r5, #0]
  404998:	b003      	add	sp, #12
  40499a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40499e:	2040      	movs	r0, #64	; 0x40
  4049a0:	f44f 7300 	mov.w	r3, #512	; 0x200
  4049a4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4049a8:	e74a      	b.n	404840 <_malloc_r+0x44>
  4049aa:	4423      	add	r3, r4
  4049ac:	68e1      	ldr	r1, [r4, #12]
  4049ae:	685a      	ldr	r2, [r3, #4]
  4049b0:	68a6      	ldr	r6, [r4, #8]
  4049b2:	f042 0201 	orr.w	r2, r2, #1
  4049b6:	60f1      	str	r1, [r6, #12]
  4049b8:	4628      	mov	r0, r5
  4049ba:	608e      	str	r6, [r1, #8]
  4049bc:	605a      	str	r2, [r3, #4]
  4049be:	f000 fabf 	bl	404f40 <__malloc_unlock>
  4049c2:	3408      	adds	r4, #8
  4049c4:	4620      	mov	r0, r4
  4049c6:	b003      	add	sp, #12
  4049c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049cc:	4423      	add	r3, r4
  4049ce:	4628      	mov	r0, r5
  4049d0:	685a      	ldr	r2, [r3, #4]
  4049d2:	f042 0201 	orr.w	r2, r2, #1
  4049d6:	605a      	str	r2, [r3, #4]
  4049d8:	f000 fab2 	bl	404f40 <__malloc_unlock>
  4049dc:	3408      	adds	r4, #8
  4049de:	4620      	mov	r0, r4
  4049e0:	b003      	add	sp, #12
  4049e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049e6:	68bc      	ldr	r4, [r7, #8]
  4049e8:	6863      	ldr	r3, [r4, #4]
  4049ea:	f023 0803 	bic.w	r8, r3, #3
  4049ee:	45b0      	cmp	r8, r6
  4049f0:	d304      	bcc.n	4049fc <_malloc_r+0x200>
  4049f2:	eba8 0306 	sub.w	r3, r8, r6
  4049f6:	2b0f      	cmp	r3, #15
  4049f8:	f300 8085 	bgt.w	404b06 <_malloc_r+0x30a>
  4049fc:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404b58 <_malloc_r+0x35c>
  404a00:	4b50      	ldr	r3, [pc, #320]	; (404b44 <_malloc_r+0x348>)
  404a02:	f8d9 2000 	ldr.w	r2, [r9]
  404a06:	681b      	ldr	r3, [r3, #0]
  404a08:	3201      	adds	r2, #1
  404a0a:	4433      	add	r3, r6
  404a0c:	eb04 0a08 	add.w	sl, r4, r8
  404a10:	f000 8155 	beq.w	404cbe <_malloc_r+0x4c2>
  404a14:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404a18:	330f      	adds	r3, #15
  404a1a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404a1e:	f02b 0b0f 	bic.w	fp, fp, #15
  404a22:	4659      	mov	r1, fp
  404a24:	4628      	mov	r0, r5
  404a26:	f000 fd8b 	bl	405540 <_sbrk_r>
  404a2a:	1c41      	adds	r1, r0, #1
  404a2c:	4602      	mov	r2, r0
  404a2e:	f000 80fc 	beq.w	404c2a <_malloc_r+0x42e>
  404a32:	4582      	cmp	sl, r0
  404a34:	f200 80f7 	bhi.w	404c26 <_malloc_r+0x42a>
  404a38:	4b43      	ldr	r3, [pc, #268]	; (404b48 <_malloc_r+0x34c>)
  404a3a:	6819      	ldr	r1, [r3, #0]
  404a3c:	4459      	add	r1, fp
  404a3e:	6019      	str	r1, [r3, #0]
  404a40:	f000 814d 	beq.w	404cde <_malloc_r+0x4e2>
  404a44:	f8d9 0000 	ldr.w	r0, [r9]
  404a48:	3001      	adds	r0, #1
  404a4a:	bf1b      	ittet	ne
  404a4c:	eba2 0a0a 	subne.w	sl, r2, sl
  404a50:	4451      	addne	r1, sl
  404a52:	f8c9 2000 	streq.w	r2, [r9]
  404a56:	6019      	strne	r1, [r3, #0]
  404a58:	f012 0107 	ands.w	r1, r2, #7
  404a5c:	f000 8115 	beq.w	404c8a <_malloc_r+0x48e>
  404a60:	f1c1 0008 	rsb	r0, r1, #8
  404a64:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404a68:	4402      	add	r2, r0
  404a6a:	3108      	adds	r1, #8
  404a6c:	eb02 090b 	add.w	r9, r2, fp
  404a70:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404a74:	eba1 0909 	sub.w	r9, r1, r9
  404a78:	4649      	mov	r1, r9
  404a7a:	4628      	mov	r0, r5
  404a7c:	9301      	str	r3, [sp, #4]
  404a7e:	9200      	str	r2, [sp, #0]
  404a80:	f000 fd5e 	bl	405540 <_sbrk_r>
  404a84:	1c43      	adds	r3, r0, #1
  404a86:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404a8a:	f000 8143 	beq.w	404d14 <_malloc_r+0x518>
  404a8e:	1a80      	subs	r0, r0, r2
  404a90:	4448      	add	r0, r9
  404a92:	f040 0001 	orr.w	r0, r0, #1
  404a96:	6819      	ldr	r1, [r3, #0]
  404a98:	60ba      	str	r2, [r7, #8]
  404a9a:	4449      	add	r1, r9
  404a9c:	42bc      	cmp	r4, r7
  404a9e:	6050      	str	r0, [r2, #4]
  404aa0:	6019      	str	r1, [r3, #0]
  404aa2:	d017      	beq.n	404ad4 <_malloc_r+0x2d8>
  404aa4:	f1b8 0f0f 	cmp.w	r8, #15
  404aa8:	f240 80fb 	bls.w	404ca2 <_malloc_r+0x4a6>
  404aac:	6860      	ldr	r0, [r4, #4]
  404aae:	f1a8 020c 	sub.w	r2, r8, #12
  404ab2:	f022 0207 	bic.w	r2, r2, #7
  404ab6:	eb04 0e02 	add.w	lr, r4, r2
  404aba:	f000 0001 	and.w	r0, r0, #1
  404abe:	f04f 0c05 	mov.w	ip, #5
  404ac2:	4310      	orrs	r0, r2
  404ac4:	2a0f      	cmp	r2, #15
  404ac6:	6060      	str	r0, [r4, #4]
  404ac8:	f8ce c004 	str.w	ip, [lr, #4]
  404acc:	f8ce c008 	str.w	ip, [lr, #8]
  404ad0:	f200 8117 	bhi.w	404d02 <_malloc_r+0x506>
  404ad4:	4b1d      	ldr	r3, [pc, #116]	; (404b4c <_malloc_r+0x350>)
  404ad6:	68bc      	ldr	r4, [r7, #8]
  404ad8:	681a      	ldr	r2, [r3, #0]
  404ada:	4291      	cmp	r1, r2
  404adc:	bf88      	it	hi
  404ade:	6019      	strhi	r1, [r3, #0]
  404ae0:	4b1b      	ldr	r3, [pc, #108]	; (404b50 <_malloc_r+0x354>)
  404ae2:	681a      	ldr	r2, [r3, #0]
  404ae4:	4291      	cmp	r1, r2
  404ae6:	6862      	ldr	r2, [r4, #4]
  404ae8:	bf88      	it	hi
  404aea:	6019      	strhi	r1, [r3, #0]
  404aec:	f022 0203 	bic.w	r2, r2, #3
  404af0:	4296      	cmp	r6, r2
  404af2:	eba2 0306 	sub.w	r3, r2, r6
  404af6:	d801      	bhi.n	404afc <_malloc_r+0x300>
  404af8:	2b0f      	cmp	r3, #15
  404afa:	dc04      	bgt.n	404b06 <_malloc_r+0x30a>
  404afc:	4628      	mov	r0, r5
  404afe:	f000 fa1f 	bl	404f40 <__malloc_unlock>
  404b02:	2400      	movs	r4, #0
  404b04:	e740      	b.n	404988 <_malloc_r+0x18c>
  404b06:	19a2      	adds	r2, r4, r6
  404b08:	f043 0301 	orr.w	r3, r3, #1
  404b0c:	f046 0601 	orr.w	r6, r6, #1
  404b10:	6066      	str	r6, [r4, #4]
  404b12:	4628      	mov	r0, r5
  404b14:	60ba      	str	r2, [r7, #8]
  404b16:	6053      	str	r3, [r2, #4]
  404b18:	f000 fa12 	bl	404f40 <__malloc_unlock>
  404b1c:	3408      	adds	r4, #8
  404b1e:	4620      	mov	r0, r4
  404b20:	b003      	add	sp, #12
  404b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b26:	2b14      	cmp	r3, #20
  404b28:	d971      	bls.n	404c0e <_malloc_r+0x412>
  404b2a:	2b54      	cmp	r3, #84	; 0x54
  404b2c:	f200 80a3 	bhi.w	404c76 <_malloc_r+0x47a>
  404b30:	0b33      	lsrs	r3, r6, #12
  404b32:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404b36:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404b3a:	00c3      	lsls	r3, r0, #3
  404b3c:	e680      	b.n	404840 <_malloc_r+0x44>
  404b3e:	bf00      	nop
  404b40:	2040045c 	.word	0x2040045c
  404b44:	20400cc4 	.word	0x20400cc4
  404b48:	20400c94 	.word	0x20400c94
  404b4c:	20400cbc 	.word	0x20400cbc
  404b50:	20400cc0 	.word	0x20400cc0
  404b54:	20400464 	.word	0x20400464
  404b58:	20400864 	.word	0x20400864
  404b5c:	0a5a      	lsrs	r2, r3, #9
  404b5e:	2a04      	cmp	r2, #4
  404b60:	d95b      	bls.n	404c1a <_malloc_r+0x41e>
  404b62:	2a14      	cmp	r2, #20
  404b64:	f200 80ae 	bhi.w	404cc4 <_malloc_r+0x4c8>
  404b68:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404b6c:	00c9      	lsls	r1, r1, #3
  404b6e:	325b      	adds	r2, #91	; 0x5b
  404b70:	eb07 0c01 	add.w	ip, r7, r1
  404b74:	5879      	ldr	r1, [r7, r1]
  404b76:	f1ac 0c08 	sub.w	ip, ip, #8
  404b7a:	458c      	cmp	ip, r1
  404b7c:	f000 8088 	beq.w	404c90 <_malloc_r+0x494>
  404b80:	684a      	ldr	r2, [r1, #4]
  404b82:	f022 0203 	bic.w	r2, r2, #3
  404b86:	4293      	cmp	r3, r2
  404b88:	d273      	bcs.n	404c72 <_malloc_r+0x476>
  404b8a:	6889      	ldr	r1, [r1, #8]
  404b8c:	458c      	cmp	ip, r1
  404b8e:	d1f7      	bne.n	404b80 <_malloc_r+0x384>
  404b90:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404b94:	687b      	ldr	r3, [r7, #4]
  404b96:	60e2      	str	r2, [r4, #12]
  404b98:	f8c4 c008 	str.w	ip, [r4, #8]
  404b9c:	6094      	str	r4, [r2, #8]
  404b9e:	f8cc 400c 	str.w	r4, [ip, #12]
  404ba2:	e68f      	b.n	4048c4 <_malloc_r+0xc8>
  404ba4:	19a1      	adds	r1, r4, r6
  404ba6:	f046 0c01 	orr.w	ip, r6, #1
  404baa:	f042 0601 	orr.w	r6, r2, #1
  404bae:	f8c4 c004 	str.w	ip, [r4, #4]
  404bb2:	4628      	mov	r0, r5
  404bb4:	6179      	str	r1, [r7, #20]
  404bb6:	6139      	str	r1, [r7, #16]
  404bb8:	f8c1 e00c 	str.w	lr, [r1, #12]
  404bbc:	f8c1 e008 	str.w	lr, [r1, #8]
  404bc0:	604e      	str	r6, [r1, #4]
  404bc2:	50e2      	str	r2, [r4, r3]
  404bc4:	f000 f9bc 	bl	404f40 <__malloc_unlock>
  404bc8:	3408      	adds	r4, #8
  404bca:	e6dd      	b.n	404988 <_malloc_r+0x18c>
  404bcc:	687b      	ldr	r3, [r7, #4]
  404bce:	e679      	b.n	4048c4 <_malloc_r+0xc8>
  404bd0:	f108 0801 	add.w	r8, r8, #1
  404bd4:	f018 0f03 	tst.w	r8, #3
  404bd8:	f10c 0c08 	add.w	ip, ip, #8
  404bdc:	f47f ae85 	bne.w	4048ea <_malloc_r+0xee>
  404be0:	e02d      	b.n	404c3e <_malloc_r+0x442>
  404be2:	68dc      	ldr	r4, [r3, #12]
  404be4:	42a3      	cmp	r3, r4
  404be6:	bf08      	it	eq
  404be8:	3002      	addeq	r0, #2
  404bea:	f43f ae3e 	beq.w	40486a <_malloc_r+0x6e>
  404bee:	e6bb      	b.n	404968 <_malloc_r+0x16c>
  404bf0:	4419      	add	r1, r3
  404bf2:	461c      	mov	r4, r3
  404bf4:	684a      	ldr	r2, [r1, #4]
  404bf6:	68db      	ldr	r3, [r3, #12]
  404bf8:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404bfc:	f042 0201 	orr.w	r2, r2, #1
  404c00:	604a      	str	r2, [r1, #4]
  404c02:	4628      	mov	r0, r5
  404c04:	60f3      	str	r3, [r6, #12]
  404c06:	609e      	str	r6, [r3, #8]
  404c08:	f000 f99a 	bl	404f40 <__malloc_unlock>
  404c0c:	e6bc      	b.n	404988 <_malloc_r+0x18c>
  404c0e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404c12:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404c16:	00c3      	lsls	r3, r0, #3
  404c18:	e612      	b.n	404840 <_malloc_r+0x44>
  404c1a:	099a      	lsrs	r2, r3, #6
  404c1c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404c20:	00c9      	lsls	r1, r1, #3
  404c22:	3238      	adds	r2, #56	; 0x38
  404c24:	e7a4      	b.n	404b70 <_malloc_r+0x374>
  404c26:	42bc      	cmp	r4, r7
  404c28:	d054      	beq.n	404cd4 <_malloc_r+0x4d8>
  404c2a:	68bc      	ldr	r4, [r7, #8]
  404c2c:	6862      	ldr	r2, [r4, #4]
  404c2e:	f022 0203 	bic.w	r2, r2, #3
  404c32:	e75d      	b.n	404af0 <_malloc_r+0x2f4>
  404c34:	f859 3908 	ldr.w	r3, [r9], #-8
  404c38:	4599      	cmp	r9, r3
  404c3a:	f040 8086 	bne.w	404d4a <_malloc_r+0x54e>
  404c3e:	f010 0f03 	tst.w	r0, #3
  404c42:	f100 30ff 	add.w	r0, r0, #4294967295
  404c46:	d1f5      	bne.n	404c34 <_malloc_r+0x438>
  404c48:	687b      	ldr	r3, [r7, #4]
  404c4a:	ea23 0304 	bic.w	r3, r3, r4
  404c4e:	607b      	str	r3, [r7, #4]
  404c50:	0064      	lsls	r4, r4, #1
  404c52:	429c      	cmp	r4, r3
  404c54:	f63f aec7 	bhi.w	4049e6 <_malloc_r+0x1ea>
  404c58:	2c00      	cmp	r4, #0
  404c5a:	f43f aec4 	beq.w	4049e6 <_malloc_r+0x1ea>
  404c5e:	421c      	tst	r4, r3
  404c60:	4640      	mov	r0, r8
  404c62:	f47f ae3e 	bne.w	4048e2 <_malloc_r+0xe6>
  404c66:	0064      	lsls	r4, r4, #1
  404c68:	421c      	tst	r4, r3
  404c6a:	f100 0004 	add.w	r0, r0, #4
  404c6e:	d0fa      	beq.n	404c66 <_malloc_r+0x46a>
  404c70:	e637      	b.n	4048e2 <_malloc_r+0xe6>
  404c72:	468c      	mov	ip, r1
  404c74:	e78c      	b.n	404b90 <_malloc_r+0x394>
  404c76:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404c7a:	d815      	bhi.n	404ca8 <_malloc_r+0x4ac>
  404c7c:	0bf3      	lsrs	r3, r6, #15
  404c7e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404c82:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404c86:	00c3      	lsls	r3, r0, #3
  404c88:	e5da      	b.n	404840 <_malloc_r+0x44>
  404c8a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404c8e:	e6ed      	b.n	404a6c <_malloc_r+0x270>
  404c90:	687b      	ldr	r3, [r7, #4]
  404c92:	1092      	asrs	r2, r2, #2
  404c94:	2101      	movs	r1, #1
  404c96:	fa01 f202 	lsl.w	r2, r1, r2
  404c9a:	4313      	orrs	r3, r2
  404c9c:	607b      	str	r3, [r7, #4]
  404c9e:	4662      	mov	r2, ip
  404ca0:	e779      	b.n	404b96 <_malloc_r+0x39a>
  404ca2:	2301      	movs	r3, #1
  404ca4:	6053      	str	r3, [r2, #4]
  404ca6:	e729      	b.n	404afc <_malloc_r+0x300>
  404ca8:	f240 5254 	movw	r2, #1364	; 0x554
  404cac:	4293      	cmp	r3, r2
  404cae:	d822      	bhi.n	404cf6 <_malloc_r+0x4fa>
  404cb0:	0cb3      	lsrs	r3, r6, #18
  404cb2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404cb6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404cba:	00c3      	lsls	r3, r0, #3
  404cbc:	e5c0      	b.n	404840 <_malloc_r+0x44>
  404cbe:	f103 0b10 	add.w	fp, r3, #16
  404cc2:	e6ae      	b.n	404a22 <_malloc_r+0x226>
  404cc4:	2a54      	cmp	r2, #84	; 0x54
  404cc6:	d829      	bhi.n	404d1c <_malloc_r+0x520>
  404cc8:	0b1a      	lsrs	r2, r3, #12
  404cca:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404cce:	00c9      	lsls	r1, r1, #3
  404cd0:	326e      	adds	r2, #110	; 0x6e
  404cd2:	e74d      	b.n	404b70 <_malloc_r+0x374>
  404cd4:	4b20      	ldr	r3, [pc, #128]	; (404d58 <_malloc_r+0x55c>)
  404cd6:	6819      	ldr	r1, [r3, #0]
  404cd8:	4459      	add	r1, fp
  404cda:	6019      	str	r1, [r3, #0]
  404cdc:	e6b2      	b.n	404a44 <_malloc_r+0x248>
  404cde:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404ce2:	2800      	cmp	r0, #0
  404ce4:	f47f aeae 	bne.w	404a44 <_malloc_r+0x248>
  404ce8:	eb08 030b 	add.w	r3, r8, fp
  404cec:	68ba      	ldr	r2, [r7, #8]
  404cee:	f043 0301 	orr.w	r3, r3, #1
  404cf2:	6053      	str	r3, [r2, #4]
  404cf4:	e6ee      	b.n	404ad4 <_malloc_r+0x2d8>
  404cf6:	207f      	movs	r0, #127	; 0x7f
  404cf8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404cfc:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404d00:	e59e      	b.n	404840 <_malloc_r+0x44>
  404d02:	f104 0108 	add.w	r1, r4, #8
  404d06:	4628      	mov	r0, r5
  404d08:	9300      	str	r3, [sp, #0]
  404d0a:	f000 fe07 	bl	40591c <_free_r>
  404d0e:	9b00      	ldr	r3, [sp, #0]
  404d10:	6819      	ldr	r1, [r3, #0]
  404d12:	e6df      	b.n	404ad4 <_malloc_r+0x2d8>
  404d14:	2001      	movs	r0, #1
  404d16:	f04f 0900 	mov.w	r9, #0
  404d1a:	e6bc      	b.n	404a96 <_malloc_r+0x29a>
  404d1c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404d20:	d805      	bhi.n	404d2e <_malloc_r+0x532>
  404d22:	0bda      	lsrs	r2, r3, #15
  404d24:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404d28:	00c9      	lsls	r1, r1, #3
  404d2a:	3277      	adds	r2, #119	; 0x77
  404d2c:	e720      	b.n	404b70 <_malloc_r+0x374>
  404d2e:	f240 5154 	movw	r1, #1364	; 0x554
  404d32:	428a      	cmp	r2, r1
  404d34:	d805      	bhi.n	404d42 <_malloc_r+0x546>
  404d36:	0c9a      	lsrs	r2, r3, #18
  404d38:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404d3c:	00c9      	lsls	r1, r1, #3
  404d3e:	327c      	adds	r2, #124	; 0x7c
  404d40:	e716      	b.n	404b70 <_malloc_r+0x374>
  404d42:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404d46:	227e      	movs	r2, #126	; 0x7e
  404d48:	e712      	b.n	404b70 <_malloc_r+0x374>
  404d4a:	687b      	ldr	r3, [r7, #4]
  404d4c:	e780      	b.n	404c50 <_malloc_r+0x454>
  404d4e:	08f0      	lsrs	r0, r6, #3
  404d50:	f106 0308 	add.w	r3, r6, #8
  404d54:	e600      	b.n	404958 <_malloc_r+0x15c>
  404d56:	bf00      	nop
  404d58:	20400c94 	.word	0x20400c94
  404d5c:	00000000 	.word	0x00000000

00404d60 <memchr>:
  404d60:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404d64:	2a10      	cmp	r2, #16
  404d66:	db2b      	blt.n	404dc0 <memchr+0x60>
  404d68:	f010 0f07 	tst.w	r0, #7
  404d6c:	d008      	beq.n	404d80 <memchr+0x20>
  404d6e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404d72:	3a01      	subs	r2, #1
  404d74:	428b      	cmp	r3, r1
  404d76:	d02d      	beq.n	404dd4 <memchr+0x74>
  404d78:	f010 0f07 	tst.w	r0, #7
  404d7c:	b342      	cbz	r2, 404dd0 <memchr+0x70>
  404d7e:	d1f6      	bne.n	404d6e <memchr+0xe>
  404d80:	b4f0      	push	{r4, r5, r6, r7}
  404d82:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404d86:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404d8a:	f022 0407 	bic.w	r4, r2, #7
  404d8e:	f07f 0700 	mvns.w	r7, #0
  404d92:	2300      	movs	r3, #0
  404d94:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404d98:	3c08      	subs	r4, #8
  404d9a:	ea85 0501 	eor.w	r5, r5, r1
  404d9e:	ea86 0601 	eor.w	r6, r6, r1
  404da2:	fa85 f547 	uadd8	r5, r5, r7
  404da6:	faa3 f587 	sel	r5, r3, r7
  404daa:	fa86 f647 	uadd8	r6, r6, r7
  404dae:	faa5 f687 	sel	r6, r5, r7
  404db2:	b98e      	cbnz	r6, 404dd8 <memchr+0x78>
  404db4:	d1ee      	bne.n	404d94 <memchr+0x34>
  404db6:	bcf0      	pop	{r4, r5, r6, r7}
  404db8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404dbc:	f002 0207 	and.w	r2, r2, #7
  404dc0:	b132      	cbz	r2, 404dd0 <memchr+0x70>
  404dc2:	f810 3b01 	ldrb.w	r3, [r0], #1
  404dc6:	3a01      	subs	r2, #1
  404dc8:	ea83 0301 	eor.w	r3, r3, r1
  404dcc:	b113      	cbz	r3, 404dd4 <memchr+0x74>
  404dce:	d1f8      	bne.n	404dc2 <memchr+0x62>
  404dd0:	2000      	movs	r0, #0
  404dd2:	4770      	bx	lr
  404dd4:	3801      	subs	r0, #1
  404dd6:	4770      	bx	lr
  404dd8:	2d00      	cmp	r5, #0
  404dda:	bf06      	itte	eq
  404ddc:	4635      	moveq	r5, r6
  404dde:	3803      	subeq	r0, #3
  404de0:	3807      	subne	r0, #7
  404de2:	f015 0f01 	tst.w	r5, #1
  404de6:	d107      	bne.n	404df8 <memchr+0x98>
  404de8:	3001      	adds	r0, #1
  404dea:	f415 7f80 	tst.w	r5, #256	; 0x100
  404dee:	bf02      	ittt	eq
  404df0:	3001      	addeq	r0, #1
  404df2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404df6:	3001      	addeq	r0, #1
  404df8:	bcf0      	pop	{r4, r5, r6, r7}
  404dfa:	3801      	subs	r0, #1
  404dfc:	4770      	bx	lr
  404dfe:	bf00      	nop

00404e00 <memcpy>:
  404e00:	4684      	mov	ip, r0
  404e02:	ea41 0300 	orr.w	r3, r1, r0
  404e06:	f013 0303 	ands.w	r3, r3, #3
  404e0a:	d16d      	bne.n	404ee8 <memcpy+0xe8>
  404e0c:	3a40      	subs	r2, #64	; 0x40
  404e0e:	d341      	bcc.n	404e94 <memcpy+0x94>
  404e10:	f851 3b04 	ldr.w	r3, [r1], #4
  404e14:	f840 3b04 	str.w	r3, [r0], #4
  404e18:	f851 3b04 	ldr.w	r3, [r1], #4
  404e1c:	f840 3b04 	str.w	r3, [r0], #4
  404e20:	f851 3b04 	ldr.w	r3, [r1], #4
  404e24:	f840 3b04 	str.w	r3, [r0], #4
  404e28:	f851 3b04 	ldr.w	r3, [r1], #4
  404e2c:	f840 3b04 	str.w	r3, [r0], #4
  404e30:	f851 3b04 	ldr.w	r3, [r1], #4
  404e34:	f840 3b04 	str.w	r3, [r0], #4
  404e38:	f851 3b04 	ldr.w	r3, [r1], #4
  404e3c:	f840 3b04 	str.w	r3, [r0], #4
  404e40:	f851 3b04 	ldr.w	r3, [r1], #4
  404e44:	f840 3b04 	str.w	r3, [r0], #4
  404e48:	f851 3b04 	ldr.w	r3, [r1], #4
  404e4c:	f840 3b04 	str.w	r3, [r0], #4
  404e50:	f851 3b04 	ldr.w	r3, [r1], #4
  404e54:	f840 3b04 	str.w	r3, [r0], #4
  404e58:	f851 3b04 	ldr.w	r3, [r1], #4
  404e5c:	f840 3b04 	str.w	r3, [r0], #4
  404e60:	f851 3b04 	ldr.w	r3, [r1], #4
  404e64:	f840 3b04 	str.w	r3, [r0], #4
  404e68:	f851 3b04 	ldr.w	r3, [r1], #4
  404e6c:	f840 3b04 	str.w	r3, [r0], #4
  404e70:	f851 3b04 	ldr.w	r3, [r1], #4
  404e74:	f840 3b04 	str.w	r3, [r0], #4
  404e78:	f851 3b04 	ldr.w	r3, [r1], #4
  404e7c:	f840 3b04 	str.w	r3, [r0], #4
  404e80:	f851 3b04 	ldr.w	r3, [r1], #4
  404e84:	f840 3b04 	str.w	r3, [r0], #4
  404e88:	f851 3b04 	ldr.w	r3, [r1], #4
  404e8c:	f840 3b04 	str.w	r3, [r0], #4
  404e90:	3a40      	subs	r2, #64	; 0x40
  404e92:	d2bd      	bcs.n	404e10 <memcpy+0x10>
  404e94:	3230      	adds	r2, #48	; 0x30
  404e96:	d311      	bcc.n	404ebc <memcpy+0xbc>
  404e98:	f851 3b04 	ldr.w	r3, [r1], #4
  404e9c:	f840 3b04 	str.w	r3, [r0], #4
  404ea0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ea4:	f840 3b04 	str.w	r3, [r0], #4
  404ea8:	f851 3b04 	ldr.w	r3, [r1], #4
  404eac:	f840 3b04 	str.w	r3, [r0], #4
  404eb0:	f851 3b04 	ldr.w	r3, [r1], #4
  404eb4:	f840 3b04 	str.w	r3, [r0], #4
  404eb8:	3a10      	subs	r2, #16
  404eba:	d2ed      	bcs.n	404e98 <memcpy+0x98>
  404ebc:	320c      	adds	r2, #12
  404ebe:	d305      	bcc.n	404ecc <memcpy+0xcc>
  404ec0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ec4:	f840 3b04 	str.w	r3, [r0], #4
  404ec8:	3a04      	subs	r2, #4
  404eca:	d2f9      	bcs.n	404ec0 <memcpy+0xc0>
  404ecc:	3204      	adds	r2, #4
  404ece:	d008      	beq.n	404ee2 <memcpy+0xe2>
  404ed0:	07d2      	lsls	r2, r2, #31
  404ed2:	bf1c      	itt	ne
  404ed4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404ed8:	f800 3b01 	strbne.w	r3, [r0], #1
  404edc:	d301      	bcc.n	404ee2 <memcpy+0xe2>
  404ede:	880b      	ldrh	r3, [r1, #0]
  404ee0:	8003      	strh	r3, [r0, #0]
  404ee2:	4660      	mov	r0, ip
  404ee4:	4770      	bx	lr
  404ee6:	bf00      	nop
  404ee8:	2a08      	cmp	r2, #8
  404eea:	d313      	bcc.n	404f14 <memcpy+0x114>
  404eec:	078b      	lsls	r3, r1, #30
  404eee:	d08d      	beq.n	404e0c <memcpy+0xc>
  404ef0:	f010 0303 	ands.w	r3, r0, #3
  404ef4:	d08a      	beq.n	404e0c <memcpy+0xc>
  404ef6:	f1c3 0304 	rsb	r3, r3, #4
  404efa:	1ad2      	subs	r2, r2, r3
  404efc:	07db      	lsls	r3, r3, #31
  404efe:	bf1c      	itt	ne
  404f00:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404f04:	f800 3b01 	strbne.w	r3, [r0], #1
  404f08:	d380      	bcc.n	404e0c <memcpy+0xc>
  404f0a:	f831 3b02 	ldrh.w	r3, [r1], #2
  404f0e:	f820 3b02 	strh.w	r3, [r0], #2
  404f12:	e77b      	b.n	404e0c <memcpy+0xc>
  404f14:	3a04      	subs	r2, #4
  404f16:	d3d9      	bcc.n	404ecc <memcpy+0xcc>
  404f18:	3a01      	subs	r2, #1
  404f1a:	f811 3b01 	ldrb.w	r3, [r1], #1
  404f1e:	f800 3b01 	strb.w	r3, [r0], #1
  404f22:	d2f9      	bcs.n	404f18 <memcpy+0x118>
  404f24:	780b      	ldrb	r3, [r1, #0]
  404f26:	7003      	strb	r3, [r0, #0]
  404f28:	784b      	ldrb	r3, [r1, #1]
  404f2a:	7043      	strb	r3, [r0, #1]
  404f2c:	788b      	ldrb	r3, [r1, #2]
  404f2e:	7083      	strb	r3, [r0, #2]
  404f30:	4660      	mov	r0, ip
  404f32:	4770      	bx	lr

00404f34 <__malloc_lock>:
  404f34:	4801      	ldr	r0, [pc, #4]	; (404f3c <__malloc_lock+0x8>)
  404f36:	f7ff bc5d 	b.w	4047f4 <__retarget_lock_acquire_recursive>
  404f3a:	bf00      	nop
  404f3c:	20400cd8 	.word	0x20400cd8

00404f40 <__malloc_unlock>:
  404f40:	4801      	ldr	r0, [pc, #4]	; (404f48 <__malloc_unlock+0x8>)
  404f42:	f7ff bc59 	b.w	4047f8 <__retarget_lock_release_recursive>
  404f46:	bf00      	nop
  404f48:	20400cd8 	.word	0x20400cd8

00404f4c <_Balloc>:
  404f4c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404f4e:	b570      	push	{r4, r5, r6, lr}
  404f50:	4605      	mov	r5, r0
  404f52:	460c      	mov	r4, r1
  404f54:	b14b      	cbz	r3, 404f6a <_Balloc+0x1e>
  404f56:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404f5a:	b180      	cbz	r0, 404f7e <_Balloc+0x32>
  404f5c:	6802      	ldr	r2, [r0, #0]
  404f5e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404f62:	2300      	movs	r3, #0
  404f64:	6103      	str	r3, [r0, #16]
  404f66:	60c3      	str	r3, [r0, #12]
  404f68:	bd70      	pop	{r4, r5, r6, pc}
  404f6a:	2221      	movs	r2, #33	; 0x21
  404f6c:	2104      	movs	r1, #4
  404f6e:	f000 fc55 	bl	40581c <_calloc_r>
  404f72:	64e8      	str	r0, [r5, #76]	; 0x4c
  404f74:	4603      	mov	r3, r0
  404f76:	2800      	cmp	r0, #0
  404f78:	d1ed      	bne.n	404f56 <_Balloc+0xa>
  404f7a:	2000      	movs	r0, #0
  404f7c:	bd70      	pop	{r4, r5, r6, pc}
  404f7e:	2101      	movs	r1, #1
  404f80:	fa01 f604 	lsl.w	r6, r1, r4
  404f84:	1d72      	adds	r2, r6, #5
  404f86:	4628      	mov	r0, r5
  404f88:	0092      	lsls	r2, r2, #2
  404f8a:	f000 fc47 	bl	40581c <_calloc_r>
  404f8e:	2800      	cmp	r0, #0
  404f90:	d0f3      	beq.n	404f7a <_Balloc+0x2e>
  404f92:	6044      	str	r4, [r0, #4]
  404f94:	6086      	str	r6, [r0, #8]
  404f96:	e7e4      	b.n	404f62 <_Balloc+0x16>

00404f98 <_Bfree>:
  404f98:	b131      	cbz	r1, 404fa8 <_Bfree+0x10>
  404f9a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404f9c:	684a      	ldr	r2, [r1, #4]
  404f9e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404fa2:	6008      	str	r0, [r1, #0]
  404fa4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404fa8:	4770      	bx	lr
  404faa:	bf00      	nop

00404fac <__multadd>:
  404fac:	b5f0      	push	{r4, r5, r6, r7, lr}
  404fae:	690c      	ldr	r4, [r1, #16]
  404fb0:	b083      	sub	sp, #12
  404fb2:	460d      	mov	r5, r1
  404fb4:	4606      	mov	r6, r0
  404fb6:	f101 0e14 	add.w	lr, r1, #20
  404fba:	2700      	movs	r7, #0
  404fbc:	f8de 0000 	ldr.w	r0, [lr]
  404fc0:	b281      	uxth	r1, r0
  404fc2:	fb02 3301 	mla	r3, r2, r1, r3
  404fc6:	0c01      	lsrs	r1, r0, #16
  404fc8:	0c18      	lsrs	r0, r3, #16
  404fca:	fb02 0101 	mla	r1, r2, r1, r0
  404fce:	b29b      	uxth	r3, r3
  404fd0:	3701      	adds	r7, #1
  404fd2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404fd6:	42bc      	cmp	r4, r7
  404fd8:	f84e 3b04 	str.w	r3, [lr], #4
  404fdc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404fe0:	dcec      	bgt.n	404fbc <__multadd+0x10>
  404fe2:	b13b      	cbz	r3, 404ff4 <__multadd+0x48>
  404fe4:	68aa      	ldr	r2, [r5, #8]
  404fe6:	4294      	cmp	r4, r2
  404fe8:	da07      	bge.n	404ffa <__multadd+0x4e>
  404fea:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404fee:	3401      	adds	r4, #1
  404ff0:	6153      	str	r3, [r2, #20]
  404ff2:	612c      	str	r4, [r5, #16]
  404ff4:	4628      	mov	r0, r5
  404ff6:	b003      	add	sp, #12
  404ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404ffa:	6869      	ldr	r1, [r5, #4]
  404ffc:	9301      	str	r3, [sp, #4]
  404ffe:	3101      	adds	r1, #1
  405000:	4630      	mov	r0, r6
  405002:	f7ff ffa3 	bl	404f4c <_Balloc>
  405006:	692a      	ldr	r2, [r5, #16]
  405008:	3202      	adds	r2, #2
  40500a:	f105 010c 	add.w	r1, r5, #12
  40500e:	4607      	mov	r7, r0
  405010:	0092      	lsls	r2, r2, #2
  405012:	300c      	adds	r0, #12
  405014:	f7ff fef4 	bl	404e00 <memcpy>
  405018:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40501a:	6869      	ldr	r1, [r5, #4]
  40501c:	9b01      	ldr	r3, [sp, #4]
  40501e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405022:	6028      	str	r0, [r5, #0]
  405024:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405028:	463d      	mov	r5, r7
  40502a:	e7de      	b.n	404fea <__multadd+0x3e>

0040502c <__hi0bits>:
  40502c:	0c02      	lsrs	r2, r0, #16
  40502e:	0412      	lsls	r2, r2, #16
  405030:	4603      	mov	r3, r0
  405032:	b9b2      	cbnz	r2, 405062 <__hi0bits+0x36>
  405034:	0403      	lsls	r3, r0, #16
  405036:	2010      	movs	r0, #16
  405038:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40503c:	bf04      	itt	eq
  40503e:	021b      	lsleq	r3, r3, #8
  405040:	3008      	addeq	r0, #8
  405042:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405046:	bf04      	itt	eq
  405048:	011b      	lsleq	r3, r3, #4
  40504a:	3004      	addeq	r0, #4
  40504c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405050:	bf04      	itt	eq
  405052:	009b      	lsleq	r3, r3, #2
  405054:	3002      	addeq	r0, #2
  405056:	2b00      	cmp	r3, #0
  405058:	db02      	blt.n	405060 <__hi0bits+0x34>
  40505a:	005b      	lsls	r3, r3, #1
  40505c:	d403      	bmi.n	405066 <__hi0bits+0x3a>
  40505e:	2020      	movs	r0, #32
  405060:	4770      	bx	lr
  405062:	2000      	movs	r0, #0
  405064:	e7e8      	b.n	405038 <__hi0bits+0xc>
  405066:	3001      	adds	r0, #1
  405068:	4770      	bx	lr
  40506a:	bf00      	nop

0040506c <__lo0bits>:
  40506c:	6803      	ldr	r3, [r0, #0]
  40506e:	f013 0207 	ands.w	r2, r3, #7
  405072:	4601      	mov	r1, r0
  405074:	d007      	beq.n	405086 <__lo0bits+0x1a>
  405076:	07da      	lsls	r2, r3, #31
  405078:	d421      	bmi.n	4050be <__lo0bits+0x52>
  40507a:	0798      	lsls	r0, r3, #30
  40507c:	d421      	bmi.n	4050c2 <__lo0bits+0x56>
  40507e:	089b      	lsrs	r3, r3, #2
  405080:	600b      	str	r3, [r1, #0]
  405082:	2002      	movs	r0, #2
  405084:	4770      	bx	lr
  405086:	b298      	uxth	r0, r3
  405088:	b198      	cbz	r0, 4050b2 <__lo0bits+0x46>
  40508a:	4610      	mov	r0, r2
  40508c:	f013 0fff 	tst.w	r3, #255	; 0xff
  405090:	bf04      	itt	eq
  405092:	0a1b      	lsreq	r3, r3, #8
  405094:	3008      	addeq	r0, #8
  405096:	071a      	lsls	r2, r3, #28
  405098:	bf04      	itt	eq
  40509a:	091b      	lsreq	r3, r3, #4
  40509c:	3004      	addeq	r0, #4
  40509e:	079a      	lsls	r2, r3, #30
  4050a0:	bf04      	itt	eq
  4050a2:	089b      	lsreq	r3, r3, #2
  4050a4:	3002      	addeq	r0, #2
  4050a6:	07da      	lsls	r2, r3, #31
  4050a8:	d407      	bmi.n	4050ba <__lo0bits+0x4e>
  4050aa:	085b      	lsrs	r3, r3, #1
  4050ac:	d104      	bne.n	4050b8 <__lo0bits+0x4c>
  4050ae:	2020      	movs	r0, #32
  4050b0:	4770      	bx	lr
  4050b2:	0c1b      	lsrs	r3, r3, #16
  4050b4:	2010      	movs	r0, #16
  4050b6:	e7e9      	b.n	40508c <__lo0bits+0x20>
  4050b8:	3001      	adds	r0, #1
  4050ba:	600b      	str	r3, [r1, #0]
  4050bc:	4770      	bx	lr
  4050be:	2000      	movs	r0, #0
  4050c0:	4770      	bx	lr
  4050c2:	085b      	lsrs	r3, r3, #1
  4050c4:	600b      	str	r3, [r1, #0]
  4050c6:	2001      	movs	r0, #1
  4050c8:	4770      	bx	lr
  4050ca:	bf00      	nop

004050cc <__i2b>:
  4050cc:	b510      	push	{r4, lr}
  4050ce:	460c      	mov	r4, r1
  4050d0:	2101      	movs	r1, #1
  4050d2:	f7ff ff3b 	bl	404f4c <_Balloc>
  4050d6:	2201      	movs	r2, #1
  4050d8:	6144      	str	r4, [r0, #20]
  4050da:	6102      	str	r2, [r0, #16]
  4050dc:	bd10      	pop	{r4, pc}
  4050de:	bf00      	nop

004050e0 <__multiply>:
  4050e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4050e4:	690c      	ldr	r4, [r1, #16]
  4050e6:	6915      	ldr	r5, [r2, #16]
  4050e8:	42ac      	cmp	r4, r5
  4050ea:	b083      	sub	sp, #12
  4050ec:	468b      	mov	fp, r1
  4050ee:	4616      	mov	r6, r2
  4050f0:	da04      	bge.n	4050fc <__multiply+0x1c>
  4050f2:	4622      	mov	r2, r4
  4050f4:	46b3      	mov	fp, r6
  4050f6:	462c      	mov	r4, r5
  4050f8:	460e      	mov	r6, r1
  4050fa:	4615      	mov	r5, r2
  4050fc:	f8db 3008 	ldr.w	r3, [fp, #8]
  405100:	f8db 1004 	ldr.w	r1, [fp, #4]
  405104:	eb04 0805 	add.w	r8, r4, r5
  405108:	4598      	cmp	r8, r3
  40510a:	bfc8      	it	gt
  40510c:	3101      	addgt	r1, #1
  40510e:	f7ff ff1d 	bl	404f4c <_Balloc>
  405112:	f100 0914 	add.w	r9, r0, #20
  405116:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40511a:	45d1      	cmp	r9, sl
  40511c:	9000      	str	r0, [sp, #0]
  40511e:	d205      	bcs.n	40512c <__multiply+0x4c>
  405120:	464b      	mov	r3, r9
  405122:	2100      	movs	r1, #0
  405124:	f843 1b04 	str.w	r1, [r3], #4
  405128:	459a      	cmp	sl, r3
  40512a:	d8fb      	bhi.n	405124 <__multiply+0x44>
  40512c:	f106 0c14 	add.w	ip, r6, #20
  405130:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405134:	f10b 0b14 	add.w	fp, fp, #20
  405138:	459c      	cmp	ip, r3
  40513a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40513e:	d24c      	bcs.n	4051da <__multiply+0xfa>
  405140:	f8cd a004 	str.w	sl, [sp, #4]
  405144:	469a      	mov	sl, r3
  405146:	f8dc 5000 	ldr.w	r5, [ip]
  40514a:	b2af      	uxth	r7, r5
  40514c:	b1ef      	cbz	r7, 40518a <__multiply+0xaa>
  40514e:	2100      	movs	r1, #0
  405150:	464d      	mov	r5, r9
  405152:	465e      	mov	r6, fp
  405154:	460c      	mov	r4, r1
  405156:	f856 2b04 	ldr.w	r2, [r6], #4
  40515a:	6828      	ldr	r0, [r5, #0]
  40515c:	b293      	uxth	r3, r2
  40515e:	b281      	uxth	r1, r0
  405160:	fb07 1303 	mla	r3, r7, r3, r1
  405164:	0c12      	lsrs	r2, r2, #16
  405166:	0c01      	lsrs	r1, r0, #16
  405168:	4423      	add	r3, r4
  40516a:	fb07 1102 	mla	r1, r7, r2, r1
  40516e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405172:	b29b      	uxth	r3, r3
  405174:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405178:	45b6      	cmp	lr, r6
  40517a:	f845 3b04 	str.w	r3, [r5], #4
  40517e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405182:	d8e8      	bhi.n	405156 <__multiply+0x76>
  405184:	602c      	str	r4, [r5, #0]
  405186:	f8dc 5000 	ldr.w	r5, [ip]
  40518a:	0c2d      	lsrs	r5, r5, #16
  40518c:	d01d      	beq.n	4051ca <__multiply+0xea>
  40518e:	f8d9 3000 	ldr.w	r3, [r9]
  405192:	4648      	mov	r0, r9
  405194:	461c      	mov	r4, r3
  405196:	4659      	mov	r1, fp
  405198:	2200      	movs	r2, #0
  40519a:	880e      	ldrh	r6, [r1, #0]
  40519c:	0c24      	lsrs	r4, r4, #16
  40519e:	fb05 4406 	mla	r4, r5, r6, r4
  4051a2:	4422      	add	r2, r4
  4051a4:	b29b      	uxth	r3, r3
  4051a6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4051aa:	f840 3b04 	str.w	r3, [r0], #4
  4051ae:	f851 3b04 	ldr.w	r3, [r1], #4
  4051b2:	6804      	ldr	r4, [r0, #0]
  4051b4:	0c1b      	lsrs	r3, r3, #16
  4051b6:	b2a6      	uxth	r6, r4
  4051b8:	fb05 6303 	mla	r3, r5, r3, r6
  4051bc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  4051c0:	458e      	cmp	lr, r1
  4051c2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  4051c6:	d8e8      	bhi.n	40519a <__multiply+0xba>
  4051c8:	6003      	str	r3, [r0, #0]
  4051ca:	f10c 0c04 	add.w	ip, ip, #4
  4051ce:	45e2      	cmp	sl, ip
  4051d0:	f109 0904 	add.w	r9, r9, #4
  4051d4:	d8b7      	bhi.n	405146 <__multiply+0x66>
  4051d6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4051da:	f1b8 0f00 	cmp.w	r8, #0
  4051de:	dd0b      	ble.n	4051f8 <__multiply+0x118>
  4051e0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4051e4:	f1aa 0a04 	sub.w	sl, sl, #4
  4051e8:	b11b      	cbz	r3, 4051f2 <__multiply+0x112>
  4051ea:	e005      	b.n	4051f8 <__multiply+0x118>
  4051ec:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4051f0:	b913      	cbnz	r3, 4051f8 <__multiply+0x118>
  4051f2:	f1b8 0801 	subs.w	r8, r8, #1
  4051f6:	d1f9      	bne.n	4051ec <__multiply+0x10c>
  4051f8:	9800      	ldr	r0, [sp, #0]
  4051fa:	f8c0 8010 	str.w	r8, [r0, #16]
  4051fe:	b003      	add	sp, #12
  405200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405204 <__pow5mult>:
  405204:	f012 0303 	ands.w	r3, r2, #3
  405208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40520c:	4614      	mov	r4, r2
  40520e:	4607      	mov	r7, r0
  405210:	d12e      	bne.n	405270 <__pow5mult+0x6c>
  405212:	460d      	mov	r5, r1
  405214:	10a4      	asrs	r4, r4, #2
  405216:	d01c      	beq.n	405252 <__pow5mult+0x4e>
  405218:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40521a:	b396      	cbz	r6, 405282 <__pow5mult+0x7e>
  40521c:	07e3      	lsls	r3, r4, #31
  40521e:	f04f 0800 	mov.w	r8, #0
  405222:	d406      	bmi.n	405232 <__pow5mult+0x2e>
  405224:	1064      	asrs	r4, r4, #1
  405226:	d014      	beq.n	405252 <__pow5mult+0x4e>
  405228:	6830      	ldr	r0, [r6, #0]
  40522a:	b1a8      	cbz	r0, 405258 <__pow5mult+0x54>
  40522c:	4606      	mov	r6, r0
  40522e:	07e3      	lsls	r3, r4, #31
  405230:	d5f8      	bpl.n	405224 <__pow5mult+0x20>
  405232:	4632      	mov	r2, r6
  405234:	4629      	mov	r1, r5
  405236:	4638      	mov	r0, r7
  405238:	f7ff ff52 	bl	4050e0 <__multiply>
  40523c:	b1b5      	cbz	r5, 40526c <__pow5mult+0x68>
  40523e:	686a      	ldr	r2, [r5, #4]
  405240:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405242:	1064      	asrs	r4, r4, #1
  405244:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405248:	6029      	str	r1, [r5, #0]
  40524a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40524e:	4605      	mov	r5, r0
  405250:	d1ea      	bne.n	405228 <__pow5mult+0x24>
  405252:	4628      	mov	r0, r5
  405254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405258:	4632      	mov	r2, r6
  40525a:	4631      	mov	r1, r6
  40525c:	4638      	mov	r0, r7
  40525e:	f7ff ff3f 	bl	4050e0 <__multiply>
  405262:	6030      	str	r0, [r6, #0]
  405264:	f8c0 8000 	str.w	r8, [r0]
  405268:	4606      	mov	r6, r0
  40526a:	e7e0      	b.n	40522e <__pow5mult+0x2a>
  40526c:	4605      	mov	r5, r0
  40526e:	e7d9      	b.n	405224 <__pow5mult+0x20>
  405270:	1e5a      	subs	r2, r3, #1
  405272:	4d0b      	ldr	r5, [pc, #44]	; (4052a0 <__pow5mult+0x9c>)
  405274:	2300      	movs	r3, #0
  405276:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40527a:	f7ff fe97 	bl	404fac <__multadd>
  40527e:	4605      	mov	r5, r0
  405280:	e7c8      	b.n	405214 <__pow5mult+0x10>
  405282:	2101      	movs	r1, #1
  405284:	4638      	mov	r0, r7
  405286:	f7ff fe61 	bl	404f4c <_Balloc>
  40528a:	f240 2171 	movw	r1, #625	; 0x271
  40528e:	2201      	movs	r2, #1
  405290:	2300      	movs	r3, #0
  405292:	6141      	str	r1, [r0, #20]
  405294:	6102      	str	r2, [r0, #16]
  405296:	4606      	mov	r6, r0
  405298:	64b8      	str	r0, [r7, #72]	; 0x48
  40529a:	6003      	str	r3, [r0, #0]
  40529c:	e7be      	b.n	40521c <__pow5mult+0x18>
  40529e:	bf00      	nop
  4052a0:	00406fa8 	.word	0x00406fa8

004052a4 <__lshift>:
  4052a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4052a8:	4691      	mov	r9, r2
  4052aa:	690a      	ldr	r2, [r1, #16]
  4052ac:	688b      	ldr	r3, [r1, #8]
  4052ae:	ea4f 1469 	mov.w	r4, r9, asr #5
  4052b2:	eb04 0802 	add.w	r8, r4, r2
  4052b6:	f108 0501 	add.w	r5, r8, #1
  4052ba:	429d      	cmp	r5, r3
  4052bc:	460e      	mov	r6, r1
  4052be:	4607      	mov	r7, r0
  4052c0:	6849      	ldr	r1, [r1, #4]
  4052c2:	dd04      	ble.n	4052ce <__lshift+0x2a>
  4052c4:	005b      	lsls	r3, r3, #1
  4052c6:	429d      	cmp	r5, r3
  4052c8:	f101 0101 	add.w	r1, r1, #1
  4052cc:	dcfa      	bgt.n	4052c4 <__lshift+0x20>
  4052ce:	4638      	mov	r0, r7
  4052d0:	f7ff fe3c 	bl	404f4c <_Balloc>
  4052d4:	2c00      	cmp	r4, #0
  4052d6:	f100 0314 	add.w	r3, r0, #20
  4052da:	dd06      	ble.n	4052ea <__lshift+0x46>
  4052dc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4052e0:	2100      	movs	r1, #0
  4052e2:	f843 1b04 	str.w	r1, [r3], #4
  4052e6:	429a      	cmp	r2, r3
  4052e8:	d1fb      	bne.n	4052e2 <__lshift+0x3e>
  4052ea:	6934      	ldr	r4, [r6, #16]
  4052ec:	f106 0114 	add.w	r1, r6, #20
  4052f0:	f019 091f 	ands.w	r9, r9, #31
  4052f4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4052f8:	d01d      	beq.n	405336 <__lshift+0x92>
  4052fa:	f1c9 0c20 	rsb	ip, r9, #32
  4052fe:	2200      	movs	r2, #0
  405300:	680c      	ldr	r4, [r1, #0]
  405302:	fa04 f409 	lsl.w	r4, r4, r9
  405306:	4314      	orrs	r4, r2
  405308:	f843 4b04 	str.w	r4, [r3], #4
  40530c:	f851 2b04 	ldr.w	r2, [r1], #4
  405310:	458e      	cmp	lr, r1
  405312:	fa22 f20c 	lsr.w	r2, r2, ip
  405316:	d8f3      	bhi.n	405300 <__lshift+0x5c>
  405318:	601a      	str	r2, [r3, #0]
  40531a:	b10a      	cbz	r2, 405320 <__lshift+0x7c>
  40531c:	f108 0502 	add.w	r5, r8, #2
  405320:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405322:	6872      	ldr	r2, [r6, #4]
  405324:	3d01      	subs	r5, #1
  405326:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40532a:	6105      	str	r5, [r0, #16]
  40532c:	6031      	str	r1, [r6, #0]
  40532e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405332:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405336:	3b04      	subs	r3, #4
  405338:	f851 2b04 	ldr.w	r2, [r1], #4
  40533c:	f843 2f04 	str.w	r2, [r3, #4]!
  405340:	458e      	cmp	lr, r1
  405342:	d8f9      	bhi.n	405338 <__lshift+0x94>
  405344:	e7ec      	b.n	405320 <__lshift+0x7c>
  405346:	bf00      	nop

00405348 <__mcmp>:
  405348:	b430      	push	{r4, r5}
  40534a:	690b      	ldr	r3, [r1, #16]
  40534c:	4605      	mov	r5, r0
  40534e:	6900      	ldr	r0, [r0, #16]
  405350:	1ac0      	subs	r0, r0, r3
  405352:	d10f      	bne.n	405374 <__mcmp+0x2c>
  405354:	009b      	lsls	r3, r3, #2
  405356:	3514      	adds	r5, #20
  405358:	3114      	adds	r1, #20
  40535a:	4419      	add	r1, r3
  40535c:	442b      	add	r3, r5
  40535e:	e001      	b.n	405364 <__mcmp+0x1c>
  405360:	429d      	cmp	r5, r3
  405362:	d207      	bcs.n	405374 <__mcmp+0x2c>
  405364:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405368:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40536c:	4294      	cmp	r4, r2
  40536e:	d0f7      	beq.n	405360 <__mcmp+0x18>
  405370:	d302      	bcc.n	405378 <__mcmp+0x30>
  405372:	2001      	movs	r0, #1
  405374:	bc30      	pop	{r4, r5}
  405376:	4770      	bx	lr
  405378:	f04f 30ff 	mov.w	r0, #4294967295
  40537c:	e7fa      	b.n	405374 <__mcmp+0x2c>
  40537e:	bf00      	nop

00405380 <__mdiff>:
  405380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405384:	690f      	ldr	r7, [r1, #16]
  405386:	460e      	mov	r6, r1
  405388:	6911      	ldr	r1, [r2, #16]
  40538a:	1a7f      	subs	r7, r7, r1
  40538c:	2f00      	cmp	r7, #0
  40538e:	4690      	mov	r8, r2
  405390:	d117      	bne.n	4053c2 <__mdiff+0x42>
  405392:	0089      	lsls	r1, r1, #2
  405394:	f106 0514 	add.w	r5, r6, #20
  405398:	f102 0e14 	add.w	lr, r2, #20
  40539c:	186b      	adds	r3, r5, r1
  40539e:	4471      	add	r1, lr
  4053a0:	e001      	b.n	4053a6 <__mdiff+0x26>
  4053a2:	429d      	cmp	r5, r3
  4053a4:	d25c      	bcs.n	405460 <__mdiff+0xe0>
  4053a6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4053aa:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4053ae:	42a2      	cmp	r2, r4
  4053b0:	d0f7      	beq.n	4053a2 <__mdiff+0x22>
  4053b2:	d25e      	bcs.n	405472 <__mdiff+0xf2>
  4053b4:	4633      	mov	r3, r6
  4053b6:	462c      	mov	r4, r5
  4053b8:	4646      	mov	r6, r8
  4053ba:	4675      	mov	r5, lr
  4053bc:	4698      	mov	r8, r3
  4053be:	2701      	movs	r7, #1
  4053c0:	e005      	b.n	4053ce <__mdiff+0x4e>
  4053c2:	db58      	blt.n	405476 <__mdiff+0xf6>
  4053c4:	f106 0514 	add.w	r5, r6, #20
  4053c8:	f108 0414 	add.w	r4, r8, #20
  4053cc:	2700      	movs	r7, #0
  4053ce:	6871      	ldr	r1, [r6, #4]
  4053d0:	f7ff fdbc 	bl	404f4c <_Balloc>
  4053d4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4053d8:	6936      	ldr	r6, [r6, #16]
  4053da:	60c7      	str	r7, [r0, #12]
  4053dc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4053e0:	46a6      	mov	lr, r4
  4053e2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4053e6:	f100 0414 	add.w	r4, r0, #20
  4053ea:	2300      	movs	r3, #0
  4053ec:	f85e 1b04 	ldr.w	r1, [lr], #4
  4053f0:	f855 8b04 	ldr.w	r8, [r5], #4
  4053f4:	b28a      	uxth	r2, r1
  4053f6:	fa13 f388 	uxtah	r3, r3, r8
  4053fa:	0c09      	lsrs	r1, r1, #16
  4053fc:	1a9a      	subs	r2, r3, r2
  4053fe:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405402:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405406:	b292      	uxth	r2, r2
  405408:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40540c:	45f4      	cmp	ip, lr
  40540e:	f844 2b04 	str.w	r2, [r4], #4
  405412:	ea4f 4323 	mov.w	r3, r3, asr #16
  405416:	d8e9      	bhi.n	4053ec <__mdiff+0x6c>
  405418:	42af      	cmp	r7, r5
  40541a:	d917      	bls.n	40544c <__mdiff+0xcc>
  40541c:	46a4      	mov	ip, r4
  40541e:	46ae      	mov	lr, r5
  405420:	f85e 2b04 	ldr.w	r2, [lr], #4
  405424:	fa13 f382 	uxtah	r3, r3, r2
  405428:	1419      	asrs	r1, r3, #16
  40542a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40542e:	b29b      	uxth	r3, r3
  405430:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405434:	4577      	cmp	r7, lr
  405436:	f84c 2b04 	str.w	r2, [ip], #4
  40543a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40543e:	d8ef      	bhi.n	405420 <__mdiff+0xa0>
  405440:	43ed      	mvns	r5, r5
  405442:	442f      	add	r7, r5
  405444:	f027 0703 	bic.w	r7, r7, #3
  405448:	3704      	adds	r7, #4
  40544a:	443c      	add	r4, r7
  40544c:	3c04      	subs	r4, #4
  40544e:	b922      	cbnz	r2, 40545a <__mdiff+0xda>
  405450:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405454:	3e01      	subs	r6, #1
  405456:	2b00      	cmp	r3, #0
  405458:	d0fa      	beq.n	405450 <__mdiff+0xd0>
  40545a:	6106      	str	r6, [r0, #16]
  40545c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405460:	2100      	movs	r1, #0
  405462:	f7ff fd73 	bl	404f4c <_Balloc>
  405466:	2201      	movs	r2, #1
  405468:	2300      	movs	r3, #0
  40546a:	6102      	str	r2, [r0, #16]
  40546c:	6143      	str	r3, [r0, #20]
  40546e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405472:	4674      	mov	r4, lr
  405474:	e7ab      	b.n	4053ce <__mdiff+0x4e>
  405476:	4633      	mov	r3, r6
  405478:	f106 0414 	add.w	r4, r6, #20
  40547c:	f102 0514 	add.w	r5, r2, #20
  405480:	4616      	mov	r6, r2
  405482:	2701      	movs	r7, #1
  405484:	4698      	mov	r8, r3
  405486:	e7a2      	b.n	4053ce <__mdiff+0x4e>

00405488 <__d2b>:
  405488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40548c:	b082      	sub	sp, #8
  40548e:	2101      	movs	r1, #1
  405490:	461c      	mov	r4, r3
  405492:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405496:	4615      	mov	r5, r2
  405498:	9e08      	ldr	r6, [sp, #32]
  40549a:	f7ff fd57 	bl	404f4c <_Balloc>
  40549e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4054a2:	4680      	mov	r8, r0
  4054a4:	b10f      	cbz	r7, 4054aa <__d2b+0x22>
  4054a6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4054aa:	9401      	str	r4, [sp, #4]
  4054ac:	b31d      	cbz	r5, 4054f6 <__d2b+0x6e>
  4054ae:	a802      	add	r0, sp, #8
  4054b0:	f840 5d08 	str.w	r5, [r0, #-8]!
  4054b4:	f7ff fdda 	bl	40506c <__lo0bits>
  4054b8:	2800      	cmp	r0, #0
  4054ba:	d134      	bne.n	405526 <__d2b+0x9e>
  4054bc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4054c0:	f8c8 2014 	str.w	r2, [r8, #20]
  4054c4:	2b00      	cmp	r3, #0
  4054c6:	bf0c      	ite	eq
  4054c8:	2101      	moveq	r1, #1
  4054ca:	2102      	movne	r1, #2
  4054cc:	f8c8 3018 	str.w	r3, [r8, #24]
  4054d0:	f8c8 1010 	str.w	r1, [r8, #16]
  4054d4:	b9df      	cbnz	r7, 40550e <__d2b+0x86>
  4054d6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4054da:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4054de:	6030      	str	r0, [r6, #0]
  4054e0:	6918      	ldr	r0, [r3, #16]
  4054e2:	f7ff fda3 	bl	40502c <__hi0bits>
  4054e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4054e8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4054ec:	6018      	str	r0, [r3, #0]
  4054ee:	4640      	mov	r0, r8
  4054f0:	b002      	add	sp, #8
  4054f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054f6:	a801      	add	r0, sp, #4
  4054f8:	f7ff fdb8 	bl	40506c <__lo0bits>
  4054fc:	9b01      	ldr	r3, [sp, #4]
  4054fe:	f8c8 3014 	str.w	r3, [r8, #20]
  405502:	2101      	movs	r1, #1
  405504:	3020      	adds	r0, #32
  405506:	f8c8 1010 	str.w	r1, [r8, #16]
  40550a:	2f00      	cmp	r7, #0
  40550c:	d0e3      	beq.n	4054d6 <__d2b+0x4e>
  40550e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405510:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405514:	4407      	add	r7, r0
  405516:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40551a:	6037      	str	r7, [r6, #0]
  40551c:	6018      	str	r0, [r3, #0]
  40551e:	4640      	mov	r0, r8
  405520:	b002      	add	sp, #8
  405522:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405526:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40552a:	f1c0 0220 	rsb	r2, r0, #32
  40552e:	fa03 f202 	lsl.w	r2, r3, r2
  405532:	430a      	orrs	r2, r1
  405534:	40c3      	lsrs	r3, r0
  405536:	9301      	str	r3, [sp, #4]
  405538:	f8c8 2014 	str.w	r2, [r8, #20]
  40553c:	e7c2      	b.n	4054c4 <__d2b+0x3c>
  40553e:	bf00      	nop

00405540 <_sbrk_r>:
  405540:	b538      	push	{r3, r4, r5, lr}
  405542:	4c07      	ldr	r4, [pc, #28]	; (405560 <_sbrk_r+0x20>)
  405544:	2300      	movs	r3, #0
  405546:	4605      	mov	r5, r0
  405548:	4608      	mov	r0, r1
  40554a:	6023      	str	r3, [r4, #0]
  40554c:	f7fc f8ce 	bl	4016ec <_sbrk>
  405550:	1c43      	adds	r3, r0, #1
  405552:	d000      	beq.n	405556 <_sbrk_r+0x16>
  405554:	bd38      	pop	{r3, r4, r5, pc}
  405556:	6823      	ldr	r3, [r4, #0]
  405558:	2b00      	cmp	r3, #0
  40555a:	d0fb      	beq.n	405554 <_sbrk_r+0x14>
  40555c:	602b      	str	r3, [r5, #0]
  40555e:	bd38      	pop	{r3, r4, r5, pc}
  405560:	20400cec 	.word	0x20400cec
	...

00405580 <strlen>:
  405580:	f890 f000 	pld	[r0]
  405584:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405588:	f020 0107 	bic.w	r1, r0, #7
  40558c:	f06f 0c00 	mvn.w	ip, #0
  405590:	f010 0407 	ands.w	r4, r0, #7
  405594:	f891 f020 	pld	[r1, #32]
  405598:	f040 8049 	bne.w	40562e <strlen+0xae>
  40559c:	f04f 0400 	mov.w	r4, #0
  4055a0:	f06f 0007 	mvn.w	r0, #7
  4055a4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4055a8:	f891 f040 	pld	[r1, #64]	; 0x40
  4055ac:	f100 0008 	add.w	r0, r0, #8
  4055b0:	fa82 f24c 	uadd8	r2, r2, ip
  4055b4:	faa4 f28c 	sel	r2, r4, ip
  4055b8:	fa83 f34c 	uadd8	r3, r3, ip
  4055bc:	faa2 f38c 	sel	r3, r2, ip
  4055c0:	bb4b      	cbnz	r3, 405616 <strlen+0x96>
  4055c2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  4055c6:	fa82 f24c 	uadd8	r2, r2, ip
  4055ca:	f100 0008 	add.w	r0, r0, #8
  4055ce:	faa4 f28c 	sel	r2, r4, ip
  4055d2:	fa83 f34c 	uadd8	r3, r3, ip
  4055d6:	faa2 f38c 	sel	r3, r2, ip
  4055da:	b9e3      	cbnz	r3, 405616 <strlen+0x96>
  4055dc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4055e0:	fa82 f24c 	uadd8	r2, r2, ip
  4055e4:	f100 0008 	add.w	r0, r0, #8
  4055e8:	faa4 f28c 	sel	r2, r4, ip
  4055ec:	fa83 f34c 	uadd8	r3, r3, ip
  4055f0:	faa2 f38c 	sel	r3, r2, ip
  4055f4:	b97b      	cbnz	r3, 405616 <strlen+0x96>
  4055f6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4055fa:	f101 0120 	add.w	r1, r1, #32
  4055fe:	fa82 f24c 	uadd8	r2, r2, ip
  405602:	f100 0008 	add.w	r0, r0, #8
  405606:	faa4 f28c 	sel	r2, r4, ip
  40560a:	fa83 f34c 	uadd8	r3, r3, ip
  40560e:	faa2 f38c 	sel	r3, r2, ip
  405612:	2b00      	cmp	r3, #0
  405614:	d0c6      	beq.n	4055a4 <strlen+0x24>
  405616:	2a00      	cmp	r2, #0
  405618:	bf04      	itt	eq
  40561a:	3004      	addeq	r0, #4
  40561c:	461a      	moveq	r2, r3
  40561e:	ba12      	rev	r2, r2
  405620:	fab2 f282 	clz	r2, r2
  405624:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405628:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40562c:	4770      	bx	lr
  40562e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405632:	f004 0503 	and.w	r5, r4, #3
  405636:	f1c4 0000 	rsb	r0, r4, #0
  40563a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40563e:	f014 0f04 	tst.w	r4, #4
  405642:	f891 f040 	pld	[r1, #64]	; 0x40
  405646:	fa0c f505 	lsl.w	r5, ip, r5
  40564a:	ea62 0205 	orn	r2, r2, r5
  40564e:	bf1c      	itt	ne
  405650:	ea63 0305 	ornne	r3, r3, r5
  405654:	4662      	movne	r2, ip
  405656:	f04f 0400 	mov.w	r4, #0
  40565a:	e7a9      	b.n	4055b0 <strlen+0x30>

0040565c <__ssprint_r>:
  40565c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405660:	6893      	ldr	r3, [r2, #8]
  405662:	b083      	sub	sp, #12
  405664:	4690      	mov	r8, r2
  405666:	2b00      	cmp	r3, #0
  405668:	d070      	beq.n	40574c <__ssprint_r+0xf0>
  40566a:	4682      	mov	sl, r0
  40566c:	460c      	mov	r4, r1
  40566e:	6817      	ldr	r7, [r2, #0]
  405670:	688d      	ldr	r5, [r1, #8]
  405672:	6808      	ldr	r0, [r1, #0]
  405674:	e042      	b.n	4056fc <__ssprint_r+0xa0>
  405676:	89a3      	ldrh	r3, [r4, #12]
  405678:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40567c:	d02e      	beq.n	4056dc <__ssprint_r+0x80>
  40567e:	6965      	ldr	r5, [r4, #20]
  405680:	6921      	ldr	r1, [r4, #16]
  405682:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405686:	eba0 0b01 	sub.w	fp, r0, r1
  40568a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40568e:	f10b 0001 	add.w	r0, fp, #1
  405692:	106d      	asrs	r5, r5, #1
  405694:	4430      	add	r0, r6
  405696:	42a8      	cmp	r0, r5
  405698:	462a      	mov	r2, r5
  40569a:	bf84      	itt	hi
  40569c:	4605      	movhi	r5, r0
  40569e:	462a      	movhi	r2, r5
  4056a0:	055b      	lsls	r3, r3, #21
  4056a2:	d538      	bpl.n	405716 <__ssprint_r+0xba>
  4056a4:	4611      	mov	r1, r2
  4056a6:	4650      	mov	r0, sl
  4056a8:	f7ff f8a8 	bl	4047fc <_malloc_r>
  4056ac:	2800      	cmp	r0, #0
  4056ae:	d03c      	beq.n	40572a <__ssprint_r+0xce>
  4056b0:	465a      	mov	r2, fp
  4056b2:	6921      	ldr	r1, [r4, #16]
  4056b4:	9001      	str	r0, [sp, #4]
  4056b6:	f7ff fba3 	bl	404e00 <memcpy>
  4056ba:	89a2      	ldrh	r2, [r4, #12]
  4056bc:	9b01      	ldr	r3, [sp, #4]
  4056be:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4056c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4056c6:	81a2      	strh	r2, [r4, #12]
  4056c8:	eba5 020b 	sub.w	r2, r5, fp
  4056cc:	eb03 000b 	add.w	r0, r3, fp
  4056d0:	6165      	str	r5, [r4, #20]
  4056d2:	6123      	str	r3, [r4, #16]
  4056d4:	6020      	str	r0, [r4, #0]
  4056d6:	60a2      	str	r2, [r4, #8]
  4056d8:	4635      	mov	r5, r6
  4056da:	46b3      	mov	fp, r6
  4056dc:	465a      	mov	r2, fp
  4056de:	4649      	mov	r1, r9
  4056e0:	f000 fa18 	bl	405b14 <memmove>
  4056e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4056e8:	68a2      	ldr	r2, [r4, #8]
  4056ea:	6820      	ldr	r0, [r4, #0]
  4056ec:	1b55      	subs	r5, r2, r5
  4056ee:	4458      	add	r0, fp
  4056f0:	1b9e      	subs	r6, r3, r6
  4056f2:	60a5      	str	r5, [r4, #8]
  4056f4:	6020      	str	r0, [r4, #0]
  4056f6:	f8c8 6008 	str.w	r6, [r8, #8]
  4056fa:	b33e      	cbz	r6, 40574c <__ssprint_r+0xf0>
  4056fc:	687e      	ldr	r6, [r7, #4]
  4056fe:	463b      	mov	r3, r7
  405700:	3708      	adds	r7, #8
  405702:	2e00      	cmp	r6, #0
  405704:	d0fa      	beq.n	4056fc <__ssprint_r+0xa0>
  405706:	42ae      	cmp	r6, r5
  405708:	f8d3 9000 	ldr.w	r9, [r3]
  40570c:	46ab      	mov	fp, r5
  40570e:	d2b2      	bcs.n	405676 <__ssprint_r+0x1a>
  405710:	4635      	mov	r5, r6
  405712:	46b3      	mov	fp, r6
  405714:	e7e2      	b.n	4056dc <__ssprint_r+0x80>
  405716:	4650      	mov	r0, sl
  405718:	f000 fa60 	bl	405bdc <_realloc_r>
  40571c:	4603      	mov	r3, r0
  40571e:	2800      	cmp	r0, #0
  405720:	d1d2      	bne.n	4056c8 <__ssprint_r+0x6c>
  405722:	6921      	ldr	r1, [r4, #16]
  405724:	4650      	mov	r0, sl
  405726:	f000 f8f9 	bl	40591c <_free_r>
  40572a:	230c      	movs	r3, #12
  40572c:	f8ca 3000 	str.w	r3, [sl]
  405730:	89a3      	ldrh	r3, [r4, #12]
  405732:	2200      	movs	r2, #0
  405734:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405738:	f04f 30ff 	mov.w	r0, #4294967295
  40573c:	81a3      	strh	r3, [r4, #12]
  40573e:	f8c8 2008 	str.w	r2, [r8, #8]
  405742:	f8c8 2004 	str.w	r2, [r8, #4]
  405746:	b003      	add	sp, #12
  405748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40574c:	2000      	movs	r0, #0
  40574e:	f8c8 0004 	str.w	r0, [r8, #4]
  405752:	b003      	add	sp, #12
  405754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405758 <__register_exitproc>:
  405758:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40575c:	4d2c      	ldr	r5, [pc, #176]	; (405810 <__register_exitproc+0xb8>)
  40575e:	4606      	mov	r6, r0
  405760:	6828      	ldr	r0, [r5, #0]
  405762:	4698      	mov	r8, r3
  405764:	460f      	mov	r7, r1
  405766:	4691      	mov	r9, r2
  405768:	f7ff f844 	bl	4047f4 <__retarget_lock_acquire_recursive>
  40576c:	4b29      	ldr	r3, [pc, #164]	; (405814 <__register_exitproc+0xbc>)
  40576e:	681c      	ldr	r4, [r3, #0]
  405770:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405774:	2b00      	cmp	r3, #0
  405776:	d03e      	beq.n	4057f6 <__register_exitproc+0x9e>
  405778:	685a      	ldr	r2, [r3, #4]
  40577a:	2a1f      	cmp	r2, #31
  40577c:	dc1c      	bgt.n	4057b8 <__register_exitproc+0x60>
  40577e:	f102 0e01 	add.w	lr, r2, #1
  405782:	b176      	cbz	r6, 4057a2 <__register_exitproc+0x4a>
  405784:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405788:	2401      	movs	r4, #1
  40578a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40578e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405792:	4094      	lsls	r4, r2
  405794:	4320      	orrs	r0, r4
  405796:	2e02      	cmp	r6, #2
  405798:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40579c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4057a0:	d023      	beq.n	4057ea <__register_exitproc+0x92>
  4057a2:	3202      	adds	r2, #2
  4057a4:	f8c3 e004 	str.w	lr, [r3, #4]
  4057a8:	6828      	ldr	r0, [r5, #0]
  4057aa:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4057ae:	f7ff f823 	bl	4047f8 <__retarget_lock_release_recursive>
  4057b2:	2000      	movs	r0, #0
  4057b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4057b8:	4b17      	ldr	r3, [pc, #92]	; (405818 <__register_exitproc+0xc0>)
  4057ba:	b30b      	cbz	r3, 405800 <__register_exitproc+0xa8>
  4057bc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4057c0:	f3af 8000 	nop.w
  4057c4:	4603      	mov	r3, r0
  4057c6:	b1d8      	cbz	r0, 405800 <__register_exitproc+0xa8>
  4057c8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4057cc:	6002      	str	r2, [r0, #0]
  4057ce:	2100      	movs	r1, #0
  4057d0:	6041      	str	r1, [r0, #4]
  4057d2:	460a      	mov	r2, r1
  4057d4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4057d8:	f04f 0e01 	mov.w	lr, #1
  4057dc:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4057e0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4057e4:	2e00      	cmp	r6, #0
  4057e6:	d0dc      	beq.n	4057a2 <__register_exitproc+0x4a>
  4057e8:	e7cc      	b.n	405784 <__register_exitproc+0x2c>
  4057ea:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4057ee:	430c      	orrs	r4, r1
  4057f0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4057f4:	e7d5      	b.n	4057a2 <__register_exitproc+0x4a>
  4057f6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4057fa:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4057fe:	e7bb      	b.n	405778 <__register_exitproc+0x20>
  405800:	6828      	ldr	r0, [r5, #0]
  405802:	f7fe fff9 	bl	4047f8 <__retarget_lock_release_recursive>
  405806:	f04f 30ff 	mov.w	r0, #4294967295
  40580a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40580e:	bf00      	nop
  405810:	20400458 	.word	0x20400458
  405814:	00406e40 	.word	0x00406e40
  405818:	00000000 	.word	0x00000000

0040581c <_calloc_r>:
  40581c:	b510      	push	{r4, lr}
  40581e:	fb02 f101 	mul.w	r1, r2, r1
  405822:	f7fe ffeb 	bl	4047fc <_malloc_r>
  405826:	4604      	mov	r4, r0
  405828:	b1d8      	cbz	r0, 405862 <_calloc_r+0x46>
  40582a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40582e:	f022 0203 	bic.w	r2, r2, #3
  405832:	3a04      	subs	r2, #4
  405834:	2a24      	cmp	r2, #36	; 0x24
  405836:	d818      	bhi.n	40586a <_calloc_r+0x4e>
  405838:	2a13      	cmp	r2, #19
  40583a:	d914      	bls.n	405866 <_calloc_r+0x4a>
  40583c:	2300      	movs	r3, #0
  40583e:	2a1b      	cmp	r2, #27
  405840:	6003      	str	r3, [r0, #0]
  405842:	6043      	str	r3, [r0, #4]
  405844:	d916      	bls.n	405874 <_calloc_r+0x58>
  405846:	2a24      	cmp	r2, #36	; 0x24
  405848:	6083      	str	r3, [r0, #8]
  40584a:	60c3      	str	r3, [r0, #12]
  40584c:	bf11      	iteee	ne
  40584e:	f100 0210 	addne.w	r2, r0, #16
  405852:	6103      	streq	r3, [r0, #16]
  405854:	6143      	streq	r3, [r0, #20]
  405856:	f100 0218 	addeq.w	r2, r0, #24
  40585a:	2300      	movs	r3, #0
  40585c:	6013      	str	r3, [r2, #0]
  40585e:	6053      	str	r3, [r2, #4]
  405860:	6093      	str	r3, [r2, #8]
  405862:	4620      	mov	r0, r4
  405864:	bd10      	pop	{r4, pc}
  405866:	4602      	mov	r2, r0
  405868:	e7f7      	b.n	40585a <_calloc_r+0x3e>
  40586a:	2100      	movs	r1, #0
  40586c:	f7fc fd2a 	bl	4022c4 <memset>
  405870:	4620      	mov	r0, r4
  405872:	bd10      	pop	{r4, pc}
  405874:	f100 0208 	add.w	r2, r0, #8
  405878:	e7ef      	b.n	40585a <_calloc_r+0x3e>
  40587a:	bf00      	nop

0040587c <_malloc_trim_r>:
  40587c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40587e:	4f24      	ldr	r7, [pc, #144]	; (405910 <_malloc_trim_r+0x94>)
  405880:	460c      	mov	r4, r1
  405882:	4606      	mov	r6, r0
  405884:	f7ff fb56 	bl	404f34 <__malloc_lock>
  405888:	68bb      	ldr	r3, [r7, #8]
  40588a:	685d      	ldr	r5, [r3, #4]
  40588c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405890:	310f      	adds	r1, #15
  405892:	f025 0503 	bic.w	r5, r5, #3
  405896:	4429      	add	r1, r5
  405898:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40589c:	f021 010f 	bic.w	r1, r1, #15
  4058a0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4058a4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4058a8:	db07      	blt.n	4058ba <_malloc_trim_r+0x3e>
  4058aa:	2100      	movs	r1, #0
  4058ac:	4630      	mov	r0, r6
  4058ae:	f7ff fe47 	bl	405540 <_sbrk_r>
  4058b2:	68bb      	ldr	r3, [r7, #8]
  4058b4:	442b      	add	r3, r5
  4058b6:	4298      	cmp	r0, r3
  4058b8:	d004      	beq.n	4058c4 <_malloc_trim_r+0x48>
  4058ba:	4630      	mov	r0, r6
  4058bc:	f7ff fb40 	bl	404f40 <__malloc_unlock>
  4058c0:	2000      	movs	r0, #0
  4058c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4058c4:	4261      	negs	r1, r4
  4058c6:	4630      	mov	r0, r6
  4058c8:	f7ff fe3a 	bl	405540 <_sbrk_r>
  4058cc:	3001      	adds	r0, #1
  4058ce:	d00d      	beq.n	4058ec <_malloc_trim_r+0x70>
  4058d0:	4b10      	ldr	r3, [pc, #64]	; (405914 <_malloc_trim_r+0x98>)
  4058d2:	68ba      	ldr	r2, [r7, #8]
  4058d4:	6819      	ldr	r1, [r3, #0]
  4058d6:	1b2d      	subs	r5, r5, r4
  4058d8:	f045 0501 	orr.w	r5, r5, #1
  4058dc:	4630      	mov	r0, r6
  4058de:	1b09      	subs	r1, r1, r4
  4058e0:	6055      	str	r5, [r2, #4]
  4058e2:	6019      	str	r1, [r3, #0]
  4058e4:	f7ff fb2c 	bl	404f40 <__malloc_unlock>
  4058e8:	2001      	movs	r0, #1
  4058ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4058ec:	2100      	movs	r1, #0
  4058ee:	4630      	mov	r0, r6
  4058f0:	f7ff fe26 	bl	405540 <_sbrk_r>
  4058f4:	68ba      	ldr	r2, [r7, #8]
  4058f6:	1a83      	subs	r3, r0, r2
  4058f8:	2b0f      	cmp	r3, #15
  4058fa:	ddde      	ble.n	4058ba <_malloc_trim_r+0x3e>
  4058fc:	4c06      	ldr	r4, [pc, #24]	; (405918 <_malloc_trim_r+0x9c>)
  4058fe:	4905      	ldr	r1, [pc, #20]	; (405914 <_malloc_trim_r+0x98>)
  405900:	6824      	ldr	r4, [r4, #0]
  405902:	f043 0301 	orr.w	r3, r3, #1
  405906:	1b00      	subs	r0, r0, r4
  405908:	6053      	str	r3, [r2, #4]
  40590a:	6008      	str	r0, [r1, #0]
  40590c:	e7d5      	b.n	4058ba <_malloc_trim_r+0x3e>
  40590e:	bf00      	nop
  405910:	2040045c 	.word	0x2040045c
  405914:	20400c94 	.word	0x20400c94
  405918:	20400864 	.word	0x20400864

0040591c <_free_r>:
  40591c:	2900      	cmp	r1, #0
  40591e:	d044      	beq.n	4059aa <_free_r+0x8e>
  405920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405924:	460d      	mov	r5, r1
  405926:	4680      	mov	r8, r0
  405928:	f7ff fb04 	bl	404f34 <__malloc_lock>
  40592c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405930:	4969      	ldr	r1, [pc, #420]	; (405ad8 <_free_r+0x1bc>)
  405932:	f027 0301 	bic.w	r3, r7, #1
  405936:	f1a5 0408 	sub.w	r4, r5, #8
  40593a:	18e2      	adds	r2, r4, r3
  40593c:	688e      	ldr	r6, [r1, #8]
  40593e:	6850      	ldr	r0, [r2, #4]
  405940:	42b2      	cmp	r2, r6
  405942:	f020 0003 	bic.w	r0, r0, #3
  405946:	d05e      	beq.n	405a06 <_free_r+0xea>
  405948:	07fe      	lsls	r6, r7, #31
  40594a:	6050      	str	r0, [r2, #4]
  40594c:	d40b      	bmi.n	405966 <_free_r+0x4a>
  40594e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405952:	1be4      	subs	r4, r4, r7
  405954:	f101 0e08 	add.w	lr, r1, #8
  405958:	68a5      	ldr	r5, [r4, #8]
  40595a:	4575      	cmp	r5, lr
  40595c:	443b      	add	r3, r7
  40595e:	d06d      	beq.n	405a3c <_free_r+0x120>
  405960:	68e7      	ldr	r7, [r4, #12]
  405962:	60ef      	str	r7, [r5, #12]
  405964:	60bd      	str	r5, [r7, #8]
  405966:	1815      	adds	r5, r2, r0
  405968:	686d      	ldr	r5, [r5, #4]
  40596a:	07ed      	lsls	r5, r5, #31
  40596c:	d53e      	bpl.n	4059ec <_free_r+0xd0>
  40596e:	f043 0201 	orr.w	r2, r3, #1
  405972:	6062      	str	r2, [r4, #4]
  405974:	50e3      	str	r3, [r4, r3]
  405976:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40597a:	d217      	bcs.n	4059ac <_free_r+0x90>
  40597c:	08db      	lsrs	r3, r3, #3
  40597e:	1c58      	adds	r0, r3, #1
  405980:	109a      	asrs	r2, r3, #2
  405982:	684d      	ldr	r5, [r1, #4]
  405984:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405988:	60a7      	str	r7, [r4, #8]
  40598a:	2301      	movs	r3, #1
  40598c:	4093      	lsls	r3, r2
  40598e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405992:	432b      	orrs	r3, r5
  405994:	3a08      	subs	r2, #8
  405996:	60e2      	str	r2, [r4, #12]
  405998:	604b      	str	r3, [r1, #4]
  40599a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40599e:	60fc      	str	r4, [r7, #12]
  4059a0:	4640      	mov	r0, r8
  4059a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4059a6:	f7ff bacb 	b.w	404f40 <__malloc_unlock>
  4059aa:	4770      	bx	lr
  4059ac:	0a5a      	lsrs	r2, r3, #9
  4059ae:	2a04      	cmp	r2, #4
  4059b0:	d852      	bhi.n	405a58 <_free_r+0x13c>
  4059b2:	099a      	lsrs	r2, r3, #6
  4059b4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4059b8:	00ff      	lsls	r7, r7, #3
  4059ba:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4059be:	19c8      	adds	r0, r1, r7
  4059c0:	59ca      	ldr	r2, [r1, r7]
  4059c2:	3808      	subs	r0, #8
  4059c4:	4290      	cmp	r0, r2
  4059c6:	d04f      	beq.n	405a68 <_free_r+0x14c>
  4059c8:	6851      	ldr	r1, [r2, #4]
  4059ca:	f021 0103 	bic.w	r1, r1, #3
  4059ce:	428b      	cmp	r3, r1
  4059d0:	d232      	bcs.n	405a38 <_free_r+0x11c>
  4059d2:	6892      	ldr	r2, [r2, #8]
  4059d4:	4290      	cmp	r0, r2
  4059d6:	d1f7      	bne.n	4059c8 <_free_r+0xac>
  4059d8:	68c3      	ldr	r3, [r0, #12]
  4059da:	60a0      	str	r0, [r4, #8]
  4059dc:	60e3      	str	r3, [r4, #12]
  4059de:	609c      	str	r4, [r3, #8]
  4059e0:	60c4      	str	r4, [r0, #12]
  4059e2:	4640      	mov	r0, r8
  4059e4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4059e8:	f7ff baaa 	b.w	404f40 <__malloc_unlock>
  4059ec:	6895      	ldr	r5, [r2, #8]
  4059ee:	4f3b      	ldr	r7, [pc, #236]	; (405adc <_free_r+0x1c0>)
  4059f0:	42bd      	cmp	r5, r7
  4059f2:	4403      	add	r3, r0
  4059f4:	d040      	beq.n	405a78 <_free_r+0x15c>
  4059f6:	68d0      	ldr	r0, [r2, #12]
  4059f8:	60e8      	str	r0, [r5, #12]
  4059fa:	f043 0201 	orr.w	r2, r3, #1
  4059fe:	6085      	str	r5, [r0, #8]
  405a00:	6062      	str	r2, [r4, #4]
  405a02:	50e3      	str	r3, [r4, r3]
  405a04:	e7b7      	b.n	405976 <_free_r+0x5a>
  405a06:	07ff      	lsls	r7, r7, #31
  405a08:	4403      	add	r3, r0
  405a0a:	d407      	bmi.n	405a1c <_free_r+0x100>
  405a0c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405a10:	1aa4      	subs	r4, r4, r2
  405a12:	4413      	add	r3, r2
  405a14:	68a0      	ldr	r0, [r4, #8]
  405a16:	68e2      	ldr	r2, [r4, #12]
  405a18:	60c2      	str	r2, [r0, #12]
  405a1a:	6090      	str	r0, [r2, #8]
  405a1c:	4a30      	ldr	r2, [pc, #192]	; (405ae0 <_free_r+0x1c4>)
  405a1e:	6812      	ldr	r2, [r2, #0]
  405a20:	f043 0001 	orr.w	r0, r3, #1
  405a24:	4293      	cmp	r3, r2
  405a26:	6060      	str	r0, [r4, #4]
  405a28:	608c      	str	r4, [r1, #8]
  405a2a:	d3b9      	bcc.n	4059a0 <_free_r+0x84>
  405a2c:	4b2d      	ldr	r3, [pc, #180]	; (405ae4 <_free_r+0x1c8>)
  405a2e:	4640      	mov	r0, r8
  405a30:	6819      	ldr	r1, [r3, #0]
  405a32:	f7ff ff23 	bl	40587c <_malloc_trim_r>
  405a36:	e7b3      	b.n	4059a0 <_free_r+0x84>
  405a38:	4610      	mov	r0, r2
  405a3a:	e7cd      	b.n	4059d8 <_free_r+0xbc>
  405a3c:	1811      	adds	r1, r2, r0
  405a3e:	6849      	ldr	r1, [r1, #4]
  405a40:	07c9      	lsls	r1, r1, #31
  405a42:	d444      	bmi.n	405ace <_free_r+0x1b2>
  405a44:	6891      	ldr	r1, [r2, #8]
  405a46:	68d2      	ldr	r2, [r2, #12]
  405a48:	60ca      	str	r2, [r1, #12]
  405a4a:	4403      	add	r3, r0
  405a4c:	f043 0001 	orr.w	r0, r3, #1
  405a50:	6091      	str	r1, [r2, #8]
  405a52:	6060      	str	r0, [r4, #4]
  405a54:	50e3      	str	r3, [r4, r3]
  405a56:	e7a3      	b.n	4059a0 <_free_r+0x84>
  405a58:	2a14      	cmp	r2, #20
  405a5a:	d816      	bhi.n	405a8a <_free_r+0x16e>
  405a5c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405a60:	00ff      	lsls	r7, r7, #3
  405a62:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405a66:	e7aa      	b.n	4059be <_free_r+0xa2>
  405a68:	10aa      	asrs	r2, r5, #2
  405a6a:	2301      	movs	r3, #1
  405a6c:	684d      	ldr	r5, [r1, #4]
  405a6e:	4093      	lsls	r3, r2
  405a70:	432b      	orrs	r3, r5
  405a72:	604b      	str	r3, [r1, #4]
  405a74:	4603      	mov	r3, r0
  405a76:	e7b0      	b.n	4059da <_free_r+0xbe>
  405a78:	f043 0201 	orr.w	r2, r3, #1
  405a7c:	614c      	str	r4, [r1, #20]
  405a7e:	610c      	str	r4, [r1, #16]
  405a80:	60e5      	str	r5, [r4, #12]
  405a82:	60a5      	str	r5, [r4, #8]
  405a84:	6062      	str	r2, [r4, #4]
  405a86:	50e3      	str	r3, [r4, r3]
  405a88:	e78a      	b.n	4059a0 <_free_r+0x84>
  405a8a:	2a54      	cmp	r2, #84	; 0x54
  405a8c:	d806      	bhi.n	405a9c <_free_r+0x180>
  405a8e:	0b1a      	lsrs	r2, r3, #12
  405a90:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405a94:	00ff      	lsls	r7, r7, #3
  405a96:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405a9a:	e790      	b.n	4059be <_free_r+0xa2>
  405a9c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405aa0:	d806      	bhi.n	405ab0 <_free_r+0x194>
  405aa2:	0bda      	lsrs	r2, r3, #15
  405aa4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405aa8:	00ff      	lsls	r7, r7, #3
  405aaa:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405aae:	e786      	b.n	4059be <_free_r+0xa2>
  405ab0:	f240 5054 	movw	r0, #1364	; 0x554
  405ab4:	4282      	cmp	r2, r0
  405ab6:	d806      	bhi.n	405ac6 <_free_r+0x1aa>
  405ab8:	0c9a      	lsrs	r2, r3, #18
  405aba:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405abe:	00ff      	lsls	r7, r7, #3
  405ac0:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405ac4:	e77b      	b.n	4059be <_free_r+0xa2>
  405ac6:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405aca:	257e      	movs	r5, #126	; 0x7e
  405acc:	e777      	b.n	4059be <_free_r+0xa2>
  405ace:	f043 0101 	orr.w	r1, r3, #1
  405ad2:	6061      	str	r1, [r4, #4]
  405ad4:	6013      	str	r3, [r2, #0]
  405ad6:	e763      	b.n	4059a0 <_free_r+0x84>
  405ad8:	2040045c 	.word	0x2040045c
  405adc:	20400464 	.word	0x20400464
  405ae0:	20400868 	.word	0x20400868
  405ae4:	20400cc4 	.word	0x20400cc4

00405ae8 <__ascii_mbtowc>:
  405ae8:	b082      	sub	sp, #8
  405aea:	b149      	cbz	r1, 405b00 <__ascii_mbtowc+0x18>
  405aec:	b15a      	cbz	r2, 405b06 <__ascii_mbtowc+0x1e>
  405aee:	b16b      	cbz	r3, 405b0c <__ascii_mbtowc+0x24>
  405af0:	7813      	ldrb	r3, [r2, #0]
  405af2:	600b      	str	r3, [r1, #0]
  405af4:	7812      	ldrb	r2, [r2, #0]
  405af6:	1c10      	adds	r0, r2, #0
  405af8:	bf18      	it	ne
  405afa:	2001      	movne	r0, #1
  405afc:	b002      	add	sp, #8
  405afe:	4770      	bx	lr
  405b00:	a901      	add	r1, sp, #4
  405b02:	2a00      	cmp	r2, #0
  405b04:	d1f3      	bne.n	405aee <__ascii_mbtowc+0x6>
  405b06:	4610      	mov	r0, r2
  405b08:	b002      	add	sp, #8
  405b0a:	4770      	bx	lr
  405b0c:	f06f 0001 	mvn.w	r0, #1
  405b10:	e7f4      	b.n	405afc <__ascii_mbtowc+0x14>
  405b12:	bf00      	nop

00405b14 <memmove>:
  405b14:	4288      	cmp	r0, r1
  405b16:	b5f0      	push	{r4, r5, r6, r7, lr}
  405b18:	d90d      	bls.n	405b36 <memmove+0x22>
  405b1a:	188b      	adds	r3, r1, r2
  405b1c:	4298      	cmp	r0, r3
  405b1e:	d20a      	bcs.n	405b36 <memmove+0x22>
  405b20:	1884      	adds	r4, r0, r2
  405b22:	2a00      	cmp	r2, #0
  405b24:	d051      	beq.n	405bca <memmove+0xb6>
  405b26:	4622      	mov	r2, r4
  405b28:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405b2c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405b30:	4299      	cmp	r1, r3
  405b32:	d1f9      	bne.n	405b28 <memmove+0x14>
  405b34:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405b36:	2a0f      	cmp	r2, #15
  405b38:	d948      	bls.n	405bcc <memmove+0xb8>
  405b3a:	ea41 0300 	orr.w	r3, r1, r0
  405b3e:	079b      	lsls	r3, r3, #30
  405b40:	d146      	bne.n	405bd0 <memmove+0xbc>
  405b42:	f100 0410 	add.w	r4, r0, #16
  405b46:	f101 0310 	add.w	r3, r1, #16
  405b4a:	4615      	mov	r5, r2
  405b4c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405b50:	f844 6c10 	str.w	r6, [r4, #-16]
  405b54:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405b58:	f844 6c0c 	str.w	r6, [r4, #-12]
  405b5c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405b60:	f844 6c08 	str.w	r6, [r4, #-8]
  405b64:	3d10      	subs	r5, #16
  405b66:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405b6a:	f844 6c04 	str.w	r6, [r4, #-4]
  405b6e:	2d0f      	cmp	r5, #15
  405b70:	f103 0310 	add.w	r3, r3, #16
  405b74:	f104 0410 	add.w	r4, r4, #16
  405b78:	d8e8      	bhi.n	405b4c <memmove+0x38>
  405b7a:	f1a2 0310 	sub.w	r3, r2, #16
  405b7e:	f023 030f 	bic.w	r3, r3, #15
  405b82:	f002 0e0f 	and.w	lr, r2, #15
  405b86:	3310      	adds	r3, #16
  405b88:	f1be 0f03 	cmp.w	lr, #3
  405b8c:	4419      	add	r1, r3
  405b8e:	4403      	add	r3, r0
  405b90:	d921      	bls.n	405bd6 <memmove+0xc2>
  405b92:	1f1e      	subs	r6, r3, #4
  405b94:	460d      	mov	r5, r1
  405b96:	4674      	mov	r4, lr
  405b98:	3c04      	subs	r4, #4
  405b9a:	f855 7b04 	ldr.w	r7, [r5], #4
  405b9e:	f846 7f04 	str.w	r7, [r6, #4]!
  405ba2:	2c03      	cmp	r4, #3
  405ba4:	d8f8      	bhi.n	405b98 <memmove+0x84>
  405ba6:	f1ae 0404 	sub.w	r4, lr, #4
  405baa:	f024 0403 	bic.w	r4, r4, #3
  405bae:	3404      	adds	r4, #4
  405bb0:	4421      	add	r1, r4
  405bb2:	4423      	add	r3, r4
  405bb4:	f002 0203 	and.w	r2, r2, #3
  405bb8:	b162      	cbz	r2, 405bd4 <memmove+0xc0>
  405bba:	3b01      	subs	r3, #1
  405bbc:	440a      	add	r2, r1
  405bbe:	f811 4b01 	ldrb.w	r4, [r1], #1
  405bc2:	f803 4f01 	strb.w	r4, [r3, #1]!
  405bc6:	428a      	cmp	r2, r1
  405bc8:	d1f9      	bne.n	405bbe <memmove+0xaa>
  405bca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405bcc:	4603      	mov	r3, r0
  405bce:	e7f3      	b.n	405bb8 <memmove+0xa4>
  405bd0:	4603      	mov	r3, r0
  405bd2:	e7f2      	b.n	405bba <memmove+0xa6>
  405bd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405bd6:	4672      	mov	r2, lr
  405bd8:	e7ee      	b.n	405bb8 <memmove+0xa4>
  405bda:	bf00      	nop

00405bdc <_realloc_r>:
  405bdc:	2900      	cmp	r1, #0
  405bde:	f000 8095 	beq.w	405d0c <_realloc_r+0x130>
  405be2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405be6:	460d      	mov	r5, r1
  405be8:	4616      	mov	r6, r2
  405bea:	b083      	sub	sp, #12
  405bec:	4680      	mov	r8, r0
  405bee:	f106 070b 	add.w	r7, r6, #11
  405bf2:	f7ff f99f 	bl	404f34 <__malloc_lock>
  405bf6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405bfa:	2f16      	cmp	r7, #22
  405bfc:	f02e 0403 	bic.w	r4, lr, #3
  405c00:	f1a5 0908 	sub.w	r9, r5, #8
  405c04:	d83c      	bhi.n	405c80 <_realloc_r+0xa4>
  405c06:	2210      	movs	r2, #16
  405c08:	4617      	mov	r7, r2
  405c0a:	42be      	cmp	r6, r7
  405c0c:	d83d      	bhi.n	405c8a <_realloc_r+0xae>
  405c0e:	4294      	cmp	r4, r2
  405c10:	da43      	bge.n	405c9a <_realloc_r+0xbe>
  405c12:	4bc4      	ldr	r3, [pc, #784]	; (405f24 <_realloc_r+0x348>)
  405c14:	6899      	ldr	r1, [r3, #8]
  405c16:	eb09 0004 	add.w	r0, r9, r4
  405c1a:	4288      	cmp	r0, r1
  405c1c:	f000 80b4 	beq.w	405d88 <_realloc_r+0x1ac>
  405c20:	6843      	ldr	r3, [r0, #4]
  405c22:	f023 0101 	bic.w	r1, r3, #1
  405c26:	4401      	add	r1, r0
  405c28:	6849      	ldr	r1, [r1, #4]
  405c2a:	07c9      	lsls	r1, r1, #31
  405c2c:	d54c      	bpl.n	405cc8 <_realloc_r+0xec>
  405c2e:	f01e 0f01 	tst.w	lr, #1
  405c32:	f000 809b 	beq.w	405d6c <_realloc_r+0x190>
  405c36:	4631      	mov	r1, r6
  405c38:	4640      	mov	r0, r8
  405c3a:	f7fe fddf 	bl	4047fc <_malloc_r>
  405c3e:	4606      	mov	r6, r0
  405c40:	2800      	cmp	r0, #0
  405c42:	d03a      	beq.n	405cba <_realloc_r+0xde>
  405c44:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405c48:	f023 0301 	bic.w	r3, r3, #1
  405c4c:	444b      	add	r3, r9
  405c4e:	f1a0 0208 	sub.w	r2, r0, #8
  405c52:	429a      	cmp	r2, r3
  405c54:	f000 8121 	beq.w	405e9a <_realloc_r+0x2be>
  405c58:	1f22      	subs	r2, r4, #4
  405c5a:	2a24      	cmp	r2, #36	; 0x24
  405c5c:	f200 8107 	bhi.w	405e6e <_realloc_r+0x292>
  405c60:	2a13      	cmp	r2, #19
  405c62:	f200 80db 	bhi.w	405e1c <_realloc_r+0x240>
  405c66:	4603      	mov	r3, r0
  405c68:	462a      	mov	r2, r5
  405c6a:	6811      	ldr	r1, [r2, #0]
  405c6c:	6019      	str	r1, [r3, #0]
  405c6e:	6851      	ldr	r1, [r2, #4]
  405c70:	6059      	str	r1, [r3, #4]
  405c72:	6892      	ldr	r2, [r2, #8]
  405c74:	609a      	str	r2, [r3, #8]
  405c76:	4629      	mov	r1, r5
  405c78:	4640      	mov	r0, r8
  405c7a:	f7ff fe4f 	bl	40591c <_free_r>
  405c7e:	e01c      	b.n	405cba <_realloc_r+0xde>
  405c80:	f027 0707 	bic.w	r7, r7, #7
  405c84:	2f00      	cmp	r7, #0
  405c86:	463a      	mov	r2, r7
  405c88:	dabf      	bge.n	405c0a <_realloc_r+0x2e>
  405c8a:	2600      	movs	r6, #0
  405c8c:	230c      	movs	r3, #12
  405c8e:	4630      	mov	r0, r6
  405c90:	f8c8 3000 	str.w	r3, [r8]
  405c94:	b003      	add	sp, #12
  405c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405c9a:	462e      	mov	r6, r5
  405c9c:	1be3      	subs	r3, r4, r7
  405c9e:	2b0f      	cmp	r3, #15
  405ca0:	d81e      	bhi.n	405ce0 <_realloc_r+0x104>
  405ca2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405ca6:	f003 0301 	and.w	r3, r3, #1
  405caa:	4323      	orrs	r3, r4
  405cac:	444c      	add	r4, r9
  405cae:	f8c9 3004 	str.w	r3, [r9, #4]
  405cb2:	6863      	ldr	r3, [r4, #4]
  405cb4:	f043 0301 	orr.w	r3, r3, #1
  405cb8:	6063      	str	r3, [r4, #4]
  405cba:	4640      	mov	r0, r8
  405cbc:	f7ff f940 	bl	404f40 <__malloc_unlock>
  405cc0:	4630      	mov	r0, r6
  405cc2:	b003      	add	sp, #12
  405cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405cc8:	f023 0303 	bic.w	r3, r3, #3
  405ccc:	18e1      	adds	r1, r4, r3
  405cce:	4291      	cmp	r1, r2
  405cd0:	db1f      	blt.n	405d12 <_realloc_r+0x136>
  405cd2:	68c3      	ldr	r3, [r0, #12]
  405cd4:	6882      	ldr	r2, [r0, #8]
  405cd6:	462e      	mov	r6, r5
  405cd8:	60d3      	str	r3, [r2, #12]
  405cda:	460c      	mov	r4, r1
  405cdc:	609a      	str	r2, [r3, #8]
  405cde:	e7dd      	b.n	405c9c <_realloc_r+0xc0>
  405ce0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405ce4:	eb09 0107 	add.w	r1, r9, r7
  405ce8:	f002 0201 	and.w	r2, r2, #1
  405cec:	444c      	add	r4, r9
  405cee:	f043 0301 	orr.w	r3, r3, #1
  405cf2:	4317      	orrs	r7, r2
  405cf4:	f8c9 7004 	str.w	r7, [r9, #4]
  405cf8:	604b      	str	r3, [r1, #4]
  405cfa:	6863      	ldr	r3, [r4, #4]
  405cfc:	f043 0301 	orr.w	r3, r3, #1
  405d00:	3108      	adds	r1, #8
  405d02:	6063      	str	r3, [r4, #4]
  405d04:	4640      	mov	r0, r8
  405d06:	f7ff fe09 	bl	40591c <_free_r>
  405d0a:	e7d6      	b.n	405cba <_realloc_r+0xde>
  405d0c:	4611      	mov	r1, r2
  405d0e:	f7fe bd75 	b.w	4047fc <_malloc_r>
  405d12:	f01e 0f01 	tst.w	lr, #1
  405d16:	d18e      	bne.n	405c36 <_realloc_r+0x5a>
  405d18:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405d1c:	eba9 0a01 	sub.w	sl, r9, r1
  405d20:	f8da 1004 	ldr.w	r1, [sl, #4]
  405d24:	f021 0103 	bic.w	r1, r1, #3
  405d28:	440b      	add	r3, r1
  405d2a:	4423      	add	r3, r4
  405d2c:	4293      	cmp	r3, r2
  405d2e:	db25      	blt.n	405d7c <_realloc_r+0x1a0>
  405d30:	68c2      	ldr	r2, [r0, #12]
  405d32:	6881      	ldr	r1, [r0, #8]
  405d34:	4656      	mov	r6, sl
  405d36:	60ca      	str	r2, [r1, #12]
  405d38:	6091      	str	r1, [r2, #8]
  405d3a:	f8da 100c 	ldr.w	r1, [sl, #12]
  405d3e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405d42:	1f22      	subs	r2, r4, #4
  405d44:	2a24      	cmp	r2, #36	; 0x24
  405d46:	60c1      	str	r1, [r0, #12]
  405d48:	6088      	str	r0, [r1, #8]
  405d4a:	f200 8094 	bhi.w	405e76 <_realloc_r+0x29a>
  405d4e:	2a13      	cmp	r2, #19
  405d50:	d96f      	bls.n	405e32 <_realloc_r+0x256>
  405d52:	6829      	ldr	r1, [r5, #0]
  405d54:	f8ca 1008 	str.w	r1, [sl, #8]
  405d58:	6869      	ldr	r1, [r5, #4]
  405d5a:	f8ca 100c 	str.w	r1, [sl, #12]
  405d5e:	2a1b      	cmp	r2, #27
  405d60:	f200 80a2 	bhi.w	405ea8 <_realloc_r+0x2cc>
  405d64:	3508      	adds	r5, #8
  405d66:	f10a 0210 	add.w	r2, sl, #16
  405d6a:	e063      	b.n	405e34 <_realloc_r+0x258>
  405d6c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405d70:	eba9 0a03 	sub.w	sl, r9, r3
  405d74:	f8da 1004 	ldr.w	r1, [sl, #4]
  405d78:	f021 0103 	bic.w	r1, r1, #3
  405d7c:	1863      	adds	r3, r4, r1
  405d7e:	4293      	cmp	r3, r2
  405d80:	f6ff af59 	blt.w	405c36 <_realloc_r+0x5a>
  405d84:	4656      	mov	r6, sl
  405d86:	e7d8      	b.n	405d3a <_realloc_r+0x15e>
  405d88:	6841      	ldr	r1, [r0, #4]
  405d8a:	f021 0b03 	bic.w	fp, r1, #3
  405d8e:	44a3      	add	fp, r4
  405d90:	f107 0010 	add.w	r0, r7, #16
  405d94:	4583      	cmp	fp, r0
  405d96:	da56      	bge.n	405e46 <_realloc_r+0x26a>
  405d98:	f01e 0f01 	tst.w	lr, #1
  405d9c:	f47f af4b 	bne.w	405c36 <_realloc_r+0x5a>
  405da0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405da4:	eba9 0a01 	sub.w	sl, r9, r1
  405da8:	f8da 1004 	ldr.w	r1, [sl, #4]
  405dac:	f021 0103 	bic.w	r1, r1, #3
  405db0:	448b      	add	fp, r1
  405db2:	4558      	cmp	r0, fp
  405db4:	dce2      	bgt.n	405d7c <_realloc_r+0x1a0>
  405db6:	4656      	mov	r6, sl
  405db8:	f8da 100c 	ldr.w	r1, [sl, #12]
  405dbc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405dc0:	1f22      	subs	r2, r4, #4
  405dc2:	2a24      	cmp	r2, #36	; 0x24
  405dc4:	60c1      	str	r1, [r0, #12]
  405dc6:	6088      	str	r0, [r1, #8]
  405dc8:	f200 808f 	bhi.w	405eea <_realloc_r+0x30e>
  405dcc:	2a13      	cmp	r2, #19
  405dce:	f240 808a 	bls.w	405ee6 <_realloc_r+0x30a>
  405dd2:	6829      	ldr	r1, [r5, #0]
  405dd4:	f8ca 1008 	str.w	r1, [sl, #8]
  405dd8:	6869      	ldr	r1, [r5, #4]
  405dda:	f8ca 100c 	str.w	r1, [sl, #12]
  405dde:	2a1b      	cmp	r2, #27
  405de0:	f200 808a 	bhi.w	405ef8 <_realloc_r+0x31c>
  405de4:	3508      	adds	r5, #8
  405de6:	f10a 0210 	add.w	r2, sl, #16
  405dea:	6829      	ldr	r1, [r5, #0]
  405dec:	6011      	str	r1, [r2, #0]
  405dee:	6869      	ldr	r1, [r5, #4]
  405df0:	6051      	str	r1, [r2, #4]
  405df2:	68a9      	ldr	r1, [r5, #8]
  405df4:	6091      	str	r1, [r2, #8]
  405df6:	eb0a 0107 	add.w	r1, sl, r7
  405dfa:	ebab 0207 	sub.w	r2, fp, r7
  405dfe:	f042 0201 	orr.w	r2, r2, #1
  405e02:	6099      	str	r1, [r3, #8]
  405e04:	604a      	str	r2, [r1, #4]
  405e06:	f8da 3004 	ldr.w	r3, [sl, #4]
  405e0a:	f003 0301 	and.w	r3, r3, #1
  405e0e:	431f      	orrs	r7, r3
  405e10:	4640      	mov	r0, r8
  405e12:	f8ca 7004 	str.w	r7, [sl, #4]
  405e16:	f7ff f893 	bl	404f40 <__malloc_unlock>
  405e1a:	e751      	b.n	405cc0 <_realloc_r+0xe4>
  405e1c:	682b      	ldr	r3, [r5, #0]
  405e1e:	6003      	str	r3, [r0, #0]
  405e20:	686b      	ldr	r3, [r5, #4]
  405e22:	6043      	str	r3, [r0, #4]
  405e24:	2a1b      	cmp	r2, #27
  405e26:	d82d      	bhi.n	405e84 <_realloc_r+0x2a8>
  405e28:	f100 0308 	add.w	r3, r0, #8
  405e2c:	f105 0208 	add.w	r2, r5, #8
  405e30:	e71b      	b.n	405c6a <_realloc_r+0x8e>
  405e32:	4632      	mov	r2, r6
  405e34:	6829      	ldr	r1, [r5, #0]
  405e36:	6011      	str	r1, [r2, #0]
  405e38:	6869      	ldr	r1, [r5, #4]
  405e3a:	6051      	str	r1, [r2, #4]
  405e3c:	68a9      	ldr	r1, [r5, #8]
  405e3e:	6091      	str	r1, [r2, #8]
  405e40:	461c      	mov	r4, r3
  405e42:	46d1      	mov	r9, sl
  405e44:	e72a      	b.n	405c9c <_realloc_r+0xc0>
  405e46:	eb09 0107 	add.w	r1, r9, r7
  405e4a:	ebab 0b07 	sub.w	fp, fp, r7
  405e4e:	f04b 0201 	orr.w	r2, fp, #1
  405e52:	6099      	str	r1, [r3, #8]
  405e54:	604a      	str	r2, [r1, #4]
  405e56:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405e5a:	f003 0301 	and.w	r3, r3, #1
  405e5e:	431f      	orrs	r7, r3
  405e60:	4640      	mov	r0, r8
  405e62:	f845 7c04 	str.w	r7, [r5, #-4]
  405e66:	f7ff f86b 	bl	404f40 <__malloc_unlock>
  405e6a:	462e      	mov	r6, r5
  405e6c:	e728      	b.n	405cc0 <_realloc_r+0xe4>
  405e6e:	4629      	mov	r1, r5
  405e70:	f7ff fe50 	bl	405b14 <memmove>
  405e74:	e6ff      	b.n	405c76 <_realloc_r+0x9a>
  405e76:	4629      	mov	r1, r5
  405e78:	4630      	mov	r0, r6
  405e7a:	461c      	mov	r4, r3
  405e7c:	46d1      	mov	r9, sl
  405e7e:	f7ff fe49 	bl	405b14 <memmove>
  405e82:	e70b      	b.n	405c9c <_realloc_r+0xc0>
  405e84:	68ab      	ldr	r3, [r5, #8]
  405e86:	6083      	str	r3, [r0, #8]
  405e88:	68eb      	ldr	r3, [r5, #12]
  405e8a:	60c3      	str	r3, [r0, #12]
  405e8c:	2a24      	cmp	r2, #36	; 0x24
  405e8e:	d017      	beq.n	405ec0 <_realloc_r+0x2e4>
  405e90:	f100 0310 	add.w	r3, r0, #16
  405e94:	f105 0210 	add.w	r2, r5, #16
  405e98:	e6e7      	b.n	405c6a <_realloc_r+0x8e>
  405e9a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405e9e:	f023 0303 	bic.w	r3, r3, #3
  405ea2:	441c      	add	r4, r3
  405ea4:	462e      	mov	r6, r5
  405ea6:	e6f9      	b.n	405c9c <_realloc_r+0xc0>
  405ea8:	68a9      	ldr	r1, [r5, #8]
  405eaa:	f8ca 1010 	str.w	r1, [sl, #16]
  405eae:	68e9      	ldr	r1, [r5, #12]
  405eb0:	f8ca 1014 	str.w	r1, [sl, #20]
  405eb4:	2a24      	cmp	r2, #36	; 0x24
  405eb6:	d00c      	beq.n	405ed2 <_realloc_r+0x2f6>
  405eb8:	3510      	adds	r5, #16
  405eba:	f10a 0218 	add.w	r2, sl, #24
  405ebe:	e7b9      	b.n	405e34 <_realloc_r+0x258>
  405ec0:	692b      	ldr	r3, [r5, #16]
  405ec2:	6103      	str	r3, [r0, #16]
  405ec4:	696b      	ldr	r3, [r5, #20]
  405ec6:	6143      	str	r3, [r0, #20]
  405ec8:	f105 0218 	add.w	r2, r5, #24
  405ecc:	f100 0318 	add.w	r3, r0, #24
  405ed0:	e6cb      	b.n	405c6a <_realloc_r+0x8e>
  405ed2:	692a      	ldr	r2, [r5, #16]
  405ed4:	f8ca 2018 	str.w	r2, [sl, #24]
  405ed8:	696a      	ldr	r2, [r5, #20]
  405eda:	f8ca 201c 	str.w	r2, [sl, #28]
  405ede:	3518      	adds	r5, #24
  405ee0:	f10a 0220 	add.w	r2, sl, #32
  405ee4:	e7a6      	b.n	405e34 <_realloc_r+0x258>
  405ee6:	4632      	mov	r2, r6
  405ee8:	e77f      	b.n	405dea <_realloc_r+0x20e>
  405eea:	4629      	mov	r1, r5
  405eec:	4630      	mov	r0, r6
  405eee:	9301      	str	r3, [sp, #4]
  405ef0:	f7ff fe10 	bl	405b14 <memmove>
  405ef4:	9b01      	ldr	r3, [sp, #4]
  405ef6:	e77e      	b.n	405df6 <_realloc_r+0x21a>
  405ef8:	68a9      	ldr	r1, [r5, #8]
  405efa:	f8ca 1010 	str.w	r1, [sl, #16]
  405efe:	68e9      	ldr	r1, [r5, #12]
  405f00:	f8ca 1014 	str.w	r1, [sl, #20]
  405f04:	2a24      	cmp	r2, #36	; 0x24
  405f06:	d003      	beq.n	405f10 <_realloc_r+0x334>
  405f08:	3510      	adds	r5, #16
  405f0a:	f10a 0218 	add.w	r2, sl, #24
  405f0e:	e76c      	b.n	405dea <_realloc_r+0x20e>
  405f10:	692a      	ldr	r2, [r5, #16]
  405f12:	f8ca 2018 	str.w	r2, [sl, #24]
  405f16:	696a      	ldr	r2, [r5, #20]
  405f18:	f8ca 201c 	str.w	r2, [sl, #28]
  405f1c:	3518      	adds	r5, #24
  405f1e:	f10a 0220 	add.w	r2, sl, #32
  405f22:	e762      	b.n	405dea <_realloc_r+0x20e>
  405f24:	2040045c 	.word	0x2040045c

00405f28 <__ascii_wctomb>:
  405f28:	b121      	cbz	r1, 405f34 <__ascii_wctomb+0xc>
  405f2a:	2aff      	cmp	r2, #255	; 0xff
  405f2c:	d804      	bhi.n	405f38 <__ascii_wctomb+0x10>
  405f2e:	700a      	strb	r2, [r1, #0]
  405f30:	2001      	movs	r0, #1
  405f32:	4770      	bx	lr
  405f34:	4608      	mov	r0, r1
  405f36:	4770      	bx	lr
  405f38:	238a      	movs	r3, #138	; 0x8a
  405f3a:	6003      	str	r3, [r0, #0]
  405f3c:	f04f 30ff 	mov.w	r0, #4294967295
  405f40:	4770      	bx	lr
  405f42:	bf00      	nop

00405f44 <__gedf2>:
  405f44:	f04f 3cff 	mov.w	ip, #4294967295
  405f48:	e006      	b.n	405f58 <__cmpdf2+0x4>
  405f4a:	bf00      	nop

00405f4c <__ledf2>:
  405f4c:	f04f 0c01 	mov.w	ip, #1
  405f50:	e002      	b.n	405f58 <__cmpdf2+0x4>
  405f52:	bf00      	nop

00405f54 <__cmpdf2>:
  405f54:	f04f 0c01 	mov.w	ip, #1
  405f58:	f84d cd04 	str.w	ip, [sp, #-4]!
  405f5c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f64:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f68:	bf18      	it	ne
  405f6a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405f6e:	d01b      	beq.n	405fa8 <__cmpdf2+0x54>
  405f70:	b001      	add	sp, #4
  405f72:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405f76:	bf0c      	ite	eq
  405f78:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405f7c:	ea91 0f03 	teqne	r1, r3
  405f80:	bf02      	ittt	eq
  405f82:	ea90 0f02 	teqeq	r0, r2
  405f86:	2000      	moveq	r0, #0
  405f88:	4770      	bxeq	lr
  405f8a:	f110 0f00 	cmn.w	r0, #0
  405f8e:	ea91 0f03 	teq	r1, r3
  405f92:	bf58      	it	pl
  405f94:	4299      	cmppl	r1, r3
  405f96:	bf08      	it	eq
  405f98:	4290      	cmpeq	r0, r2
  405f9a:	bf2c      	ite	cs
  405f9c:	17d8      	asrcs	r0, r3, #31
  405f9e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405fa2:	f040 0001 	orr.w	r0, r0, #1
  405fa6:	4770      	bx	lr
  405fa8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fb0:	d102      	bne.n	405fb8 <__cmpdf2+0x64>
  405fb2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405fb6:	d107      	bne.n	405fc8 <__cmpdf2+0x74>
  405fb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405fbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fc0:	d1d6      	bne.n	405f70 <__cmpdf2+0x1c>
  405fc2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405fc6:	d0d3      	beq.n	405f70 <__cmpdf2+0x1c>
  405fc8:	f85d 0b04 	ldr.w	r0, [sp], #4
  405fcc:	4770      	bx	lr
  405fce:	bf00      	nop

00405fd0 <__aeabi_cdrcmple>:
  405fd0:	4684      	mov	ip, r0
  405fd2:	4610      	mov	r0, r2
  405fd4:	4662      	mov	r2, ip
  405fd6:	468c      	mov	ip, r1
  405fd8:	4619      	mov	r1, r3
  405fda:	4663      	mov	r3, ip
  405fdc:	e000      	b.n	405fe0 <__aeabi_cdcmpeq>
  405fde:	bf00      	nop

00405fe0 <__aeabi_cdcmpeq>:
  405fe0:	b501      	push	{r0, lr}
  405fe2:	f7ff ffb7 	bl	405f54 <__cmpdf2>
  405fe6:	2800      	cmp	r0, #0
  405fe8:	bf48      	it	mi
  405fea:	f110 0f00 	cmnmi.w	r0, #0
  405fee:	bd01      	pop	{r0, pc}

00405ff0 <__aeabi_dcmpeq>:
  405ff0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ff4:	f7ff fff4 	bl	405fe0 <__aeabi_cdcmpeq>
  405ff8:	bf0c      	ite	eq
  405ffa:	2001      	moveq	r0, #1
  405ffc:	2000      	movne	r0, #0
  405ffe:	f85d fb08 	ldr.w	pc, [sp], #8
  406002:	bf00      	nop

00406004 <__aeabi_dcmplt>:
  406004:	f84d ed08 	str.w	lr, [sp, #-8]!
  406008:	f7ff ffea 	bl	405fe0 <__aeabi_cdcmpeq>
  40600c:	bf34      	ite	cc
  40600e:	2001      	movcc	r0, #1
  406010:	2000      	movcs	r0, #0
  406012:	f85d fb08 	ldr.w	pc, [sp], #8
  406016:	bf00      	nop

00406018 <__aeabi_dcmple>:
  406018:	f84d ed08 	str.w	lr, [sp, #-8]!
  40601c:	f7ff ffe0 	bl	405fe0 <__aeabi_cdcmpeq>
  406020:	bf94      	ite	ls
  406022:	2001      	movls	r0, #1
  406024:	2000      	movhi	r0, #0
  406026:	f85d fb08 	ldr.w	pc, [sp], #8
  40602a:	bf00      	nop

0040602c <__aeabi_dcmpge>:
  40602c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406030:	f7ff ffce 	bl	405fd0 <__aeabi_cdrcmple>
  406034:	bf94      	ite	ls
  406036:	2001      	movls	r0, #1
  406038:	2000      	movhi	r0, #0
  40603a:	f85d fb08 	ldr.w	pc, [sp], #8
  40603e:	bf00      	nop

00406040 <__aeabi_dcmpgt>:
  406040:	f84d ed08 	str.w	lr, [sp, #-8]!
  406044:	f7ff ffc4 	bl	405fd0 <__aeabi_cdrcmple>
  406048:	bf34      	ite	cc
  40604a:	2001      	movcc	r0, #1
  40604c:	2000      	movcs	r0, #0
  40604e:	f85d fb08 	ldr.w	pc, [sp], #8
  406052:	bf00      	nop

00406054 <__aeabi_dcmpun>:
  406054:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406058:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40605c:	d102      	bne.n	406064 <__aeabi_dcmpun+0x10>
  40605e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406062:	d10a      	bne.n	40607a <__aeabi_dcmpun+0x26>
  406064:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406068:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40606c:	d102      	bne.n	406074 <__aeabi_dcmpun+0x20>
  40606e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406072:	d102      	bne.n	40607a <__aeabi_dcmpun+0x26>
  406074:	f04f 0000 	mov.w	r0, #0
  406078:	4770      	bx	lr
  40607a:	f04f 0001 	mov.w	r0, #1
  40607e:	4770      	bx	lr

00406080 <__aeabi_d2iz>:
  406080:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406084:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  406088:	d215      	bcs.n	4060b6 <__aeabi_d2iz+0x36>
  40608a:	d511      	bpl.n	4060b0 <__aeabi_d2iz+0x30>
  40608c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  406090:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  406094:	d912      	bls.n	4060bc <__aeabi_d2iz+0x3c>
  406096:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40609a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40609e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4060a2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4060a6:	fa23 f002 	lsr.w	r0, r3, r2
  4060aa:	bf18      	it	ne
  4060ac:	4240      	negne	r0, r0
  4060ae:	4770      	bx	lr
  4060b0:	f04f 0000 	mov.w	r0, #0
  4060b4:	4770      	bx	lr
  4060b6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4060ba:	d105      	bne.n	4060c8 <__aeabi_d2iz+0x48>
  4060bc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4060c0:	bf08      	it	eq
  4060c2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4060c6:	4770      	bx	lr
  4060c8:	f04f 0000 	mov.w	r0, #0
  4060cc:	4770      	bx	lr
  4060ce:	bf00      	nop

004060d0 <__aeabi_uldivmod>:
  4060d0:	b953      	cbnz	r3, 4060e8 <__aeabi_uldivmod+0x18>
  4060d2:	b94a      	cbnz	r2, 4060e8 <__aeabi_uldivmod+0x18>
  4060d4:	2900      	cmp	r1, #0
  4060d6:	bf08      	it	eq
  4060d8:	2800      	cmpeq	r0, #0
  4060da:	bf1c      	itt	ne
  4060dc:	f04f 31ff 	movne.w	r1, #4294967295
  4060e0:	f04f 30ff 	movne.w	r0, #4294967295
  4060e4:	f000 b97a 	b.w	4063dc <__aeabi_idiv0>
  4060e8:	f1ad 0c08 	sub.w	ip, sp, #8
  4060ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4060f0:	f000 f806 	bl	406100 <__udivmoddi4>
  4060f4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4060f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4060fc:	b004      	add	sp, #16
  4060fe:	4770      	bx	lr

00406100 <__udivmoddi4>:
  406100:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406104:	468c      	mov	ip, r1
  406106:	460d      	mov	r5, r1
  406108:	4604      	mov	r4, r0
  40610a:	9e08      	ldr	r6, [sp, #32]
  40610c:	2b00      	cmp	r3, #0
  40610e:	d151      	bne.n	4061b4 <__udivmoddi4+0xb4>
  406110:	428a      	cmp	r2, r1
  406112:	4617      	mov	r7, r2
  406114:	d96d      	bls.n	4061f2 <__udivmoddi4+0xf2>
  406116:	fab2 fe82 	clz	lr, r2
  40611a:	f1be 0f00 	cmp.w	lr, #0
  40611e:	d00b      	beq.n	406138 <__udivmoddi4+0x38>
  406120:	f1ce 0c20 	rsb	ip, lr, #32
  406124:	fa01 f50e 	lsl.w	r5, r1, lr
  406128:	fa20 fc0c 	lsr.w	ip, r0, ip
  40612c:	fa02 f70e 	lsl.w	r7, r2, lr
  406130:	ea4c 0c05 	orr.w	ip, ip, r5
  406134:	fa00 f40e 	lsl.w	r4, r0, lr
  406138:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40613c:	0c25      	lsrs	r5, r4, #16
  40613e:	fbbc f8fa 	udiv	r8, ip, sl
  406142:	fa1f f987 	uxth.w	r9, r7
  406146:	fb0a cc18 	mls	ip, sl, r8, ip
  40614a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40614e:	fb08 f309 	mul.w	r3, r8, r9
  406152:	42ab      	cmp	r3, r5
  406154:	d90a      	bls.n	40616c <__udivmoddi4+0x6c>
  406156:	19ed      	adds	r5, r5, r7
  406158:	f108 32ff 	add.w	r2, r8, #4294967295
  40615c:	f080 8123 	bcs.w	4063a6 <__udivmoddi4+0x2a6>
  406160:	42ab      	cmp	r3, r5
  406162:	f240 8120 	bls.w	4063a6 <__udivmoddi4+0x2a6>
  406166:	f1a8 0802 	sub.w	r8, r8, #2
  40616a:	443d      	add	r5, r7
  40616c:	1aed      	subs	r5, r5, r3
  40616e:	b2a4      	uxth	r4, r4
  406170:	fbb5 f0fa 	udiv	r0, r5, sl
  406174:	fb0a 5510 	mls	r5, sl, r0, r5
  406178:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40617c:	fb00 f909 	mul.w	r9, r0, r9
  406180:	45a1      	cmp	r9, r4
  406182:	d909      	bls.n	406198 <__udivmoddi4+0x98>
  406184:	19e4      	adds	r4, r4, r7
  406186:	f100 33ff 	add.w	r3, r0, #4294967295
  40618a:	f080 810a 	bcs.w	4063a2 <__udivmoddi4+0x2a2>
  40618e:	45a1      	cmp	r9, r4
  406190:	f240 8107 	bls.w	4063a2 <__udivmoddi4+0x2a2>
  406194:	3802      	subs	r0, #2
  406196:	443c      	add	r4, r7
  406198:	eba4 0409 	sub.w	r4, r4, r9
  40619c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061a0:	2100      	movs	r1, #0
  4061a2:	2e00      	cmp	r6, #0
  4061a4:	d061      	beq.n	40626a <__udivmoddi4+0x16a>
  4061a6:	fa24 f40e 	lsr.w	r4, r4, lr
  4061aa:	2300      	movs	r3, #0
  4061ac:	6034      	str	r4, [r6, #0]
  4061ae:	6073      	str	r3, [r6, #4]
  4061b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061b4:	428b      	cmp	r3, r1
  4061b6:	d907      	bls.n	4061c8 <__udivmoddi4+0xc8>
  4061b8:	2e00      	cmp	r6, #0
  4061ba:	d054      	beq.n	406266 <__udivmoddi4+0x166>
  4061bc:	2100      	movs	r1, #0
  4061be:	e886 0021 	stmia.w	r6, {r0, r5}
  4061c2:	4608      	mov	r0, r1
  4061c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061c8:	fab3 f183 	clz	r1, r3
  4061cc:	2900      	cmp	r1, #0
  4061ce:	f040 808e 	bne.w	4062ee <__udivmoddi4+0x1ee>
  4061d2:	42ab      	cmp	r3, r5
  4061d4:	d302      	bcc.n	4061dc <__udivmoddi4+0xdc>
  4061d6:	4282      	cmp	r2, r0
  4061d8:	f200 80fa 	bhi.w	4063d0 <__udivmoddi4+0x2d0>
  4061dc:	1a84      	subs	r4, r0, r2
  4061de:	eb65 0503 	sbc.w	r5, r5, r3
  4061e2:	2001      	movs	r0, #1
  4061e4:	46ac      	mov	ip, r5
  4061e6:	2e00      	cmp	r6, #0
  4061e8:	d03f      	beq.n	40626a <__udivmoddi4+0x16a>
  4061ea:	e886 1010 	stmia.w	r6, {r4, ip}
  4061ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061f2:	b912      	cbnz	r2, 4061fa <__udivmoddi4+0xfa>
  4061f4:	2701      	movs	r7, #1
  4061f6:	fbb7 f7f2 	udiv	r7, r7, r2
  4061fa:	fab7 fe87 	clz	lr, r7
  4061fe:	f1be 0f00 	cmp.w	lr, #0
  406202:	d134      	bne.n	40626e <__udivmoddi4+0x16e>
  406204:	1beb      	subs	r3, r5, r7
  406206:	0c3a      	lsrs	r2, r7, #16
  406208:	fa1f fc87 	uxth.w	ip, r7
  40620c:	2101      	movs	r1, #1
  40620e:	fbb3 f8f2 	udiv	r8, r3, r2
  406212:	0c25      	lsrs	r5, r4, #16
  406214:	fb02 3318 	mls	r3, r2, r8, r3
  406218:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40621c:	fb0c f308 	mul.w	r3, ip, r8
  406220:	42ab      	cmp	r3, r5
  406222:	d907      	bls.n	406234 <__udivmoddi4+0x134>
  406224:	19ed      	adds	r5, r5, r7
  406226:	f108 30ff 	add.w	r0, r8, #4294967295
  40622a:	d202      	bcs.n	406232 <__udivmoddi4+0x132>
  40622c:	42ab      	cmp	r3, r5
  40622e:	f200 80d1 	bhi.w	4063d4 <__udivmoddi4+0x2d4>
  406232:	4680      	mov	r8, r0
  406234:	1aed      	subs	r5, r5, r3
  406236:	b2a3      	uxth	r3, r4
  406238:	fbb5 f0f2 	udiv	r0, r5, r2
  40623c:	fb02 5510 	mls	r5, r2, r0, r5
  406240:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406244:	fb0c fc00 	mul.w	ip, ip, r0
  406248:	45a4      	cmp	ip, r4
  40624a:	d907      	bls.n	40625c <__udivmoddi4+0x15c>
  40624c:	19e4      	adds	r4, r4, r7
  40624e:	f100 33ff 	add.w	r3, r0, #4294967295
  406252:	d202      	bcs.n	40625a <__udivmoddi4+0x15a>
  406254:	45a4      	cmp	ip, r4
  406256:	f200 80b8 	bhi.w	4063ca <__udivmoddi4+0x2ca>
  40625a:	4618      	mov	r0, r3
  40625c:	eba4 040c 	sub.w	r4, r4, ip
  406260:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406264:	e79d      	b.n	4061a2 <__udivmoddi4+0xa2>
  406266:	4631      	mov	r1, r6
  406268:	4630      	mov	r0, r6
  40626a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40626e:	f1ce 0420 	rsb	r4, lr, #32
  406272:	fa05 f30e 	lsl.w	r3, r5, lr
  406276:	fa07 f70e 	lsl.w	r7, r7, lr
  40627a:	fa20 f804 	lsr.w	r8, r0, r4
  40627e:	0c3a      	lsrs	r2, r7, #16
  406280:	fa25 f404 	lsr.w	r4, r5, r4
  406284:	ea48 0803 	orr.w	r8, r8, r3
  406288:	fbb4 f1f2 	udiv	r1, r4, r2
  40628c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406290:	fb02 4411 	mls	r4, r2, r1, r4
  406294:	fa1f fc87 	uxth.w	ip, r7
  406298:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40629c:	fb01 f30c 	mul.w	r3, r1, ip
  4062a0:	42ab      	cmp	r3, r5
  4062a2:	fa00 f40e 	lsl.w	r4, r0, lr
  4062a6:	d909      	bls.n	4062bc <__udivmoddi4+0x1bc>
  4062a8:	19ed      	adds	r5, r5, r7
  4062aa:	f101 30ff 	add.w	r0, r1, #4294967295
  4062ae:	f080 808a 	bcs.w	4063c6 <__udivmoddi4+0x2c6>
  4062b2:	42ab      	cmp	r3, r5
  4062b4:	f240 8087 	bls.w	4063c6 <__udivmoddi4+0x2c6>
  4062b8:	3902      	subs	r1, #2
  4062ba:	443d      	add	r5, r7
  4062bc:	1aeb      	subs	r3, r5, r3
  4062be:	fa1f f588 	uxth.w	r5, r8
  4062c2:	fbb3 f0f2 	udiv	r0, r3, r2
  4062c6:	fb02 3310 	mls	r3, r2, r0, r3
  4062ca:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4062ce:	fb00 f30c 	mul.w	r3, r0, ip
  4062d2:	42ab      	cmp	r3, r5
  4062d4:	d907      	bls.n	4062e6 <__udivmoddi4+0x1e6>
  4062d6:	19ed      	adds	r5, r5, r7
  4062d8:	f100 38ff 	add.w	r8, r0, #4294967295
  4062dc:	d26f      	bcs.n	4063be <__udivmoddi4+0x2be>
  4062de:	42ab      	cmp	r3, r5
  4062e0:	d96d      	bls.n	4063be <__udivmoddi4+0x2be>
  4062e2:	3802      	subs	r0, #2
  4062e4:	443d      	add	r5, r7
  4062e6:	1aeb      	subs	r3, r5, r3
  4062e8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4062ec:	e78f      	b.n	40620e <__udivmoddi4+0x10e>
  4062ee:	f1c1 0720 	rsb	r7, r1, #32
  4062f2:	fa22 f807 	lsr.w	r8, r2, r7
  4062f6:	408b      	lsls	r3, r1
  4062f8:	fa05 f401 	lsl.w	r4, r5, r1
  4062fc:	ea48 0303 	orr.w	r3, r8, r3
  406300:	fa20 fe07 	lsr.w	lr, r0, r7
  406304:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406308:	40fd      	lsrs	r5, r7
  40630a:	ea4e 0e04 	orr.w	lr, lr, r4
  40630e:	fbb5 f9fc 	udiv	r9, r5, ip
  406312:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406316:	fb0c 5519 	mls	r5, ip, r9, r5
  40631a:	fa1f f883 	uxth.w	r8, r3
  40631e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406322:	fb09 f408 	mul.w	r4, r9, r8
  406326:	42ac      	cmp	r4, r5
  406328:	fa02 f201 	lsl.w	r2, r2, r1
  40632c:	fa00 fa01 	lsl.w	sl, r0, r1
  406330:	d908      	bls.n	406344 <__udivmoddi4+0x244>
  406332:	18ed      	adds	r5, r5, r3
  406334:	f109 30ff 	add.w	r0, r9, #4294967295
  406338:	d243      	bcs.n	4063c2 <__udivmoddi4+0x2c2>
  40633a:	42ac      	cmp	r4, r5
  40633c:	d941      	bls.n	4063c2 <__udivmoddi4+0x2c2>
  40633e:	f1a9 0902 	sub.w	r9, r9, #2
  406342:	441d      	add	r5, r3
  406344:	1b2d      	subs	r5, r5, r4
  406346:	fa1f fe8e 	uxth.w	lr, lr
  40634a:	fbb5 f0fc 	udiv	r0, r5, ip
  40634e:	fb0c 5510 	mls	r5, ip, r0, r5
  406352:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406356:	fb00 f808 	mul.w	r8, r0, r8
  40635a:	45a0      	cmp	r8, r4
  40635c:	d907      	bls.n	40636e <__udivmoddi4+0x26e>
  40635e:	18e4      	adds	r4, r4, r3
  406360:	f100 35ff 	add.w	r5, r0, #4294967295
  406364:	d229      	bcs.n	4063ba <__udivmoddi4+0x2ba>
  406366:	45a0      	cmp	r8, r4
  406368:	d927      	bls.n	4063ba <__udivmoddi4+0x2ba>
  40636a:	3802      	subs	r0, #2
  40636c:	441c      	add	r4, r3
  40636e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406372:	eba4 0408 	sub.w	r4, r4, r8
  406376:	fba0 8902 	umull	r8, r9, r0, r2
  40637a:	454c      	cmp	r4, r9
  40637c:	46c6      	mov	lr, r8
  40637e:	464d      	mov	r5, r9
  406380:	d315      	bcc.n	4063ae <__udivmoddi4+0x2ae>
  406382:	d012      	beq.n	4063aa <__udivmoddi4+0x2aa>
  406384:	b156      	cbz	r6, 40639c <__udivmoddi4+0x29c>
  406386:	ebba 030e 	subs.w	r3, sl, lr
  40638a:	eb64 0405 	sbc.w	r4, r4, r5
  40638e:	fa04 f707 	lsl.w	r7, r4, r7
  406392:	40cb      	lsrs	r3, r1
  406394:	431f      	orrs	r7, r3
  406396:	40cc      	lsrs	r4, r1
  406398:	6037      	str	r7, [r6, #0]
  40639a:	6074      	str	r4, [r6, #4]
  40639c:	2100      	movs	r1, #0
  40639e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063a2:	4618      	mov	r0, r3
  4063a4:	e6f8      	b.n	406198 <__udivmoddi4+0x98>
  4063a6:	4690      	mov	r8, r2
  4063a8:	e6e0      	b.n	40616c <__udivmoddi4+0x6c>
  4063aa:	45c2      	cmp	sl, r8
  4063ac:	d2ea      	bcs.n	406384 <__udivmoddi4+0x284>
  4063ae:	ebb8 0e02 	subs.w	lr, r8, r2
  4063b2:	eb69 0503 	sbc.w	r5, r9, r3
  4063b6:	3801      	subs	r0, #1
  4063b8:	e7e4      	b.n	406384 <__udivmoddi4+0x284>
  4063ba:	4628      	mov	r0, r5
  4063bc:	e7d7      	b.n	40636e <__udivmoddi4+0x26e>
  4063be:	4640      	mov	r0, r8
  4063c0:	e791      	b.n	4062e6 <__udivmoddi4+0x1e6>
  4063c2:	4681      	mov	r9, r0
  4063c4:	e7be      	b.n	406344 <__udivmoddi4+0x244>
  4063c6:	4601      	mov	r1, r0
  4063c8:	e778      	b.n	4062bc <__udivmoddi4+0x1bc>
  4063ca:	3802      	subs	r0, #2
  4063cc:	443c      	add	r4, r7
  4063ce:	e745      	b.n	40625c <__udivmoddi4+0x15c>
  4063d0:	4608      	mov	r0, r1
  4063d2:	e708      	b.n	4061e6 <__udivmoddi4+0xe6>
  4063d4:	f1a8 0802 	sub.w	r8, r8, #2
  4063d8:	443d      	add	r5, r7
  4063da:	e72b      	b.n	406234 <__udivmoddi4+0x134>

004063dc <__aeabi_idiv0>:
  4063dc:	4770      	bx	lr
  4063de:	bf00      	nop

004063e0 <sysfont_glyphs>:
	...
  406400:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406410:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406420:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406438:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406448:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406458:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406470:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406480:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406490:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4064a8:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4064c4:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4064d4:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4064e4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4064f4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  40651c:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406544:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406554:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406578:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406588:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406598:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4065a8:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4065c0:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4065d0:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4065e0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4065f8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  406608:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  406618:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406630:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406640:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406650:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406668:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406678:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406688:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4066a0:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4066b0:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4066c0:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4066dc:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4066ec:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4066fc:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406718:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406730:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406748:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406758:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406768:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406780:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406790:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4067a0:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4067b8:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4067c8:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4067d8:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4067f0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406800:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406810:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406828:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406838:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406848:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406860:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406870:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406880:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406898:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4068a8:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4068b8:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4068d0:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4068e0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4068f0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  406908:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406918:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406928:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406940:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406950:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406960:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406978:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406988:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406998:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4069b0:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4069c0:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  4069d0:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4069e8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4069f8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406a08:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406a20:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406a30:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406a40:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406a58:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406a68:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406a78:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406a90:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406aa0:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406ab0:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406ad8:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406ae8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406b04:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406b1c:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406b2c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b3c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406b54:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406b64:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406b74:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406b8c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406b9c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406bac:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406bbc:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406bcc:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406bdc:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406bec:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406bfc:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406c0c:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406c1c:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406c34:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406c44:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406c54:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406c70:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406c8c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406ca8:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406cb8:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406cc8:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406ce0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406cfc:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406d18:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406d34:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406d50:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406d6c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406d88:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406da4:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406db4:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406dc4:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406dd4:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406de4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406df4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406e04:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406e14:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406e24:	0000 0000 6625 0000 6556 3a6c 0020 0000     ....%f..Vel: ...
  406e34:	6425 0000 6944 7473 203a 0000               %d..Dist: ..

00406e40 <_global_impure_ptr>:
  406e40:	0030 2040 4e49 0046 6e69 0066 414e 004e     0.@ INF.inf.NAN.
  406e50:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406e60:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406e70:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406e80:	296c 0000 0030 0000                         l)..0...

00406e88 <blanks.7223>:
  406e88:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406e98 <zeroes.7224>:
  406e98:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406ea8:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00406eb8 <__mprec_bigtens>:
  406eb8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406ec8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406ed8:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406ee0 <__mprec_tens>:
  406ee0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406ef0:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406f00:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406f10:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406f20:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406f30:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406f40:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406f50:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406f60:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406f70:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406f80:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406f90:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406fa0:	9db4 79d9 7843 44ea                         ...yCx.D

00406fa8 <p05.6055>:
  406fa8:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406fb8:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406fc4 <_ctype_>:
  406fc4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406fd4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406fe4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406ff4:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  407004:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  407014:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  407024:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  407034:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  407044:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004070c8 <_init>:
  4070c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4070ca:	bf00      	nop
  4070cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4070ce:	bc08      	pop	{r3}
  4070d0:	469e      	mov	lr, r3
  4070d2:	4770      	bx	lr

004070d4 <__init_array_start>:
  4070d4:	00403809 	.word	0x00403809

004070d8 <__frame_dummy_init_array_entry>:
  4070d8:	00400165                                e.@.

004070dc <_fini>:
  4070dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4070de:	bf00      	nop
  4070e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4070e2:	bc08      	pop	{r3}
  4070e4:	469e      	mov	lr, r3
  4070e6:	4770      	bx	lr

004070e8 <__fini_array_start>:
  4070e8:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 63e0 0040 0e0a 7d20               .....c@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <raio>:
20400020:	0000 0000 0000 3ff0                         .......?

20400028 <_impure_ptr>:
20400028:	0030 2040 0000 0000                         0.@ ....

20400030 <impure_data>:
20400030:	0000 0000 031c 2040 0384 2040 03ec 2040     ......@ ..@ ..@ 
	...
204000d8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400458 <__atexit_recursive_mutex>:
20400458:	0cc8 2040                                   ..@ 

2040045c <__malloc_av_>:
	...
20400464:	045c 2040 045c 2040 0464 2040 0464 2040     \.@ \.@ d.@ d.@ 
20400474:	046c 2040 046c 2040 0474 2040 0474 2040     l.@ l.@ t.@ t.@ 
20400484:	047c 2040 047c 2040 0484 2040 0484 2040     |.@ |.@ ..@ ..@ 
20400494:	048c 2040 048c 2040 0494 2040 0494 2040     ..@ ..@ ..@ ..@ 
204004a4:	049c 2040 049c 2040 04a4 2040 04a4 2040     ..@ ..@ ..@ ..@ 
204004b4:	04ac 2040 04ac 2040 04b4 2040 04b4 2040     ..@ ..@ ..@ ..@ 
204004c4:	04bc 2040 04bc 2040 04c4 2040 04c4 2040     ..@ ..@ ..@ ..@ 
204004d4:	04cc 2040 04cc 2040 04d4 2040 04d4 2040     ..@ ..@ ..@ ..@ 
204004e4:	04dc 2040 04dc 2040 04e4 2040 04e4 2040     ..@ ..@ ..@ ..@ 
204004f4:	04ec 2040 04ec 2040 04f4 2040 04f4 2040     ..@ ..@ ..@ ..@ 
20400504:	04fc 2040 04fc 2040 0504 2040 0504 2040     ..@ ..@ ..@ ..@ 
20400514:	050c 2040 050c 2040 0514 2040 0514 2040     ..@ ..@ ..@ ..@ 
20400524:	051c 2040 051c 2040 0524 2040 0524 2040     ..@ ..@ $.@ $.@ 
20400534:	052c 2040 052c 2040 0534 2040 0534 2040     ,.@ ,.@ 4.@ 4.@ 
20400544:	053c 2040 053c 2040 0544 2040 0544 2040     <.@ <.@ D.@ D.@ 
20400554:	054c 2040 054c 2040 0554 2040 0554 2040     L.@ L.@ T.@ T.@ 
20400564:	055c 2040 055c 2040 0564 2040 0564 2040     \.@ \.@ d.@ d.@ 
20400574:	056c 2040 056c 2040 0574 2040 0574 2040     l.@ l.@ t.@ t.@ 
20400584:	057c 2040 057c 2040 0584 2040 0584 2040     |.@ |.@ ..@ ..@ 
20400594:	058c 2040 058c 2040 0594 2040 0594 2040     ..@ ..@ ..@ ..@ 
204005a4:	059c 2040 059c 2040 05a4 2040 05a4 2040     ..@ ..@ ..@ ..@ 
204005b4:	05ac 2040 05ac 2040 05b4 2040 05b4 2040     ..@ ..@ ..@ ..@ 
204005c4:	05bc 2040 05bc 2040 05c4 2040 05c4 2040     ..@ ..@ ..@ ..@ 
204005d4:	05cc 2040 05cc 2040 05d4 2040 05d4 2040     ..@ ..@ ..@ ..@ 
204005e4:	05dc 2040 05dc 2040 05e4 2040 05e4 2040     ..@ ..@ ..@ ..@ 
204005f4:	05ec 2040 05ec 2040 05f4 2040 05f4 2040     ..@ ..@ ..@ ..@ 
20400604:	05fc 2040 05fc 2040 0604 2040 0604 2040     ..@ ..@ ..@ ..@ 
20400614:	060c 2040 060c 2040 0614 2040 0614 2040     ..@ ..@ ..@ ..@ 
20400624:	061c 2040 061c 2040 0624 2040 0624 2040     ..@ ..@ $.@ $.@ 
20400634:	062c 2040 062c 2040 0634 2040 0634 2040     ,.@ ,.@ 4.@ 4.@ 
20400644:	063c 2040 063c 2040 0644 2040 0644 2040     <.@ <.@ D.@ D.@ 
20400654:	064c 2040 064c 2040 0654 2040 0654 2040     L.@ L.@ T.@ T.@ 
20400664:	065c 2040 065c 2040 0664 2040 0664 2040     \.@ \.@ d.@ d.@ 
20400674:	066c 2040 066c 2040 0674 2040 0674 2040     l.@ l.@ t.@ t.@ 
20400684:	067c 2040 067c 2040 0684 2040 0684 2040     |.@ |.@ ..@ ..@ 
20400694:	068c 2040 068c 2040 0694 2040 0694 2040     ..@ ..@ ..@ ..@ 
204006a4:	069c 2040 069c 2040 06a4 2040 06a4 2040     ..@ ..@ ..@ ..@ 
204006b4:	06ac 2040 06ac 2040 06b4 2040 06b4 2040     ..@ ..@ ..@ ..@ 
204006c4:	06bc 2040 06bc 2040 06c4 2040 06c4 2040     ..@ ..@ ..@ ..@ 
204006d4:	06cc 2040 06cc 2040 06d4 2040 06d4 2040     ..@ ..@ ..@ ..@ 
204006e4:	06dc 2040 06dc 2040 06e4 2040 06e4 2040     ..@ ..@ ..@ ..@ 
204006f4:	06ec 2040 06ec 2040 06f4 2040 06f4 2040     ..@ ..@ ..@ ..@ 
20400704:	06fc 2040 06fc 2040 0704 2040 0704 2040     ..@ ..@ ..@ ..@ 
20400714:	070c 2040 070c 2040 0714 2040 0714 2040     ..@ ..@ ..@ ..@ 
20400724:	071c 2040 071c 2040 0724 2040 0724 2040     ..@ ..@ $.@ $.@ 
20400734:	072c 2040 072c 2040 0734 2040 0734 2040     ,.@ ,.@ 4.@ 4.@ 
20400744:	073c 2040 073c 2040 0744 2040 0744 2040     <.@ <.@ D.@ D.@ 
20400754:	074c 2040 074c 2040 0754 2040 0754 2040     L.@ L.@ T.@ T.@ 
20400764:	075c 2040 075c 2040 0764 2040 0764 2040     \.@ \.@ d.@ d.@ 
20400774:	076c 2040 076c 2040 0774 2040 0774 2040     l.@ l.@ t.@ t.@ 
20400784:	077c 2040 077c 2040 0784 2040 0784 2040     |.@ |.@ ..@ ..@ 
20400794:	078c 2040 078c 2040 0794 2040 0794 2040     ..@ ..@ ..@ ..@ 
204007a4:	079c 2040 079c 2040 07a4 2040 07a4 2040     ..@ ..@ ..@ ..@ 
204007b4:	07ac 2040 07ac 2040 07b4 2040 07b4 2040     ..@ ..@ ..@ ..@ 
204007c4:	07bc 2040 07bc 2040 07c4 2040 07c4 2040     ..@ ..@ ..@ ..@ 
204007d4:	07cc 2040 07cc 2040 07d4 2040 07d4 2040     ..@ ..@ ..@ ..@ 
204007e4:	07dc 2040 07dc 2040 07e4 2040 07e4 2040     ..@ ..@ ..@ ..@ 
204007f4:	07ec 2040 07ec 2040 07f4 2040 07f4 2040     ..@ ..@ ..@ ..@ 
20400804:	07fc 2040 07fc 2040 0804 2040 0804 2040     ..@ ..@ ..@ ..@ 
20400814:	080c 2040 080c 2040 0814 2040 0814 2040     ..@ ..@ ..@ ..@ 
20400824:	081c 2040 081c 2040 0824 2040 0824 2040     ..@ ..@ $.@ $.@ 
20400834:	082c 2040 082c 2040 0834 2040 0834 2040     ,.@ ,.@ 4.@ 4.@ 
20400844:	083c 2040 083c 2040 0844 2040 0844 2040     <.@ <.@ D.@ D.@ 
20400854:	084c 2040 084c 2040 0854 2040 0854 2040     L.@ L.@ T.@ T.@ 

20400864 <__malloc_sbrk_base>:
20400864:	ffff ffff                                   ....

20400868 <__malloc_trim_threshold>:
20400868:	0000 0002                                   ....

2040086c <__global_locale>:
2040086c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040088c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ac:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008cc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ec:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040090c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040092c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040094c:	5f29 0040 5ae9 0040 0000 0000 6fc4 0040     )_@..Z@......o@.
2040095c:	6fc0 0040 6e64 0040 6e64 0040 6e64 0040     .o@.dn@.dn@.dn@.
2040096c:	6e64 0040 6e64 0040 6e64 0040 6e64 0040     dn@.dn@.dn@.dn@.
2040097c:	6e64 0040 6e64 0040 ffff ffff ffff ffff     dn@.dn@.........
2040098c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009b4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
