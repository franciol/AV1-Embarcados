
spi_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006fb4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406fb4  00406fb4  00016fb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d8  20400000  00406fbc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000318  204009d8  00407998  000209d8  2**3
                  ALLOC
  4 .stack        00002000  20400cf0  00407cb0  000209d8  2**0
                  ALLOC
  5 .heap         00000200  20402cf0  00409cb0  000209d8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00020a06  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019d30  00000000  00000000  00020a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003b5c  00000000  00000000  0003a78f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005ff4  00000000  00000000  0003e2eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000980  00000000  00000000  000442df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009c0  00000000  00000000  00044c5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00021e9e  00000000  00000000  0004561f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fb49  00000000  00000000  000674bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090553  00000000  00000000  00077006  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000020bc  00000000  00000000  0010755c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f0 2c 40 20 31 13 40 00 2d 13 40 00 2d 13 40 00     .,@ 1.@.-.@.-.@.
  400010:	2d 13 40 00 2d 13 40 00 2d 13 40 00 00 00 00 00     -.@.-.@.-.@.....
	...
  40002c:	2d 13 40 00 2d 13 40 00 00 00 00 00 2d 13 40 00     -.@.-.@.....-.@.
  40003c:	2d 13 40 00 2d 13 40 00 2d 13 40 00 c9 16 40 00     -.@.-.@.-.@...@.
  40004c:	11 16 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     ..@.-.@.-.@.-.@.
  40005c:	2d 13 40 00 2d 13 40 00 00 00 00 00 91 0e 40 00     -.@.-.@.......@.
  40006c:	a5 0e 40 00 b9 0e 40 00 2d 13 40 00 2d 13 40 00     ..@...@.-.@.-.@.
  40007c:	2d 13 40 00 cd 0e 40 00 e1 0e 40 00 2d 13 40 00     -.@...@...@.-.@.
  40008c:	2d 13 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     -.@.-.@.-.@.-.@.
  40009c:	2d 13 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     -.@.-.@.-.@.-.@.
  4000ac:	2d 13 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     -.@.-.@.-.@.-.@.
  4000bc:	2d 13 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     -.@.-.@.-.@.-.@.
  4000cc:	2d 13 40 00 00 00 00 00 2d 13 40 00 00 00 00 00     -.@.....-.@.....
  4000dc:	2d 13 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     -.@.-.@.-.@.-.@.
  4000ec:	2d 13 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     -.@.-.@.-.@.-.@.
  4000fc:	2d 13 40 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     -.@.-.@.-.@.-.@.
  40010c:	2d 13 40 00 2d 13 40 00 00 00 00 00 00 00 00 00     -.@.-.@.........
  40011c:	00 00 00 00 2d 13 40 00 2d 13 40 00 2d 13 40 00     ....-.@.-.@.-.@.
  40012c:	2d 13 40 00 2d 13 40 00 00 00 00 00 2d 13 40 00     -.@.-.@.....-.@.
  40013c:	2d 13 40 00                                         -.@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d8 	.word	0x204009d8
  40015c:	00000000 	.word	0x00000000
  400160:	00406fbc 	.word	0x00406fbc

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406fbc 	.word	0x00406fbc
  4001a0:	204009dc 	.word	0x204009dc
  4001a4:	00406fbc 	.word	0x00406fbc
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
  4001ac:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
  4001ae:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001b0:	6884      	ldr	r4, [r0, #8]
  4001b2:	42a5      	cmp	r5, r4
  4001b4:	d003      	beq.n	4001be <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
  4001b6:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001b8:	6884      	ldr	r4, [r0, #8]
  4001ba:	42ac      	cmp	r4, r5
  4001bc:	d1fb      	bne.n	4001b6 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
  4001be:	b161      	cbz	r1, 4001da <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001c0:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4001c4:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4001c8:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4001cc:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
  4001d0:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
  4001d4:	bf18      	it	ne
  4001d6:	300c      	addne	r0, #12
  4001d8:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
  4001da:	b142      	cbz	r2, 4001ee <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
  4001dc:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4001e0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4001e4:	f3c4 2003 	ubfx	r0, r4, #8, #4
  4001e8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  4001ec:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
  4001ee:	b143      	cbz	r3, 400202 <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001f0:	f3c4 1202 	ubfx	r2, r4, #4, #3
  4001f4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  4001f8:	f004 040f 	and.w	r4, r4, #15
  4001fc:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  400200:	601c      	str	r4, [r3, #0]
	}
}
  400202:	bc30      	pop	{r4, r5}
  400204:	4770      	bx	lr
	...

00400208 <rtc_set_time_alarm>:
 */
uint32_t rtc_set_time_alarm(Rtc *p_rtc,
		uint32_t ul_hour_flag, uint32_t ul_hour,
		uint32_t ul_minute_flag, uint32_t ul_minute,
		uint32_t ul_second_flag, uint32_t ul_second)
{
  400208:	b5f0      	push	{r4, r5, r6, r7, lr}
  40020a:	9c05      	ldr	r4, [sp, #20]
  40020c:	9d06      	ldr	r5, [sp, #24]
  40020e:	9f07      	ldr	r7, [sp, #28]
	uint32_t ul_alarm = 0;

	/* Hour alarm setting */
	if (ul_hour_flag) {
  400210:	460e      	mov	r6, r1
  400212:	b1b1      	cbz	r1, 400242 <rtc_set_time_alarm+0x3a>
		/* If 12-hour mode, set AMPM bit */
		if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  400214:	6841      	ldr	r1, [r0, #4]
			if (ul_hour > 12) {
  400216:	f011 0f01 	tst.w	r1, #1
  40021a:	d005      	beq.n	400228 <rtc_set_time_alarm+0x20>
  40021c:	2a0c      	cmp	r2, #12
  40021e:	d903      	bls.n	400228 <rtc_set_time_alarm+0x20>
				ul_hour -= 12;
  400220:	3a0c      	subs	r2, #12
				ul_alarm |= RTC_TIMR_AMPM;
  400222:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  400226:	e000      	b.n	40022a <rtc_set_time_alarm+0x22>
	uint32_t ul_alarm = 0;
  400228:	2600      	movs	r6, #0
			}
		}

		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40022a:	4919      	ldr	r1, [pc, #100]	; (400290 <rtc_set_time_alarm+0x88>)
  40022c:	fba1 e102 	umull	lr, r1, r1, r2
  400230:	08c9      	lsrs	r1, r1, #3
				((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  400232:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
  400236:	eba2 024e 	sub.w	r2, r2, lr, lsl #1
  40023a:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40023c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
  400240:	4316      	orrs	r6, r2
	}

	/* Minute alarm setting */
	if (ul_minute_flag) {
  400242:	b15b      	cbz	r3, 40025c <rtc_set_time_alarm+0x54>
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  400244:	4b12      	ldr	r3, [pc, #72]	; (400290 <rtc_set_time_alarm+0x88>)
  400246:	fba3 2304 	umull	r2, r3, r3, r4
  40024a:	08db      	lsrs	r3, r3, #3
				((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  40024c:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  400250:	eba4 0442 	sub.w	r4, r4, r2, lsl #1
  400254:	0224      	lsls	r4, r4, #8
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  400256:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
  40025a:	4326      	orrs	r6, r4
	}

	/* Second alarm setting */
	if (ul_second_flag) {
  40025c:	b155      	cbz	r5, 400274 <rtc_set_time_alarm+0x6c>
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  40025e:	4b0c      	ldr	r3, [pc, #48]	; (400290 <rtc_set_time_alarm+0x88>)
  400260:	fba3 2307 	umull	r2, r3, r3, r7
  400264:	08db      	lsrs	r3, r3, #3
				((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  400266:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  40026a:	eba7 0742 	sub.w	r7, r7, r2, lsl #1
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  40026e:	ea47 1303 	orr.w	r3, r7, r3, lsl #4
  400272:	431e      	orrs	r6, r3
	}

	p_rtc->RTC_TIMALR &= ~(RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  400274:	6902      	ldr	r2, [r0, #16]
  400276:	4b07      	ldr	r3, [pc, #28]	; (400294 <rtc_set_time_alarm+0x8c>)
  400278:	4013      	ands	r3, r2
  40027a:	6103      	str	r3, [r0, #16]
	p_rtc->RTC_TIMALR = ul_alarm;
  40027c:	6106      	str	r6, [r0, #16]
	p_rtc->RTC_TIMALR |= (RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  40027e:	6902      	ldr	r2, [r0, #16]
  400280:	4b05      	ldr	r3, [pc, #20]	; (400298 <rtc_set_time_alarm+0x90>)
  400282:	4313      	orrs	r3, r2
  400284:	6103      	str	r3, [r0, #16]

	return (p_rtc->RTC_VER & RTC_VER_NVTIMALR);
  400286:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400288:	f000 0004 	and.w	r0, r0, #4
  40028c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40028e:	bf00      	nop
  400290:	cccccccd 	.word	0xcccccccd
  400294:	ff7f7f7f 	.word	0xff7f7f7f
  400298:	00808080 	.word	0x00808080

0040029c <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
  40029c:	b4f0      	push	{r4, r5, r6, r7}
  40029e:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
  4002a0:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
  4002a2:	68c4      	ldr	r4, [r0, #12]
  4002a4:	42a5      	cmp	r5, r4
  4002a6:	d003      	beq.n	4002b0 <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
  4002a8:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
  4002aa:	68c4      	ldr	r4, [r0, #12]
  4002ac:	42ac      	cmp	r4, r5
  4002ae:	d1fb      	bne.n	4002a8 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
  4002b0:	b199      	cbz	r1, 4002da <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002b2:	f3c4 3003 	ubfx	r0, r4, #12, #4
  4002b6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4002ba:	f3c4 2703 	ubfx	r7, r4, #8, #4
  4002be:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002c2:	f3c4 1002 	ubfx	r0, r4, #4, #3
  4002c6:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4002ca:	f004 000f 	and.w	r0, r4, #15
  4002ce:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002d2:	2564      	movs	r5, #100	; 0x64
  4002d4:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
  4002d8:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
  4002da:	b142      	cbz	r2, 4002ee <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002dc:	f3c4 5000 	ubfx	r0, r4, #20, #1
  4002e0:	0081      	lsls	r1, r0, #2
  4002e2:	4408      	add	r0, r1
  4002e4:	f3c4 4103 	ubfx	r1, r4, #16, #4
  4002e8:	eb01 0140 	add.w	r1, r1, r0, lsl #1
  4002ec:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
  4002ee:	b143      	cbz	r3, 400302 <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002f0:	f3c4 7201 	ubfx	r2, r4, #28, #2
  4002f4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  4002f8:	f3c4 6103 	ubfx	r1, r4, #24, #4
  4002fc:	eb01 0242 	add.w	r2, r1, r2, lsl #1
  400300:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
  400302:	b116      	cbz	r6, 40030a <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
  400304:	f3c4 5442 	ubfx	r4, r4, #21, #3
  400308:	6034      	str	r4, [r6, #0]
	}
}
  40030a:	bcf0      	pop	{r4, r5, r6, r7}
  40030c:	4770      	bx	lr
	...

00400310 <rtc_set_date_alarm>:
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date_alarm(Rtc *p_rtc,
		uint32_t ul_month_flag, uint32_t ul_month,
		uint32_t ul_day_flag, uint32_t ul_day)
{
  400310:	b430      	push	{r4, r5}
  400312:	9d02      	ldr	r5, [sp, #8]
	uint32_t ul_alarm = 0;

	/* Month alarm setting */
	if (ul_month_flag) {
  400314:	460c      	mov	r4, r1
  400316:	b151      	cbz	r1, 40032e <rtc_set_date_alarm+0x1e>
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400318:	4c12      	ldr	r4, [pc, #72]	; (400364 <rtc_set_date_alarm+0x54>)
  40031a:	fba4 1402 	umull	r1, r4, r4, r2
  40031e:	08e4      	lsrs	r4, r4, #3
				((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  400320:	eb04 0184 	add.w	r1, r4, r4, lsl #2
  400324:	eba2 0241 	sub.w	r2, r2, r1, lsl #1
  400328:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  40032a:	ea42 5404 	orr.w	r4, r2, r4, lsl #20
	}

	/* Day alarm setting */
	if (ul_day_flag) {
  40032e:	b15b      	cbz	r3, 400348 <rtc_set_date_alarm+0x38>
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400330:	4a0c      	ldr	r2, [pc, #48]	; (400364 <rtc_set_date_alarm+0x54>)
  400332:	fba2 3205 	umull	r3, r2, r2, r5
  400336:	08d2      	lsrs	r2, r2, #3
				((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  400338:	eb02 0382 	add.w	r3, r2, r2, lsl #2
  40033c:	eba5 0343 	sub.w	r3, r5, r3, lsl #1
  400340:	061b      	lsls	r3, r3, #24
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400342:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
  400346:	431c      	orrs	r4, r3
	}

	/* Set alarm */
	p_rtc->RTC_CALALR &= ~(RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  400348:	6942      	ldr	r2, [r0, #20]
  40034a:	4b07      	ldr	r3, [pc, #28]	; (400368 <rtc_set_date_alarm+0x58>)
  40034c:	4013      	ands	r3, r2
  40034e:	6143      	str	r3, [r0, #20]
	p_rtc->RTC_CALALR = ul_alarm;
  400350:	6144      	str	r4, [r0, #20]
	p_rtc->RTC_CALALR |= (RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  400352:	6942      	ldr	r2, [r0, #20]
  400354:	4b05      	ldr	r3, [pc, #20]	; (40036c <rtc_set_date_alarm+0x5c>)
  400356:	4313      	orrs	r3, r2
  400358:	6143      	str	r3, [r0, #20]

	return (p_rtc->RTC_VER & RTC_VER_NVCALALR);
  40035a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  40035c:	f000 0008 	and.w	r0, r0, #8
  400360:	bc30      	pop	{r4, r5}
  400362:	4770      	bx	lr
  400364:	cccccccd 	.word	0xcccccccd
  400368:	7f7fffff 	.word	0x7f7fffff
  40036c:	80800000 	.word	0x80800000

00400370 <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  400370:	6980      	ldr	r0, [r0, #24]
}
  400372:	4770      	bx	lr

00400374 <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  400374:	61c1      	str	r1, [r0, #28]
  400376:	4770      	bx	lr

00400378 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400378:	68c0      	ldr	r0, [r0, #12]
}
  40037a:	4770      	bx	lr

0040037c <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  40037c:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  40037e:	4b07      	ldr	r3, [pc, #28]	; (40039c <spi_enable_clock+0x20>)
  400380:	4298      	cmp	r0, r3
  400382:	d003      	beq.n	40038c <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400384:	4b06      	ldr	r3, [pc, #24]	; (4003a0 <spi_enable_clock+0x24>)
  400386:	4298      	cmp	r0, r3
  400388:	d004      	beq.n	400394 <spi_enable_clock+0x18>
  40038a:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40038c:	2015      	movs	r0, #21
  40038e:	4b05      	ldr	r3, [pc, #20]	; (4003a4 <spi_enable_clock+0x28>)
  400390:	4798      	blx	r3
  400392:	bd08      	pop	{r3, pc}
  400394:	202a      	movs	r0, #42	; 0x2a
  400396:	4b03      	ldr	r3, [pc, #12]	; (4003a4 <spi_enable_clock+0x28>)
  400398:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40039a:	e7f6      	b.n	40038a <spi_enable_clock+0xe>
  40039c:	40008000 	.word	0x40008000
  4003a0:	40058000 	.word	0x40058000
  4003a4:	00401015 	.word	0x00401015

004003a8 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4003a8:	6843      	ldr	r3, [r0, #4]
  4003aa:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4003ae:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4003b0:	6843      	ldr	r3, [r0, #4]
  4003b2:	0409      	lsls	r1, r1, #16
  4003b4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4003b8:	4319      	orrs	r1, r3
  4003ba:	6041      	str	r1, [r0, #4]
  4003bc:	4770      	bx	lr

004003be <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4003be:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4003c0:	f643 2499 	movw	r4, #15001	; 0x3a99
  4003c4:	6905      	ldr	r5, [r0, #16]
  4003c6:	f015 0f02 	tst.w	r5, #2
  4003ca:	d103      	bne.n	4003d4 <spi_write+0x16>
		if (!timeout--) {
  4003cc:	3c01      	subs	r4, #1
  4003ce:	d1f9      	bne.n	4003c4 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4003d0:	2001      	movs	r0, #1
  4003d2:	e00c      	b.n	4003ee <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4003d4:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4003d6:	f014 0f02 	tst.w	r4, #2
  4003da:	d006      	beq.n	4003ea <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4003dc:	0412      	lsls	r2, r2, #16
  4003de:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4003e2:	4311      	orrs	r1, r2
		if (uc_last) {
  4003e4:	b10b      	cbz	r3, 4003ea <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4003e6:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4003ea:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4003ec:	2000      	movs	r0, #0
}
  4003ee:	bc30      	pop	{r4, r5}
  4003f0:	4770      	bx	lr

004003f2 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4003f2:	b932      	cbnz	r2, 400402 <spi_set_clock_polarity+0x10>
  4003f4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4003f8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003fa:	f023 0301 	bic.w	r3, r3, #1
  4003fe:	6303      	str	r3, [r0, #48]	; 0x30
  400400:	4770      	bx	lr
  400402:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400406:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400408:	f043 0301 	orr.w	r3, r3, #1
  40040c:	6303      	str	r3, [r0, #48]	; 0x30
  40040e:	4770      	bx	lr

00400410 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400410:	b932      	cbnz	r2, 400420 <spi_set_clock_phase+0x10>
  400412:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400416:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400418:	f023 0302 	bic.w	r3, r3, #2
  40041c:	6303      	str	r3, [r0, #48]	; 0x30
  40041e:	4770      	bx	lr
  400420:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400424:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400426:	f043 0302 	orr.w	r3, r3, #2
  40042a:	6303      	str	r3, [r0, #48]	; 0x30
  40042c:	4770      	bx	lr

0040042e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40042e:	2a04      	cmp	r2, #4
  400430:	d003      	beq.n	40043a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400432:	b16a      	cbz	r2, 400450 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400434:	2a08      	cmp	r2, #8
  400436:	d016      	beq.n	400466 <spi_configure_cs_behavior+0x38>
  400438:	4770      	bx	lr
  40043a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40043e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400440:	f023 0308 	bic.w	r3, r3, #8
  400444:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400446:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400448:	f043 0304 	orr.w	r3, r3, #4
  40044c:	6303      	str	r3, [r0, #48]	; 0x30
  40044e:	4770      	bx	lr
  400450:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400454:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400456:	f023 0308 	bic.w	r3, r3, #8
  40045a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40045c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40045e:	f023 0304 	bic.w	r3, r3, #4
  400462:	6303      	str	r3, [r0, #48]	; 0x30
  400464:	4770      	bx	lr
  400466:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40046a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40046c:	f043 0308 	orr.w	r3, r3, #8
  400470:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400472:	e7e1      	b.n	400438 <spi_configure_cs_behavior+0xa>

00400474 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400474:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400478:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40047a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40047e:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400480:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400482:	431a      	orrs	r2, r3
  400484:	630a      	str	r2, [r1, #48]	; 0x30
  400486:	4770      	bx	lr

00400488 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  400488:	1e43      	subs	r3, r0, #1
  40048a:	4419      	add	r1, r3
  40048c:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400490:	1e43      	subs	r3, r0, #1
  400492:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400494:	bf94      	ite	ls
  400496:	b200      	sxthls	r0, r0
		return -1;
  400498:	f04f 30ff 	movhi.w	r0, #4294967295
}
  40049c:	4770      	bx	lr

0040049e <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  40049e:	b17a      	cbz	r2, 4004c0 <spi_set_baudrate_div+0x22>
{
  4004a0:	b410      	push	{r4}
  4004a2:	4614      	mov	r4, r2
  4004a4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4004a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4004aa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4004ae:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4004b0:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4004b2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4004b6:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4004b8:	2000      	movs	r0, #0
}
  4004ba:	f85d 4b04 	ldr.w	r4, [sp], #4
  4004be:	4770      	bx	lr
        return -1;
  4004c0:	f04f 30ff 	mov.w	r0, #4294967295
  4004c4:	4770      	bx	lr
	...

004004c8 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4004c8:	4b01      	ldr	r3, [pc, #4]	; (4004d0 <gfx_mono_set_framebuffer+0x8>)
  4004ca:	6018      	str	r0, [r3, #0]
  4004cc:	4770      	bx	lr
  4004ce:	bf00      	nop
  4004d0:	204009f4 	.word	0x204009f4

004004d4 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4004d4:	4b02      	ldr	r3, [pc, #8]	; (4004e0 <gfx_mono_framebuffer_put_byte+0xc>)
  4004d6:	681b      	ldr	r3, [r3, #0]
  4004d8:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4004dc:	5442      	strb	r2, [r0, r1]
  4004de:	4770      	bx	lr
  4004e0:	204009f4 	.word	0x204009f4

004004e4 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4004e4:	4b02      	ldr	r3, [pc, #8]	; (4004f0 <gfx_mono_framebuffer_get_byte+0xc>)
  4004e6:	681b      	ldr	r3, [r3, #0]
  4004e8:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4004ec:	5c40      	ldrb	r0, [r0, r1]
  4004ee:	4770      	bx	lr
  4004f0:	204009f4 	.word	0x204009f4

004004f4 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4004f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4004f8:	1884      	adds	r4, r0, r2
  4004fa:	2c80      	cmp	r4, #128	; 0x80
  4004fc:	dd02      	ble.n	400504 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4004fe:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400502:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400504:	b322      	cbz	r2, 400550 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400506:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400508:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  40050c:	2601      	movs	r6, #1
  40050e:	fa06 f101 	lsl.w	r1, r6, r1
  400512:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400514:	2b01      	cmp	r3, #1
  400516:	d01d      	beq.n	400554 <gfx_mono_generic_draw_horizontal_line+0x60>
  400518:	2b00      	cmp	r3, #0
  40051a:	d035      	beq.n	400588 <gfx_mono_generic_draw_horizontal_line+0x94>
  40051c:	2b02      	cmp	r3, #2
  40051e:	d117      	bne.n	400550 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400520:	3801      	subs	r0, #1
  400522:	b2c7      	uxtb	r7, r0
  400524:	19d4      	adds	r4, r2, r7
  400526:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400528:	f8df a090 	ldr.w	sl, [pc, #144]	; 4005bc <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  40052c:	f04f 0900 	mov.w	r9, #0
  400530:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4005c0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400534:	4621      	mov	r1, r4
  400536:	4628      	mov	r0, r5
  400538:	47d0      	blx	sl
			temp ^= pixelmask;
  40053a:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40053e:	464b      	mov	r3, r9
  400540:	b2d2      	uxtb	r2, r2
  400542:	4621      	mov	r1, r4
  400544:	4628      	mov	r0, r5
  400546:	47c0      	blx	r8
  400548:	3c01      	subs	r4, #1
  40054a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40054c:	42bc      	cmp	r4, r7
  40054e:	d1f1      	bne.n	400534 <gfx_mono_generic_draw_horizontal_line+0x40>
  400550:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400554:	3801      	subs	r0, #1
  400556:	b2c7      	uxtb	r7, r0
  400558:	19d4      	adds	r4, r2, r7
  40055a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40055c:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4005bc <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400560:	f04f 0900 	mov.w	r9, #0
  400564:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4005c0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400568:	4621      	mov	r1, r4
  40056a:	4628      	mov	r0, r5
  40056c:	47d0      	blx	sl
			temp |= pixelmask;
  40056e:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400572:	464b      	mov	r3, r9
  400574:	b2d2      	uxtb	r2, r2
  400576:	4621      	mov	r1, r4
  400578:	4628      	mov	r0, r5
  40057a:	47c0      	blx	r8
  40057c:	3c01      	subs	r4, #1
  40057e:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400580:	42bc      	cmp	r4, r7
  400582:	d1f1      	bne.n	400568 <gfx_mono_generic_draw_horizontal_line+0x74>
  400584:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400588:	3801      	subs	r0, #1
  40058a:	b2c7      	uxtb	r7, r0
  40058c:	19d4      	adds	r4, r2, r7
  40058e:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400590:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4005bc <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400594:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  400596:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4005c0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40059a:	4621      	mov	r1, r4
  40059c:	4628      	mov	r0, r5
  40059e:	47c0      	blx	r8
			temp &= ~pixelmask;
  4005a0:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4005a4:	2300      	movs	r3, #0
  4005a6:	b2d2      	uxtb	r2, r2
  4005a8:	4621      	mov	r1, r4
  4005aa:	4628      	mov	r0, r5
  4005ac:	47c8      	blx	r9
  4005ae:	3c01      	subs	r4, #1
  4005b0:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4005b2:	42bc      	cmp	r4, r7
  4005b4:	d1f1      	bne.n	40059a <gfx_mono_generic_draw_horizontal_line+0xa6>
  4005b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4005ba:	bf00      	nop
  4005bc:	004007f5 	.word	0x004007f5
  4005c0:	004006f1 	.word	0x004006f1

004005c4 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4005c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4005c8:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4005cc:	b18b      	cbz	r3, 4005f2 <gfx_mono_generic_draw_filled_rect+0x2e>
  4005ce:	461c      	mov	r4, r3
  4005d0:	4690      	mov	r8, r2
  4005d2:	4606      	mov	r6, r0
  4005d4:	1e4d      	subs	r5, r1, #1
  4005d6:	b2ed      	uxtb	r5, r5
  4005d8:	442c      	add	r4, r5
  4005da:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4005dc:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4005f8 <gfx_mono_generic_draw_filled_rect+0x34>
  4005e0:	463b      	mov	r3, r7
  4005e2:	4642      	mov	r2, r8
  4005e4:	4621      	mov	r1, r4
  4005e6:	4630      	mov	r0, r6
  4005e8:	47c8      	blx	r9
  4005ea:	3c01      	subs	r4, #1
  4005ec:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4005ee:	42ac      	cmp	r4, r5
  4005f0:	d1f6      	bne.n	4005e0 <gfx_mono_generic_draw_filled_rect+0x1c>
  4005f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005f6:	bf00      	nop
  4005f8:	004004f5 	.word	0x004004f5

004005fc <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4005fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400600:	b083      	sub	sp, #12
  400602:	4604      	mov	r4, r0
  400604:	4688      	mov	r8, r1
  400606:	4691      	mov	r9, r2
  400608:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  40060a:	7a5b      	ldrb	r3, [r3, #9]
  40060c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400610:	2100      	movs	r1, #0
  400612:	9100      	str	r1, [sp, #0]
  400614:	4649      	mov	r1, r9
  400616:	4640      	mov	r0, r8
  400618:	4d21      	ldr	r5, [pc, #132]	; (4006a0 <gfx_mono_draw_char+0xa4>)
  40061a:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  40061c:	f89b 3000 	ldrb.w	r3, [fp]
  400620:	b113      	cbz	r3, 400628 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400622:	b003      	add	sp, #12
  400624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400628:	f89b 2008 	ldrb.w	r2, [fp, #8]
  40062c:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40062e:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400632:	bf18      	it	ne
  400634:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400636:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40063a:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40063e:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400640:	fb17 f70a 	smulbb	r7, r7, sl
  400644:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400648:	f8db 3004 	ldr.w	r3, [fp, #4]
  40064c:	fa13 f787 	uxtah	r7, r3, r7
  400650:	e01f      	b.n	400692 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400652:	0064      	lsls	r4, r4, #1
  400654:	b2e4      	uxtb	r4, r4
  400656:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400658:	b2eb      	uxtb	r3, r5
  40065a:	429e      	cmp	r6, r3
  40065c:	d910      	bls.n	400680 <gfx_mono_draw_char+0x84>
  40065e:	b2eb      	uxtb	r3, r5
  400660:	eb08 0003 	add.w	r0, r8, r3
  400664:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400666:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40066a:	bf08      	it	eq
  40066c:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400670:	f014 0f80 	tst.w	r4, #128	; 0x80
  400674:	d0ed      	beq.n	400652 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400676:	2201      	movs	r2, #1
  400678:	4649      	mov	r1, r9
  40067a:	4b0a      	ldr	r3, [pc, #40]	; (4006a4 <gfx_mono_draw_char+0xa8>)
  40067c:	4798      	blx	r3
  40067e:	e7e8      	b.n	400652 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400680:	f109 0901 	add.w	r9, r9, #1
  400684:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400688:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  40068c:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400690:	d0c7      	beq.n	400622 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  400692:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  400696:	2e00      	cmp	r6, #0
  400698:	d0f2      	beq.n	400680 <gfx_mono_draw_char+0x84>
  40069a:	2500      	movs	r5, #0
  40069c:	462c      	mov	r4, r5
  40069e:	e7de      	b.n	40065e <gfx_mono_draw_char+0x62>
  4006a0:	004005c5 	.word	0x004005c5
  4006a4:	00400791 	.word	0x00400791

004006a8 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  4006a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4006ac:	4604      	mov	r4, r0
  4006ae:	4690      	mov	r8, r2
  4006b0:	461d      	mov	r5, r3
  4006b2:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4006b4:	4f0d      	ldr	r7, [pc, #52]	; (4006ec <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4006b6:	460e      	mov	r6, r1
  4006b8:	e008      	b.n	4006cc <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4006ba:	7a6a      	ldrb	r2, [r5, #9]
  4006bc:	3201      	adds	r2, #1
  4006be:	4442      	add	r2, r8
  4006c0:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4006c4:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4006c6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4006ca:	b16b      	cbz	r3, 4006e8 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4006cc:	7820      	ldrb	r0, [r4, #0]
  4006ce:	280a      	cmp	r0, #10
  4006d0:	d0f3      	beq.n	4006ba <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4006d2:	280d      	cmp	r0, #13
  4006d4:	d0f7      	beq.n	4006c6 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4006d6:	462b      	mov	r3, r5
  4006d8:	4642      	mov	r2, r8
  4006da:	4649      	mov	r1, r9
  4006dc:	47b8      	blx	r7
			x += font->width;
  4006de:	7a2b      	ldrb	r3, [r5, #8]
  4006e0:	4499      	add	r9, r3
  4006e2:	fa5f f989 	uxtb.w	r9, r9
  4006e6:	e7ee      	b.n	4006c6 <gfx_mono_draw_string+0x1e>
}
  4006e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4006ec:	004005fd 	.word	0x004005fd

004006f0 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4006f0:	b570      	push	{r4, r5, r6, lr}
  4006f2:	4604      	mov	r4, r0
  4006f4:	460d      	mov	r5, r1
  4006f6:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4006f8:	b91b      	cbnz	r3, 400702 <gfx_mono_ssd1306_put_byte+0x12>
  4006fa:	4b0d      	ldr	r3, [pc, #52]	; (400730 <gfx_mono_ssd1306_put_byte+0x40>)
  4006fc:	4798      	blx	r3
  4006fe:	42b0      	cmp	r0, r6
  400700:	d015      	beq.n	40072e <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  400702:	4632      	mov	r2, r6
  400704:	4629      	mov	r1, r5
  400706:	4620      	mov	r0, r4
  400708:	4b0a      	ldr	r3, [pc, #40]	; (400734 <gfx_mono_ssd1306_put_byte+0x44>)
  40070a:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  40070c:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400710:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400714:	4c08      	ldr	r4, [pc, #32]	; (400738 <gfx_mono_ssd1306_put_byte+0x48>)
  400716:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400718:	f3c5 1002 	ubfx	r0, r5, #4, #3
  40071c:	f040 0010 	orr.w	r0, r0, #16
  400720:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400722:	f005 000f 	and.w	r0, r5, #15
  400726:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400728:	4630      	mov	r0, r6
  40072a:	4b04      	ldr	r3, [pc, #16]	; (40073c <gfx_mono_ssd1306_put_byte+0x4c>)
  40072c:	4798      	blx	r3
  40072e:	bd70      	pop	{r4, r5, r6, pc}
  400730:	004004e5 	.word	0x004004e5
  400734:	004004d5 	.word	0x004004d5
  400738:	00400801 	.word	0x00400801
  40073c:	00400a21 	.word	0x00400a21

00400740 <gfx_mono_ssd1306_init>:
{
  400740:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400744:	480d      	ldr	r0, [pc, #52]	; (40077c <gfx_mono_ssd1306_init+0x3c>)
  400746:	4b0e      	ldr	r3, [pc, #56]	; (400780 <gfx_mono_ssd1306_init+0x40>)
  400748:	4798      	blx	r3
	ssd1306_init();
  40074a:	4b0e      	ldr	r3, [pc, #56]	; (400784 <gfx_mono_ssd1306_init+0x44>)
  40074c:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  40074e:	2040      	movs	r0, #64	; 0x40
  400750:	4b0d      	ldr	r3, [pc, #52]	; (400788 <gfx_mono_ssd1306_init+0x48>)
  400752:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400754:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400756:	f04f 0801 	mov.w	r8, #1
  40075a:	462f      	mov	r7, r5
  40075c:	4e0b      	ldr	r6, [pc, #44]	; (40078c <gfx_mono_ssd1306_init+0x4c>)
{
  40075e:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400760:	4643      	mov	r3, r8
  400762:	463a      	mov	r2, r7
  400764:	b2e1      	uxtb	r1, r4
  400766:	4628      	mov	r0, r5
  400768:	47b0      	blx	r6
  40076a:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  40076c:	2c80      	cmp	r4, #128	; 0x80
  40076e:	d1f7      	bne.n	400760 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400770:	3501      	adds	r5, #1
  400772:	b2ed      	uxtb	r5, r5
  400774:	2d04      	cmp	r5, #4
  400776:	d1f2      	bne.n	40075e <gfx_mono_ssd1306_init+0x1e>
  400778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40077c:	204009f8 	.word	0x204009f8
  400780:	004004c9 	.word	0x004004c9
  400784:	00400841 	.word	0x00400841
  400788:	00400801 	.word	0x00400801
  40078c:	004006f1 	.word	0x004006f1

00400790 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400790:	09c3      	lsrs	r3, r0, #7
  400792:	d12a      	bne.n	4007ea <gfx_mono_ssd1306_draw_pixel+0x5a>
  400794:	291f      	cmp	r1, #31
  400796:	d828      	bhi.n	4007ea <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40079c:	4614      	mov	r4, r2
  40079e:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  4007a0:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  4007a2:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  4007a6:	2201      	movs	r2, #1
  4007a8:	fa02 f701 	lsl.w	r7, r2, r1
  4007ac:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4007b0:	4601      	mov	r1, r0
  4007b2:	4630      	mov	r0, r6
  4007b4:	4b0d      	ldr	r3, [pc, #52]	; (4007ec <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4007b6:	4798      	blx	r3
  4007b8:	4602      	mov	r2, r0
	switch (color) {
  4007ba:	2c01      	cmp	r4, #1
  4007bc:	d009      	beq.n	4007d2 <gfx_mono_ssd1306_draw_pixel+0x42>
  4007be:	b164      	cbz	r4, 4007da <gfx_mono_ssd1306_draw_pixel+0x4a>
  4007c0:	2c02      	cmp	r4, #2
  4007c2:	d00e      	beq.n	4007e2 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4007c4:	2300      	movs	r3, #0
  4007c6:	4629      	mov	r1, r5
  4007c8:	4630      	mov	r0, r6
  4007ca:	4c09      	ldr	r4, [pc, #36]	; (4007f0 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4007cc:	47a0      	blx	r4
  4007ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4007d2:	ea48 0200 	orr.w	r2, r8, r0
  4007d6:	b2d2      	uxtb	r2, r2
		break;
  4007d8:	e7f4      	b.n	4007c4 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4007da:	ea20 0207 	bic.w	r2, r0, r7
  4007de:	b2d2      	uxtb	r2, r2
		break;
  4007e0:	e7f0      	b.n	4007c4 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4007e2:	ea88 0200 	eor.w	r2, r8, r0
  4007e6:	b2d2      	uxtb	r2, r2
		break;
  4007e8:	e7ec      	b.n	4007c4 <gfx_mono_ssd1306_draw_pixel+0x34>
  4007ea:	4770      	bx	lr
  4007ec:	004004e5 	.word	0x004004e5
  4007f0:	004006f1 	.word	0x004006f1

004007f4 <gfx_mono_ssd1306_get_byte>:
{
  4007f4:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4007f6:	4b01      	ldr	r3, [pc, #4]	; (4007fc <gfx_mono_ssd1306_get_byte+0x8>)
  4007f8:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4007fa:	bd08      	pop	{r3, pc}
  4007fc:	004004e5 	.word	0x004004e5

00400800 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400800:	b538      	push	{r3, r4, r5, lr}
  400802:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400804:	2208      	movs	r2, #8
  400806:	4b09      	ldr	r3, [pc, #36]	; (40082c <ssd1306_write_command+0x2c>)
  400808:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40080a:	4c09      	ldr	r4, [pc, #36]	; (400830 <ssd1306_write_command+0x30>)
  40080c:	2101      	movs	r1, #1
  40080e:	4620      	mov	r0, r4
  400810:	4b08      	ldr	r3, [pc, #32]	; (400834 <ssd1306_write_command+0x34>)
  400812:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400814:	2301      	movs	r3, #1
  400816:	461a      	mov	r2, r3
  400818:	4629      	mov	r1, r5
  40081a:	4620      	mov	r0, r4
  40081c:	4c06      	ldr	r4, [pc, #24]	; (400838 <ssd1306_write_command+0x38>)
  40081e:	47a0      	blx	r4
	delay_us(10);
  400820:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400824:	4b05      	ldr	r3, [pc, #20]	; (40083c <ssd1306_write_command+0x3c>)
  400826:	4798      	blx	r3
  400828:	bd38      	pop	{r3, r4, r5, pc}
  40082a:	bf00      	nop
  40082c:	400e1000 	.word	0x400e1000
  400830:	40008000 	.word	0x40008000
  400834:	004003a9 	.word	0x004003a9
  400838:	004003bf 	.word	0x004003bf
  40083c:	20400001 	.word	0x20400001

00400840 <ssd1306_init>:
{
  400840:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400844:	4d66      	ldr	r5, [pc, #408]	; (4009e0 <ssd1306_init+0x1a0>)
  400846:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40084a:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40084c:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400850:	4b64      	ldr	r3, [pc, #400]	; (4009e4 <ssd1306_init+0x1a4>)
  400852:	2708      	movs	r7, #8
  400854:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400856:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40085a:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40085c:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400860:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400862:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400864:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400868:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  40086a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40086e:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400870:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  400872:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400876:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400878:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40087a:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40087e:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400880:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400882:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400886:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400888:	f022 0208 	bic.w	r2, r2, #8
  40088c:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40088e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400890:	f022 0208 	bic.w	r2, r2, #8
  400894:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400896:	601f      	str	r7, [r3, #0]
  400898:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40089a:	631f      	str	r7, [r3, #48]	; 0x30
  40089c:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40089e:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400a1c <ssd1306_init+0x1dc>
  4008a2:	2300      	movs	r3, #0
  4008a4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4008a8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008ac:	4640      	mov	r0, r8
  4008ae:	4c4e      	ldr	r4, [pc, #312]	; (4009e8 <ssd1306_init+0x1a8>)
  4008b0:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4008b2:	2300      	movs	r3, #0
  4008b4:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4008b8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008bc:	4640      	mov	r0, r8
  4008be:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4008c0:	2300      	movs	r3, #0
  4008c2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4008c6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008ca:	4640      	mov	r0, r8
  4008cc:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4008ce:	2300      	movs	r3, #0
  4008d0:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4008d4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008d8:	4640      	mov	r0, r8
  4008da:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4008dc:	2300      	movs	r3, #0
  4008de:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4008e2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008e6:	4640      	mov	r0, r8
  4008e8:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4008ea:	2300      	movs	r3, #0
  4008ec:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4008f0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008f4:	4640      	mov	r0, r8
  4008f6:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4008f8:	4c3c      	ldr	r4, [pc, #240]	; (4009ec <ssd1306_init+0x1ac>)
  4008fa:	f04f 0902 	mov.w	r9, #2
  4008fe:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400902:	f04f 0880 	mov.w	r8, #128	; 0x80
  400906:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  40090a:	6863      	ldr	r3, [r4, #4]
  40090c:	f043 0301 	orr.w	r3, r3, #1
  400910:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400912:	463a      	mov	r2, r7
  400914:	2101      	movs	r1, #1
  400916:	4620      	mov	r0, r4
  400918:	4b35      	ldr	r3, [pc, #212]	; (4009f0 <ssd1306_init+0x1b0>)
  40091a:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  40091c:	2200      	movs	r2, #0
  40091e:	2101      	movs	r1, #1
  400920:	4620      	mov	r0, r4
  400922:	4b34      	ldr	r3, [pc, #208]	; (4009f4 <ssd1306_init+0x1b4>)
  400924:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400926:	2200      	movs	r2, #0
  400928:	2101      	movs	r1, #1
  40092a:	4620      	mov	r0, r4
  40092c:	4b32      	ldr	r3, [pc, #200]	; (4009f8 <ssd1306_init+0x1b8>)
  40092e:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400930:	6863      	ldr	r3, [r4, #4]
  400932:	f023 0302 	bic.w	r3, r3, #2
  400936:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400938:	2200      	movs	r2, #0
  40093a:	2101      	movs	r1, #1
  40093c:	4620      	mov	r0, r4
  40093e:	4b2f      	ldr	r3, [pc, #188]	; (4009fc <ssd1306_init+0x1bc>)
  400940:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400942:	6863      	ldr	r3, [r4, #4]
  400944:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400948:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40094a:	6863      	ldr	r3, [r4, #4]
  40094c:	f043 0310 	orr.w	r3, r3, #16
  400950:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  400952:	492b      	ldr	r1, [pc, #172]	; (400a00 <ssd1306_init+0x1c0>)
  400954:	482b      	ldr	r0, [pc, #172]	; (400a04 <ssd1306_init+0x1c4>)
  400956:	4b2c      	ldr	r3, [pc, #176]	; (400a08 <ssd1306_init+0x1c8>)
  400958:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  40095a:	b2c2      	uxtb	r2, r0
  40095c:	2101      	movs	r1, #1
  40095e:	4620      	mov	r0, r4
  400960:	4b2a      	ldr	r3, [pc, #168]	; (400a0c <ssd1306_init+0x1cc>)
  400962:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400964:	4620      	mov	r0, r4
  400966:	4b2a      	ldr	r3, [pc, #168]	; (400a10 <ssd1306_init+0x1d0>)
  400968:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40096a:	2301      	movs	r3, #1
  40096c:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40096e:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400970:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400974:	4c27      	ldr	r4, [pc, #156]	; (400a14 <ssd1306_init+0x1d4>)
  400976:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400978:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  40097a:	f640 30b8 	movw	r0, #3000	; 0xbb8
  40097e:	47a0      	blx	r4
  400980:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400982:	20a8      	movs	r0, #168	; 0xa8
  400984:	4c24      	ldr	r4, [pc, #144]	; (400a18 <ssd1306_init+0x1d8>)
  400986:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400988:	201f      	movs	r0, #31
  40098a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  40098c:	20d3      	movs	r0, #211	; 0xd3
  40098e:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400990:	2000      	movs	r0, #0
  400992:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400994:	2040      	movs	r0, #64	; 0x40
  400996:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400998:	20a1      	movs	r0, #161	; 0xa1
  40099a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  40099c:	20c8      	movs	r0, #200	; 0xc8
  40099e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  4009a0:	20da      	movs	r0, #218	; 0xda
  4009a2:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  4009a4:	4648      	mov	r0, r9
  4009a6:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  4009a8:	2081      	movs	r0, #129	; 0x81
  4009aa:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4009ac:	208f      	movs	r0, #143	; 0x8f
  4009ae:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4009b0:	20a4      	movs	r0, #164	; 0xa4
  4009b2:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4009b4:	20a6      	movs	r0, #166	; 0xa6
  4009b6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4009b8:	20d5      	movs	r0, #213	; 0xd5
  4009ba:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  4009bc:	4640      	mov	r0, r8
  4009be:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  4009c0:	208d      	movs	r0, #141	; 0x8d
  4009c2:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  4009c4:	2014      	movs	r0, #20
  4009c6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4009c8:	20db      	movs	r0, #219	; 0xdb
  4009ca:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4009cc:	2040      	movs	r0, #64	; 0x40
  4009ce:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  4009d0:	20d9      	movs	r0, #217	; 0xd9
  4009d2:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  4009d4:	20f1      	movs	r0, #241	; 0xf1
  4009d6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  4009d8:	20af      	movs	r0, #175	; 0xaf
  4009da:	47a0      	blx	r4
  4009dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4009e0:	400e1200 	.word	0x400e1200
  4009e4:	400e1000 	.word	0x400e1000
  4009e8:	00400d01 	.word	0x00400d01
  4009ec:	40008000 	.word	0x40008000
  4009f0:	0040042f 	.word	0x0040042f
  4009f4:	004003f3 	.word	0x004003f3
  4009f8:	00400411 	.word	0x00400411
  4009fc:	00400475 	.word	0x00400475
  400a00:	08f0d180 	.word	0x08f0d180
  400a04:	000f4240 	.word	0x000f4240
  400a08:	00400489 	.word	0x00400489
  400a0c:	0040049f 	.word	0x0040049f
  400a10:	0040037d 	.word	0x0040037d
  400a14:	20400001 	.word	0x20400001
  400a18:	00400801 	.word	0x00400801
  400a1c:	400e1400 	.word	0x400e1400

00400a20 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400a20:	b538      	push	{r3, r4, r5, lr}
  400a22:	4605      	mov	r5, r0
  400a24:	2208      	movs	r2, #8
  400a26:	4b09      	ldr	r3, [pc, #36]	; (400a4c <ssd1306_write_data+0x2c>)
  400a28:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400a2a:	4c09      	ldr	r4, [pc, #36]	; (400a50 <ssd1306_write_data+0x30>)
  400a2c:	2101      	movs	r1, #1
  400a2e:	4620      	mov	r0, r4
  400a30:	4b08      	ldr	r3, [pc, #32]	; (400a54 <ssd1306_write_data+0x34>)
  400a32:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400a34:	2301      	movs	r3, #1
  400a36:	461a      	mov	r2, r3
  400a38:	4629      	mov	r1, r5
  400a3a:	4620      	mov	r0, r4
  400a3c:	4c06      	ldr	r4, [pc, #24]	; (400a58 <ssd1306_write_data+0x38>)
  400a3e:	47a0      	blx	r4
	delay_us(10);
  400a40:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400a44:	4b05      	ldr	r3, [pc, #20]	; (400a5c <ssd1306_write_data+0x3c>)
  400a46:	4798      	blx	r3
  400a48:	bd38      	pop	{r3, r4, r5, pc}
  400a4a:	bf00      	nop
  400a4c:	400e1000 	.word	0x400e1000
  400a50:	40008000 	.word	0x40008000
  400a54:	004003a9 	.word	0x004003a9
  400a58:	004003bf 	.word	0x004003bf
  400a5c:	20400001 	.word	0x20400001

00400a60 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400a60:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400a62:	4810      	ldr	r0, [pc, #64]	; (400aa4 <sysclk_init+0x44>)
  400a64:	4b10      	ldr	r3, [pc, #64]	; (400aa8 <sysclk_init+0x48>)
  400a66:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400a68:	213e      	movs	r1, #62	; 0x3e
  400a6a:	2000      	movs	r0, #0
  400a6c:	4b0f      	ldr	r3, [pc, #60]	; (400aac <sysclk_init+0x4c>)
  400a6e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400a70:	4c0f      	ldr	r4, [pc, #60]	; (400ab0 <sysclk_init+0x50>)
  400a72:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400a74:	2800      	cmp	r0, #0
  400a76:	d0fc      	beq.n	400a72 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400a78:	4b0e      	ldr	r3, [pc, #56]	; (400ab4 <sysclk_init+0x54>)
  400a7a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400a7c:	4a0e      	ldr	r2, [pc, #56]	; (400ab8 <sysclk_init+0x58>)
  400a7e:	4b0f      	ldr	r3, [pc, #60]	; (400abc <sysclk_init+0x5c>)
  400a80:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400a82:	4c0f      	ldr	r4, [pc, #60]	; (400ac0 <sysclk_init+0x60>)
  400a84:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400a86:	2800      	cmp	r0, #0
  400a88:	d0fc      	beq.n	400a84 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400a8a:	2002      	movs	r0, #2
  400a8c:	4b0d      	ldr	r3, [pc, #52]	; (400ac4 <sysclk_init+0x64>)
  400a8e:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400a90:	2000      	movs	r0, #0
  400a92:	4b0d      	ldr	r3, [pc, #52]	; (400ac8 <sysclk_init+0x68>)
  400a94:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400a96:	4b0d      	ldr	r3, [pc, #52]	; (400acc <sysclk_init+0x6c>)
  400a98:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400a9a:	4802      	ldr	r0, [pc, #8]	; (400aa4 <sysclk_init+0x44>)
  400a9c:	4b02      	ldr	r3, [pc, #8]	; (400aa8 <sysclk_init+0x48>)
  400a9e:	4798      	blx	r3
  400aa0:	bd10      	pop	{r4, pc}
  400aa2:	bf00      	nop
  400aa4:	11e1a300 	.word	0x11e1a300
  400aa8:	00401505 	.word	0x00401505
  400aac:	00400f91 	.word	0x00400f91
  400ab0:	00400fe5 	.word	0x00400fe5
  400ab4:	00400ff5 	.word	0x00400ff5
  400ab8:	20183f01 	.word	0x20183f01
  400abc:	400e0600 	.word	0x400e0600
  400ac0:	00401005 	.word	0x00401005
  400ac4:	00400ef5 	.word	0x00400ef5
  400ac8:	00400f2d 	.word	0x00400f2d
  400acc:	004013f9 	.word	0x004013f9

00400ad0 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400ad0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400ad2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400ad6:	4b48      	ldr	r3, [pc, #288]	; (400bf8 <board_init+0x128>)
  400ad8:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400ada:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400ade:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400ae2:	4b46      	ldr	r3, [pc, #280]	; (400bfc <board_init+0x12c>)
  400ae4:	2200      	movs	r2, #0
  400ae6:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400aea:	695a      	ldr	r2, [r3, #20]
  400aec:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400af0:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400af2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400af6:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400afa:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400afe:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400b02:	f007 0007 	and.w	r0, r7, #7
  400b06:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400b08:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400b0c:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400b10:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400b14:	f3bf 8f4f 	dsb	sy
  400b18:	f04f 34ff 	mov.w	r4, #4294967295
  400b1c:	fa04 fc00 	lsl.w	ip, r4, r0
  400b20:	fa06 f000 	lsl.w	r0, r6, r0
  400b24:	fa04 f40e 	lsl.w	r4, r4, lr
  400b28:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400b2c:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400b2e:	463a      	mov	r2, r7
  400b30:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400b32:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400b36:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400b3a:	3a01      	subs	r2, #1
  400b3c:	4423      	add	r3, r4
  400b3e:	f1b2 3fff 	cmp.w	r2, #4294967295
  400b42:	d1f6      	bne.n	400b32 <board_init+0x62>
        } while(sets--);
  400b44:	3e01      	subs	r6, #1
  400b46:	4460      	add	r0, ip
  400b48:	f1b6 3fff 	cmp.w	r6, #4294967295
  400b4c:	d1ef      	bne.n	400b2e <board_init+0x5e>
  400b4e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400b52:	4b2a      	ldr	r3, [pc, #168]	; (400bfc <board_init+0x12c>)
  400b54:	695a      	ldr	r2, [r3, #20]
  400b56:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400b5a:	615a      	str	r2, [r3, #20]
  400b5c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b60:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b64:	4a26      	ldr	r2, [pc, #152]	; (400c00 <board_init+0x130>)
  400b66:	4927      	ldr	r1, [pc, #156]	; (400c04 <board_init+0x134>)
  400b68:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b6a:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400b6e:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400b70:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b74:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400b78:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400b7c:	f022 0201 	bic.w	r2, r2, #1
  400b80:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400b84:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400b88:	f022 0201 	bic.w	r2, r2, #1
  400b8c:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400b90:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b94:	f3bf 8f6f 	isb	sy
  400b98:	200a      	movs	r0, #10
  400b9a:	4c1b      	ldr	r4, [pc, #108]	; (400c08 <board_init+0x138>)
  400b9c:	47a0      	blx	r4
  400b9e:	200b      	movs	r0, #11
  400ba0:	47a0      	blx	r4
  400ba2:	200c      	movs	r0, #12
  400ba4:	47a0      	blx	r4
  400ba6:	2010      	movs	r0, #16
  400ba8:	47a0      	blx	r4
  400baa:	2011      	movs	r0, #17
  400bac:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400bae:	4b17      	ldr	r3, [pc, #92]	; (400c0c <board_init+0x13c>)
  400bb0:	f44f 7280 	mov.w	r2, #256	; 0x100
  400bb4:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400bb6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400bba:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400bbc:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400bc0:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400bc4:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400bc6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400bca:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400bcc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400bd0:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400bd2:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400bd4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400bd8:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400bda:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400bde:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400be0:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400be2:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400be6:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400be8:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400bec:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400bf0:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400bf4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400bf6:	bf00      	nop
  400bf8:	400e1850 	.word	0x400e1850
  400bfc:	e000ed00 	.word	0xe000ed00
  400c00:	400e0c00 	.word	0x400e0c00
  400c04:	5a00080c 	.word	0x5a00080c
  400c08:	00401015 	.word	0x00401015
  400c0c:	400e1200 	.word	0x400e1200

00400c10 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400c10:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400c12:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c16:	d03a      	beq.n	400c8e <pio_set_peripheral+0x7e>
  400c18:	d813      	bhi.n	400c42 <pio_set_peripheral+0x32>
  400c1a:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c1e:	d025      	beq.n	400c6c <pio_set_peripheral+0x5c>
  400c20:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c24:	d10a      	bne.n	400c3c <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c26:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c28:	4313      	orrs	r3, r2
  400c2a:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400c2c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c2e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c30:	400b      	ands	r3, r1
  400c32:	ea23 0302 	bic.w	r3, r3, r2
  400c36:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400c38:	6042      	str	r2, [r0, #4]
  400c3a:	4770      	bx	lr
	switch (ul_type) {
  400c3c:	2900      	cmp	r1, #0
  400c3e:	d1fb      	bne.n	400c38 <pio_set_peripheral+0x28>
  400c40:	4770      	bx	lr
  400c42:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c46:	d021      	beq.n	400c8c <pio_set_peripheral+0x7c>
  400c48:	d809      	bhi.n	400c5e <pio_set_peripheral+0x4e>
  400c4a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c4e:	d1f3      	bne.n	400c38 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c50:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c52:	4313      	orrs	r3, r2
  400c54:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c56:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c58:	4313      	orrs	r3, r2
  400c5a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c5c:	e7ec      	b.n	400c38 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400c5e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c62:	d013      	beq.n	400c8c <pio_set_peripheral+0x7c>
  400c64:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c68:	d010      	beq.n	400c8c <pio_set_peripheral+0x7c>
  400c6a:	e7e5      	b.n	400c38 <pio_set_peripheral+0x28>
{
  400c6c:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c6e:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c70:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400c72:	43d3      	mvns	r3, r2
  400c74:	4021      	ands	r1, r4
  400c76:	461c      	mov	r4, r3
  400c78:	4019      	ands	r1, r3
  400c7a:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c7c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c7e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c80:	400b      	ands	r3, r1
  400c82:	4023      	ands	r3, r4
  400c84:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400c86:	6042      	str	r2, [r0, #4]
}
  400c88:	f85d 4b04 	ldr.w	r4, [sp], #4
  400c8c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c8e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c90:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400c92:	400b      	ands	r3, r1
  400c94:	ea23 0302 	bic.w	r3, r3, r2
  400c98:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c9a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c9c:	4313      	orrs	r3, r2
  400c9e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400ca0:	e7ca      	b.n	400c38 <pio_set_peripheral+0x28>

00400ca2 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400ca2:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400ca4:	f012 0f01 	tst.w	r2, #1
  400ca8:	d10d      	bne.n	400cc6 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400caa:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400cac:	f012 0f0a 	tst.w	r2, #10
  400cb0:	d00b      	beq.n	400cca <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400cb2:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400cb4:	f012 0f02 	tst.w	r2, #2
  400cb8:	d109      	bne.n	400cce <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400cba:	f012 0f08 	tst.w	r2, #8
  400cbe:	d008      	beq.n	400cd2 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400cc0:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400cc4:	e005      	b.n	400cd2 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400cc6:	6641      	str	r1, [r0, #100]	; 0x64
  400cc8:	e7f0      	b.n	400cac <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400cca:	6241      	str	r1, [r0, #36]	; 0x24
  400ccc:	e7f2      	b.n	400cb4 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400cce:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400cd2:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400cd4:	6001      	str	r1, [r0, #0]
  400cd6:	4770      	bx	lr

00400cd8 <pio_set_output>:
{
  400cd8:	b410      	push	{r4}
  400cda:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400cdc:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400cde:	b94c      	cbnz	r4, 400cf4 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400ce0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400ce2:	b14b      	cbz	r3, 400cf8 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400ce4:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400ce6:	b94a      	cbnz	r2, 400cfc <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400ce8:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400cea:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400cec:	6001      	str	r1, [r0, #0]
}
  400cee:	f85d 4b04 	ldr.w	r4, [sp], #4
  400cf2:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400cf4:	6641      	str	r1, [r0, #100]	; 0x64
  400cf6:	e7f4      	b.n	400ce2 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400cf8:	6541      	str	r1, [r0, #84]	; 0x54
  400cfa:	e7f4      	b.n	400ce6 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400cfc:	6301      	str	r1, [r0, #48]	; 0x30
  400cfe:	e7f4      	b.n	400cea <pio_set_output+0x12>

00400d00 <pio_configure>:
{
  400d00:	b570      	push	{r4, r5, r6, lr}
  400d02:	b082      	sub	sp, #8
  400d04:	4605      	mov	r5, r0
  400d06:	4616      	mov	r6, r2
  400d08:	461c      	mov	r4, r3
	switch (ul_type) {
  400d0a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d0e:	d014      	beq.n	400d3a <pio_configure+0x3a>
  400d10:	d90a      	bls.n	400d28 <pio_configure+0x28>
  400d12:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d16:	d024      	beq.n	400d62 <pio_configure+0x62>
  400d18:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d1c:	d021      	beq.n	400d62 <pio_configure+0x62>
  400d1e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d22:	d017      	beq.n	400d54 <pio_configure+0x54>
		return 0;
  400d24:	2000      	movs	r0, #0
  400d26:	e01a      	b.n	400d5e <pio_configure+0x5e>
	switch (ul_type) {
  400d28:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d2c:	d005      	beq.n	400d3a <pio_configure+0x3a>
  400d2e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d32:	d002      	beq.n	400d3a <pio_configure+0x3a>
  400d34:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d38:	d1f4      	bne.n	400d24 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400d3a:	4632      	mov	r2, r6
  400d3c:	4628      	mov	r0, r5
  400d3e:	4b11      	ldr	r3, [pc, #68]	; (400d84 <pio_configure+0x84>)
  400d40:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d42:	f014 0f01 	tst.w	r4, #1
  400d46:	d102      	bne.n	400d4e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400d48:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400d4a:	2001      	movs	r0, #1
  400d4c:	e007      	b.n	400d5e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400d4e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400d50:	2001      	movs	r0, #1
  400d52:	e004      	b.n	400d5e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400d54:	461a      	mov	r2, r3
  400d56:	4631      	mov	r1, r6
  400d58:	4b0b      	ldr	r3, [pc, #44]	; (400d88 <pio_configure+0x88>)
  400d5a:	4798      	blx	r3
	return 1;
  400d5c:	2001      	movs	r0, #1
}
  400d5e:	b002      	add	sp, #8
  400d60:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400d62:	f004 0301 	and.w	r3, r4, #1
  400d66:	9300      	str	r3, [sp, #0]
  400d68:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400d6c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d70:	bf14      	ite	ne
  400d72:	2200      	movne	r2, #0
  400d74:	2201      	moveq	r2, #1
  400d76:	4631      	mov	r1, r6
  400d78:	4628      	mov	r0, r5
  400d7a:	4c04      	ldr	r4, [pc, #16]	; (400d8c <pio_configure+0x8c>)
  400d7c:	47a0      	blx	r4
	return 1;
  400d7e:	2001      	movs	r0, #1
		break;
  400d80:	e7ed      	b.n	400d5e <pio_configure+0x5e>
  400d82:	bf00      	nop
  400d84:	00400c11 	.word	0x00400c11
  400d88:	00400ca3 	.word	0x00400ca3
  400d8c:	00400cd9 	.word	0x00400cd9

00400d90 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400d90:	f012 0f10 	tst.w	r2, #16
  400d94:	d012      	beq.n	400dbc <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400d96:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400d9a:	f012 0f20 	tst.w	r2, #32
  400d9e:	d007      	beq.n	400db0 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400da0:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400da4:	f012 0f40 	tst.w	r2, #64	; 0x40
  400da8:	d005      	beq.n	400db6 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400daa:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400dae:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400db0:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400db4:	e7f6      	b.n	400da4 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400db6:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400dba:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400dbc:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400dc0:	4770      	bx	lr

00400dc2 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400dc2:	6401      	str	r1, [r0, #64]	; 0x40
  400dc4:	4770      	bx	lr

00400dc6 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400dc6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400dc8:	4770      	bx	lr

00400dca <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400dca:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400dcc:	4770      	bx	lr
	...

00400dd0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400dd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400dd4:	4604      	mov	r4, r0
  400dd6:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400dd8:	4b0e      	ldr	r3, [pc, #56]	; (400e14 <pio_handler_process+0x44>)
  400dda:	4798      	blx	r3
  400ddc:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400dde:	4620      	mov	r0, r4
  400de0:	4b0d      	ldr	r3, [pc, #52]	; (400e18 <pio_handler_process+0x48>)
  400de2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400de4:	4005      	ands	r5, r0
  400de6:	d013      	beq.n	400e10 <pio_handler_process+0x40>
  400de8:	4c0c      	ldr	r4, [pc, #48]	; (400e1c <pio_handler_process+0x4c>)
  400dea:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400dee:	e003      	b.n	400df8 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400df0:	42b4      	cmp	r4, r6
  400df2:	d00d      	beq.n	400e10 <pio_handler_process+0x40>
  400df4:	3410      	adds	r4, #16
		while (status != 0) {
  400df6:	b15d      	cbz	r5, 400e10 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400df8:	6820      	ldr	r0, [r4, #0]
  400dfa:	4540      	cmp	r0, r8
  400dfc:	d1f8      	bne.n	400df0 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400dfe:	6861      	ldr	r1, [r4, #4]
  400e00:	4229      	tst	r1, r5
  400e02:	d0f5      	beq.n	400df0 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e04:	68e3      	ldr	r3, [r4, #12]
  400e06:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e08:	6863      	ldr	r3, [r4, #4]
  400e0a:	ea25 0503 	bic.w	r5, r5, r3
  400e0e:	e7ef      	b.n	400df0 <pio_handler_process+0x20>
  400e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e14:	00400dc7 	.word	0x00400dc7
  400e18:	00400dcb 	.word	0x00400dcb
  400e1c:	20400bf8 	.word	0x20400bf8

00400e20 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400e22:	4c18      	ldr	r4, [pc, #96]	; (400e84 <pio_handler_set+0x64>)
  400e24:	6826      	ldr	r6, [r4, #0]
  400e26:	2e06      	cmp	r6, #6
  400e28:	d82a      	bhi.n	400e80 <pio_handler_set+0x60>
  400e2a:	f04f 0c00 	mov.w	ip, #0
  400e2e:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e30:	4f15      	ldr	r7, [pc, #84]	; (400e88 <pio_handler_set+0x68>)
  400e32:	e004      	b.n	400e3e <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400e34:	3401      	adds	r4, #1
  400e36:	b2e4      	uxtb	r4, r4
  400e38:	46a4      	mov	ip, r4
  400e3a:	42a6      	cmp	r6, r4
  400e3c:	d309      	bcc.n	400e52 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400e3e:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e40:	0125      	lsls	r5, r4, #4
  400e42:	597d      	ldr	r5, [r7, r5]
  400e44:	428d      	cmp	r5, r1
  400e46:	d1f5      	bne.n	400e34 <pio_handler_set+0x14>
  400e48:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400e4c:	686d      	ldr	r5, [r5, #4]
  400e4e:	4295      	cmp	r5, r2
  400e50:	d1f0      	bne.n	400e34 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400e52:	4d0d      	ldr	r5, [pc, #52]	; (400e88 <pio_handler_set+0x68>)
  400e54:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400e58:	eb05 040e 	add.w	r4, r5, lr
  400e5c:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400e60:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400e62:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400e64:	9906      	ldr	r1, [sp, #24]
  400e66:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400e68:	3601      	adds	r6, #1
  400e6a:	4566      	cmp	r6, ip
  400e6c:	d005      	beq.n	400e7a <pio_handler_set+0x5a>
  400e6e:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400e70:	461a      	mov	r2, r3
  400e72:	4b06      	ldr	r3, [pc, #24]	; (400e8c <pio_handler_set+0x6c>)
  400e74:	4798      	blx	r3

	return 0;
  400e76:	2000      	movs	r0, #0
  400e78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400e7a:	4902      	ldr	r1, [pc, #8]	; (400e84 <pio_handler_set+0x64>)
  400e7c:	600e      	str	r6, [r1, #0]
  400e7e:	e7f6      	b.n	400e6e <pio_handler_set+0x4e>
		return 1;
  400e80:	2001      	movs	r0, #1
}
  400e82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400e84:	20400c68 	.word	0x20400c68
  400e88:	20400bf8 	.word	0x20400bf8
  400e8c:	00400d91 	.word	0x00400d91

00400e90 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400e90:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400e92:	210a      	movs	r1, #10
  400e94:	4801      	ldr	r0, [pc, #4]	; (400e9c <PIOA_Handler+0xc>)
  400e96:	4b02      	ldr	r3, [pc, #8]	; (400ea0 <PIOA_Handler+0x10>)
  400e98:	4798      	blx	r3
  400e9a:	bd08      	pop	{r3, pc}
  400e9c:	400e0e00 	.word	0x400e0e00
  400ea0:	00400dd1 	.word	0x00400dd1

00400ea4 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400ea4:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400ea6:	210b      	movs	r1, #11
  400ea8:	4801      	ldr	r0, [pc, #4]	; (400eb0 <PIOB_Handler+0xc>)
  400eaa:	4b02      	ldr	r3, [pc, #8]	; (400eb4 <PIOB_Handler+0x10>)
  400eac:	4798      	blx	r3
  400eae:	bd08      	pop	{r3, pc}
  400eb0:	400e1000 	.word	0x400e1000
  400eb4:	00400dd1 	.word	0x00400dd1

00400eb8 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400eb8:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400eba:	210c      	movs	r1, #12
  400ebc:	4801      	ldr	r0, [pc, #4]	; (400ec4 <PIOC_Handler+0xc>)
  400ebe:	4b02      	ldr	r3, [pc, #8]	; (400ec8 <PIOC_Handler+0x10>)
  400ec0:	4798      	blx	r3
  400ec2:	bd08      	pop	{r3, pc}
  400ec4:	400e1200 	.word	0x400e1200
  400ec8:	00400dd1 	.word	0x00400dd1

00400ecc <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400ecc:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400ece:	2110      	movs	r1, #16
  400ed0:	4801      	ldr	r0, [pc, #4]	; (400ed8 <PIOD_Handler+0xc>)
  400ed2:	4b02      	ldr	r3, [pc, #8]	; (400edc <PIOD_Handler+0x10>)
  400ed4:	4798      	blx	r3
  400ed6:	bd08      	pop	{r3, pc}
  400ed8:	400e1400 	.word	0x400e1400
  400edc:	00400dd1 	.word	0x00400dd1

00400ee0 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400ee0:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400ee2:	2111      	movs	r1, #17
  400ee4:	4801      	ldr	r0, [pc, #4]	; (400eec <PIOE_Handler+0xc>)
  400ee6:	4b02      	ldr	r3, [pc, #8]	; (400ef0 <PIOE_Handler+0x10>)
  400ee8:	4798      	blx	r3
  400eea:	bd08      	pop	{r3, pc}
  400eec:	400e1600 	.word	0x400e1600
  400ef0:	00400dd1 	.word	0x00400dd1

00400ef4 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400ef4:	2803      	cmp	r0, #3
  400ef6:	d011      	beq.n	400f1c <pmc_mck_set_division+0x28>
  400ef8:	2804      	cmp	r0, #4
  400efa:	d012      	beq.n	400f22 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400efc:	2802      	cmp	r0, #2
  400efe:	bf0c      	ite	eq
  400f00:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400f04:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400f06:	4a08      	ldr	r2, [pc, #32]	; (400f28 <pmc_mck_set_division+0x34>)
  400f08:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f0a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400f0e:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400f10:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f12:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f14:	f013 0f08 	tst.w	r3, #8
  400f18:	d0fb      	beq.n	400f12 <pmc_mck_set_division+0x1e>
}
  400f1a:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400f1c:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400f20:	e7f1      	b.n	400f06 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400f22:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400f26:	e7ee      	b.n	400f06 <pmc_mck_set_division+0x12>
  400f28:	400e0600 	.word	0x400e0600

00400f2c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400f2c:	4a17      	ldr	r2, [pc, #92]	; (400f8c <pmc_switch_mck_to_pllack+0x60>)
  400f2e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f30:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400f34:	4318      	orrs	r0, r3
  400f36:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f38:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f3a:	f013 0f08 	tst.w	r3, #8
  400f3e:	d10a      	bne.n	400f56 <pmc_switch_mck_to_pllack+0x2a>
  400f40:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f44:	4911      	ldr	r1, [pc, #68]	; (400f8c <pmc_switch_mck_to_pllack+0x60>)
  400f46:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f48:	f012 0f08 	tst.w	r2, #8
  400f4c:	d103      	bne.n	400f56 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f4e:	3b01      	subs	r3, #1
  400f50:	d1f9      	bne.n	400f46 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400f52:	2001      	movs	r0, #1
  400f54:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400f56:	4a0d      	ldr	r2, [pc, #52]	; (400f8c <pmc_switch_mck_to_pllack+0x60>)
  400f58:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f5a:	f023 0303 	bic.w	r3, r3, #3
  400f5e:	f043 0302 	orr.w	r3, r3, #2
  400f62:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f64:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f66:	f013 0f08 	tst.w	r3, #8
  400f6a:	d10a      	bne.n	400f82 <pmc_switch_mck_to_pllack+0x56>
  400f6c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f70:	4906      	ldr	r1, [pc, #24]	; (400f8c <pmc_switch_mck_to_pllack+0x60>)
  400f72:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f74:	f012 0f08 	tst.w	r2, #8
  400f78:	d105      	bne.n	400f86 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f7a:	3b01      	subs	r3, #1
  400f7c:	d1f9      	bne.n	400f72 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400f7e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400f80:	4770      	bx	lr
	return 0;
  400f82:	2000      	movs	r0, #0
  400f84:	4770      	bx	lr
  400f86:	2000      	movs	r0, #0
  400f88:	4770      	bx	lr
  400f8a:	bf00      	nop
  400f8c:	400e0600 	.word	0x400e0600

00400f90 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400f90:	b9a0      	cbnz	r0, 400fbc <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400f92:	480e      	ldr	r0, [pc, #56]	; (400fcc <pmc_switch_mainck_to_xtal+0x3c>)
  400f94:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400f96:	0209      	lsls	r1, r1, #8
  400f98:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400f9a:	4a0d      	ldr	r2, [pc, #52]	; (400fd0 <pmc_switch_mainck_to_xtal+0x40>)
  400f9c:	401a      	ands	r2, r3
  400f9e:	4b0d      	ldr	r3, [pc, #52]	; (400fd4 <pmc_switch_mainck_to_xtal+0x44>)
  400fa0:	4313      	orrs	r3, r2
  400fa2:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400fa4:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400fa6:	4602      	mov	r2, r0
  400fa8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400faa:	f013 0f01 	tst.w	r3, #1
  400fae:	d0fb      	beq.n	400fa8 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400fb0:	4a06      	ldr	r2, [pc, #24]	; (400fcc <pmc_switch_mainck_to_xtal+0x3c>)
  400fb2:	6a11      	ldr	r1, [r2, #32]
  400fb4:	4b08      	ldr	r3, [pc, #32]	; (400fd8 <pmc_switch_mainck_to_xtal+0x48>)
  400fb6:	430b      	orrs	r3, r1
  400fb8:	6213      	str	r3, [r2, #32]
  400fba:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400fbc:	4903      	ldr	r1, [pc, #12]	; (400fcc <pmc_switch_mainck_to_xtal+0x3c>)
  400fbe:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400fc0:	4a06      	ldr	r2, [pc, #24]	; (400fdc <pmc_switch_mainck_to_xtal+0x4c>)
  400fc2:	401a      	ands	r2, r3
  400fc4:	4b06      	ldr	r3, [pc, #24]	; (400fe0 <pmc_switch_mainck_to_xtal+0x50>)
  400fc6:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400fc8:	620b      	str	r3, [r1, #32]
  400fca:	4770      	bx	lr
  400fcc:	400e0600 	.word	0x400e0600
  400fd0:	ffc8fffc 	.word	0xffc8fffc
  400fd4:	00370001 	.word	0x00370001
  400fd8:	01370000 	.word	0x01370000
  400fdc:	fec8fffc 	.word	0xfec8fffc
  400fe0:	01370002 	.word	0x01370002

00400fe4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400fe4:	4b02      	ldr	r3, [pc, #8]	; (400ff0 <pmc_osc_is_ready_mainck+0xc>)
  400fe6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400fe8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400fec:	4770      	bx	lr
  400fee:	bf00      	nop
  400ff0:	400e0600 	.word	0x400e0600

00400ff4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400ff4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400ff8:	4b01      	ldr	r3, [pc, #4]	; (401000 <pmc_disable_pllack+0xc>)
  400ffa:	629a      	str	r2, [r3, #40]	; 0x28
  400ffc:	4770      	bx	lr
  400ffe:	bf00      	nop
  401000:	400e0600 	.word	0x400e0600

00401004 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401004:	4b02      	ldr	r3, [pc, #8]	; (401010 <pmc_is_locked_pllack+0xc>)
  401006:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401008:	f000 0002 	and.w	r0, r0, #2
  40100c:	4770      	bx	lr
  40100e:	bf00      	nop
  401010:	400e0600 	.word	0x400e0600

00401014 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401014:	283f      	cmp	r0, #63	; 0x3f
  401016:	d81e      	bhi.n	401056 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401018:	281f      	cmp	r0, #31
  40101a:	d80c      	bhi.n	401036 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40101c:	4b11      	ldr	r3, [pc, #68]	; (401064 <pmc_enable_periph_clk+0x50>)
  40101e:	699a      	ldr	r2, [r3, #24]
  401020:	2301      	movs	r3, #1
  401022:	4083      	lsls	r3, r0
  401024:	4393      	bics	r3, r2
  401026:	d018      	beq.n	40105a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401028:	2301      	movs	r3, #1
  40102a:	fa03 f000 	lsl.w	r0, r3, r0
  40102e:	4b0d      	ldr	r3, [pc, #52]	; (401064 <pmc_enable_periph_clk+0x50>)
  401030:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  401032:	2000      	movs	r0, #0
  401034:	4770      	bx	lr
		ul_id -= 32;
  401036:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401038:	4b0a      	ldr	r3, [pc, #40]	; (401064 <pmc_enable_periph_clk+0x50>)
  40103a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40103e:	2301      	movs	r3, #1
  401040:	4083      	lsls	r3, r0
  401042:	4393      	bics	r3, r2
  401044:	d00b      	beq.n	40105e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401046:	2301      	movs	r3, #1
  401048:	fa03 f000 	lsl.w	r0, r3, r0
  40104c:	4b05      	ldr	r3, [pc, #20]	; (401064 <pmc_enable_periph_clk+0x50>)
  40104e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  401052:	2000      	movs	r0, #0
  401054:	4770      	bx	lr
		return 1;
  401056:	2001      	movs	r0, #1
  401058:	4770      	bx	lr
	return 0;
  40105a:	2000      	movs	r0, #0
  40105c:	4770      	bx	lr
  40105e:	2000      	movs	r0, #0
}
  401060:	4770      	bx	lr
  401062:	bf00      	nop
  401064:	400e0600 	.word	0x400e0600

00401068 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  401068:	4770      	bx	lr
	...

0040106c <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  40106c:	4a10      	ldr	r2, [pc, #64]	; (4010b0 <pmc_enable_waitmode+0x44>)
  40106e:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401070:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401074:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  401078:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  40107a:	6a11      	ldr	r1, [r2, #32]
  40107c:	4b0d      	ldr	r3, [pc, #52]	; (4010b4 <pmc_enable_waitmode+0x48>)
  40107e:	430b      	orrs	r3, r1
  401080:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401082:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401084:	f013 0f08 	tst.w	r3, #8
  401088:	d0fb      	beq.n	401082 <pmc_enable_waitmode+0x16>
  40108a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  40108e:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  401090:	3b01      	subs	r3, #1
  401092:	d1fc      	bne.n	40108e <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  401094:	4a06      	ldr	r2, [pc, #24]	; (4010b0 <pmc_enable_waitmode+0x44>)
  401096:	6a13      	ldr	r3, [r2, #32]
  401098:	f013 0f08 	tst.w	r3, #8
  40109c:	d0fb      	beq.n	401096 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  40109e:	4a04      	ldr	r2, [pc, #16]	; (4010b0 <pmc_enable_waitmode+0x44>)
  4010a0:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  4010a2:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  4010a6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  4010aa:	6713      	str	r3, [r2, #112]	; 0x70
  4010ac:	4770      	bx	lr
  4010ae:	bf00      	nop
  4010b0:	400e0600 	.word	0x400e0600
  4010b4:	00370004 	.word	0x00370004

004010b8 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  4010b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  4010bc:	1e43      	subs	r3, r0, #1
  4010be:	2b04      	cmp	r3, #4
  4010c0:	f200 8107 	bhi.w	4012d2 <pmc_sleep+0x21a>
  4010c4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4010c8:	00050005 	.word	0x00050005
  4010cc:	00150015 	.word	0x00150015
  4010d0:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  4010d2:	4a81      	ldr	r2, [pc, #516]	; (4012d8 <pmc_sleep+0x220>)
  4010d4:	6913      	ldr	r3, [r2, #16]
  4010d6:	f023 0304 	bic.w	r3, r3, #4
  4010da:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  4010dc:	2201      	movs	r2, #1
  4010de:	4b7f      	ldr	r3, [pc, #508]	; (4012dc <pmc_sleep+0x224>)
  4010e0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4010e2:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  4010e6:	b662      	cpsie	i
  __ASM volatile ("dsb");
  4010e8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  4010ec:	bf30      	wfi
  4010ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4010f2:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  4010f4:	2803      	cmp	r0, #3
  4010f6:	bf0c      	ite	eq
  4010f8:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  4010fa:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  4010fe:	4b78      	ldr	r3, [pc, #480]	; (4012e0 <pmc_sleep+0x228>)
  401100:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  401102:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401104:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  401108:	2200      	movs	r2, #0
  40110a:	4b74      	ldr	r3, [pc, #464]	; (4012dc <pmc_sleep+0x224>)
  40110c:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  40110e:	2201      	movs	r2, #1
  401110:	4b74      	ldr	r3, [pc, #464]	; (4012e4 <pmc_sleep+0x22c>)
  401112:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  401114:	4b74      	ldr	r3, [pc, #464]	; (4012e8 <pmc_sleep+0x230>)
  401116:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  401118:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  40111a:	4a74      	ldr	r2, [pc, #464]	; (4012ec <pmc_sleep+0x234>)
  40111c:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  401120:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  401122:	4a73      	ldr	r2, [pc, #460]	; (4012f0 <pmc_sleep+0x238>)
  401124:	433a      	orrs	r2, r7
  401126:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  401128:	f005 0903 	and.w	r9, r5, #3
  40112c:	f1b9 0f01 	cmp.w	r9, #1
  401130:	f240 8089 	bls.w	401246 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  401134:	f025 0103 	bic.w	r1, r5, #3
  401138:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  40113c:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40113e:	461a      	mov	r2, r3
  401140:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401142:	f013 0f08 	tst.w	r3, #8
  401146:	d0fb      	beq.n	401140 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401148:	f011 0f70 	tst.w	r1, #112	; 0x70
  40114c:	d008      	beq.n	401160 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  40114e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  401152:	4b65      	ldr	r3, [pc, #404]	; (4012e8 <pmc_sleep+0x230>)
  401154:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401156:	461a      	mov	r2, r3
  401158:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40115a:	f013 0f08 	tst.w	r3, #8
  40115e:	d0fb      	beq.n	401158 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401160:	4b64      	ldr	r3, [pc, #400]	; (4012f4 <pmc_sleep+0x23c>)
  401162:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401164:	4a60      	ldr	r2, [pc, #384]	; (4012e8 <pmc_sleep+0x230>)
  401166:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401168:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  40116c:	d0fb      	beq.n	401166 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  40116e:	4a5e      	ldr	r2, [pc, #376]	; (4012e8 <pmc_sleep+0x230>)
  401170:	6a11      	ldr	r1, [r2, #32]
  401172:	4b61      	ldr	r3, [pc, #388]	; (4012f8 <pmc_sleep+0x240>)
  401174:	400b      	ands	r3, r1
  401176:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40117a:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  40117c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40117e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401182:	d0fb      	beq.n	40117c <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401184:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401188:	4a58      	ldr	r2, [pc, #352]	; (4012ec <pmc_sleep+0x234>)
  40118a:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  40118c:	2c04      	cmp	r4, #4
  40118e:	d05c      	beq.n	40124a <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401190:	4c52      	ldr	r4, [pc, #328]	; (4012dc <pmc_sleep+0x224>)
  401192:	2301      	movs	r3, #1
  401194:	7023      	strb	r3, [r4, #0]
  401196:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40119a:	b662      	cpsie	i

		pmc_enable_waitmode();
  40119c:	4b57      	ldr	r3, [pc, #348]	; (4012fc <pmc_sleep+0x244>)
  40119e:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  4011a0:	b672      	cpsid	i
  4011a2:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  4011a6:	2300      	movs	r3, #0
  4011a8:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  4011aa:	f017 0f02 	tst.w	r7, #2
  4011ae:	d055      	beq.n	40125c <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011b0:	4a4d      	ldr	r2, [pc, #308]	; (4012e8 <pmc_sleep+0x230>)
  4011b2:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4011b4:	4952      	ldr	r1, [pc, #328]	; (401300 <pmc_sleep+0x248>)
  4011b6:	4019      	ands	r1, r3
  4011b8:	4b52      	ldr	r3, [pc, #328]	; (401304 <pmc_sleep+0x24c>)
  4011ba:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4011bc:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4011be:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  4011c0:	4b51      	ldr	r3, [pc, #324]	; (401308 <pmc_sleep+0x250>)
  4011c2:	400b      	ands	r3, r1
  4011c4:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4011c8:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  4011ca:	4b50      	ldr	r3, [pc, #320]	; (40130c <pmc_sleep+0x254>)
  4011cc:	4033      	ands	r3, r6
  4011ce:	2b00      	cmp	r3, #0
  4011d0:	d06e      	beq.n	4012b0 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  4011d2:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  4011d6:	4b44      	ldr	r3, [pc, #272]	; (4012e8 <pmc_sleep+0x230>)
  4011d8:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  4011da:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  4011dc:	f1b9 0f02 	cmp.w	r9, #2
  4011e0:	d104      	bne.n	4011ec <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4011e2:	4a41      	ldr	r2, [pc, #260]	; (4012e8 <pmc_sleep+0x230>)
  4011e4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011e6:	f013 0f02 	tst.w	r3, #2
  4011ea:	d0fb      	beq.n	4011e4 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4011ec:	4a3e      	ldr	r2, [pc, #248]	; (4012e8 <pmc_sleep+0x230>)
  4011ee:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4011f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  4011f4:	f005 0070 	and.w	r0, r5, #112	; 0x70
  4011f8:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4011fa:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4011fc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011fe:	f013 0f08 	tst.w	r3, #8
  401202:	d0fb      	beq.n	4011fc <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  401204:	4b39      	ldr	r3, [pc, #228]	; (4012ec <pmc_sleep+0x234>)
  401206:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  40120a:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  40120e:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401210:	461a      	mov	r2, r3
  401212:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401214:	f013 0f08 	tst.w	r3, #8
  401218:	d0fb      	beq.n	401212 <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  40121a:	4a33      	ldr	r2, [pc, #204]	; (4012e8 <pmc_sleep+0x230>)
  40121c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40121e:	420b      	tst	r3, r1
  401220:	d0fc      	beq.n	40121c <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  401222:	2200      	movs	r2, #0
  401224:	4b2f      	ldr	r3, [pc, #188]	; (4012e4 <pmc_sleep+0x22c>)
  401226:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401228:	4b39      	ldr	r3, [pc, #228]	; (401310 <pmc_sleep+0x258>)
  40122a:	681b      	ldr	r3, [r3, #0]
  40122c:	b11b      	cbz	r3, 401236 <pmc_sleep+0x17e>
			callback_clocks_restored();
  40122e:	4798      	blx	r3
			callback_clocks_restored = NULL;
  401230:	2200      	movs	r2, #0
  401232:	4b37      	ldr	r3, [pc, #220]	; (401310 <pmc_sleep+0x258>)
  401234:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  401236:	2201      	movs	r2, #1
  401238:	4b28      	ldr	r3, [pc, #160]	; (4012dc <pmc_sleep+0x224>)
  40123a:	701a      	strb	r2, [r3, #0]
  40123c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401240:	b662      	cpsie	i
  401242:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  401246:	4629      	mov	r1, r5
  401248:	e77e      	b.n	401148 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40124a:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  40124e:	6a11      	ldr	r1, [r2, #32]
  401250:	4b30      	ldr	r3, [pc, #192]	; (401314 <pmc_sleep+0x25c>)
  401252:	400b      	ands	r3, r1
  401254:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401258:	6213      	str	r3, [r2, #32]
  40125a:	e799      	b.n	401190 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  40125c:	f017 0f01 	tst.w	r7, #1
  401260:	d0b3      	beq.n	4011ca <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  401262:	4b21      	ldr	r3, [pc, #132]	; (4012e8 <pmc_sleep+0x230>)
  401264:	6a1b      	ldr	r3, [r3, #32]
  401266:	f013 0f01 	tst.w	r3, #1
  40126a:	d10b      	bne.n	401284 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40126c:	491e      	ldr	r1, [pc, #120]	; (4012e8 <pmc_sleep+0x230>)
  40126e:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  401270:	4a29      	ldr	r2, [pc, #164]	; (401318 <pmc_sleep+0x260>)
  401272:	401a      	ands	r2, r3
  401274:	4b29      	ldr	r3, [pc, #164]	; (40131c <pmc_sleep+0x264>)
  401276:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401278:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40127a:	460a      	mov	r2, r1
  40127c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40127e:	f013 0f01 	tst.w	r3, #1
  401282:	d0fb      	beq.n	40127c <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  401284:	4b18      	ldr	r3, [pc, #96]	; (4012e8 <pmc_sleep+0x230>)
  401286:	6a1b      	ldr	r3, [r3, #32]
  401288:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40128c:	d108      	bne.n	4012a0 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40128e:	4a16      	ldr	r2, [pc, #88]	; (4012e8 <pmc_sleep+0x230>)
  401290:	6a11      	ldr	r1, [r2, #32]
  401292:	4b23      	ldr	r3, [pc, #140]	; (401320 <pmc_sleep+0x268>)
  401294:	430b      	orrs	r3, r1
  401296:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401298:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40129a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40129e:	d0fb      	beq.n	401298 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4012a0:	4a11      	ldr	r2, [pc, #68]	; (4012e8 <pmc_sleep+0x230>)
  4012a2:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  4012a4:	4b18      	ldr	r3, [pc, #96]	; (401308 <pmc_sleep+0x250>)
  4012a6:	400b      	ands	r3, r1
  4012a8:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4012ac:	6213      	str	r3, [r2, #32]
  4012ae:	e78c      	b.n	4011ca <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  4012b0:	2100      	movs	r1, #0
  4012b2:	e793      	b.n	4011dc <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  4012b4:	4a08      	ldr	r2, [pc, #32]	; (4012d8 <pmc_sleep+0x220>)
  4012b6:	6913      	ldr	r3, [r2, #16]
  4012b8:	f043 0304 	orr.w	r3, r3, #4
  4012bc:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  4012be:	4a19      	ldr	r2, [pc, #100]	; (401324 <pmc_sleep+0x26c>)
  4012c0:	4b19      	ldr	r3, [pc, #100]	; (401328 <pmc_sleep+0x270>)
  4012c2:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  4012c4:	2201      	movs	r2, #1
  4012c6:	4b05      	ldr	r3, [pc, #20]	; (4012dc <pmc_sleep+0x224>)
  4012c8:	701a      	strb	r2, [r3, #0]
  4012ca:	f3bf 8f5f 	dmb	sy
  4012ce:	b662      	cpsie	i
  __ASM volatile ("wfi");
  4012d0:	bf30      	wfi
  4012d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4012d6:	bf00      	nop
  4012d8:	e000ed00 	.word	0xe000ed00
  4012dc:	20400018 	.word	0x20400018
  4012e0:	00401069 	.word	0x00401069
  4012e4:	20400c6c 	.word	0x20400c6c
  4012e8:	400e0600 	.word	0x400e0600
  4012ec:	400e0c00 	.word	0x400e0c00
  4012f0:	00370008 	.word	0x00370008
  4012f4:	00400ff5 	.word	0x00400ff5
  4012f8:	fec8ffff 	.word	0xfec8ffff
  4012fc:	0040106d 	.word	0x0040106d
  401300:	fec8fffc 	.word	0xfec8fffc
  401304:	01370002 	.word	0x01370002
  401308:	ffc8ff87 	.word	0xffc8ff87
  40130c:	07ff0000 	.word	0x07ff0000
  401310:	20400c70 	.word	0x20400c70
  401314:	ffc8fffe 	.word	0xffc8fffe
  401318:	ffc8fffc 	.word	0xffc8fffc
  40131c:	00370001 	.word	0x00370001
  401320:	01370000 	.word	0x01370000
  401324:	a5000004 	.word	0xa5000004
  401328:	400e1810 	.word	0x400e1810

0040132c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40132c:	e7fe      	b.n	40132c <Dummy_Handler>
	...

00401330 <Reset_Handler>:
{
  401330:	b500      	push	{lr}
  401332:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401334:	4b25      	ldr	r3, [pc, #148]	; (4013cc <Reset_Handler+0x9c>)
  401336:	4a26      	ldr	r2, [pc, #152]	; (4013d0 <Reset_Handler+0xa0>)
  401338:	429a      	cmp	r2, r3
  40133a:	d010      	beq.n	40135e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  40133c:	4b25      	ldr	r3, [pc, #148]	; (4013d4 <Reset_Handler+0xa4>)
  40133e:	4a23      	ldr	r2, [pc, #140]	; (4013cc <Reset_Handler+0x9c>)
  401340:	429a      	cmp	r2, r3
  401342:	d20c      	bcs.n	40135e <Reset_Handler+0x2e>
  401344:	3b01      	subs	r3, #1
  401346:	1a9b      	subs	r3, r3, r2
  401348:	f023 0303 	bic.w	r3, r3, #3
  40134c:	3304      	adds	r3, #4
  40134e:	4413      	add	r3, r2
  401350:	491f      	ldr	r1, [pc, #124]	; (4013d0 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  401352:	f851 0b04 	ldr.w	r0, [r1], #4
  401356:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  40135a:	429a      	cmp	r2, r3
  40135c:	d1f9      	bne.n	401352 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  40135e:	4b1e      	ldr	r3, [pc, #120]	; (4013d8 <Reset_Handler+0xa8>)
  401360:	4a1e      	ldr	r2, [pc, #120]	; (4013dc <Reset_Handler+0xac>)
  401362:	429a      	cmp	r2, r3
  401364:	d20a      	bcs.n	40137c <Reset_Handler+0x4c>
  401366:	3b01      	subs	r3, #1
  401368:	1a9b      	subs	r3, r3, r2
  40136a:	f023 0303 	bic.w	r3, r3, #3
  40136e:	3304      	adds	r3, #4
  401370:	4413      	add	r3, r2
                *pDest++ = 0;
  401372:	2100      	movs	r1, #0
  401374:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401378:	4293      	cmp	r3, r2
  40137a:	d1fb      	bne.n	401374 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40137c:	4a18      	ldr	r2, [pc, #96]	; (4013e0 <Reset_Handler+0xb0>)
  40137e:	4b19      	ldr	r3, [pc, #100]	; (4013e4 <Reset_Handler+0xb4>)
  401380:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401384:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401386:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40138a:	fab3 f383 	clz	r3, r3
  40138e:	095b      	lsrs	r3, r3, #5
  401390:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401392:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401394:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401398:	2200      	movs	r2, #0
  40139a:	4b13      	ldr	r3, [pc, #76]	; (4013e8 <Reset_Handler+0xb8>)
  40139c:	701a      	strb	r2, [r3, #0]
	return flags;
  40139e:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4013a0:	4a12      	ldr	r2, [pc, #72]	; (4013ec <Reset_Handler+0xbc>)
  4013a2:	6813      	ldr	r3, [r2, #0]
  4013a4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  4013a8:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  4013aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4013ae:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  4013b2:	b129      	cbz	r1, 4013c0 <Reset_Handler+0x90>
		cpu_irq_enable();
  4013b4:	2201      	movs	r2, #1
  4013b6:	4b0c      	ldr	r3, [pc, #48]	; (4013e8 <Reset_Handler+0xb8>)
  4013b8:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4013ba:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4013be:	b662      	cpsie	i
        __libc_init_array();
  4013c0:	4b0b      	ldr	r3, [pc, #44]	; (4013f0 <Reset_Handler+0xc0>)
  4013c2:	4798      	blx	r3
        main();
  4013c4:	4b0b      	ldr	r3, [pc, #44]	; (4013f4 <Reset_Handler+0xc4>)
  4013c6:	4798      	blx	r3
  4013c8:	e7fe      	b.n	4013c8 <Reset_Handler+0x98>
  4013ca:	bf00      	nop
  4013cc:	20400000 	.word	0x20400000
  4013d0:	00406fbc 	.word	0x00406fbc
  4013d4:	204009d8 	.word	0x204009d8
  4013d8:	20400cf0 	.word	0x20400cf0
  4013dc:	204009d8 	.word	0x204009d8
  4013e0:	e000ed00 	.word	0xe000ed00
  4013e4:	00400000 	.word	0x00400000
  4013e8:	20400018 	.word	0x20400018
  4013ec:	e000ed88 	.word	0xe000ed88
  4013f0:	00402139 	.word	0x00402139
  4013f4:	00401855 	.word	0x00401855

004013f8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4013f8:	4b3b      	ldr	r3, [pc, #236]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  4013fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4013fc:	f003 0303 	and.w	r3, r3, #3
  401400:	2b01      	cmp	r3, #1
  401402:	d01d      	beq.n	401440 <SystemCoreClockUpdate+0x48>
  401404:	b183      	cbz	r3, 401428 <SystemCoreClockUpdate+0x30>
  401406:	2b02      	cmp	r3, #2
  401408:	d036      	beq.n	401478 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40140a:	4b37      	ldr	r3, [pc, #220]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  40140c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40140e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401412:	2b70      	cmp	r3, #112	; 0x70
  401414:	d05f      	beq.n	4014d6 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401416:	4b34      	ldr	r3, [pc, #208]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  401418:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40141a:	4934      	ldr	r1, [pc, #208]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  40141c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401420:	680b      	ldr	r3, [r1, #0]
  401422:	40d3      	lsrs	r3, r2
  401424:	600b      	str	r3, [r1, #0]
  401426:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401428:	4b31      	ldr	r3, [pc, #196]	; (4014f0 <SystemCoreClockUpdate+0xf8>)
  40142a:	695b      	ldr	r3, [r3, #20]
  40142c:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401430:	bf14      	ite	ne
  401432:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401436:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40143a:	4b2c      	ldr	r3, [pc, #176]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  40143c:	601a      	str	r2, [r3, #0]
  40143e:	e7e4      	b.n	40140a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401440:	4b29      	ldr	r3, [pc, #164]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  401442:	6a1b      	ldr	r3, [r3, #32]
  401444:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401448:	d003      	beq.n	401452 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  40144a:	4a2a      	ldr	r2, [pc, #168]	; (4014f4 <SystemCoreClockUpdate+0xfc>)
  40144c:	4b27      	ldr	r3, [pc, #156]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  40144e:	601a      	str	r2, [r3, #0]
  401450:	e7db      	b.n	40140a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401452:	4a29      	ldr	r2, [pc, #164]	; (4014f8 <SystemCoreClockUpdate+0x100>)
  401454:	4b25      	ldr	r3, [pc, #148]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  401456:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401458:	4b23      	ldr	r3, [pc, #140]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  40145a:	6a1b      	ldr	r3, [r3, #32]
  40145c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401460:	2b10      	cmp	r3, #16
  401462:	d005      	beq.n	401470 <SystemCoreClockUpdate+0x78>
  401464:	2b20      	cmp	r3, #32
  401466:	d1d0      	bne.n	40140a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401468:	4a22      	ldr	r2, [pc, #136]	; (4014f4 <SystemCoreClockUpdate+0xfc>)
  40146a:	4b20      	ldr	r3, [pc, #128]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  40146c:	601a      	str	r2, [r3, #0]
          break;
  40146e:	e7cc      	b.n	40140a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401470:	4a22      	ldr	r2, [pc, #136]	; (4014fc <SystemCoreClockUpdate+0x104>)
  401472:	4b1e      	ldr	r3, [pc, #120]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  401474:	601a      	str	r2, [r3, #0]
          break;
  401476:	e7c8      	b.n	40140a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401478:	4b1b      	ldr	r3, [pc, #108]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  40147a:	6a1b      	ldr	r3, [r3, #32]
  40147c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401480:	d016      	beq.n	4014b0 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  401482:	4a1c      	ldr	r2, [pc, #112]	; (4014f4 <SystemCoreClockUpdate+0xfc>)
  401484:	4b19      	ldr	r3, [pc, #100]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  401486:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401488:	4b17      	ldr	r3, [pc, #92]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  40148a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40148c:	f003 0303 	and.w	r3, r3, #3
  401490:	2b02      	cmp	r3, #2
  401492:	d1ba      	bne.n	40140a <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401494:	4a14      	ldr	r2, [pc, #80]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  401496:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401498:	6a92      	ldr	r2, [r2, #40]	; 0x28
  40149a:	4814      	ldr	r0, [pc, #80]	; (4014ec <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40149c:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4014a0:	6803      	ldr	r3, [r0, #0]
  4014a2:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4014a6:	b2d2      	uxtb	r2, r2
  4014a8:	fbb3 f3f2 	udiv	r3, r3, r2
  4014ac:	6003      	str	r3, [r0, #0]
  4014ae:	e7ac      	b.n	40140a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4014b0:	4a11      	ldr	r2, [pc, #68]	; (4014f8 <SystemCoreClockUpdate+0x100>)
  4014b2:	4b0e      	ldr	r3, [pc, #56]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  4014b4:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4014b6:	4b0c      	ldr	r3, [pc, #48]	; (4014e8 <SystemCoreClockUpdate+0xf0>)
  4014b8:	6a1b      	ldr	r3, [r3, #32]
  4014ba:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014be:	2b10      	cmp	r3, #16
  4014c0:	d005      	beq.n	4014ce <SystemCoreClockUpdate+0xd6>
  4014c2:	2b20      	cmp	r3, #32
  4014c4:	d1e0      	bne.n	401488 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  4014c6:	4a0b      	ldr	r2, [pc, #44]	; (4014f4 <SystemCoreClockUpdate+0xfc>)
  4014c8:	4b08      	ldr	r3, [pc, #32]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  4014ca:	601a      	str	r2, [r3, #0]
          break;
  4014cc:	e7dc      	b.n	401488 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  4014ce:	4a0b      	ldr	r2, [pc, #44]	; (4014fc <SystemCoreClockUpdate+0x104>)
  4014d0:	4b06      	ldr	r3, [pc, #24]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  4014d2:	601a      	str	r2, [r3, #0]
          break;
  4014d4:	e7d8      	b.n	401488 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  4014d6:	4a05      	ldr	r2, [pc, #20]	; (4014ec <SystemCoreClockUpdate+0xf4>)
  4014d8:	6813      	ldr	r3, [r2, #0]
  4014da:	4909      	ldr	r1, [pc, #36]	; (401500 <SystemCoreClockUpdate+0x108>)
  4014dc:	fba1 1303 	umull	r1, r3, r1, r3
  4014e0:	085b      	lsrs	r3, r3, #1
  4014e2:	6013      	str	r3, [r2, #0]
  4014e4:	4770      	bx	lr
  4014e6:	bf00      	nop
  4014e8:	400e0600 	.word	0x400e0600
  4014ec:	2040001c 	.word	0x2040001c
  4014f0:	400e1810 	.word	0x400e1810
  4014f4:	00b71b00 	.word	0x00b71b00
  4014f8:	003d0900 	.word	0x003d0900
  4014fc:	007a1200 	.word	0x007a1200
  401500:	aaaaaaab 	.word	0xaaaaaaab

00401504 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401504:	4b16      	ldr	r3, [pc, #88]	; (401560 <system_init_flash+0x5c>)
  401506:	4298      	cmp	r0, r3
  401508:	d913      	bls.n	401532 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40150a:	4b16      	ldr	r3, [pc, #88]	; (401564 <system_init_flash+0x60>)
  40150c:	4298      	cmp	r0, r3
  40150e:	d915      	bls.n	40153c <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401510:	4b15      	ldr	r3, [pc, #84]	; (401568 <system_init_flash+0x64>)
  401512:	4298      	cmp	r0, r3
  401514:	d916      	bls.n	401544 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401516:	4b15      	ldr	r3, [pc, #84]	; (40156c <system_init_flash+0x68>)
  401518:	4298      	cmp	r0, r3
  40151a:	d917      	bls.n	40154c <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  40151c:	4b14      	ldr	r3, [pc, #80]	; (401570 <system_init_flash+0x6c>)
  40151e:	4298      	cmp	r0, r3
  401520:	d918      	bls.n	401554 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  401522:	4b14      	ldr	r3, [pc, #80]	; (401574 <system_init_flash+0x70>)
  401524:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401526:	bf94      	ite	ls
  401528:	4a13      	ldrls	r2, [pc, #76]	; (401578 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  40152a:	4a14      	ldrhi	r2, [pc, #80]	; (40157c <system_init_flash+0x78>)
  40152c:	4b14      	ldr	r3, [pc, #80]	; (401580 <system_init_flash+0x7c>)
  40152e:	601a      	str	r2, [r3, #0]
  401530:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401532:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401536:	4b12      	ldr	r3, [pc, #72]	; (401580 <system_init_flash+0x7c>)
  401538:	601a      	str	r2, [r3, #0]
  40153a:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  40153c:	4a11      	ldr	r2, [pc, #68]	; (401584 <system_init_flash+0x80>)
  40153e:	4b10      	ldr	r3, [pc, #64]	; (401580 <system_init_flash+0x7c>)
  401540:	601a      	str	r2, [r3, #0]
  401542:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401544:	4a10      	ldr	r2, [pc, #64]	; (401588 <system_init_flash+0x84>)
  401546:	4b0e      	ldr	r3, [pc, #56]	; (401580 <system_init_flash+0x7c>)
  401548:	601a      	str	r2, [r3, #0]
  40154a:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40154c:	4a0f      	ldr	r2, [pc, #60]	; (40158c <system_init_flash+0x88>)
  40154e:	4b0c      	ldr	r3, [pc, #48]	; (401580 <system_init_flash+0x7c>)
  401550:	601a      	str	r2, [r3, #0]
  401552:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401554:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401558:	4b09      	ldr	r3, [pc, #36]	; (401580 <system_init_flash+0x7c>)
  40155a:	601a      	str	r2, [r3, #0]
  40155c:	4770      	bx	lr
  40155e:	bf00      	nop
  401560:	015ef3bf 	.word	0x015ef3bf
  401564:	02bde77f 	.word	0x02bde77f
  401568:	041cdb3f 	.word	0x041cdb3f
  40156c:	057bceff 	.word	0x057bceff
  401570:	06dac2bf 	.word	0x06dac2bf
  401574:	0839b67f 	.word	0x0839b67f
  401578:	04000500 	.word	0x04000500
  40157c:	04000600 	.word	0x04000600
  401580:	400e0c00 	.word	0x400e0c00
  401584:	04000100 	.word	0x04000100
  401588:	04000200 	.word	0x04000200
  40158c:	04000300 	.word	0x04000300

00401590 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401590:	4b0a      	ldr	r3, [pc, #40]	; (4015bc <_sbrk+0x2c>)
  401592:	681b      	ldr	r3, [r3, #0]
  401594:	b153      	cbz	r3, 4015ac <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401596:	4b09      	ldr	r3, [pc, #36]	; (4015bc <_sbrk+0x2c>)
  401598:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40159a:	181a      	adds	r2, r3, r0
  40159c:	4908      	ldr	r1, [pc, #32]	; (4015c0 <_sbrk+0x30>)
  40159e:	4291      	cmp	r1, r2
  4015a0:	db08      	blt.n	4015b4 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4015a2:	4610      	mov	r0, r2
  4015a4:	4a05      	ldr	r2, [pc, #20]	; (4015bc <_sbrk+0x2c>)
  4015a6:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  4015a8:	4618      	mov	r0, r3
  4015aa:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4015ac:	4a05      	ldr	r2, [pc, #20]	; (4015c4 <_sbrk+0x34>)
  4015ae:	4b03      	ldr	r3, [pc, #12]	; (4015bc <_sbrk+0x2c>)
  4015b0:	601a      	str	r2, [r3, #0]
  4015b2:	e7f0      	b.n	401596 <_sbrk+0x6>
		return (caddr_t) -1;	
  4015b4:	f04f 30ff 	mov.w	r0, #4294967295
}
  4015b8:	4770      	bx	lr
  4015ba:	bf00      	nop
  4015bc:	20400c74 	.word	0x20400c74
  4015c0:	2045fffc 	.word	0x2045fffc
  4015c4:	20402ef0 	.word	0x20402ef0

004015c8 <Button1_Handler>:



static void Button1_Handler(uint32_t id, uint32_t mask)
{
	mag_pulses = mag_pulses+1;
  4015c8:	4a02      	ldr	r2, [pc, #8]	; (4015d4 <Button1_Handler+0xc>)
  4015ca:	6813      	ldr	r3, [r2, #0]
  4015cc:	3301      	adds	r3, #1
  4015ce:	6013      	str	r3, [r2, #0]
  4015d0:	4770      	bx	lr
  4015d2:	bf00      	nop
  4015d4:	20400c84 	.word	0x20400c84

004015d8 <Button2_Handler>:
}
static void Button2_Handler(uint32_t id, uint32_t mask)
{
	what-=1;
  4015d8:	4a03      	ldr	r2, [pc, #12]	; (4015e8 <Button2_Handler+0x10>)
  4015da:	7813      	ldrb	r3, [r2, #0]
  4015dc:	3b01      	subs	r3, #1
  4015de:	b2db      	uxtb	r3, r3
  4015e0:	7013      	strb	r3, [r2, #0]
	if (what < 0){
  4015e2:	7813      	ldrb	r3, [r2, #0]
  4015e4:	4770      	bx	lr
  4015e6:	bf00      	nop
  4015e8:	20400c90 	.word	0x20400c90

004015ec <Button3_Handler>:
		what = 2;
	}
}
static void Button3_Handler(uint32_t id, uint32_t mask)
{
	what-=1;
  4015ec:	4a06      	ldr	r2, [pc, #24]	; (401608 <Button3_Handler+0x1c>)
  4015ee:	7813      	ldrb	r3, [r2, #0]
  4015f0:	3b01      	subs	r3, #1
  4015f2:	b2db      	uxtb	r3, r3
  4015f4:	7013      	strb	r3, [r2, #0]
	if (what > 2){
  4015f6:	7813      	ldrb	r3, [r2, #0]
  4015f8:	b2db      	uxtb	r3, r3
  4015fa:	2b02      	cmp	r3, #2
  4015fc:	d902      	bls.n	401604 <Button3_Handler+0x18>
		what = 0;
  4015fe:	2200      	movs	r2, #0
  401600:	4b01      	ldr	r3, [pc, #4]	; (401608 <Button3_Handler+0x1c>)
  401602:	701a      	strb	r2, [r3, #0]
  401604:	4770      	bx	lr
  401606:	bf00      	nop
  401608:	20400c90 	.word	0x20400c90
  40160c:	00000000 	.word	0x00000000

00401610 <RTT_Handler>:
	}
}

void RTT_Handler(void)
{
  401610:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint32_t ul_status;

	/* Get RTT status */
	ul_status = rtt_get_status(RTT);
  401614:	4820      	ldr	r0, [pc, #128]	; (401698 <RTT_Handler+0x88>)
  401616:	4b21      	ldr	r3, [pc, #132]	; (40169c <RTT_Handler+0x8c>)
  401618:	4798      	blx	r3
  40161a:	4604      	mov	r4, r0

	/* IRQ due to Time has changed */
	if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC) {
  40161c:	f010 0f02 	tst.w	r0, #2
  401620:	d02e      	beq.n	401680 <RTT_Handler+0x70>
	vel = 2*3.1415*raio*mag_pulses/(4);
  401622:	4f1f      	ldr	r7, [pc, #124]	; (4016a0 <RTT_Handler+0x90>)
  401624:	e9d7 0100 	ldrd	r0, r1, [r7]
  401628:	4e1e      	ldr	r6, [pc, #120]	; (4016a4 <RTT_Handler+0x94>)
  40162a:	f8d6 a000 	ldr.w	sl, [r6]
  40162e:	4d1e      	ldr	r5, [pc, #120]	; (4016a8 <RTT_Handler+0x98>)
  401630:	a317      	add	r3, pc, #92	; (adr r3, 401690 <RTT_Handler+0x80>)
  401632:	e9d3 2300 	ldrd	r2, r3, [r3]
  401636:	47a8      	blx	r5
  401638:	4680      	mov	r8, r0
  40163a:	4689      	mov	r9, r1
  40163c:	4650      	mov	r0, sl
  40163e:	4b1b      	ldr	r3, [pc, #108]	; (4016ac <RTT_Handler+0x9c>)
  401640:	4798      	blx	r3
  401642:	4602      	mov	r2, r0
  401644:	460b      	mov	r3, r1
  401646:	4640      	mov	r0, r8
  401648:	4649      	mov	r1, r9
  40164a:	47a8      	blx	r5
  40164c:	2200      	movs	r2, #0
  40164e:	4b18      	ldr	r3, [pc, #96]	; (4016b0 <RTT_Handler+0xa0>)
  401650:	47a8      	blx	r5
  401652:	4b18      	ldr	r3, [pc, #96]	; (4016b4 <RTT_Handler+0xa4>)
  401654:	e9c3 0100 	strd	r0, r1, [r3]
	distance += 2*3.1415*raio;
  401658:	e9d7 0100 	ldrd	r0, r1, [r7]
  40165c:	4f16      	ldr	r7, [pc, #88]	; (4016b8 <RTT_Handler+0xa8>)
  40165e:	e9d7 8900 	ldrd	r8, r9, [r7]
  401662:	a30b      	add	r3, pc, #44	; (adr r3, 401690 <RTT_Handler+0x80>)
  401664:	e9d3 2300 	ldrd	r2, r3, [r3]
  401668:	47a8      	blx	r5
  40166a:	4642      	mov	r2, r8
  40166c:	464b      	mov	r3, r9
  40166e:	4d13      	ldr	r5, [pc, #76]	; (4016bc <RTT_Handler+0xac>)
  401670:	47a8      	blx	r5
  401672:	e9c7 0100 	strd	r0, r1, [r7]
	mag_pulses = 0;
  401676:	2300      	movs	r3, #0
  401678:	6033      	str	r3, [r6, #0]
	flag_draw = true;
  40167a:	2201      	movs	r2, #1
  40167c:	4b10      	ldr	r3, [pc, #64]	; (4016c0 <RTT_Handler+0xb0>)
  40167e:	701a      	strb	r2, [r3, #0]
	}

	/* IRQ due to Alarm */
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  401680:	f014 0f01 	tst.w	r4, #1
  401684:	d002      	beq.n	40168c <RTT_Handler+0x7c>
		   
		
		f_rtt_alarme = true;                  // flag RTT alarme
  401686:	2201      	movs	r2, #1
  401688:	4b0e      	ldr	r3, [pc, #56]	; (4016c4 <RTT_Handler+0xb4>)
  40168a:	701a      	strb	r2, [r3, #0]
  40168c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401690:	c083126f 	.word	0xc083126f
  401694:	401921ca 	.word	0x401921ca
  401698:	400e1830 	.word	0x400e1830
  40169c:	00400379 	.word	0x00400379
  4016a0:	20400020 	.word	0x20400020
  4016a4:	20400c84 	.word	0x20400c84
  4016a8:	00401d15 	.word	0x00401d15
  4016ac:	00401c49 	.word	0x00401c49
  4016b0:	3fd00000 	.word	0x3fd00000
  4016b4:	20400c88 	.word	0x20400c88
  4016b8:	20400c78 	.word	0x20400c78
  4016bc:	004019b1 	.word	0x004019b1
  4016c0:	20400c81 	.word	0x20400c81
  4016c4:	20400c80 	.word	0x20400c80

004016c8 <RTC_Handler>:

static float get_time_rtt(){
	uint ul_previous_time = rtt_read_timer_value(RTT);
}
void RTC_Handler(void)
{
  4016c8:	b530      	push	{r4, r5, lr}
  4016ca:	b08d      	sub	sp, #52	; 0x34
	uint32_t ul_status = rtc_get_status(RTC);
  4016cc:	4823      	ldr	r0, [pc, #140]	; (40175c <RTC_Handler+0x94>)
  4016ce:	4b24      	ldr	r3, [pc, #144]	; (401760 <RTC_Handler+0x98>)
  4016d0:	4798      	blx	r3
  4016d2:	4604      	mov	r4, r0
	/*
	*  Verifica por qual motivo entrou
	*  na interrupcao, se foi por segundo
	*  ou Alarm
	*/
	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  4016d4:	f010 0f04 	tst.w	r0, #4
  4016d8:	d112      	bne.n	401700 <RTC_Handler+0x38>
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
	}
	
	/* Time or date alarm */
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  4016da:	f014 0f02 	tst.w	r4, #2
  4016de:	d114      	bne.n	40170a <RTC_Handler+0x42>
			rtc_set_date_alarm(RTC, 1, MONTH2, 1, DAY2);
			rtc_set_time_alarm(RTC, 1, HOUR2, 1, MINUTE2, 1, SECOND2+4);	
	}
	
	
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  4016e0:	4d1e      	ldr	r5, [pc, #120]	; (40175c <RTC_Handler+0x94>)
  4016e2:	2101      	movs	r1, #1
  4016e4:	4628      	mov	r0, r5
  4016e6:	4c1f      	ldr	r4, [pc, #124]	; (401764 <RTC_Handler+0x9c>)
  4016e8:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  4016ea:	2108      	movs	r1, #8
  4016ec:	4628      	mov	r0, r5
  4016ee:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  4016f0:	2110      	movs	r1, #16
  4016f2:	4628      	mov	r0, r5
  4016f4:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);
  4016f6:	2120      	movs	r1, #32
  4016f8:	4628      	mov	r0, r5
  4016fa:	47a0      	blx	r4
	
	
	
}
  4016fc:	b00d      	add	sp, #52	; 0x34
  4016fe:	bd30      	pop	{r4, r5, pc}
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  401700:	2104      	movs	r1, #4
  401702:	4816      	ldr	r0, [pc, #88]	; (40175c <RTC_Handler+0x94>)
  401704:	4b17      	ldr	r3, [pc, #92]	; (401764 <RTC_Handler+0x9c>)
  401706:	4798      	blx	r3
  401708:	e7e7      	b.n	4016da <RTC_Handler+0x12>
			rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  40170a:	4c14      	ldr	r4, [pc, #80]	; (40175c <RTC_Handler+0x94>)
  40170c:	2102      	movs	r1, #2
  40170e:	4620      	mov	r0, r4
  401710:	4b14      	ldr	r3, [pc, #80]	; (401764 <RTC_Handler+0x9c>)
  401712:	4798      	blx	r3
			rtc_get_date(RTC,&YEAR2,&MONTH2,&DAY2,&WEEK2);
  401714:	ab08      	add	r3, sp, #32
  401716:	9300      	str	r3, [sp, #0]
  401718:	ab07      	add	r3, sp, #28
  40171a:	aa06      	add	r2, sp, #24
  40171c:	a905      	add	r1, sp, #20
  40171e:	4620      	mov	r0, r4
  401720:	4d11      	ldr	r5, [pc, #68]	; (401768 <RTC_Handler+0xa0>)
  401722:	47a8      	blx	r5
			rtc_get_time(RTC,&HOUR2,&MINUTE2,&SECOND2);
  401724:	ab0b      	add	r3, sp, #44	; 0x2c
  401726:	aa0a      	add	r2, sp, #40	; 0x28
  401728:	a909      	add	r1, sp, #36	; 0x24
  40172a:	4620      	mov	r0, r4
  40172c:	4d0f      	ldr	r5, [pc, #60]	; (40176c <RTC_Handler+0xa4>)
  40172e:	47a8      	blx	r5
			rtc_set_date_alarm(RTC, 1, MONTH2, 1, DAY2);
  401730:	9b07      	ldr	r3, [sp, #28]
  401732:	9300      	str	r3, [sp, #0]
  401734:	2301      	movs	r3, #1
  401736:	9a06      	ldr	r2, [sp, #24]
  401738:	4619      	mov	r1, r3
  40173a:	4620      	mov	r0, r4
  40173c:	4d0c      	ldr	r5, [pc, #48]	; (401770 <RTC_Handler+0xa8>)
  40173e:	47a8      	blx	r5
			rtc_set_time_alarm(RTC, 1, HOUR2, 1, MINUTE2, 1, SECOND2+4);	
  401740:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401742:	3304      	adds	r3, #4
  401744:	9302      	str	r3, [sp, #8]
  401746:	2101      	movs	r1, #1
  401748:	9101      	str	r1, [sp, #4]
  40174a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40174c:	9300      	str	r3, [sp, #0]
  40174e:	460b      	mov	r3, r1
  401750:	9a09      	ldr	r2, [sp, #36]	; 0x24
  401752:	4620      	mov	r0, r4
  401754:	4c07      	ldr	r4, [pc, #28]	; (401774 <RTC_Handler+0xac>)
  401756:	47a0      	blx	r4
  401758:	e7c2      	b.n	4016e0 <RTC_Handler+0x18>
  40175a:	bf00      	nop
  40175c:	400e1860 	.word	0x400e1860
  401760:	00400371 	.word	0x00400371
  401764:	00400375 	.word	0x00400375
  401768:	0040029d 	.word	0x0040029d
  40176c:	004001ad 	.word	0x004001ad
  401770:	00400311 	.word	0x00400311
  401774:	00400209 	.word	0x00400209

00401778 <BUT_init>:
void BUT_init(void){
  401778:	b5f0      	push	{r4, r5, r6, r7, lr}
  40177a:	b083      	sub	sp, #12
	/* config. pino botao em modo de entrada */
	pmc_enable_periph_clk(BUT1_PIO_ID);
  40177c:	2010      	movs	r0, #16
  40177e:	4c2a      	ldr	r4, [pc, #168]	; (401828 <BUT_init+0xb0>)
  401780:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT2_PIO_ID);
  401782:	200c      	movs	r0, #12
  401784:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT3_PIO_ID);
  401786:	200a      	movs	r0, #10
  401788:	47a0      	blx	r4
	pio_set_input(BUT1_PIO, BUT1_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40178a:	4c28      	ldr	r4, [pc, #160]	; (40182c <BUT_init+0xb4>)
  40178c:	2209      	movs	r2, #9
  40178e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401792:	4620      	mov	r0, r4
  401794:	4f26      	ldr	r7, [pc, #152]	; (401830 <BUT_init+0xb8>)
  401796:	47b8      	blx	r7
	pio_set_input(BUT2_PIO, BUT2_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401798:	4e26      	ldr	r6, [pc, #152]	; (401834 <BUT_init+0xbc>)
  40179a:	2209      	movs	r2, #9
  40179c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4017a0:	4630      	mov	r0, r6
  4017a2:	47b8      	blx	r7
	pio_set_input(BUT3_PIO, BUT3_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4017a4:	4d24      	ldr	r5, [pc, #144]	; (401838 <BUT_init+0xc0>)
  4017a6:	2209      	movs	r2, #9
  4017a8:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4017ac:	4628      	mov	r0, r5
  4017ae:	47b8      	blx	r7

	/* config. interrupcao em borda de descida no botao do kit */
	/* indica funcao (but_Handler) a ser chamada quando houver uma interrup??o */
	pio_enable_interrupt(BUT1_PIO, BUT1_PIN_MASK);
  4017b0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4017b4:	4620      	mov	r0, r4
  4017b6:	4f21      	ldr	r7, [pc, #132]	; (40183c <BUT_init+0xc4>)
  4017b8:	47b8      	blx	r7
	pio_enable_interrupt(BUT2_PIO, BUT2_PIN_MASK);
  4017ba:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4017be:	4630      	mov	r0, r6
  4017c0:	47b8      	blx	r7
	pio_enable_interrupt(BUT3_PIO, BUT3_PIN_MASK);
  4017c2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4017c6:	4628      	mov	r0, r5
  4017c8:	47b8      	blx	r7
	pio_handler_set(BUT1_PIO, BUT1_PIO_ID, BUT1_PIN_MASK, PIO_IT_FALL_EDGE, Button1_Handler);
  4017ca:	4b1d      	ldr	r3, [pc, #116]	; (401840 <BUT_init+0xc8>)
  4017cc:	9300      	str	r3, [sp, #0]
  4017ce:	2350      	movs	r3, #80	; 0x50
  4017d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4017d4:	2110      	movs	r1, #16
  4017d6:	4620      	mov	r0, r4
  4017d8:	4c1a      	ldr	r4, [pc, #104]	; (401844 <BUT_init+0xcc>)
  4017da:	47a0      	blx	r4
	pio_handler_set(BUT2_PIO, BUT2_PIO_ID, BUT2_PIN_MASK, PIO_IT_FALL_EDGE, Button2_Handler);
  4017dc:	4b1a      	ldr	r3, [pc, #104]	; (401848 <BUT_init+0xd0>)
  4017de:	9300      	str	r3, [sp, #0]
  4017e0:	2350      	movs	r3, #80	; 0x50
  4017e2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4017e6:	210c      	movs	r1, #12
  4017e8:	4630      	mov	r0, r6
  4017ea:	47a0      	blx	r4
	pio_handler_set(BUT3_PIO, BUT3_PIO_ID, BUT3_PIN_MASK, PIO_IT_FALL_EDGE, Button3_Handler);
  4017ec:	4b17      	ldr	r3, [pc, #92]	; (40184c <BUT_init+0xd4>)
  4017ee:	9300      	str	r3, [sp, #0]
  4017f0:	2350      	movs	r3, #80	; 0x50
  4017f2:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4017f6:	210a      	movs	r1, #10
  4017f8:	4628      	mov	r0, r5
  4017fa:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4017fc:	4b14      	ldr	r3, [pc, #80]	; (401850 <BUT_init+0xd8>)
  4017fe:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401802:	601a      	str	r2, [r3, #0]
  401804:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  401808:	601a      	str	r2, [r3, #0]
  40180a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40180e:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401810:	2240      	movs	r2, #64	; 0x40
  401812:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
  401816:	2260      	movs	r2, #96	; 0x60
  401818:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  40181c:	2280      	movs	r2, #128	; 0x80
  40181e:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
	NVIC_EnableIRQ(BUT3_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 2);
	NVIC_SetPriority(BUT2_PIO_ID, 3);
	NVIC_SetPriority(BUT3_PIO_ID, 4);
	
};
  401822:	b003      	add	sp, #12
  401824:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401826:	bf00      	nop
  401828:	00401015 	.word	0x00401015
  40182c:	400e1400 	.word	0x400e1400
  401830:	00400ca3 	.word	0x00400ca3
  401834:	400e1200 	.word	0x400e1200
  401838:	400e0e00 	.word	0x400e0e00
  40183c:	00400dc3 	.word	0x00400dc3
  401840:	004015c9 	.word	0x004015c9
  401844:	00400e21 	.word	0x00400e21
  401848:	004015d9 	.word	0x004015d9
  40184c:	004015ed 	.word	0x004015ed
  401850:	e000e100 	.word	0xe000e100

00401854 <main>:

}


int main (void)
{
  401854:	b580      	push	{r7, lr}
  401856:	b08c      	sub	sp, #48	; 0x30
	/* Insert system clock initialization code here (sysclk_init()). */
	WDT->WDT_MR = WDT_MR_WDDIS;
  401858:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40185c:	4b3c      	ldr	r3, [pc, #240]	; (401950 <main+0xfc>)
  40185e:	605a      	str	r2, [r3, #4]
	board_init();
  401860:	4b3c      	ldr	r3, [pc, #240]	; (401954 <main+0x100>)
  401862:	4798      	blx	r3
	sysclk_init();
  401864:	4b3c      	ldr	r3, [pc, #240]	; (401958 <main+0x104>)
  401866:	4798      	blx	r3
	f_rtt_alarme = true;
  401868:	2401      	movs	r4, #1
  40186a:	4b3c      	ldr	r3, [pc, #240]	; (40195c <main+0x108>)
  40186c:	701c      	strb	r4, [r3, #0]

	delay_init();
	BUT_init();
  40186e:	4b3c      	ldr	r3, [pc, #240]	; (401960 <main+0x10c>)
  401870:	4798      	blx	r3
	gfx_mono_ssd1306_init();
  401872:	4b3c      	ldr	r3, [pc, #240]	; (401964 <main+0x110>)
  401874:	4798      	blx	r3
	char buffer[32];
	rtc_set_date_alarm(RTC, 1, MOUNTH, 1, DAY);
  401876:	4d3c      	ldr	r5, [pc, #240]	; (401968 <main+0x114>)
  401878:	2313      	movs	r3, #19
  40187a:	9300      	str	r3, [sp, #0]
  40187c:	4623      	mov	r3, r4
  40187e:	2203      	movs	r2, #3
  401880:	4621      	mov	r1, r4
  401882:	4628      	mov	r0, r5
  401884:	4e39      	ldr	r6, [pc, #228]	; (40196c <main+0x118>)
  401886:	47b0      	blx	r6
	rtc_set_time_alarm(RTC, 1, HOUR, 1, MINUTE, 1, SECOND+4);
  401888:	2304      	movs	r3, #4
  40188a:	9302      	str	r3, [sp, #8]
  40188c:	9401      	str	r4, [sp, #4]
  40188e:	232d      	movs	r3, #45	; 0x2d
  401890:	9300      	str	r3, [sp, #0]
  401892:	4623      	mov	r3, r4
  401894:	220f      	movs	r2, #15
  401896:	4621      	mov	r1, r4
  401898:	4628      	mov	r0, r5
  40189a:	4c35      	ldr	r4, [pc, #212]	; (401970 <main+0x11c>)
  40189c:	47a0      	blx	r4
	
	
  /* Insert application code here, after the board has been initialized. */
	while(1) {
		//gfx_mono_draw_string("0", 50,16, &sysfont);
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  40189e:	4e35      	ldr	r6, [pc, #212]	; (401974 <main+0x120>)
		
		if(flag_draw){
  4018a0:	4c35      	ldr	r4, [pc, #212]	; (401978 <main+0x124>)
			if(what==0){
  4018a2:	4f36      	ldr	r7, [pc, #216]	; (40197c <main+0x128>)
  4018a4:	e016      	b.n	4018d4 <main+0x80>
				sprintf(&buffer,"%d",vel);
  4018a6:	4b36      	ldr	r3, [pc, #216]	; (401980 <main+0x12c>)
  4018a8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4018ac:	4935      	ldr	r1, [pc, #212]	; (401984 <main+0x130>)
  4018ae:	a804      	add	r0, sp, #16
  4018b0:	4d35      	ldr	r5, [pc, #212]	; (401988 <main+0x134>)
  4018b2:	47a8      	blx	r5
				gfx_mono_draw_string("Vel: ",1,16,&sysfont);
  4018b4:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 4019a0 <main+0x14c>
  4018b8:	4643      	mov	r3, r8
  4018ba:	2210      	movs	r2, #16
  4018bc:	2101      	movs	r1, #1
  4018be:	4833      	ldr	r0, [pc, #204]	; (40198c <main+0x138>)
  4018c0:	4d33      	ldr	r5, [pc, #204]	; (401990 <main+0x13c>)
  4018c2:	47a8      	blx	r5
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  4018c4:	4643      	mov	r3, r8
  4018c6:	2210      	movs	r2, #16
  4018c8:	2128      	movs	r1, #40	; 0x28
  4018ca:	eb0d 0002 	add.w	r0, sp, r2
  4018ce:	47a8      	blx	r5
			else if(what==2){
				sprintf(&buffer,"%d",distance);
				gfx_mono_draw_string("Time: ",16,16,&sysfont);
				gfx_mono_draw_string(buffer,40,16,&sysfont);
			}
			flag_draw = false;
  4018d0:	2300      	movs	r3, #0
  4018d2:	7023      	strb	r3, [r4, #0]
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  4018d4:	2502      	movs	r5, #2
  4018d6:	4628      	mov	r0, r5
  4018d8:	47b0      	blx	r6
		if(flag_draw){
  4018da:	7823      	ldrb	r3, [r4, #0]
  4018dc:	2b00      	cmp	r3, #0
  4018de:	d0fa      	beq.n	4018d6 <main+0x82>
			if(what==0){
  4018e0:	783b      	ldrb	r3, [r7, #0]
  4018e2:	2b00      	cmp	r3, #0
  4018e4:	d0df      	beq.n	4018a6 <main+0x52>
			else if(what==1){
  4018e6:	783b      	ldrb	r3, [r7, #0]
  4018e8:	b2db      	uxtb	r3, r3
  4018ea:	2b01      	cmp	r3, #1
  4018ec:	d019      	beq.n	401922 <main+0xce>
			else if(what==2){
  4018ee:	783b      	ldrb	r3, [r7, #0]
  4018f0:	b2db      	uxtb	r3, r3
  4018f2:	2b02      	cmp	r3, #2
  4018f4:	d1ec      	bne.n	4018d0 <main+0x7c>
				sprintf(&buffer,"%d",distance);
  4018f6:	4b27      	ldr	r3, [pc, #156]	; (401994 <main+0x140>)
  4018f8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4018fc:	4921      	ldr	r1, [pc, #132]	; (401984 <main+0x130>)
  4018fe:	a804      	add	r0, sp, #16
  401900:	4d21      	ldr	r5, [pc, #132]	; (401988 <main+0x134>)
  401902:	47a8      	blx	r5
				gfx_mono_draw_string("Time: ",16,16,&sysfont);
  401904:	f8df 8098 	ldr.w	r8, [pc, #152]	; 4019a0 <main+0x14c>
  401908:	4643      	mov	r3, r8
  40190a:	2210      	movs	r2, #16
  40190c:	4611      	mov	r1, r2
  40190e:	4822      	ldr	r0, [pc, #136]	; (401998 <main+0x144>)
  401910:	4d1f      	ldr	r5, [pc, #124]	; (401990 <main+0x13c>)
  401912:	47a8      	blx	r5
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  401914:	4643      	mov	r3, r8
  401916:	2210      	movs	r2, #16
  401918:	2128      	movs	r1, #40	; 0x28
  40191a:	eb0d 0002 	add.w	r0, sp, r2
  40191e:	47a8      	blx	r5
  401920:	e7d6      	b.n	4018d0 <main+0x7c>
				sprintf(&buffer,"%d",distance);
  401922:	4b1c      	ldr	r3, [pc, #112]	; (401994 <main+0x140>)
  401924:	e9d3 2300 	ldrd	r2, r3, [r3]
  401928:	4916      	ldr	r1, [pc, #88]	; (401984 <main+0x130>)
  40192a:	a804      	add	r0, sp, #16
  40192c:	4d16      	ldr	r5, [pc, #88]	; (401988 <main+0x134>)
  40192e:	47a8      	blx	r5
				gfx_mono_draw_string("Dist: ",16,16,&sysfont);
  401930:	f8df 806c 	ldr.w	r8, [pc, #108]	; 4019a0 <main+0x14c>
  401934:	4643      	mov	r3, r8
  401936:	2210      	movs	r2, #16
  401938:	4611      	mov	r1, r2
  40193a:	4818      	ldr	r0, [pc, #96]	; (40199c <main+0x148>)
  40193c:	4d14      	ldr	r5, [pc, #80]	; (401990 <main+0x13c>)
  40193e:	47a8      	blx	r5
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  401940:	4643      	mov	r3, r8
  401942:	2210      	movs	r2, #16
  401944:	2128      	movs	r1, #40	; 0x28
  401946:	eb0d 0002 	add.w	r0, sp, r2
  40194a:	47a8      	blx	r5
  40194c:	e7c0      	b.n	4018d0 <main+0x7c>
  40194e:	bf00      	nop
  401950:	400e1850 	.word	0x400e1850
  401954:	00400ad1 	.word	0x00400ad1
  401958:	00400a61 	.word	0x00400a61
  40195c:	20400c80 	.word	0x20400c80
  401960:	00401779 	.word	0x00401779
  401964:	00400741 	.word	0x00400741
  401968:	400e1860 	.word	0x400e1860
  40196c:	00400311 	.word	0x00400311
  401970:	00400209 	.word	0x00400209
  401974:	004010b9 	.word	0x004010b9
  401978:	20400c81 	.word	0x20400c81
  40197c:	20400c90 	.word	0x20400c90
  401980:	20400c88 	.word	0x20400c88
  401984:	00406ce8 	.word	0x00406ce8
  401988:	00402225 	.word	0x00402225
  40198c:	00406cec 	.word	0x00406cec
  401990:	004006a9 	.word	0x004006a9
  401994:	20400c78 	.word	0x20400c78
  401998:	00406cfc 	.word	0x00406cfc
  40199c:	00406cf4 	.word	0x00406cf4
  4019a0:	2040000c 	.word	0x2040000c

004019a4 <__aeabi_drsub>:
  4019a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4019a8:	e002      	b.n	4019b0 <__adddf3>
  4019aa:	bf00      	nop

004019ac <__aeabi_dsub>:
  4019ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004019b0 <__adddf3>:
  4019b0:	b530      	push	{r4, r5, lr}
  4019b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4019b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4019ba:	ea94 0f05 	teq	r4, r5
  4019be:	bf08      	it	eq
  4019c0:	ea90 0f02 	teqeq	r0, r2
  4019c4:	bf1f      	itttt	ne
  4019c6:	ea54 0c00 	orrsne.w	ip, r4, r0
  4019ca:	ea55 0c02 	orrsne.w	ip, r5, r2
  4019ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4019d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4019d6:	f000 80e2 	beq.w	401b9e <__adddf3+0x1ee>
  4019da:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4019de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4019e2:	bfb8      	it	lt
  4019e4:	426d      	neglt	r5, r5
  4019e6:	dd0c      	ble.n	401a02 <__adddf3+0x52>
  4019e8:	442c      	add	r4, r5
  4019ea:	ea80 0202 	eor.w	r2, r0, r2
  4019ee:	ea81 0303 	eor.w	r3, r1, r3
  4019f2:	ea82 0000 	eor.w	r0, r2, r0
  4019f6:	ea83 0101 	eor.w	r1, r3, r1
  4019fa:	ea80 0202 	eor.w	r2, r0, r2
  4019fe:	ea81 0303 	eor.w	r3, r1, r3
  401a02:	2d36      	cmp	r5, #54	; 0x36
  401a04:	bf88      	it	hi
  401a06:	bd30      	pophi	{r4, r5, pc}
  401a08:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401a0c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401a10:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401a14:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401a18:	d002      	beq.n	401a20 <__adddf3+0x70>
  401a1a:	4240      	negs	r0, r0
  401a1c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401a20:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401a24:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401a28:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401a2c:	d002      	beq.n	401a34 <__adddf3+0x84>
  401a2e:	4252      	negs	r2, r2
  401a30:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401a34:	ea94 0f05 	teq	r4, r5
  401a38:	f000 80a7 	beq.w	401b8a <__adddf3+0x1da>
  401a3c:	f1a4 0401 	sub.w	r4, r4, #1
  401a40:	f1d5 0e20 	rsbs	lr, r5, #32
  401a44:	db0d      	blt.n	401a62 <__adddf3+0xb2>
  401a46:	fa02 fc0e 	lsl.w	ip, r2, lr
  401a4a:	fa22 f205 	lsr.w	r2, r2, r5
  401a4e:	1880      	adds	r0, r0, r2
  401a50:	f141 0100 	adc.w	r1, r1, #0
  401a54:	fa03 f20e 	lsl.w	r2, r3, lr
  401a58:	1880      	adds	r0, r0, r2
  401a5a:	fa43 f305 	asr.w	r3, r3, r5
  401a5e:	4159      	adcs	r1, r3
  401a60:	e00e      	b.n	401a80 <__adddf3+0xd0>
  401a62:	f1a5 0520 	sub.w	r5, r5, #32
  401a66:	f10e 0e20 	add.w	lr, lr, #32
  401a6a:	2a01      	cmp	r2, #1
  401a6c:	fa03 fc0e 	lsl.w	ip, r3, lr
  401a70:	bf28      	it	cs
  401a72:	f04c 0c02 	orrcs.w	ip, ip, #2
  401a76:	fa43 f305 	asr.w	r3, r3, r5
  401a7a:	18c0      	adds	r0, r0, r3
  401a7c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401a80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401a84:	d507      	bpl.n	401a96 <__adddf3+0xe6>
  401a86:	f04f 0e00 	mov.w	lr, #0
  401a8a:	f1dc 0c00 	rsbs	ip, ip, #0
  401a8e:	eb7e 0000 	sbcs.w	r0, lr, r0
  401a92:	eb6e 0101 	sbc.w	r1, lr, r1
  401a96:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401a9a:	d31b      	bcc.n	401ad4 <__adddf3+0x124>
  401a9c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401aa0:	d30c      	bcc.n	401abc <__adddf3+0x10c>
  401aa2:	0849      	lsrs	r1, r1, #1
  401aa4:	ea5f 0030 	movs.w	r0, r0, rrx
  401aa8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401aac:	f104 0401 	add.w	r4, r4, #1
  401ab0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401ab4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401ab8:	f080 809a 	bcs.w	401bf0 <__adddf3+0x240>
  401abc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401ac0:	bf08      	it	eq
  401ac2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401ac6:	f150 0000 	adcs.w	r0, r0, #0
  401aca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401ace:	ea41 0105 	orr.w	r1, r1, r5
  401ad2:	bd30      	pop	{r4, r5, pc}
  401ad4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401ad8:	4140      	adcs	r0, r0
  401ada:	eb41 0101 	adc.w	r1, r1, r1
  401ade:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ae2:	f1a4 0401 	sub.w	r4, r4, #1
  401ae6:	d1e9      	bne.n	401abc <__adddf3+0x10c>
  401ae8:	f091 0f00 	teq	r1, #0
  401aec:	bf04      	itt	eq
  401aee:	4601      	moveq	r1, r0
  401af0:	2000      	moveq	r0, #0
  401af2:	fab1 f381 	clz	r3, r1
  401af6:	bf08      	it	eq
  401af8:	3320      	addeq	r3, #32
  401afa:	f1a3 030b 	sub.w	r3, r3, #11
  401afe:	f1b3 0220 	subs.w	r2, r3, #32
  401b02:	da0c      	bge.n	401b1e <__adddf3+0x16e>
  401b04:	320c      	adds	r2, #12
  401b06:	dd08      	ble.n	401b1a <__adddf3+0x16a>
  401b08:	f102 0c14 	add.w	ip, r2, #20
  401b0c:	f1c2 020c 	rsb	r2, r2, #12
  401b10:	fa01 f00c 	lsl.w	r0, r1, ip
  401b14:	fa21 f102 	lsr.w	r1, r1, r2
  401b18:	e00c      	b.n	401b34 <__adddf3+0x184>
  401b1a:	f102 0214 	add.w	r2, r2, #20
  401b1e:	bfd8      	it	le
  401b20:	f1c2 0c20 	rsble	ip, r2, #32
  401b24:	fa01 f102 	lsl.w	r1, r1, r2
  401b28:	fa20 fc0c 	lsr.w	ip, r0, ip
  401b2c:	bfdc      	itt	le
  401b2e:	ea41 010c 	orrle.w	r1, r1, ip
  401b32:	4090      	lslle	r0, r2
  401b34:	1ae4      	subs	r4, r4, r3
  401b36:	bfa2      	ittt	ge
  401b38:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401b3c:	4329      	orrge	r1, r5
  401b3e:	bd30      	popge	{r4, r5, pc}
  401b40:	ea6f 0404 	mvn.w	r4, r4
  401b44:	3c1f      	subs	r4, #31
  401b46:	da1c      	bge.n	401b82 <__adddf3+0x1d2>
  401b48:	340c      	adds	r4, #12
  401b4a:	dc0e      	bgt.n	401b6a <__adddf3+0x1ba>
  401b4c:	f104 0414 	add.w	r4, r4, #20
  401b50:	f1c4 0220 	rsb	r2, r4, #32
  401b54:	fa20 f004 	lsr.w	r0, r0, r4
  401b58:	fa01 f302 	lsl.w	r3, r1, r2
  401b5c:	ea40 0003 	orr.w	r0, r0, r3
  401b60:	fa21 f304 	lsr.w	r3, r1, r4
  401b64:	ea45 0103 	orr.w	r1, r5, r3
  401b68:	bd30      	pop	{r4, r5, pc}
  401b6a:	f1c4 040c 	rsb	r4, r4, #12
  401b6e:	f1c4 0220 	rsb	r2, r4, #32
  401b72:	fa20 f002 	lsr.w	r0, r0, r2
  401b76:	fa01 f304 	lsl.w	r3, r1, r4
  401b7a:	ea40 0003 	orr.w	r0, r0, r3
  401b7e:	4629      	mov	r1, r5
  401b80:	bd30      	pop	{r4, r5, pc}
  401b82:	fa21 f004 	lsr.w	r0, r1, r4
  401b86:	4629      	mov	r1, r5
  401b88:	bd30      	pop	{r4, r5, pc}
  401b8a:	f094 0f00 	teq	r4, #0
  401b8e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401b92:	bf06      	itte	eq
  401b94:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401b98:	3401      	addeq	r4, #1
  401b9a:	3d01      	subne	r5, #1
  401b9c:	e74e      	b.n	401a3c <__adddf3+0x8c>
  401b9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401ba2:	bf18      	it	ne
  401ba4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401ba8:	d029      	beq.n	401bfe <__adddf3+0x24e>
  401baa:	ea94 0f05 	teq	r4, r5
  401bae:	bf08      	it	eq
  401bb0:	ea90 0f02 	teqeq	r0, r2
  401bb4:	d005      	beq.n	401bc2 <__adddf3+0x212>
  401bb6:	ea54 0c00 	orrs.w	ip, r4, r0
  401bba:	bf04      	itt	eq
  401bbc:	4619      	moveq	r1, r3
  401bbe:	4610      	moveq	r0, r2
  401bc0:	bd30      	pop	{r4, r5, pc}
  401bc2:	ea91 0f03 	teq	r1, r3
  401bc6:	bf1e      	ittt	ne
  401bc8:	2100      	movne	r1, #0
  401bca:	2000      	movne	r0, #0
  401bcc:	bd30      	popne	{r4, r5, pc}
  401bce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401bd2:	d105      	bne.n	401be0 <__adddf3+0x230>
  401bd4:	0040      	lsls	r0, r0, #1
  401bd6:	4149      	adcs	r1, r1
  401bd8:	bf28      	it	cs
  401bda:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401bde:	bd30      	pop	{r4, r5, pc}
  401be0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401be4:	bf3c      	itt	cc
  401be6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401bea:	bd30      	popcc	{r4, r5, pc}
  401bec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401bf0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401bf4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401bf8:	f04f 0000 	mov.w	r0, #0
  401bfc:	bd30      	pop	{r4, r5, pc}
  401bfe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401c02:	bf1a      	itte	ne
  401c04:	4619      	movne	r1, r3
  401c06:	4610      	movne	r0, r2
  401c08:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401c0c:	bf1c      	itt	ne
  401c0e:	460b      	movne	r3, r1
  401c10:	4602      	movne	r2, r0
  401c12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401c16:	bf06      	itte	eq
  401c18:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401c1c:	ea91 0f03 	teqeq	r1, r3
  401c20:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401c24:	bd30      	pop	{r4, r5, pc}
  401c26:	bf00      	nop

00401c28 <__aeabi_ui2d>:
  401c28:	f090 0f00 	teq	r0, #0
  401c2c:	bf04      	itt	eq
  401c2e:	2100      	moveq	r1, #0
  401c30:	4770      	bxeq	lr
  401c32:	b530      	push	{r4, r5, lr}
  401c34:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401c38:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401c3c:	f04f 0500 	mov.w	r5, #0
  401c40:	f04f 0100 	mov.w	r1, #0
  401c44:	e750      	b.n	401ae8 <__adddf3+0x138>
  401c46:	bf00      	nop

00401c48 <__aeabi_i2d>:
  401c48:	f090 0f00 	teq	r0, #0
  401c4c:	bf04      	itt	eq
  401c4e:	2100      	moveq	r1, #0
  401c50:	4770      	bxeq	lr
  401c52:	b530      	push	{r4, r5, lr}
  401c54:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401c58:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401c5c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401c60:	bf48      	it	mi
  401c62:	4240      	negmi	r0, r0
  401c64:	f04f 0100 	mov.w	r1, #0
  401c68:	e73e      	b.n	401ae8 <__adddf3+0x138>
  401c6a:	bf00      	nop

00401c6c <__aeabi_f2d>:
  401c6c:	0042      	lsls	r2, r0, #1
  401c6e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401c72:	ea4f 0131 	mov.w	r1, r1, rrx
  401c76:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401c7a:	bf1f      	itttt	ne
  401c7c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401c80:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401c84:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401c88:	4770      	bxne	lr
  401c8a:	f092 0f00 	teq	r2, #0
  401c8e:	bf14      	ite	ne
  401c90:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401c94:	4770      	bxeq	lr
  401c96:	b530      	push	{r4, r5, lr}
  401c98:	f44f 7460 	mov.w	r4, #896	; 0x380
  401c9c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401ca0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401ca4:	e720      	b.n	401ae8 <__adddf3+0x138>
  401ca6:	bf00      	nop

00401ca8 <__aeabi_ul2d>:
  401ca8:	ea50 0201 	orrs.w	r2, r0, r1
  401cac:	bf08      	it	eq
  401cae:	4770      	bxeq	lr
  401cb0:	b530      	push	{r4, r5, lr}
  401cb2:	f04f 0500 	mov.w	r5, #0
  401cb6:	e00a      	b.n	401cce <__aeabi_l2d+0x16>

00401cb8 <__aeabi_l2d>:
  401cb8:	ea50 0201 	orrs.w	r2, r0, r1
  401cbc:	bf08      	it	eq
  401cbe:	4770      	bxeq	lr
  401cc0:	b530      	push	{r4, r5, lr}
  401cc2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401cc6:	d502      	bpl.n	401cce <__aeabi_l2d+0x16>
  401cc8:	4240      	negs	r0, r0
  401cca:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401cce:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401cd2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401cd6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401cda:	f43f aedc 	beq.w	401a96 <__adddf3+0xe6>
  401cde:	f04f 0203 	mov.w	r2, #3
  401ce2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401ce6:	bf18      	it	ne
  401ce8:	3203      	addne	r2, #3
  401cea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401cee:	bf18      	it	ne
  401cf0:	3203      	addne	r2, #3
  401cf2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401cf6:	f1c2 0320 	rsb	r3, r2, #32
  401cfa:	fa00 fc03 	lsl.w	ip, r0, r3
  401cfe:	fa20 f002 	lsr.w	r0, r0, r2
  401d02:	fa01 fe03 	lsl.w	lr, r1, r3
  401d06:	ea40 000e 	orr.w	r0, r0, lr
  401d0a:	fa21 f102 	lsr.w	r1, r1, r2
  401d0e:	4414      	add	r4, r2
  401d10:	e6c1      	b.n	401a96 <__adddf3+0xe6>
  401d12:	bf00      	nop

00401d14 <__aeabi_dmul>:
  401d14:	b570      	push	{r4, r5, r6, lr}
  401d16:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401d1a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401d1e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401d22:	bf1d      	ittte	ne
  401d24:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401d28:	ea94 0f0c 	teqne	r4, ip
  401d2c:	ea95 0f0c 	teqne	r5, ip
  401d30:	f000 f8de 	bleq	401ef0 <__aeabi_dmul+0x1dc>
  401d34:	442c      	add	r4, r5
  401d36:	ea81 0603 	eor.w	r6, r1, r3
  401d3a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401d3e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401d42:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401d46:	bf18      	it	ne
  401d48:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401d4c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401d50:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401d54:	d038      	beq.n	401dc8 <__aeabi_dmul+0xb4>
  401d56:	fba0 ce02 	umull	ip, lr, r0, r2
  401d5a:	f04f 0500 	mov.w	r5, #0
  401d5e:	fbe1 e502 	umlal	lr, r5, r1, r2
  401d62:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401d66:	fbe0 e503 	umlal	lr, r5, r0, r3
  401d6a:	f04f 0600 	mov.w	r6, #0
  401d6e:	fbe1 5603 	umlal	r5, r6, r1, r3
  401d72:	f09c 0f00 	teq	ip, #0
  401d76:	bf18      	it	ne
  401d78:	f04e 0e01 	orrne.w	lr, lr, #1
  401d7c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401d80:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401d84:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401d88:	d204      	bcs.n	401d94 <__aeabi_dmul+0x80>
  401d8a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401d8e:	416d      	adcs	r5, r5
  401d90:	eb46 0606 	adc.w	r6, r6, r6
  401d94:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401d98:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401d9c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401da0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401da4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401da8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401dac:	bf88      	it	hi
  401dae:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401db2:	d81e      	bhi.n	401df2 <__aeabi_dmul+0xde>
  401db4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401db8:	bf08      	it	eq
  401dba:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401dbe:	f150 0000 	adcs.w	r0, r0, #0
  401dc2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401dc6:	bd70      	pop	{r4, r5, r6, pc}
  401dc8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401dcc:	ea46 0101 	orr.w	r1, r6, r1
  401dd0:	ea40 0002 	orr.w	r0, r0, r2
  401dd4:	ea81 0103 	eor.w	r1, r1, r3
  401dd8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401ddc:	bfc2      	ittt	gt
  401dde:	ebd4 050c 	rsbsgt	r5, r4, ip
  401de2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401de6:	bd70      	popgt	{r4, r5, r6, pc}
  401de8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401dec:	f04f 0e00 	mov.w	lr, #0
  401df0:	3c01      	subs	r4, #1
  401df2:	f300 80ab 	bgt.w	401f4c <__aeabi_dmul+0x238>
  401df6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401dfa:	bfde      	ittt	le
  401dfc:	2000      	movle	r0, #0
  401dfe:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401e02:	bd70      	pople	{r4, r5, r6, pc}
  401e04:	f1c4 0400 	rsb	r4, r4, #0
  401e08:	3c20      	subs	r4, #32
  401e0a:	da35      	bge.n	401e78 <__aeabi_dmul+0x164>
  401e0c:	340c      	adds	r4, #12
  401e0e:	dc1b      	bgt.n	401e48 <__aeabi_dmul+0x134>
  401e10:	f104 0414 	add.w	r4, r4, #20
  401e14:	f1c4 0520 	rsb	r5, r4, #32
  401e18:	fa00 f305 	lsl.w	r3, r0, r5
  401e1c:	fa20 f004 	lsr.w	r0, r0, r4
  401e20:	fa01 f205 	lsl.w	r2, r1, r5
  401e24:	ea40 0002 	orr.w	r0, r0, r2
  401e28:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401e2c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401e30:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401e34:	fa21 f604 	lsr.w	r6, r1, r4
  401e38:	eb42 0106 	adc.w	r1, r2, r6
  401e3c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401e40:	bf08      	it	eq
  401e42:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401e46:	bd70      	pop	{r4, r5, r6, pc}
  401e48:	f1c4 040c 	rsb	r4, r4, #12
  401e4c:	f1c4 0520 	rsb	r5, r4, #32
  401e50:	fa00 f304 	lsl.w	r3, r0, r4
  401e54:	fa20 f005 	lsr.w	r0, r0, r5
  401e58:	fa01 f204 	lsl.w	r2, r1, r4
  401e5c:	ea40 0002 	orr.w	r0, r0, r2
  401e60:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401e64:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401e68:	f141 0100 	adc.w	r1, r1, #0
  401e6c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401e70:	bf08      	it	eq
  401e72:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401e76:	bd70      	pop	{r4, r5, r6, pc}
  401e78:	f1c4 0520 	rsb	r5, r4, #32
  401e7c:	fa00 f205 	lsl.w	r2, r0, r5
  401e80:	ea4e 0e02 	orr.w	lr, lr, r2
  401e84:	fa20 f304 	lsr.w	r3, r0, r4
  401e88:	fa01 f205 	lsl.w	r2, r1, r5
  401e8c:	ea43 0302 	orr.w	r3, r3, r2
  401e90:	fa21 f004 	lsr.w	r0, r1, r4
  401e94:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401e98:	fa21 f204 	lsr.w	r2, r1, r4
  401e9c:	ea20 0002 	bic.w	r0, r0, r2
  401ea0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401ea4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401ea8:	bf08      	it	eq
  401eaa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401eae:	bd70      	pop	{r4, r5, r6, pc}
  401eb0:	f094 0f00 	teq	r4, #0
  401eb4:	d10f      	bne.n	401ed6 <__aeabi_dmul+0x1c2>
  401eb6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401eba:	0040      	lsls	r0, r0, #1
  401ebc:	eb41 0101 	adc.w	r1, r1, r1
  401ec0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ec4:	bf08      	it	eq
  401ec6:	3c01      	subeq	r4, #1
  401ec8:	d0f7      	beq.n	401eba <__aeabi_dmul+0x1a6>
  401eca:	ea41 0106 	orr.w	r1, r1, r6
  401ece:	f095 0f00 	teq	r5, #0
  401ed2:	bf18      	it	ne
  401ed4:	4770      	bxne	lr
  401ed6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401eda:	0052      	lsls	r2, r2, #1
  401edc:	eb43 0303 	adc.w	r3, r3, r3
  401ee0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401ee4:	bf08      	it	eq
  401ee6:	3d01      	subeq	r5, #1
  401ee8:	d0f7      	beq.n	401eda <__aeabi_dmul+0x1c6>
  401eea:	ea43 0306 	orr.w	r3, r3, r6
  401eee:	4770      	bx	lr
  401ef0:	ea94 0f0c 	teq	r4, ip
  401ef4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401ef8:	bf18      	it	ne
  401efa:	ea95 0f0c 	teqne	r5, ip
  401efe:	d00c      	beq.n	401f1a <__aeabi_dmul+0x206>
  401f00:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401f04:	bf18      	it	ne
  401f06:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401f0a:	d1d1      	bne.n	401eb0 <__aeabi_dmul+0x19c>
  401f0c:	ea81 0103 	eor.w	r1, r1, r3
  401f10:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f14:	f04f 0000 	mov.w	r0, #0
  401f18:	bd70      	pop	{r4, r5, r6, pc}
  401f1a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401f1e:	bf06      	itte	eq
  401f20:	4610      	moveq	r0, r2
  401f22:	4619      	moveq	r1, r3
  401f24:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401f28:	d019      	beq.n	401f5e <__aeabi_dmul+0x24a>
  401f2a:	ea94 0f0c 	teq	r4, ip
  401f2e:	d102      	bne.n	401f36 <__aeabi_dmul+0x222>
  401f30:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401f34:	d113      	bne.n	401f5e <__aeabi_dmul+0x24a>
  401f36:	ea95 0f0c 	teq	r5, ip
  401f3a:	d105      	bne.n	401f48 <__aeabi_dmul+0x234>
  401f3c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401f40:	bf1c      	itt	ne
  401f42:	4610      	movne	r0, r2
  401f44:	4619      	movne	r1, r3
  401f46:	d10a      	bne.n	401f5e <__aeabi_dmul+0x24a>
  401f48:	ea81 0103 	eor.w	r1, r1, r3
  401f4c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401f50:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401f54:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401f58:	f04f 0000 	mov.w	r0, #0
  401f5c:	bd70      	pop	{r4, r5, r6, pc}
  401f5e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401f62:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401f66:	bd70      	pop	{r4, r5, r6, pc}

00401f68 <__aeabi_ddiv>:
  401f68:	b570      	push	{r4, r5, r6, lr}
  401f6a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401f6e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401f72:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401f76:	bf1d      	ittte	ne
  401f78:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401f7c:	ea94 0f0c 	teqne	r4, ip
  401f80:	ea95 0f0c 	teqne	r5, ip
  401f84:	f000 f8a7 	bleq	4020d6 <__aeabi_ddiv+0x16e>
  401f88:	eba4 0405 	sub.w	r4, r4, r5
  401f8c:	ea81 0e03 	eor.w	lr, r1, r3
  401f90:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401f94:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401f98:	f000 8088 	beq.w	4020ac <__aeabi_ddiv+0x144>
  401f9c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401fa0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401fa4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401fa8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401fac:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401fb0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401fb4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401fb8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401fbc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401fc0:	429d      	cmp	r5, r3
  401fc2:	bf08      	it	eq
  401fc4:	4296      	cmpeq	r6, r2
  401fc6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401fca:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401fce:	d202      	bcs.n	401fd6 <__aeabi_ddiv+0x6e>
  401fd0:	085b      	lsrs	r3, r3, #1
  401fd2:	ea4f 0232 	mov.w	r2, r2, rrx
  401fd6:	1ab6      	subs	r6, r6, r2
  401fd8:	eb65 0503 	sbc.w	r5, r5, r3
  401fdc:	085b      	lsrs	r3, r3, #1
  401fde:	ea4f 0232 	mov.w	r2, r2, rrx
  401fe2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401fe6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401fea:	ebb6 0e02 	subs.w	lr, r6, r2
  401fee:	eb75 0e03 	sbcs.w	lr, r5, r3
  401ff2:	bf22      	ittt	cs
  401ff4:	1ab6      	subcs	r6, r6, r2
  401ff6:	4675      	movcs	r5, lr
  401ff8:	ea40 000c 	orrcs.w	r0, r0, ip
  401ffc:	085b      	lsrs	r3, r3, #1
  401ffe:	ea4f 0232 	mov.w	r2, r2, rrx
  402002:	ebb6 0e02 	subs.w	lr, r6, r2
  402006:	eb75 0e03 	sbcs.w	lr, r5, r3
  40200a:	bf22      	ittt	cs
  40200c:	1ab6      	subcs	r6, r6, r2
  40200e:	4675      	movcs	r5, lr
  402010:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402014:	085b      	lsrs	r3, r3, #1
  402016:	ea4f 0232 	mov.w	r2, r2, rrx
  40201a:	ebb6 0e02 	subs.w	lr, r6, r2
  40201e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402022:	bf22      	ittt	cs
  402024:	1ab6      	subcs	r6, r6, r2
  402026:	4675      	movcs	r5, lr
  402028:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40202c:	085b      	lsrs	r3, r3, #1
  40202e:	ea4f 0232 	mov.w	r2, r2, rrx
  402032:	ebb6 0e02 	subs.w	lr, r6, r2
  402036:	eb75 0e03 	sbcs.w	lr, r5, r3
  40203a:	bf22      	ittt	cs
  40203c:	1ab6      	subcs	r6, r6, r2
  40203e:	4675      	movcs	r5, lr
  402040:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402044:	ea55 0e06 	orrs.w	lr, r5, r6
  402048:	d018      	beq.n	40207c <__aeabi_ddiv+0x114>
  40204a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40204e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  402052:	ea4f 1606 	mov.w	r6, r6, lsl #4
  402056:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40205a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40205e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  402062:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  402066:	d1c0      	bne.n	401fea <__aeabi_ddiv+0x82>
  402068:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40206c:	d10b      	bne.n	402086 <__aeabi_ddiv+0x11e>
  40206e:	ea41 0100 	orr.w	r1, r1, r0
  402072:	f04f 0000 	mov.w	r0, #0
  402076:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40207a:	e7b6      	b.n	401fea <__aeabi_ddiv+0x82>
  40207c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402080:	bf04      	itt	eq
  402082:	4301      	orreq	r1, r0
  402084:	2000      	moveq	r0, #0
  402086:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40208a:	bf88      	it	hi
  40208c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402090:	f63f aeaf 	bhi.w	401df2 <__aeabi_dmul+0xde>
  402094:	ebb5 0c03 	subs.w	ip, r5, r3
  402098:	bf04      	itt	eq
  40209a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40209e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4020a2:	f150 0000 	adcs.w	r0, r0, #0
  4020a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4020aa:	bd70      	pop	{r4, r5, r6, pc}
  4020ac:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4020b0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4020b4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4020b8:	bfc2      	ittt	gt
  4020ba:	ebd4 050c 	rsbsgt	r5, r4, ip
  4020be:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4020c2:	bd70      	popgt	{r4, r5, r6, pc}
  4020c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4020c8:	f04f 0e00 	mov.w	lr, #0
  4020cc:	3c01      	subs	r4, #1
  4020ce:	e690      	b.n	401df2 <__aeabi_dmul+0xde>
  4020d0:	ea45 0e06 	orr.w	lr, r5, r6
  4020d4:	e68d      	b.n	401df2 <__aeabi_dmul+0xde>
  4020d6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4020da:	ea94 0f0c 	teq	r4, ip
  4020de:	bf08      	it	eq
  4020e0:	ea95 0f0c 	teqeq	r5, ip
  4020e4:	f43f af3b 	beq.w	401f5e <__aeabi_dmul+0x24a>
  4020e8:	ea94 0f0c 	teq	r4, ip
  4020ec:	d10a      	bne.n	402104 <__aeabi_ddiv+0x19c>
  4020ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4020f2:	f47f af34 	bne.w	401f5e <__aeabi_dmul+0x24a>
  4020f6:	ea95 0f0c 	teq	r5, ip
  4020fa:	f47f af25 	bne.w	401f48 <__aeabi_dmul+0x234>
  4020fe:	4610      	mov	r0, r2
  402100:	4619      	mov	r1, r3
  402102:	e72c      	b.n	401f5e <__aeabi_dmul+0x24a>
  402104:	ea95 0f0c 	teq	r5, ip
  402108:	d106      	bne.n	402118 <__aeabi_ddiv+0x1b0>
  40210a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40210e:	f43f aefd 	beq.w	401f0c <__aeabi_dmul+0x1f8>
  402112:	4610      	mov	r0, r2
  402114:	4619      	mov	r1, r3
  402116:	e722      	b.n	401f5e <__aeabi_dmul+0x24a>
  402118:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40211c:	bf18      	it	ne
  40211e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402122:	f47f aec5 	bne.w	401eb0 <__aeabi_dmul+0x19c>
  402126:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40212a:	f47f af0d 	bne.w	401f48 <__aeabi_dmul+0x234>
  40212e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  402132:	f47f aeeb 	bne.w	401f0c <__aeabi_dmul+0x1f8>
  402136:	e712      	b.n	401f5e <__aeabi_dmul+0x24a>

00402138 <__libc_init_array>:
  402138:	b570      	push	{r4, r5, r6, lr}
  40213a:	4e0f      	ldr	r6, [pc, #60]	; (402178 <__libc_init_array+0x40>)
  40213c:	4d0f      	ldr	r5, [pc, #60]	; (40217c <__libc_init_array+0x44>)
  40213e:	1b76      	subs	r6, r6, r5
  402140:	10b6      	asrs	r6, r6, #2
  402142:	bf18      	it	ne
  402144:	2400      	movne	r4, #0
  402146:	d005      	beq.n	402154 <__libc_init_array+0x1c>
  402148:	3401      	adds	r4, #1
  40214a:	f855 3b04 	ldr.w	r3, [r5], #4
  40214e:	4798      	blx	r3
  402150:	42a6      	cmp	r6, r4
  402152:	d1f9      	bne.n	402148 <__libc_init_array+0x10>
  402154:	4e0a      	ldr	r6, [pc, #40]	; (402180 <__libc_init_array+0x48>)
  402156:	4d0b      	ldr	r5, [pc, #44]	; (402184 <__libc_init_array+0x4c>)
  402158:	1b76      	subs	r6, r6, r5
  40215a:	f004 ff19 	bl	406f90 <_init>
  40215e:	10b6      	asrs	r6, r6, #2
  402160:	bf18      	it	ne
  402162:	2400      	movne	r4, #0
  402164:	d006      	beq.n	402174 <__libc_init_array+0x3c>
  402166:	3401      	adds	r4, #1
  402168:	f855 3b04 	ldr.w	r3, [r5], #4
  40216c:	4798      	blx	r3
  40216e:	42a6      	cmp	r6, r4
  402170:	d1f9      	bne.n	402166 <__libc_init_array+0x2e>
  402172:	bd70      	pop	{r4, r5, r6, pc}
  402174:	bd70      	pop	{r4, r5, r6, pc}
  402176:	bf00      	nop
  402178:	00406f9c 	.word	0x00406f9c
  40217c:	00406f9c 	.word	0x00406f9c
  402180:	00406fa4 	.word	0x00406fa4
  402184:	00406f9c 	.word	0x00406f9c

00402188 <memset>:
  402188:	b470      	push	{r4, r5, r6}
  40218a:	0786      	lsls	r6, r0, #30
  40218c:	d046      	beq.n	40221c <memset+0x94>
  40218e:	1e54      	subs	r4, r2, #1
  402190:	2a00      	cmp	r2, #0
  402192:	d041      	beq.n	402218 <memset+0x90>
  402194:	b2ca      	uxtb	r2, r1
  402196:	4603      	mov	r3, r0
  402198:	e002      	b.n	4021a0 <memset+0x18>
  40219a:	f114 34ff 	adds.w	r4, r4, #4294967295
  40219e:	d33b      	bcc.n	402218 <memset+0x90>
  4021a0:	f803 2b01 	strb.w	r2, [r3], #1
  4021a4:	079d      	lsls	r5, r3, #30
  4021a6:	d1f8      	bne.n	40219a <memset+0x12>
  4021a8:	2c03      	cmp	r4, #3
  4021aa:	d92e      	bls.n	40220a <memset+0x82>
  4021ac:	b2cd      	uxtb	r5, r1
  4021ae:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4021b2:	2c0f      	cmp	r4, #15
  4021b4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4021b8:	d919      	bls.n	4021ee <memset+0x66>
  4021ba:	f103 0210 	add.w	r2, r3, #16
  4021be:	4626      	mov	r6, r4
  4021c0:	3e10      	subs	r6, #16
  4021c2:	2e0f      	cmp	r6, #15
  4021c4:	f842 5c10 	str.w	r5, [r2, #-16]
  4021c8:	f842 5c0c 	str.w	r5, [r2, #-12]
  4021cc:	f842 5c08 	str.w	r5, [r2, #-8]
  4021d0:	f842 5c04 	str.w	r5, [r2, #-4]
  4021d4:	f102 0210 	add.w	r2, r2, #16
  4021d8:	d8f2      	bhi.n	4021c0 <memset+0x38>
  4021da:	f1a4 0210 	sub.w	r2, r4, #16
  4021de:	f022 020f 	bic.w	r2, r2, #15
  4021e2:	f004 040f 	and.w	r4, r4, #15
  4021e6:	3210      	adds	r2, #16
  4021e8:	2c03      	cmp	r4, #3
  4021ea:	4413      	add	r3, r2
  4021ec:	d90d      	bls.n	40220a <memset+0x82>
  4021ee:	461e      	mov	r6, r3
  4021f0:	4622      	mov	r2, r4
  4021f2:	3a04      	subs	r2, #4
  4021f4:	2a03      	cmp	r2, #3
  4021f6:	f846 5b04 	str.w	r5, [r6], #4
  4021fa:	d8fa      	bhi.n	4021f2 <memset+0x6a>
  4021fc:	1f22      	subs	r2, r4, #4
  4021fe:	f022 0203 	bic.w	r2, r2, #3
  402202:	3204      	adds	r2, #4
  402204:	4413      	add	r3, r2
  402206:	f004 0403 	and.w	r4, r4, #3
  40220a:	b12c      	cbz	r4, 402218 <memset+0x90>
  40220c:	b2c9      	uxtb	r1, r1
  40220e:	441c      	add	r4, r3
  402210:	f803 1b01 	strb.w	r1, [r3], #1
  402214:	429c      	cmp	r4, r3
  402216:	d1fb      	bne.n	402210 <memset+0x88>
  402218:	bc70      	pop	{r4, r5, r6}
  40221a:	4770      	bx	lr
  40221c:	4614      	mov	r4, r2
  40221e:	4603      	mov	r3, r0
  402220:	e7c2      	b.n	4021a8 <memset+0x20>
  402222:	bf00      	nop

00402224 <sprintf>:
  402224:	b40e      	push	{r1, r2, r3}
  402226:	b5f0      	push	{r4, r5, r6, r7, lr}
  402228:	b09c      	sub	sp, #112	; 0x70
  40222a:	ab21      	add	r3, sp, #132	; 0x84
  40222c:	490f      	ldr	r1, [pc, #60]	; (40226c <sprintf+0x48>)
  40222e:	f853 2b04 	ldr.w	r2, [r3], #4
  402232:	9301      	str	r3, [sp, #4]
  402234:	4605      	mov	r5, r0
  402236:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40223a:	6808      	ldr	r0, [r1, #0]
  40223c:	9502      	str	r5, [sp, #8]
  40223e:	f44f 7702 	mov.w	r7, #520	; 0x208
  402242:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402246:	a902      	add	r1, sp, #8
  402248:	9506      	str	r5, [sp, #24]
  40224a:	f8ad 7014 	strh.w	r7, [sp, #20]
  40224e:	9404      	str	r4, [sp, #16]
  402250:	9407      	str	r4, [sp, #28]
  402252:	f8ad 6016 	strh.w	r6, [sp, #22]
  402256:	f000 f80b 	bl	402270 <_svfprintf_r>
  40225a:	9b02      	ldr	r3, [sp, #8]
  40225c:	2200      	movs	r2, #0
  40225e:	701a      	strb	r2, [r3, #0]
  402260:	b01c      	add	sp, #112	; 0x70
  402262:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  402266:	b003      	add	sp, #12
  402268:	4770      	bx	lr
  40226a:	bf00      	nop
  40226c:	20400028 	.word	0x20400028

00402270 <_svfprintf_r>:
  402270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402274:	b0c3      	sub	sp, #268	; 0x10c
  402276:	460c      	mov	r4, r1
  402278:	910b      	str	r1, [sp, #44]	; 0x2c
  40227a:	4692      	mov	sl, r2
  40227c:	930f      	str	r3, [sp, #60]	; 0x3c
  40227e:	900c      	str	r0, [sp, #48]	; 0x30
  402280:	f002 fa0e 	bl	4046a0 <_localeconv_r>
  402284:	6803      	ldr	r3, [r0, #0]
  402286:	931a      	str	r3, [sp, #104]	; 0x68
  402288:	4618      	mov	r0, r3
  40228a:	f003 f8d9 	bl	405440 <strlen>
  40228e:	89a3      	ldrh	r3, [r4, #12]
  402290:	9019      	str	r0, [sp, #100]	; 0x64
  402292:	0619      	lsls	r1, r3, #24
  402294:	d503      	bpl.n	40229e <_svfprintf_r+0x2e>
  402296:	6923      	ldr	r3, [r4, #16]
  402298:	2b00      	cmp	r3, #0
  40229a:	f001 8003 	beq.w	4032a4 <_svfprintf_r+0x1034>
  40229e:	2300      	movs	r3, #0
  4022a0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4022a4:	9313      	str	r3, [sp, #76]	; 0x4c
  4022a6:	9315      	str	r3, [sp, #84]	; 0x54
  4022a8:	9314      	str	r3, [sp, #80]	; 0x50
  4022aa:	9327      	str	r3, [sp, #156]	; 0x9c
  4022ac:	9326      	str	r3, [sp, #152]	; 0x98
  4022ae:	9318      	str	r3, [sp, #96]	; 0x60
  4022b0:	931b      	str	r3, [sp, #108]	; 0x6c
  4022b2:	9309      	str	r3, [sp, #36]	; 0x24
  4022b4:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4022b8:	46c8      	mov	r8, r9
  4022ba:	9316      	str	r3, [sp, #88]	; 0x58
  4022bc:	9317      	str	r3, [sp, #92]	; 0x5c
  4022be:	f89a 3000 	ldrb.w	r3, [sl]
  4022c2:	4654      	mov	r4, sl
  4022c4:	b1e3      	cbz	r3, 402300 <_svfprintf_r+0x90>
  4022c6:	2b25      	cmp	r3, #37	; 0x25
  4022c8:	d102      	bne.n	4022d0 <_svfprintf_r+0x60>
  4022ca:	e019      	b.n	402300 <_svfprintf_r+0x90>
  4022cc:	2b25      	cmp	r3, #37	; 0x25
  4022ce:	d003      	beq.n	4022d8 <_svfprintf_r+0x68>
  4022d0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4022d4:	2b00      	cmp	r3, #0
  4022d6:	d1f9      	bne.n	4022cc <_svfprintf_r+0x5c>
  4022d8:	eba4 050a 	sub.w	r5, r4, sl
  4022dc:	b185      	cbz	r5, 402300 <_svfprintf_r+0x90>
  4022de:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022e0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4022e2:	f8c8 a000 	str.w	sl, [r8]
  4022e6:	3301      	adds	r3, #1
  4022e8:	442a      	add	r2, r5
  4022ea:	2b07      	cmp	r3, #7
  4022ec:	f8c8 5004 	str.w	r5, [r8, #4]
  4022f0:	9227      	str	r2, [sp, #156]	; 0x9c
  4022f2:	9326      	str	r3, [sp, #152]	; 0x98
  4022f4:	dc7f      	bgt.n	4023f6 <_svfprintf_r+0x186>
  4022f6:	f108 0808 	add.w	r8, r8, #8
  4022fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4022fc:	442b      	add	r3, r5
  4022fe:	9309      	str	r3, [sp, #36]	; 0x24
  402300:	7823      	ldrb	r3, [r4, #0]
  402302:	2b00      	cmp	r3, #0
  402304:	d07f      	beq.n	402406 <_svfprintf_r+0x196>
  402306:	2300      	movs	r3, #0
  402308:	461a      	mov	r2, r3
  40230a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40230e:	4619      	mov	r1, r3
  402310:	930d      	str	r3, [sp, #52]	; 0x34
  402312:	469b      	mov	fp, r3
  402314:	f04f 30ff 	mov.w	r0, #4294967295
  402318:	7863      	ldrb	r3, [r4, #1]
  40231a:	900a      	str	r0, [sp, #40]	; 0x28
  40231c:	f104 0a01 	add.w	sl, r4, #1
  402320:	f10a 0a01 	add.w	sl, sl, #1
  402324:	f1a3 0020 	sub.w	r0, r3, #32
  402328:	2858      	cmp	r0, #88	; 0x58
  40232a:	f200 83c1 	bhi.w	402ab0 <_svfprintf_r+0x840>
  40232e:	e8df f010 	tbh	[pc, r0, lsl #1]
  402332:	0238      	.short	0x0238
  402334:	03bf03bf 	.word	0x03bf03bf
  402338:	03bf0240 	.word	0x03bf0240
  40233c:	03bf03bf 	.word	0x03bf03bf
  402340:	03bf03bf 	.word	0x03bf03bf
  402344:	024503bf 	.word	0x024503bf
  402348:	03bf0203 	.word	0x03bf0203
  40234c:	026b005d 	.word	0x026b005d
  402350:	028603bf 	.word	0x028603bf
  402354:	039d039d 	.word	0x039d039d
  402358:	039d039d 	.word	0x039d039d
  40235c:	039d039d 	.word	0x039d039d
  402360:	039d039d 	.word	0x039d039d
  402364:	03bf039d 	.word	0x03bf039d
  402368:	03bf03bf 	.word	0x03bf03bf
  40236c:	03bf03bf 	.word	0x03bf03bf
  402370:	03bf03bf 	.word	0x03bf03bf
  402374:	03bf03bf 	.word	0x03bf03bf
  402378:	033703bf 	.word	0x033703bf
  40237c:	03bf0357 	.word	0x03bf0357
  402380:	03bf0357 	.word	0x03bf0357
  402384:	03bf03bf 	.word	0x03bf03bf
  402388:	039803bf 	.word	0x039803bf
  40238c:	03bf03bf 	.word	0x03bf03bf
  402390:	03bf03ad 	.word	0x03bf03ad
  402394:	03bf03bf 	.word	0x03bf03bf
  402398:	03bf03bf 	.word	0x03bf03bf
  40239c:	03bf0259 	.word	0x03bf0259
  4023a0:	031e03bf 	.word	0x031e03bf
  4023a4:	03bf03bf 	.word	0x03bf03bf
  4023a8:	03bf03bf 	.word	0x03bf03bf
  4023ac:	03bf03bf 	.word	0x03bf03bf
  4023b0:	03bf03bf 	.word	0x03bf03bf
  4023b4:	03bf03bf 	.word	0x03bf03bf
  4023b8:	02db02c6 	.word	0x02db02c6
  4023bc:	03570357 	.word	0x03570357
  4023c0:	028b0357 	.word	0x028b0357
  4023c4:	03bf02db 	.word	0x03bf02db
  4023c8:	029003bf 	.word	0x029003bf
  4023cc:	029d03bf 	.word	0x029d03bf
  4023d0:	02b401cc 	.word	0x02b401cc
  4023d4:	03bf0208 	.word	0x03bf0208
  4023d8:	03bf01e1 	.word	0x03bf01e1
  4023dc:	03bf007e 	.word	0x03bf007e
  4023e0:	020d03bf 	.word	0x020d03bf
  4023e4:	980d      	ldr	r0, [sp, #52]	; 0x34
  4023e6:	930f      	str	r3, [sp, #60]	; 0x3c
  4023e8:	4240      	negs	r0, r0
  4023ea:	900d      	str	r0, [sp, #52]	; 0x34
  4023ec:	f04b 0b04 	orr.w	fp, fp, #4
  4023f0:	f89a 3000 	ldrb.w	r3, [sl]
  4023f4:	e794      	b.n	402320 <_svfprintf_r+0xb0>
  4023f6:	aa25      	add	r2, sp, #148	; 0x94
  4023f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4023fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4023fc:	f003 f88e 	bl	40551c <__ssprint_r>
  402400:	b940      	cbnz	r0, 402414 <_svfprintf_r+0x1a4>
  402402:	46c8      	mov	r8, r9
  402404:	e779      	b.n	4022fa <_svfprintf_r+0x8a>
  402406:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402408:	b123      	cbz	r3, 402414 <_svfprintf_r+0x1a4>
  40240a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40240c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40240e:	aa25      	add	r2, sp, #148	; 0x94
  402410:	f003 f884 	bl	40551c <__ssprint_r>
  402414:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402416:	899b      	ldrh	r3, [r3, #12]
  402418:	f013 0f40 	tst.w	r3, #64	; 0x40
  40241c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40241e:	bf18      	it	ne
  402420:	f04f 33ff 	movne.w	r3, #4294967295
  402424:	9309      	str	r3, [sp, #36]	; 0x24
  402426:	9809      	ldr	r0, [sp, #36]	; 0x24
  402428:	b043      	add	sp, #268	; 0x10c
  40242a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40242e:	f01b 0f20 	tst.w	fp, #32
  402432:	9311      	str	r3, [sp, #68]	; 0x44
  402434:	f040 81dd 	bne.w	4027f2 <_svfprintf_r+0x582>
  402438:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40243a:	f01b 0f10 	tst.w	fp, #16
  40243e:	4613      	mov	r3, r2
  402440:	f040 856e 	bne.w	402f20 <_svfprintf_r+0xcb0>
  402444:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402448:	f000 856a 	beq.w	402f20 <_svfprintf_r+0xcb0>
  40244c:	8814      	ldrh	r4, [r2, #0]
  40244e:	3204      	adds	r2, #4
  402450:	2500      	movs	r5, #0
  402452:	2301      	movs	r3, #1
  402454:	920f      	str	r2, [sp, #60]	; 0x3c
  402456:	2700      	movs	r7, #0
  402458:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40245c:	990a      	ldr	r1, [sp, #40]	; 0x28
  40245e:	1c4a      	adds	r2, r1, #1
  402460:	f000 8265 	beq.w	40292e <_svfprintf_r+0x6be>
  402464:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402468:	9207      	str	r2, [sp, #28]
  40246a:	ea54 0205 	orrs.w	r2, r4, r5
  40246e:	f040 8264 	bne.w	40293a <_svfprintf_r+0x6ca>
  402472:	2900      	cmp	r1, #0
  402474:	f040 843c 	bne.w	402cf0 <_svfprintf_r+0xa80>
  402478:	2b00      	cmp	r3, #0
  40247a:	f040 84d7 	bne.w	402e2c <_svfprintf_r+0xbbc>
  40247e:	f01b 0301 	ands.w	r3, fp, #1
  402482:	930e      	str	r3, [sp, #56]	; 0x38
  402484:	f000 8604 	beq.w	403090 <_svfprintf_r+0xe20>
  402488:	ae42      	add	r6, sp, #264	; 0x108
  40248a:	2330      	movs	r3, #48	; 0x30
  40248c:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402490:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402492:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402494:	4293      	cmp	r3, r2
  402496:	bfb8      	it	lt
  402498:	4613      	movlt	r3, r2
  40249a:	9308      	str	r3, [sp, #32]
  40249c:	2300      	movs	r3, #0
  40249e:	9312      	str	r3, [sp, #72]	; 0x48
  4024a0:	b117      	cbz	r7, 4024a8 <_svfprintf_r+0x238>
  4024a2:	9b08      	ldr	r3, [sp, #32]
  4024a4:	3301      	adds	r3, #1
  4024a6:	9308      	str	r3, [sp, #32]
  4024a8:	9b07      	ldr	r3, [sp, #28]
  4024aa:	f013 0302 	ands.w	r3, r3, #2
  4024ae:	9310      	str	r3, [sp, #64]	; 0x40
  4024b0:	d002      	beq.n	4024b8 <_svfprintf_r+0x248>
  4024b2:	9b08      	ldr	r3, [sp, #32]
  4024b4:	3302      	adds	r3, #2
  4024b6:	9308      	str	r3, [sp, #32]
  4024b8:	9b07      	ldr	r3, [sp, #28]
  4024ba:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4024be:	f040 830e 	bne.w	402ade <_svfprintf_r+0x86e>
  4024c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4024c4:	9a08      	ldr	r2, [sp, #32]
  4024c6:	eba3 0b02 	sub.w	fp, r3, r2
  4024ca:	f1bb 0f00 	cmp.w	fp, #0
  4024ce:	f340 8306 	ble.w	402ade <_svfprintf_r+0x86e>
  4024d2:	f1bb 0f10 	cmp.w	fp, #16
  4024d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024d8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4024da:	dd29      	ble.n	402530 <_svfprintf_r+0x2c0>
  4024dc:	4643      	mov	r3, r8
  4024de:	4621      	mov	r1, r4
  4024e0:	46a8      	mov	r8, r5
  4024e2:	2710      	movs	r7, #16
  4024e4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4024e6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4024e8:	e006      	b.n	4024f8 <_svfprintf_r+0x288>
  4024ea:	f1ab 0b10 	sub.w	fp, fp, #16
  4024ee:	f1bb 0f10 	cmp.w	fp, #16
  4024f2:	f103 0308 	add.w	r3, r3, #8
  4024f6:	dd18      	ble.n	40252a <_svfprintf_r+0x2ba>
  4024f8:	3201      	adds	r2, #1
  4024fa:	48b7      	ldr	r0, [pc, #732]	; (4027d8 <_svfprintf_r+0x568>)
  4024fc:	9226      	str	r2, [sp, #152]	; 0x98
  4024fe:	3110      	adds	r1, #16
  402500:	2a07      	cmp	r2, #7
  402502:	9127      	str	r1, [sp, #156]	; 0x9c
  402504:	e883 0081 	stmia.w	r3, {r0, r7}
  402508:	ddef      	ble.n	4024ea <_svfprintf_r+0x27a>
  40250a:	aa25      	add	r2, sp, #148	; 0x94
  40250c:	4629      	mov	r1, r5
  40250e:	4620      	mov	r0, r4
  402510:	f003 f804 	bl	40551c <__ssprint_r>
  402514:	2800      	cmp	r0, #0
  402516:	f47f af7d 	bne.w	402414 <_svfprintf_r+0x1a4>
  40251a:	f1ab 0b10 	sub.w	fp, fp, #16
  40251e:	f1bb 0f10 	cmp.w	fp, #16
  402522:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402524:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402526:	464b      	mov	r3, r9
  402528:	dce6      	bgt.n	4024f8 <_svfprintf_r+0x288>
  40252a:	4645      	mov	r5, r8
  40252c:	460c      	mov	r4, r1
  40252e:	4698      	mov	r8, r3
  402530:	3201      	adds	r2, #1
  402532:	4ba9      	ldr	r3, [pc, #676]	; (4027d8 <_svfprintf_r+0x568>)
  402534:	9226      	str	r2, [sp, #152]	; 0x98
  402536:	445c      	add	r4, fp
  402538:	2a07      	cmp	r2, #7
  40253a:	9427      	str	r4, [sp, #156]	; 0x9c
  40253c:	e888 0808 	stmia.w	r8, {r3, fp}
  402540:	f300 8498 	bgt.w	402e74 <_svfprintf_r+0xc04>
  402544:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402548:	f108 0808 	add.w	r8, r8, #8
  40254c:	b177      	cbz	r7, 40256c <_svfprintf_r+0x2fc>
  40254e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402550:	3301      	adds	r3, #1
  402552:	3401      	adds	r4, #1
  402554:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402558:	2201      	movs	r2, #1
  40255a:	2b07      	cmp	r3, #7
  40255c:	9427      	str	r4, [sp, #156]	; 0x9c
  40255e:	9326      	str	r3, [sp, #152]	; 0x98
  402560:	e888 0006 	stmia.w	r8, {r1, r2}
  402564:	f300 83db 	bgt.w	402d1e <_svfprintf_r+0xaae>
  402568:	f108 0808 	add.w	r8, r8, #8
  40256c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40256e:	b16b      	cbz	r3, 40258c <_svfprintf_r+0x31c>
  402570:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402572:	3301      	adds	r3, #1
  402574:	3402      	adds	r4, #2
  402576:	a91e      	add	r1, sp, #120	; 0x78
  402578:	2202      	movs	r2, #2
  40257a:	2b07      	cmp	r3, #7
  40257c:	9427      	str	r4, [sp, #156]	; 0x9c
  40257e:	9326      	str	r3, [sp, #152]	; 0x98
  402580:	e888 0006 	stmia.w	r8, {r1, r2}
  402584:	f300 83d6 	bgt.w	402d34 <_svfprintf_r+0xac4>
  402588:	f108 0808 	add.w	r8, r8, #8
  40258c:	2d80      	cmp	r5, #128	; 0x80
  40258e:	f000 8315 	beq.w	402bbc <_svfprintf_r+0x94c>
  402592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402594:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402596:	1a9f      	subs	r7, r3, r2
  402598:	2f00      	cmp	r7, #0
  40259a:	dd36      	ble.n	40260a <_svfprintf_r+0x39a>
  40259c:	2f10      	cmp	r7, #16
  40259e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025a0:	4d8e      	ldr	r5, [pc, #568]	; (4027dc <_svfprintf_r+0x56c>)
  4025a2:	dd27      	ble.n	4025f4 <_svfprintf_r+0x384>
  4025a4:	4642      	mov	r2, r8
  4025a6:	4621      	mov	r1, r4
  4025a8:	46b0      	mov	r8, r6
  4025aa:	f04f 0b10 	mov.w	fp, #16
  4025ae:	462e      	mov	r6, r5
  4025b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4025b2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4025b4:	e004      	b.n	4025c0 <_svfprintf_r+0x350>
  4025b6:	3f10      	subs	r7, #16
  4025b8:	2f10      	cmp	r7, #16
  4025ba:	f102 0208 	add.w	r2, r2, #8
  4025be:	dd15      	ble.n	4025ec <_svfprintf_r+0x37c>
  4025c0:	3301      	adds	r3, #1
  4025c2:	3110      	adds	r1, #16
  4025c4:	2b07      	cmp	r3, #7
  4025c6:	9127      	str	r1, [sp, #156]	; 0x9c
  4025c8:	9326      	str	r3, [sp, #152]	; 0x98
  4025ca:	e882 0840 	stmia.w	r2, {r6, fp}
  4025ce:	ddf2      	ble.n	4025b6 <_svfprintf_r+0x346>
  4025d0:	aa25      	add	r2, sp, #148	; 0x94
  4025d2:	4629      	mov	r1, r5
  4025d4:	4620      	mov	r0, r4
  4025d6:	f002 ffa1 	bl	40551c <__ssprint_r>
  4025da:	2800      	cmp	r0, #0
  4025dc:	f47f af1a 	bne.w	402414 <_svfprintf_r+0x1a4>
  4025e0:	3f10      	subs	r7, #16
  4025e2:	2f10      	cmp	r7, #16
  4025e4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4025e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025e8:	464a      	mov	r2, r9
  4025ea:	dce9      	bgt.n	4025c0 <_svfprintf_r+0x350>
  4025ec:	4635      	mov	r5, r6
  4025ee:	460c      	mov	r4, r1
  4025f0:	4646      	mov	r6, r8
  4025f2:	4690      	mov	r8, r2
  4025f4:	3301      	adds	r3, #1
  4025f6:	443c      	add	r4, r7
  4025f8:	2b07      	cmp	r3, #7
  4025fa:	9427      	str	r4, [sp, #156]	; 0x9c
  4025fc:	9326      	str	r3, [sp, #152]	; 0x98
  4025fe:	e888 00a0 	stmia.w	r8, {r5, r7}
  402602:	f300 8381 	bgt.w	402d08 <_svfprintf_r+0xa98>
  402606:	f108 0808 	add.w	r8, r8, #8
  40260a:	9b07      	ldr	r3, [sp, #28]
  40260c:	05df      	lsls	r7, r3, #23
  40260e:	f100 8268 	bmi.w	402ae2 <_svfprintf_r+0x872>
  402612:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402614:	990e      	ldr	r1, [sp, #56]	; 0x38
  402616:	f8c8 6000 	str.w	r6, [r8]
  40261a:	3301      	adds	r3, #1
  40261c:	440c      	add	r4, r1
  40261e:	2b07      	cmp	r3, #7
  402620:	9427      	str	r4, [sp, #156]	; 0x9c
  402622:	f8c8 1004 	str.w	r1, [r8, #4]
  402626:	9326      	str	r3, [sp, #152]	; 0x98
  402628:	f300 834d 	bgt.w	402cc6 <_svfprintf_r+0xa56>
  40262c:	f108 0808 	add.w	r8, r8, #8
  402630:	9b07      	ldr	r3, [sp, #28]
  402632:	075b      	lsls	r3, r3, #29
  402634:	d53a      	bpl.n	4026ac <_svfprintf_r+0x43c>
  402636:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402638:	9a08      	ldr	r2, [sp, #32]
  40263a:	1a9d      	subs	r5, r3, r2
  40263c:	2d00      	cmp	r5, #0
  40263e:	dd35      	ble.n	4026ac <_svfprintf_r+0x43c>
  402640:	2d10      	cmp	r5, #16
  402642:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402644:	dd20      	ble.n	402688 <_svfprintf_r+0x418>
  402646:	2610      	movs	r6, #16
  402648:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40264a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40264e:	e004      	b.n	40265a <_svfprintf_r+0x3ea>
  402650:	3d10      	subs	r5, #16
  402652:	2d10      	cmp	r5, #16
  402654:	f108 0808 	add.w	r8, r8, #8
  402658:	dd16      	ble.n	402688 <_svfprintf_r+0x418>
  40265a:	3301      	adds	r3, #1
  40265c:	4a5e      	ldr	r2, [pc, #376]	; (4027d8 <_svfprintf_r+0x568>)
  40265e:	9326      	str	r3, [sp, #152]	; 0x98
  402660:	3410      	adds	r4, #16
  402662:	2b07      	cmp	r3, #7
  402664:	9427      	str	r4, [sp, #156]	; 0x9c
  402666:	e888 0044 	stmia.w	r8, {r2, r6}
  40266a:	ddf1      	ble.n	402650 <_svfprintf_r+0x3e0>
  40266c:	aa25      	add	r2, sp, #148	; 0x94
  40266e:	4659      	mov	r1, fp
  402670:	4638      	mov	r0, r7
  402672:	f002 ff53 	bl	40551c <__ssprint_r>
  402676:	2800      	cmp	r0, #0
  402678:	f47f aecc 	bne.w	402414 <_svfprintf_r+0x1a4>
  40267c:	3d10      	subs	r5, #16
  40267e:	2d10      	cmp	r5, #16
  402680:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402682:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402684:	46c8      	mov	r8, r9
  402686:	dce8      	bgt.n	40265a <_svfprintf_r+0x3ea>
  402688:	3301      	adds	r3, #1
  40268a:	4a53      	ldr	r2, [pc, #332]	; (4027d8 <_svfprintf_r+0x568>)
  40268c:	9326      	str	r3, [sp, #152]	; 0x98
  40268e:	442c      	add	r4, r5
  402690:	2b07      	cmp	r3, #7
  402692:	9427      	str	r4, [sp, #156]	; 0x9c
  402694:	e888 0024 	stmia.w	r8, {r2, r5}
  402698:	dd08      	ble.n	4026ac <_svfprintf_r+0x43c>
  40269a:	aa25      	add	r2, sp, #148	; 0x94
  40269c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40269e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026a0:	f002 ff3c 	bl	40551c <__ssprint_r>
  4026a4:	2800      	cmp	r0, #0
  4026a6:	f47f aeb5 	bne.w	402414 <_svfprintf_r+0x1a4>
  4026aa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4026ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4026b0:	9908      	ldr	r1, [sp, #32]
  4026b2:	428a      	cmp	r2, r1
  4026b4:	bfac      	ite	ge
  4026b6:	189b      	addge	r3, r3, r2
  4026b8:	185b      	addlt	r3, r3, r1
  4026ba:	9309      	str	r3, [sp, #36]	; 0x24
  4026bc:	2c00      	cmp	r4, #0
  4026be:	f040 830d 	bne.w	402cdc <_svfprintf_r+0xa6c>
  4026c2:	2300      	movs	r3, #0
  4026c4:	9326      	str	r3, [sp, #152]	; 0x98
  4026c6:	46c8      	mov	r8, r9
  4026c8:	e5f9      	b.n	4022be <_svfprintf_r+0x4e>
  4026ca:	9311      	str	r3, [sp, #68]	; 0x44
  4026cc:	f01b 0320 	ands.w	r3, fp, #32
  4026d0:	f040 81e3 	bne.w	402a9a <_svfprintf_r+0x82a>
  4026d4:	f01b 0210 	ands.w	r2, fp, #16
  4026d8:	f040 842e 	bne.w	402f38 <_svfprintf_r+0xcc8>
  4026dc:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4026e0:	f000 842a 	beq.w	402f38 <_svfprintf_r+0xcc8>
  4026e4:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4026e6:	4613      	mov	r3, r2
  4026e8:	460a      	mov	r2, r1
  4026ea:	3204      	adds	r2, #4
  4026ec:	880c      	ldrh	r4, [r1, #0]
  4026ee:	920f      	str	r2, [sp, #60]	; 0x3c
  4026f0:	2500      	movs	r5, #0
  4026f2:	e6b0      	b.n	402456 <_svfprintf_r+0x1e6>
  4026f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4026f6:	9311      	str	r3, [sp, #68]	; 0x44
  4026f8:	6816      	ldr	r6, [r2, #0]
  4026fa:	2400      	movs	r4, #0
  4026fc:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402700:	1d15      	adds	r5, r2, #4
  402702:	2e00      	cmp	r6, #0
  402704:	f000 86a7 	beq.w	403456 <_svfprintf_r+0x11e6>
  402708:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40270a:	1c53      	adds	r3, r2, #1
  40270c:	f000 8609 	beq.w	403322 <_svfprintf_r+0x10b2>
  402710:	4621      	mov	r1, r4
  402712:	4630      	mov	r0, r6
  402714:	f002 fa8c 	bl	404c30 <memchr>
  402718:	2800      	cmp	r0, #0
  40271a:	f000 86e1 	beq.w	4034e0 <_svfprintf_r+0x1270>
  40271e:	1b83      	subs	r3, r0, r6
  402720:	930e      	str	r3, [sp, #56]	; 0x38
  402722:	940a      	str	r4, [sp, #40]	; 0x28
  402724:	950f      	str	r5, [sp, #60]	; 0x3c
  402726:	f8cd b01c 	str.w	fp, [sp, #28]
  40272a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40272e:	9308      	str	r3, [sp, #32]
  402730:	9412      	str	r4, [sp, #72]	; 0x48
  402732:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402736:	e6b3      	b.n	4024a0 <_svfprintf_r+0x230>
  402738:	f89a 3000 	ldrb.w	r3, [sl]
  40273c:	2201      	movs	r2, #1
  40273e:	212b      	movs	r1, #43	; 0x2b
  402740:	e5ee      	b.n	402320 <_svfprintf_r+0xb0>
  402742:	f04b 0b20 	orr.w	fp, fp, #32
  402746:	f89a 3000 	ldrb.w	r3, [sl]
  40274a:	e5e9      	b.n	402320 <_svfprintf_r+0xb0>
  40274c:	9311      	str	r3, [sp, #68]	; 0x44
  40274e:	2a00      	cmp	r2, #0
  402750:	f040 8795 	bne.w	40367e <_svfprintf_r+0x140e>
  402754:	4b22      	ldr	r3, [pc, #136]	; (4027e0 <_svfprintf_r+0x570>)
  402756:	9318      	str	r3, [sp, #96]	; 0x60
  402758:	f01b 0f20 	tst.w	fp, #32
  40275c:	f040 8111 	bne.w	402982 <_svfprintf_r+0x712>
  402760:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402762:	f01b 0f10 	tst.w	fp, #16
  402766:	4613      	mov	r3, r2
  402768:	f040 83e1 	bne.w	402f2e <_svfprintf_r+0xcbe>
  40276c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402770:	f000 83dd 	beq.w	402f2e <_svfprintf_r+0xcbe>
  402774:	3304      	adds	r3, #4
  402776:	8814      	ldrh	r4, [r2, #0]
  402778:	930f      	str	r3, [sp, #60]	; 0x3c
  40277a:	2500      	movs	r5, #0
  40277c:	f01b 0f01 	tst.w	fp, #1
  402780:	f000 810c 	beq.w	40299c <_svfprintf_r+0x72c>
  402784:	ea54 0305 	orrs.w	r3, r4, r5
  402788:	f000 8108 	beq.w	40299c <_svfprintf_r+0x72c>
  40278c:	2330      	movs	r3, #48	; 0x30
  40278e:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402792:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  402796:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40279a:	f04b 0b02 	orr.w	fp, fp, #2
  40279e:	2302      	movs	r3, #2
  4027a0:	e659      	b.n	402456 <_svfprintf_r+0x1e6>
  4027a2:	f89a 3000 	ldrb.w	r3, [sl]
  4027a6:	2900      	cmp	r1, #0
  4027a8:	f47f adba 	bne.w	402320 <_svfprintf_r+0xb0>
  4027ac:	2201      	movs	r2, #1
  4027ae:	2120      	movs	r1, #32
  4027b0:	e5b6      	b.n	402320 <_svfprintf_r+0xb0>
  4027b2:	f04b 0b01 	orr.w	fp, fp, #1
  4027b6:	f89a 3000 	ldrb.w	r3, [sl]
  4027ba:	e5b1      	b.n	402320 <_svfprintf_r+0xb0>
  4027bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4027be:	6823      	ldr	r3, [r4, #0]
  4027c0:	930d      	str	r3, [sp, #52]	; 0x34
  4027c2:	4618      	mov	r0, r3
  4027c4:	2800      	cmp	r0, #0
  4027c6:	4623      	mov	r3, r4
  4027c8:	f103 0304 	add.w	r3, r3, #4
  4027cc:	f6ff ae0a 	blt.w	4023e4 <_svfprintf_r+0x174>
  4027d0:	930f      	str	r3, [sp, #60]	; 0x3c
  4027d2:	f89a 3000 	ldrb.w	r3, [sl]
  4027d6:	e5a3      	b.n	402320 <_svfprintf_r+0xb0>
  4027d8:	00406d4c 	.word	0x00406d4c
  4027dc:	00406d5c 	.word	0x00406d5c
  4027e0:	00406d2c 	.word	0x00406d2c
  4027e4:	f04b 0b10 	orr.w	fp, fp, #16
  4027e8:	f01b 0f20 	tst.w	fp, #32
  4027ec:	9311      	str	r3, [sp, #68]	; 0x44
  4027ee:	f43f ae23 	beq.w	402438 <_svfprintf_r+0x1c8>
  4027f2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4027f4:	3507      	adds	r5, #7
  4027f6:	f025 0307 	bic.w	r3, r5, #7
  4027fa:	f103 0208 	add.w	r2, r3, #8
  4027fe:	e9d3 4500 	ldrd	r4, r5, [r3]
  402802:	920f      	str	r2, [sp, #60]	; 0x3c
  402804:	2301      	movs	r3, #1
  402806:	e626      	b.n	402456 <_svfprintf_r+0x1e6>
  402808:	f89a 3000 	ldrb.w	r3, [sl]
  40280c:	2b2a      	cmp	r3, #42	; 0x2a
  40280e:	f10a 0401 	add.w	r4, sl, #1
  402812:	f000 8727 	beq.w	403664 <_svfprintf_r+0x13f4>
  402816:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40281a:	2809      	cmp	r0, #9
  40281c:	46a2      	mov	sl, r4
  40281e:	f200 86ad 	bhi.w	40357c <_svfprintf_r+0x130c>
  402822:	2300      	movs	r3, #0
  402824:	461c      	mov	r4, r3
  402826:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40282a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40282e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402832:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402836:	2809      	cmp	r0, #9
  402838:	d9f5      	bls.n	402826 <_svfprintf_r+0x5b6>
  40283a:	940a      	str	r4, [sp, #40]	; 0x28
  40283c:	e572      	b.n	402324 <_svfprintf_r+0xb4>
  40283e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402842:	f89a 3000 	ldrb.w	r3, [sl]
  402846:	e56b      	b.n	402320 <_svfprintf_r+0xb0>
  402848:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  40284c:	f89a 3000 	ldrb.w	r3, [sl]
  402850:	e566      	b.n	402320 <_svfprintf_r+0xb0>
  402852:	f89a 3000 	ldrb.w	r3, [sl]
  402856:	2b6c      	cmp	r3, #108	; 0x6c
  402858:	bf03      	ittte	eq
  40285a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40285e:	f04b 0b20 	orreq.w	fp, fp, #32
  402862:	f10a 0a01 	addeq.w	sl, sl, #1
  402866:	f04b 0b10 	orrne.w	fp, fp, #16
  40286a:	e559      	b.n	402320 <_svfprintf_r+0xb0>
  40286c:	2a00      	cmp	r2, #0
  40286e:	f040 8711 	bne.w	403694 <_svfprintf_r+0x1424>
  402872:	f01b 0f20 	tst.w	fp, #32
  402876:	f040 84f9 	bne.w	40326c <_svfprintf_r+0xffc>
  40287a:	f01b 0f10 	tst.w	fp, #16
  40287e:	f040 84ac 	bne.w	4031da <_svfprintf_r+0xf6a>
  402882:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402886:	f000 84a8 	beq.w	4031da <_svfprintf_r+0xf6a>
  40288a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40288c:	6813      	ldr	r3, [r2, #0]
  40288e:	3204      	adds	r2, #4
  402890:	920f      	str	r2, [sp, #60]	; 0x3c
  402892:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402896:	801a      	strh	r2, [r3, #0]
  402898:	e511      	b.n	4022be <_svfprintf_r+0x4e>
  40289a:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40289c:	4bb3      	ldr	r3, [pc, #716]	; (402b6c <_svfprintf_r+0x8fc>)
  40289e:	680c      	ldr	r4, [r1, #0]
  4028a0:	9318      	str	r3, [sp, #96]	; 0x60
  4028a2:	2230      	movs	r2, #48	; 0x30
  4028a4:	2378      	movs	r3, #120	; 0x78
  4028a6:	3104      	adds	r1, #4
  4028a8:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4028ac:	9311      	str	r3, [sp, #68]	; 0x44
  4028ae:	f04b 0b02 	orr.w	fp, fp, #2
  4028b2:	910f      	str	r1, [sp, #60]	; 0x3c
  4028b4:	2500      	movs	r5, #0
  4028b6:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4028ba:	2302      	movs	r3, #2
  4028bc:	e5cb      	b.n	402456 <_svfprintf_r+0x1e6>
  4028be:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4028c0:	9311      	str	r3, [sp, #68]	; 0x44
  4028c2:	680a      	ldr	r2, [r1, #0]
  4028c4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4028c8:	2300      	movs	r3, #0
  4028ca:	460a      	mov	r2, r1
  4028cc:	461f      	mov	r7, r3
  4028ce:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4028d2:	3204      	adds	r2, #4
  4028d4:	2301      	movs	r3, #1
  4028d6:	9308      	str	r3, [sp, #32]
  4028d8:	f8cd b01c 	str.w	fp, [sp, #28]
  4028dc:	970a      	str	r7, [sp, #40]	; 0x28
  4028de:	9712      	str	r7, [sp, #72]	; 0x48
  4028e0:	920f      	str	r2, [sp, #60]	; 0x3c
  4028e2:	930e      	str	r3, [sp, #56]	; 0x38
  4028e4:	ae28      	add	r6, sp, #160	; 0xa0
  4028e6:	e5df      	b.n	4024a8 <_svfprintf_r+0x238>
  4028e8:	9311      	str	r3, [sp, #68]	; 0x44
  4028ea:	2a00      	cmp	r2, #0
  4028ec:	f040 86ea 	bne.w	4036c4 <_svfprintf_r+0x1454>
  4028f0:	f01b 0f20 	tst.w	fp, #32
  4028f4:	d15d      	bne.n	4029b2 <_svfprintf_r+0x742>
  4028f6:	f01b 0f10 	tst.w	fp, #16
  4028fa:	f040 8308 	bne.w	402f0e <_svfprintf_r+0xc9e>
  4028fe:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402902:	f000 8304 	beq.w	402f0e <_svfprintf_r+0xc9e>
  402906:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402908:	f9b1 4000 	ldrsh.w	r4, [r1]
  40290c:	3104      	adds	r1, #4
  40290e:	17e5      	asrs	r5, r4, #31
  402910:	4622      	mov	r2, r4
  402912:	462b      	mov	r3, r5
  402914:	910f      	str	r1, [sp, #60]	; 0x3c
  402916:	2a00      	cmp	r2, #0
  402918:	f173 0300 	sbcs.w	r3, r3, #0
  40291c:	db58      	blt.n	4029d0 <_svfprintf_r+0x760>
  40291e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402920:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402924:	1c4a      	adds	r2, r1, #1
  402926:	f04f 0301 	mov.w	r3, #1
  40292a:	f47f ad9b 	bne.w	402464 <_svfprintf_r+0x1f4>
  40292e:	ea54 0205 	orrs.w	r2, r4, r5
  402932:	f000 81df 	beq.w	402cf4 <_svfprintf_r+0xa84>
  402936:	f8cd b01c 	str.w	fp, [sp, #28]
  40293a:	2b01      	cmp	r3, #1
  40293c:	f000 827b 	beq.w	402e36 <_svfprintf_r+0xbc6>
  402940:	2b02      	cmp	r3, #2
  402942:	f040 8206 	bne.w	402d52 <_svfprintf_r+0xae2>
  402946:	9818      	ldr	r0, [sp, #96]	; 0x60
  402948:	464e      	mov	r6, r9
  40294a:	0923      	lsrs	r3, r4, #4
  40294c:	f004 010f 	and.w	r1, r4, #15
  402950:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402954:	092a      	lsrs	r2, r5, #4
  402956:	461c      	mov	r4, r3
  402958:	4615      	mov	r5, r2
  40295a:	5c43      	ldrb	r3, [r0, r1]
  40295c:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402960:	ea54 0305 	orrs.w	r3, r4, r5
  402964:	d1f1      	bne.n	40294a <_svfprintf_r+0x6da>
  402966:	eba9 0306 	sub.w	r3, r9, r6
  40296a:	930e      	str	r3, [sp, #56]	; 0x38
  40296c:	e590      	b.n	402490 <_svfprintf_r+0x220>
  40296e:	9311      	str	r3, [sp, #68]	; 0x44
  402970:	2a00      	cmp	r2, #0
  402972:	f040 86a3 	bne.w	4036bc <_svfprintf_r+0x144c>
  402976:	4b7e      	ldr	r3, [pc, #504]	; (402b70 <_svfprintf_r+0x900>)
  402978:	9318      	str	r3, [sp, #96]	; 0x60
  40297a:	f01b 0f20 	tst.w	fp, #32
  40297e:	f43f aeef 	beq.w	402760 <_svfprintf_r+0x4f0>
  402982:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402984:	3507      	adds	r5, #7
  402986:	f025 0307 	bic.w	r3, r5, #7
  40298a:	f103 0208 	add.w	r2, r3, #8
  40298e:	f01b 0f01 	tst.w	fp, #1
  402992:	920f      	str	r2, [sp, #60]	; 0x3c
  402994:	e9d3 4500 	ldrd	r4, r5, [r3]
  402998:	f47f aef4 	bne.w	402784 <_svfprintf_r+0x514>
  40299c:	2302      	movs	r3, #2
  40299e:	e55a      	b.n	402456 <_svfprintf_r+0x1e6>
  4029a0:	9311      	str	r3, [sp, #68]	; 0x44
  4029a2:	2a00      	cmp	r2, #0
  4029a4:	f040 8686 	bne.w	4036b4 <_svfprintf_r+0x1444>
  4029a8:	f04b 0b10 	orr.w	fp, fp, #16
  4029ac:	f01b 0f20 	tst.w	fp, #32
  4029b0:	d0a1      	beq.n	4028f6 <_svfprintf_r+0x686>
  4029b2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4029b4:	3507      	adds	r5, #7
  4029b6:	f025 0507 	bic.w	r5, r5, #7
  4029ba:	e9d5 2300 	ldrd	r2, r3, [r5]
  4029be:	2a00      	cmp	r2, #0
  4029c0:	f105 0108 	add.w	r1, r5, #8
  4029c4:	461d      	mov	r5, r3
  4029c6:	f173 0300 	sbcs.w	r3, r3, #0
  4029ca:	910f      	str	r1, [sp, #60]	; 0x3c
  4029cc:	4614      	mov	r4, r2
  4029ce:	daa6      	bge.n	40291e <_svfprintf_r+0x6ae>
  4029d0:	272d      	movs	r7, #45	; 0x2d
  4029d2:	4264      	negs	r4, r4
  4029d4:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4029d8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4029dc:	2301      	movs	r3, #1
  4029de:	e53d      	b.n	40245c <_svfprintf_r+0x1ec>
  4029e0:	9311      	str	r3, [sp, #68]	; 0x44
  4029e2:	2a00      	cmp	r2, #0
  4029e4:	f040 8662 	bne.w	4036ac <_svfprintf_r+0x143c>
  4029e8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4029ea:	3507      	adds	r5, #7
  4029ec:	f025 0307 	bic.w	r3, r5, #7
  4029f0:	f103 0208 	add.w	r2, r3, #8
  4029f4:	920f      	str	r2, [sp, #60]	; 0x3c
  4029f6:	681a      	ldr	r2, [r3, #0]
  4029f8:	9215      	str	r2, [sp, #84]	; 0x54
  4029fa:	685b      	ldr	r3, [r3, #4]
  4029fc:	9314      	str	r3, [sp, #80]	; 0x50
  4029fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402a00:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402a02:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402a06:	4628      	mov	r0, r5
  402a08:	4621      	mov	r1, r4
  402a0a:	f04f 32ff 	mov.w	r2, #4294967295
  402a0e:	4b59      	ldr	r3, [pc, #356]	; (402b74 <_svfprintf_r+0x904>)
  402a10:	f003 fa80 	bl	405f14 <__aeabi_dcmpun>
  402a14:	2800      	cmp	r0, #0
  402a16:	f040 834a 	bne.w	4030ae <_svfprintf_r+0xe3e>
  402a1a:	4628      	mov	r0, r5
  402a1c:	4621      	mov	r1, r4
  402a1e:	f04f 32ff 	mov.w	r2, #4294967295
  402a22:	4b54      	ldr	r3, [pc, #336]	; (402b74 <_svfprintf_r+0x904>)
  402a24:	f003 fa58 	bl	405ed8 <__aeabi_dcmple>
  402a28:	2800      	cmp	r0, #0
  402a2a:	f040 8340 	bne.w	4030ae <_svfprintf_r+0xe3e>
  402a2e:	a815      	add	r0, sp, #84	; 0x54
  402a30:	c80d      	ldmia	r0, {r0, r2, r3}
  402a32:	9914      	ldr	r1, [sp, #80]	; 0x50
  402a34:	f003 fa46 	bl	405ec4 <__aeabi_dcmplt>
  402a38:	2800      	cmp	r0, #0
  402a3a:	f040 8530 	bne.w	40349e <_svfprintf_r+0x122e>
  402a3e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a42:	4e4d      	ldr	r6, [pc, #308]	; (402b78 <_svfprintf_r+0x908>)
  402a44:	4b4d      	ldr	r3, [pc, #308]	; (402b7c <_svfprintf_r+0x90c>)
  402a46:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402a4a:	9007      	str	r0, [sp, #28]
  402a4c:	9811      	ldr	r0, [sp, #68]	; 0x44
  402a4e:	2203      	movs	r2, #3
  402a50:	2100      	movs	r1, #0
  402a52:	9208      	str	r2, [sp, #32]
  402a54:	910a      	str	r1, [sp, #40]	; 0x28
  402a56:	2847      	cmp	r0, #71	; 0x47
  402a58:	bfd8      	it	le
  402a5a:	461e      	movle	r6, r3
  402a5c:	920e      	str	r2, [sp, #56]	; 0x38
  402a5e:	9112      	str	r1, [sp, #72]	; 0x48
  402a60:	e51e      	b.n	4024a0 <_svfprintf_r+0x230>
  402a62:	f04b 0b08 	orr.w	fp, fp, #8
  402a66:	f89a 3000 	ldrb.w	r3, [sl]
  402a6a:	e459      	b.n	402320 <_svfprintf_r+0xb0>
  402a6c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a70:	2300      	movs	r3, #0
  402a72:	461c      	mov	r4, r3
  402a74:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402a78:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402a7c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402a80:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a84:	2809      	cmp	r0, #9
  402a86:	d9f5      	bls.n	402a74 <_svfprintf_r+0x804>
  402a88:	940d      	str	r4, [sp, #52]	; 0x34
  402a8a:	e44b      	b.n	402324 <_svfprintf_r+0xb4>
  402a8c:	f04b 0b10 	orr.w	fp, fp, #16
  402a90:	9311      	str	r3, [sp, #68]	; 0x44
  402a92:	f01b 0320 	ands.w	r3, fp, #32
  402a96:	f43f ae1d 	beq.w	4026d4 <_svfprintf_r+0x464>
  402a9a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402a9c:	3507      	adds	r5, #7
  402a9e:	f025 0307 	bic.w	r3, r5, #7
  402aa2:	f103 0208 	add.w	r2, r3, #8
  402aa6:	e9d3 4500 	ldrd	r4, r5, [r3]
  402aaa:	920f      	str	r2, [sp, #60]	; 0x3c
  402aac:	2300      	movs	r3, #0
  402aae:	e4d2      	b.n	402456 <_svfprintf_r+0x1e6>
  402ab0:	9311      	str	r3, [sp, #68]	; 0x44
  402ab2:	2a00      	cmp	r2, #0
  402ab4:	f040 85e7 	bne.w	403686 <_svfprintf_r+0x1416>
  402ab8:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402aba:	2a00      	cmp	r2, #0
  402abc:	f43f aca3 	beq.w	402406 <_svfprintf_r+0x196>
  402ac0:	2300      	movs	r3, #0
  402ac2:	2101      	movs	r1, #1
  402ac4:	461f      	mov	r7, r3
  402ac6:	9108      	str	r1, [sp, #32]
  402ac8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402acc:	f8cd b01c 	str.w	fp, [sp, #28]
  402ad0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402ad4:	930a      	str	r3, [sp, #40]	; 0x28
  402ad6:	9312      	str	r3, [sp, #72]	; 0x48
  402ad8:	910e      	str	r1, [sp, #56]	; 0x38
  402ada:	ae28      	add	r6, sp, #160	; 0xa0
  402adc:	e4e4      	b.n	4024a8 <_svfprintf_r+0x238>
  402ade:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ae0:	e534      	b.n	40254c <_svfprintf_r+0x2dc>
  402ae2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ae4:	2b65      	cmp	r3, #101	; 0x65
  402ae6:	f340 80a7 	ble.w	402c38 <_svfprintf_r+0x9c8>
  402aea:	a815      	add	r0, sp, #84	; 0x54
  402aec:	c80d      	ldmia	r0, {r0, r2, r3}
  402aee:	9914      	ldr	r1, [sp, #80]	; 0x50
  402af0:	f003 f9de 	bl	405eb0 <__aeabi_dcmpeq>
  402af4:	2800      	cmp	r0, #0
  402af6:	f000 8150 	beq.w	402d9a <_svfprintf_r+0xb2a>
  402afa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402afc:	4a20      	ldr	r2, [pc, #128]	; (402b80 <_svfprintf_r+0x910>)
  402afe:	f8c8 2000 	str.w	r2, [r8]
  402b02:	3301      	adds	r3, #1
  402b04:	3401      	adds	r4, #1
  402b06:	2201      	movs	r2, #1
  402b08:	2b07      	cmp	r3, #7
  402b0a:	9427      	str	r4, [sp, #156]	; 0x9c
  402b0c:	9326      	str	r3, [sp, #152]	; 0x98
  402b0e:	f8c8 2004 	str.w	r2, [r8, #4]
  402b12:	f300 836a 	bgt.w	4031ea <_svfprintf_r+0xf7a>
  402b16:	f108 0808 	add.w	r8, r8, #8
  402b1a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402b1c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402b1e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b20:	4293      	cmp	r3, r2
  402b22:	db03      	blt.n	402b2c <_svfprintf_r+0x8bc>
  402b24:	9b07      	ldr	r3, [sp, #28]
  402b26:	07dd      	lsls	r5, r3, #31
  402b28:	f57f ad82 	bpl.w	402630 <_svfprintf_r+0x3c0>
  402b2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b2e:	9919      	ldr	r1, [sp, #100]	; 0x64
  402b30:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402b32:	f8c8 2000 	str.w	r2, [r8]
  402b36:	3301      	adds	r3, #1
  402b38:	440c      	add	r4, r1
  402b3a:	2b07      	cmp	r3, #7
  402b3c:	f8c8 1004 	str.w	r1, [r8, #4]
  402b40:	9427      	str	r4, [sp, #156]	; 0x9c
  402b42:	9326      	str	r3, [sp, #152]	; 0x98
  402b44:	f300 839e 	bgt.w	403284 <_svfprintf_r+0x1014>
  402b48:	f108 0808 	add.w	r8, r8, #8
  402b4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b4e:	1e5e      	subs	r6, r3, #1
  402b50:	2e00      	cmp	r6, #0
  402b52:	f77f ad6d 	ble.w	402630 <_svfprintf_r+0x3c0>
  402b56:	2e10      	cmp	r6, #16
  402b58:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b5a:	4d0a      	ldr	r5, [pc, #40]	; (402b84 <_svfprintf_r+0x914>)
  402b5c:	f340 81f5 	ble.w	402f4a <_svfprintf_r+0xcda>
  402b60:	4622      	mov	r2, r4
  402b62:	2710      	movs	r7, #16
  402b64:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402b68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402b6a:	e013      	b.n	402b94 <_svfprintf_r+0x924>
  402b6c:	00406d2c 	.word	0x00406d2c
  402b70:	00406d18 	.word	0x00406d18
  402b74:	7fefffff 	.word	0x7fefffff
  402b78:	00406d0c 	.word	0x00406d0c
  402b7c:	00406d08 	.word	0x00406d08
  402b80:	00406d48 	.word	0x00406d48
  402b84:	00406d5c 	.word	0x00406d5c
  402b88:	f108 0808 	add.w	r8, r8, #8
  402b8c:	3e10      	subs	r6, #16
  402b8e:	2e10      	cmp	r6, #16
  402b90:	f340 81da 	ble.w	402f48 <_svfprintf_r+0xcd8>
  402b94:	3301      	adds	r3, #1
  402b96:	3210      	adds	r2, #16
  402b98:	2b07      	cmp	r3, #7
  402b9a:	9227      	str	r2, [sp, #156]	; 0x9c
  402b9c:	9326      	str	r3, [sp, #152]	; 0x98
  402b9e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402ba2:	ddf1      	ble.n	402b88 <_svfprintf_r+0x918>
  402ba4:	aa25      	add	r2, sp, #148	; 0x94
  402ba6:	4621      	mov	r1, r4
  402ba8:	4658      	mov	r0, fp
  402baa:	f002 fcb7 	bl	40551c <__ssprint_r>
  402bae:	2800      	cmp	r0, #0
  402bb0:	f47f ac30 	bne.w	402414 <_svfprintf_r+0x1a4>
  402bb4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402bb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bb8:	46c8      	mov	r8, r9
  402bba:	e7e7      	b.n	402b8c <_svfprintf_r+0x91c>
  402bbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402bbe:	9a08      	ldr	r2, [sp, #32]
  402bc0:	1a9f      	subs	r7, r3, r2
  402bc2:	2f00      	cmp	r7, #0
  402bc4:	f77f ace5 	ble.w	402592 <_svfprintf_r+0x322>
  402bc8:	2f10      	cmp	r7, #16
  402bca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bcc:	4db6      	ldr	r5, [pc, #728]	; (402ea8 <_svfprintf_r+0xc38>)
  402bce:	dd27      	ble.n	402c20 <_svfprintf_r+0x9b0>
  402bd0:	4642      	mov	r2, r8
  402bd2:	4621      	mov	r1, r4
  402bd4:	46b0      	mov	r8, r6
  402bd6:	f04f 0b10 	mov.w	fp, #16
  402bda:	462e      	mov	r6, r5
  402bdc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402bde:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402be0:	e004      	b.n	402bec <_svfprintf_r+0x97c>
  402be2:	3f10      	subs	r7, #16
  402be4:	2f10      	cmp	r7, #16
  402be6:	f102 0208 	add.w	r2, r2, #8
  402bea:	dd15      	ble.n	402c18 <_svfprintf_r+0x9a8>
  402bec:	3301      	adds	r3, #1
  402bee:	3110      	adds	r1, #16
  402bf0:	2b07      	cmp	r3, #7
  402bf2:	9127      	str	r1, [sp, #156]	; 0x9c
  402bf4:	9326      	str	r3, [sp, #152]	; 0x98
  402bf6:	e882 0840 	stmia.w	r2, {r6, fp}
  402bfa:	ddf2      	ble.n	402be2 <_svfprintf_r+0x972>
  402bfc:	aa25      	add	r2, sp, #148	; 0x94
  402bfe:	4629      	mov	r1, r5
  402c00:	4620      	mov	r0, r4
  402c02:	f002 fc8b 	bl	40551c <__ssprint_r>
  402c06:	2800      	cmp	r0, #0
  402c08:	f47f ac04 	bne.w	402414 <_svfprintf_r+0x1a4>
  402c0c:	3f10      	subs	r7, #16
  402c0e:	2f10      	cmp	r7, #16
  402c10:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402c12:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c14:	464a      	mov	r2, r9
  402c16:	dce9      	bgt.n	402bec <_svfprintf_r+0x97c>
  402c18:	4635      	mov	r5, r6
  402c1a:	460c      	mov	r4, r1
  402c1c:	4646      	mov	r6, r8
  402c1e:	4690      	mov	r8, r2
  402c20:	3301      	adds	r3, #1
  402c22:	443c      	add	r4, r7
  402c24:	2b07      	cmp	r3, #7
  402c26:	9427      	str	r4, [sp, #156]	; 0x9c
  402c28:	9326      	str	r3, [sp, #152]	; 0x98
  402c2a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402c2e:	f300 8232 	bgt.w	403096 <_svfprintf_r+0xe26>
  402c32:	f108 0808 	add.w	r8, r8, #8
  402c36:	e4ac      	b.n	402592 <_svfprintf_r+0x322>
  402c38:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c3a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c3c:	2b01      	cmp	r3, #1
  402c3e:	f340 81fe 	ble.w	40303e <_svfprintf_r+0xdce>
  402c42:	3701      	adds	r7, #1
  402c44:	3401      	adds	r4, #1
  402c46:	2301      	movs	r3, #1
  402c48:	2f07      	cmp	r7, #7
  402c4a:	9427      	str	r4, [sp, #156]	; 0x9c
  402c4c:	9726      	str	r7, [sp, #152]	; 0x98
  402c4e:	f8c8 6000 	str.w	r6, [r8]
  402c52:	f8c8 3004 	str.w	r3, [r8, #4]
  402c56:	f300 8203 	bgt.w	403060 <_svfprintf_r+0xdf0>
  402c5a:	f108 0808 	add.w	r8, r8, #8
  402c5e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402c60:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402c62:	f8c8 3000 	str.w	r3, [r8]
  402c66:	3701      	adds	r7, #1
  402c68:	4414      	add	r4, r2
  402c6a:	2f07      	cmp	r7, #7
  402c6c:	9427      	str	r4, [sp, #156]	; 0x9c
  402c6e:	9726      	str	r7, [sp, #152]	; 0x98
  402c70:	f8c8 2004 	str.w	r2, [r8, #4]
  402c74:	f300 8200 	bgt.w	403078 <_svfprintf_r+0xe08>
  402c78:	f108 0808 	add.w	r8, r8, #8
  402c7c:	a815      	add	r0, sp, #84	; 0x54
  402c7e:	c80d      	ldmia	r0, {r0, r2, r3}
  402c80:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c82:	f003 f915 	bl	405eb0 <__aeabi_dcmpeq>
  402c86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c88:	2800      	cmp	r0, #0
  402c8a:	f040 8101 	bne.w	402e90 <_svfprintf_r+0xc20>
  402c8e:	3b01      	subs	r3, #1
  402c90:	3701      	adds	r7, #1
  402c92:	3601      	adds	r6, #1
  402c94:	441c      	add	r4, r3
  402c96:	2f07      	cmp	r7, #7
  402c98:	9726      	str	r7, [sp, #152]	; 0x98
  402c9a:	9427      	str	r4, [sp, #156]	; 0x9c
  402c9c:	f8c8 6000 	str.w	r6, [r8]
  402ca0:	f8c8 3004 	str.w	r3, [r8, #4]
  402ca4:	f300 8127 	bgt.w	402ef6 <_svfprintf_r+0xc86>
  402ca8:	f108 0808 	add.w	r8, r8, #8
  402cac:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402cae:	f8c8 2004 	str.w	r2, [r8, #4]
  402cb2:	3701      	adds	r7, #1
  402cb4:	4414      	add	r4, r2
  402cb6:	ab21      	add	r3, sp, #132	; 0x84
  402cb8:	2f07      	cmp	r7, #7
  402cba:	9427      	str	r4, [sp, #156]	; 0x9c
  402cbc:	9726      	str	r7, [sp, #152]	; 0x98
  402cbe:	f8c8 3000 	str.w	r3, [r8]
  402cc2:	f77f acb3 	ble.w	40262c <_svfprintf_r+0x3bc>
  402cc6:	aa25      	add	r2, sp, #148	; 0x94
  402cc8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cca:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ccc:	f002 fc26 	bl	40551c <__ssprint_r>
  402cd0:	2800      	cmp	r0, #0
  402cd2:	f47f ab9f 	bne.w	402414 <_svfprintf_r+0x1a4>
  402cd6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cd8:	46c8      	mov	r8, r9
  402cda:	e4a9      	b.n	402630 <_svfprintf_r+0x3c0>
  402cdc:	aa25      	add	r2, sp, #148	; 0x94
  402cde:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ce0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ce2:	f002 fc1b 	bl	40551c <__ssprint_r>
  402ce6:	2800      	cmp	r0, #0
  402ce8:	f43f aceb 	beq.w	4026c2 <_svfprintf_r+0x452>
  402cec:	f7ff bb92 	b.w	402414 <_svfprintf_r+0x1a4>
  402cf0:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402cf4:	2b01      	cmp	r3, #1
  402cf6:	f000 8134 	beq.w	402f62 <_svfprintf_r+0xcf2>
  402cfa:	2b02      	cmp	r3, #2
  402cfc:	d125      	bne.n	402d4a <_svfprintf_r+0xada>
  402cfe:	f8cd b01c 	str.w	fp, [sp, #28]
  402d02:	2400      	movs	r4, #0
  402d04:	2500      	movs	r5, #0
  402d06:	e61e      	b.n	402946 <_svfprintf_r+0x6d6>
  402d08:	aa25      	add	r2, sp, #148	; 0x94
  402d0a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d0c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d0e:	f002 fc05 	bl	40551c <__ssprint_r>
  402d12:	2800      	cmp	r0, #0
  402d14:	f47f ab7e 	bne.w	402414 <_svfprintf_r+0x1a4>
  402d18:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d1a:	46c8      	mov	r8, r9
  402d1c:	e475      	b.n	40260a <_svfprintf_r+0x39a>
  402d1e:	aa25      	add	r2, sp, #148	; 0x94
  402d20:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d22:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d24:	f002 fbfa 	bl	40551c <__ssprint_r>
  402d28:	2800      	cmp	r0, #0
  402d2a:	f47f ab73 	bne.w	402414 <_svfprintf_r+0x1a4>
  402d2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d30:	46c8      	mov	r8, r9
  402d32:	e41b      	b.n	40256c <_svfprintf_r+0x2fc>
  402d34:	aa25      	add	r2, sp, #148	; 0x94
  402d36:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d38:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d3a:	f002 fbef 	bl	40551c <__ssprint_r>
  402d3e:	2800      	cmp	r0, #0
  402d40:	f47f ab68 	bne.w	402414 <_svfprintf_r+0x1a4>
  402d44:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d46:	46c8      	mov	r8, r9
  402d48:	e420      	b.n	40258c <_svfprintf_r+0x31c>
  402d4a:	f8cd b01c 	str.w	fp, [sp, #28]
  402d4e:	2400      	movs	r4, #0
  402d50:	2500      	movs	r5, #0
  402d52:	4649      	mov	r1, r9
  402d54:	e000      	b.n	402d58 <_svfprintf_r+0xae8>
  402d56:	4631      	mov	r1, r6
  402d58:	08e2      	lsrs	r2, r4, #3
  402d5a:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402d5e:	08e8      	lsrs	r0, r5, #3
  402d60:	f004 0307 	and.w	r3, r4, #7
  402d64:	4605      	mov	r5, r0
  402d66:	4614      	mov	r4, r2
  402d68:	3330      	adds	r3, #48	; 0x30
  402d6a:	ea54 0205 	orrs.w	r2, r4, r5
  402d6e:	f801 3c01 	strb.w	r3, [r1, #-1]
  402d72:	f101 36ff 	add.w	r6, r1, #4294967295
  402d76:	d1ee      	bne.n	402d56 <_svfprintf_r+0xae6>
  402d78:	9a07      	ldr	r2, [sp, #28]
  402d7a:	07d2      	lsls	r2, r2, #31
  402d7c:	f57f adf3 	bpl.w	402966 <_svfprintf_r+0x6f6>
  402d80:	2b30      	cmp	r3, #48	; 0x30
  402d82:	f43f adf0 	beq.w	402966 <_svfprintf_r+0x6f6>
  402d86:	3902      	subs	r1, #2
  402d88:	2330      	movs	r3, #48	; 0x30
  402d8a:	f806 3c01 	strb.w	r3, [r6, #-1]
  402d8e:	eba9 0301 	sub.w	r3, r9, r1
  402d92:	930e      	str	r3, [sp, #56]	; 0x38
  402d94:	460e      	mov	r6, r1
  402d96:	f7ff bb7b 	b.w	402490 <_svfprintf_r+0x220>
  402d9a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402d9c:	2900      	cmp	r1, #0
  402d9e:	f340 822e 	ble.w	4031fe <_svfprintf_r+0xf8e>
  402da2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402da4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402da6:	4293      	cmp	r3, r2
  402da8:	bfa8      	it	ge
  402daa:	4613      	movge	r3, r2
  402dac:	2b00      	cmp	r3, #0
  402dae:	461f      	mov	r7, r3
  402db0:	dd0d      	ble.n	402dce <_svfprintf_r+0xb5e>
  402db2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402db4:	f8c8 6000 	str.w	r6, [r8]
  402db8:	3301      	adds	r3, #1
  402dba:	443c      	add	r4, r7
  402dbc:	2b07      	cmp	r3, #7
  402dbe:	9427      	str	r4, [sp, #156]	; 0x9c
  402dc0:	f8c8 7004 	str.w	r7, [r8, #4]
  402dc4:	9326      	str	r3, [sp, #152]	; 0x98
  402dc6:	f300 831f 	bgt.w	403408 <_svfprintf_r+0x1198>
  402dca:	f108 0808 	add.w	r8, r8, #8
  402dce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402dd0:	2f00      	cmp	r7, #0
  402dd2:	bfa8      	it	ge
  402dd4:	1bdb      	subge	r3, r3, r7
  402dd6:	2b00      	cmp	r3, #0
  402dd8:	461f      	mov	r7, r3
  402dda:	f340 80d6 	ble.w	402f8a <_svfprintf_r+0xd1a>
  402dde:	2f10      	cmp	r7, #16
  402de0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402de2:	4d31      	ldr	r5, [pc, #196]	; (402ea8 <_svfprintf_r+0xc38>)
  402de4:	f340 81ed 	ble.w	4031c2 <_svfprintf_r+0xf52>
  402de8:	4642      	mov	r2, r8
  402dea:	4621      	mov	r1, r4
  402dec:	46b0      	mov	r8, r6
  402dee:	f04f 0b10 	mov.w	fp, #16
  402df2:	462e      	mov	r6, r5
  402df4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402df6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402df8:	e004      	b.n	402e04 <_svfprintf_r+0xb94>
  402dfa:	3208      	adds	r2, #8
  402dfc:	3f10      	subs	r7, #16
  402dfe:	2f10      	cmp	r7, #16
  402e00:	f340 81db 	ble.w	4031ba <_svfprintf_r+0xf4a>
  402e04:	3301      	adds	r3, #1
  402e06:	3110      	adds	r1, #16
  402e08:	2b07      	cmp	r3, #7
  402e0a:	9127      	str	r1, [sp, #156]	; 0x9c
  402e0c:	9326      	str	r3, [sp, #152]	; 0x98
  402e0e:	e882 0840 	stmia.w	r2, {r6, fp}
  402e12:	ddf2      	ble.n	402dfa <_svfprintf_r+0xb8a>
  402e14:	aa25      	add	r2, sp, #148	; 0x94
  402e16:	4629      	mov	r1, r5
  402e18:	4620      	mov	r0, r4
  402e1a:	f002 fb7f 	bl	40551c <__ssprint_r>
  402e1e:	2800      	cmp	r0, #0
  402e20:	f47f aaf8 	bne.w	402414 <_svfprintf_r+0x1a4>
  402e24:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402e26:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e28:	464a      	mov	r2, r9
  402e2a:	e7e7      	b.n	402dfc <_svfprintf_r+0xb8c>
  402e2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e2e:	930e      	str	r3, [sp, #56]	; 0x38
  402e30:	464e      	mov	r6, r9
  402e32:	f7ff bb2d 	b.w	402490 <_svfprintf_r+0x220>
  402e36:	2d00      	cmp	r5, #0
  402e38:	bf08      	it	eq
  402e3a:	2c0a      	cmpeq	r4, #10
  402e3c:	f0c0 808f 	bcc.w	402f5e <_svfprintf_r+0xcee>
  402e40:	464e      	mov	r6, r9
  402e42:	4620      	mov	r0, r4
  402e44:	4629      	mov	r1, r5
  402e46:	220a      	movs	r2, #10
  402e48:	2300      	movs	r3, #0
  402e4a:	f003 f8a1 	bl	405f90 <__aeabi_uldivmod>
  402e4e:	3230      	adds	r2, #48	; 0x30
  402e50:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402e54:	4620      	mov	r0, r4
  402e56:	4629      	mov	r1, r5
  402e58:	2300      	movs	r3, #0
  402e5a:	220a      	movs	r2, #10
  402e5c:	f003 f898 	bl	405f90 <__aeabi_uldivmod>
  402e60:	4604      	mov	r4, r0
  402e62:	460d      	mov	r5, r1
  402e64:	ea54 0305 	orrs.w	r3, r4, r5
  402e68:	d1eb      	bne.n	402e42 <_svfprintf_r+0xbd2>
  402e6a:	eba9 0306 	sub.w	r3, r9, r6
  402e6e:	930e      	str	r3, [sp, #56]	; 0x38
  402e70:	f7ff bb0e 	b.w	402490 <_svfprintf_r+0x220>
  402e74:	aa25      	add	r2, sp, #148	; 0x94
  402e76:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e78:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e7a:	f002 fb4f 	bl	40551c <__ssprint_r>
  402e7e:	2800      	cmp	r0, #0
  402e80:	f47f aac8 	bne.w	402414 <_svfprintf_r+0x1a4>
  402e84:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402e88:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e8a:	46c8      	mov	r8, r9
  402e8c:	f7ff bb5e 	b.w	40254c <_svfprintf_r+0x2dc>
  402e90:	1e5e      	subs	r6, r3, #1
  402e92:	2e00      	cmp	r6, #0
  402e94:	f77f af0a 	ble.w	402cac <_svfprintf_r+0xa3c>
  402e98:	2e10      	cmp	r6, #16
  402e9a:	4d03      	ldr	r5, [pc, #12]	; (402ea8 <_svfprintf_r+0xc38>)
  402e9c:	dd22      	ble.n	402ee4 <_svfprintf_r+0xc74>
  402e9e:	4622      	mov	r2, r4
  402ea0:	f04f 0b10 	mov.w	fp, #16
  402ea4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402ea6:	e006      	b.n	402eb6 <_svfprintf_r+0xc46>
  402ea8:	00406d5c 	.word	0x00406d5c
  402eac:	3e10      	subs	r6, #16
  402eae:	2e10      	cmp	r6, #16
  402eb0:	f108 0808 	add.w	r8, r8, #8
  402eb4:	dd15      	ble.n	402ee2 <_svfprintf_r+0xc72>
  402eb6:	3701      	adds	r7, #1
  402eb8:	3210      	adds	r2, #16
  402eba:	2f07      	cmp	r7, #7
  402ebc:	9227      	str	r2, [sp, #156]	; 0x9c
  402ebe:	9726      	str	r7, [sp, #152]	; 0x98
  402ec0:	e888 0820 	stmia.w	r8, {r5, fp}
  402ec4:	ddf2      	ble.n	402eac <_svfprintf_r+0xc3c>
  402ec6:	aa25      	add	r2, sp, #148	; 0x94
  402ec8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402eca:	4620      	mov	r0, r4
  402ecc:	f002 fb26 	bl	40551c <__ssprint_r>
  402ed0:	2800      	cmp	r0, #0
  402ed2:	f47f aa9f 	bne.w	402414 <_svfprintf_r+0x1a4>
  402ed6:	3e10      	subs	r6, #16
  402ed8:	2e10      	cmp	r6, #16
  402eda:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402edc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402ede:	46c8      	mov	r8, r9
  402ee0:	dce9      	bgt.n	402eb6 <_svfprintf_r+0xc46>
  402ee2:	4614      	mov	r4, r2
  402ee4:	3701      	adds	r7, #1
  402ee6:	4434      	add	r4, r6
  402ee8:	2f07      	cmp	r7, #7
  402eea:	9427      	str	r4, [sp, #156]	; 0x9c
  402eec:	9726      	str	r7, [sp, #152]	; 0x98
  402eee:	e888 0060 	stmia.w	r8, {r5, r6}
  402ef2:	f77f aed9 	ble.w	402ca8 <_svfprintf_r+0xa38>
  402ef6:	aa25      	add	r2, sp, #148	; 0x94
  402ef8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402efa:	980c      	ldr	r0, [sp, #48]	; 0x30
  402efc:	f002 fb0e 	bl	40551c <__ssprint_r>
  402f00:	2800      	cmp	r0, #0
  402f02:	f47f aa87 	bne.w	402414 <_svfprintf_r+0x1a4>
  402f06:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f08:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402f0a:	46c8      	mov	r8, r9
  402f0c:	e6ce      	b.n	402cac <_svfprintf_r+0xa3c>
  402f0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f10:	6814      	ldr	r4, [r2, #0]
  402f12:	4613      	mov	r3, r2
  402f14:	3304      	adds	r3, #4
  402f16:	17e5      	asrs	r5, r4, #31
  402f18:	930f      	str	r3, [sp, #60]	; 0x3c
  402f1a:	4622      	mov	r2, r4
  402f1c:	462b      	mov	r3, r5
  402f1e:	e4fa      	b.n	402916 <_svfprintf_r+0x6a6>
  402f20:	3204      	adds	r2, #4
  402f22:	681c      	ldr	r4, [r3, #0]
  402f24:	920f      	str	r2, [sp, #60]	; 0x3c
  402f26:	2301      	movs	r3, #1
  402f28:	2500      	movs	r5, #0
  402f2a:	f7ff ba94 	b.w	402456 <_svfprintf_r+0x1e6>
  402f2e:	681c      	ldr	r4, [r3, #0]
  402f30:	3304      	adds	r3, #4
  402f32:	930f      	str	r3, [sp, #60]	; 0x3c
  402f34:	2500      	movs	r5, #0
  402f36:	e421      	b.n	40277c <_svfprintf_r+0x50c>
  402f38:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402f3a:	460a      	mov	r2, r1
  402f3c:	3204      	adds	r2, #4
  402f3e:	680c      	ldr	r4, [r1, #0]
  402f40:	920f      	str	r2, [sp, #60]	; 0x3c
  402f42:	2500      	movs	r5, #0
  402f44:	f7ff ba87 	b.w	402456 <_svfprintf_r+0x1e6>
  402f48:	4614      	mov	r4, r2
  402f4a:	3301      	adds	r3, #1
  402f4c:	4434      	add	r4, r6
  402f4e:	2b07      	cmp	r3, #7
  402f50:	9427      	str	r4, [sp, #156]	; 0x9c
  402f52:	9326      	str	r3, [sp, #152]	; 0x98
  402f54:	e888 0060 	stmia.w	r8, {r5, r6}
  402f58:	f77f ab68 	ble.w	40262c <_svfprintf_r+0x3bc>
  402f5c:	e6b3      	b.n	402cc6 <_svfprintf_r+0xa56>
  402f5e:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402f62:	f8cd b01c 	str.w	fp, [sp, #28]
  402f66:	ae42      	add	r6, sp, #264	; 0x108
  402f68:	3430      	adds	r4, #48	; 0x30
  402f6a:	2301      	movs	r3, #1
  402f6c:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402f70:	930e      	str	r3, [sp, #56]	; 0x38
  402f72:	f7ff ba8d 	b.w	402490 <_svfprintf_r+0x220>
  402f76:	aa25      	add	r2, sp, #148	; 0x94
  402f78:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f7a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f7c:	f002 face 	bl	40551c <__ssprint_r>
  402f80:	2800      	cmp	r0, #0
  402f82:	f47f aa47 	bne.w	402414 <_svfprintf_r+0x1a4>
  402f86:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f88:	46c8      	mov	r8, r9
  402f8a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f8c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f8e:	429a      	cmp	r2, r3
  402f90:	db44      	blt.n	40301c <_svfprintf_r+0xdac>
  402f92:	9b07      	ldr	r3, [sp, #28]
  402f94:	07d9      	lsls	r1, r3, #31
  402f96:	d441      	bmi.n	40301c <_svfprintf_r+0xdac>
  402f98:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f9a:	9812      	ldr	r0, [sp, #72]	; 0x48
  402f9c:	1a9a      	subs	r2, r3, r2
  402f9e:	1a1d      	subs	r5, r3, r0
  402fa0:	4295      	cmp	r5, r2
  402fa2:	bfa8      	it	ge
  402fa4:	4615      	movge	r5, r2
  402fa6:	2d00      	cmp	r5, #0
  402fa8:	dd0e      	ble.n	402fc8 <_svfprintf_r+0xd58>
  402faa:	9926      	ldr	r1, [sp, #152]	; 0x98
  402fac:	f8c8 5004 	str.w	r5, [r8, #4]
  402fb0:	3101      	adds	r1, #1
  402fb2:	4406      	add	r6, r0
  402fb4:	442c      	add	r4, r5
  402fb6:	2907      	cmp	r1, #7
  402fb8:	f8c8 6000 	str.w	r6, [r8]
  402fbc:	9427      	str	r4, [sp, #156]	; 0x9c
  402fbe:	9126      	str	r1, [sp, #152]	; 0x98
  402fc0:	f300 823b 	bgt.w	40343a <_svfprintf_r+0x11ca>
  402fc4:	f108 0808 	add.w	r8, r8, #8
  402fc8:	2d00      	cmp	r5, #0
  402fca:	bfac      	ite	ge
  402fcc:	1b56      	subge	r6, r2, r5
  402fce:	4616      	movlt	r6, r2
  402fd0:	2e00      	cmp	r6, #0
  402fd2:	f77f ab2d 	ble.w	402630 <_svfprintf_r+0x3c0>
  402fd6:	2e10      	cmp	r6, #16
  402fd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fda:	4db0      	ldr	r5, [pc, #704]	; (40329c <_svfprintf_r+0x102c>)
  402fdc:	ddb5      	ble.n	402f4a <_svfprintf_r+0xcda>
  402fde:	4622      	mov	r2, r4
  402fe0:	2710      	movs	r7, #16
  402fe2:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402fe6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402fe8:	e004      	b.n	402ff4 <_svfprintf_r+0xd84>
  402fea:	f108 0808 	add.w	r8, r8, #8
  402fee:	3e10      	subs	r6, #16
  402ff0:	2e10      	cmp	r6, #16
  402ff2:	dda9      	ble.n	402f48 <_svfprintf_r+0xcd8>
  402ff4:	3301      	adds	r3, #1
  402ff6:	3210      	adds	r2, #16
  402ff8:	2b07      	cmp	r3, #7
  402ffa:	9227      	str	r2, [sp, #156]	; 0x9c
  402ffc:	9326      	str	r3, [sp, #152]	; 0x98
  402ffe:	e888 00a0 	stmia.w	r8, {r5, r7}
  403002:	ddf2      	ble.n	402fea <_svfprintf_r+0xd7a>
  403004:	aa25      	add	r2, sp, #148	; 0x94
  403006:	4621      	mov	r1, r4
  403008:	4658      	mov	r0, fp
  40300a:	f002 fa87 	bl	40551c <__ssprint_r>
  40300e:	2800      	cmp	r0, #0
  403010:	f47f aa00 	bne.w	402414 <_svfprintf_r+0x1a4>
  403014:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403016:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403018:	46c8      	mov	r8, r9
  40301a:	e7e8      	b.n	402fee <_svfprintf_r+0xd7e>
  40301c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40301e:	9819      	ldr	r0, [sp, #100]	; 0x64
  403020:	991a      	ldr	r1, [sp, #104]	; 0x68
  403022:	f8c8 1000 	str.w	r1, [r8]
  403026:	3301      	adds	r3, #1
  403028:	4404      	add	r4, r0
  40302a:	2b07      	cmp	r3, #7
  40302c:	9427      	str	r4, [sp, #156]	; 0x9c
  40302e:	f8c8 0004 	str.w	r0, [r8, #4]
  403032:	9326      	str	r3, [sp, #152]	; 0x98
  403034:	f300 81f5 	bgt.w	403422 <_svfprintf_r+0x11b2>
  403038:	f108 0808 	add.w	r8, r8, #8
  40303c:	e7ac      	b.n	402f98 <_svfprintf_r+0xd28>
  40303e:	9b07      	ldr	r3, [sp, #28]
  403040:	07da      	lsls	r2, r3, #31
  403042:	f53f adfe 	bmi.w	402c42 <_svfprintf_r+0x9d2>
  403046:	3701      	adds	r7, #1
  403048:	3401      	adds	r4, #1
  40304a:	2301      	movs	r3, #1
  40304c:	2f07      	cmp	r7, #7
  40304e:	9427      	str	r4, [sp, #156]	; 0x9c
  403050:	9726      	str	r7, [sp, #152]	; 0x98
  403052:	f8c8 6000 	str.w	r6, [r8]
  403056:	f8c8 3004 	str.w	r3, [r8, #4]
  40305a:	f77f ae25 	ble.w	402ca8 <_svfprintf_r+0xa38>
  40305e:	e74a      	b.n	402ef6 <_svfprintf_r+0xc86>
  403060:	aa25      	add	r2, sp, #148	; 0x94
  403062:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403064:	980c      	ldr	r0, [sp, #48]	; 0x30
  403066:	f002 fa59 	bl	40551c <__ssprint_r>
  40306a:	2800      	cmp	r0, #0
  40306c:	f47f a9d2 	bne.w	402414 <_svfprintf_r+0x1a4>
  403070:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403072:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403074:	46c8      	mov	r8, r9
  403076:	e5f2      	b.n	402c5e <_svfprintf_r+0x9ee>
  403078:	aa25      	add	r2, sp, #148	; 0x94
  40307a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40307c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40307e:	f002 fa4d 	bl	40551c <__ssprint_r>
  403082:	2800      	cmp	r0, #0
  403084:	f47f a9c6 	bne.w	402414 <_svfprintf_r+0x1a4>
  403088:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40308a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40308c:	46c8      	mov	r8, r9
  40308e:	e5f5      	b.n	402c7c <_svfprintf_r+0xa0c>
  403090:	464e      	mov	r6, r9
  403092:	f7ff b9fd 	b.w	402490 <_svfprintf_r+0x220>
  403096:	aa25      	add	r2, sp, #148	; 0x94
  403098:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40309a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40309c:	f002 fa3e 	bl	40551c <__ssprint_r>
  4030a0:	2800      	cmp	r0, #0
  4030a2:	f47f a9b7 	bne.w	402414 <_svfprintf_r+0x1a4>
  4030a6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030a8:	46c8      	mov	r8, r9
  4030aa:	f7ff ba72 	b.w	402592 <_svfprintf_r+0x322>
  4030ae:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4030b0:	4622      	mov	r2, r4
  4030b2:	4620      	mov	r0, r4
  4030b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4030b6:	4623      	mov	r3, r4
  4030b8:	4621      	mov	r1, r4
  4030ba:	f002 ff2b 	bl	405f14 <__aeabi_dcmpun>
  4030be:	2800      	cmp	r0, #0
  4030c0:	f040 8286 	bne.w	4035d0 <_svfprintf_r+0x1360>
  4030c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4030c6:	3301      	adds	r3, #1
  4030c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4030ca:	f023 0320 	bic.w	r3, r3, #32
  4030ce:	930e      	str	r3, [sp, #56]	; 0x38
  4030d0:	f000 81e2 	beq.w	403498 <_svfprintf_r+0x1228>
  4030d4:	2b47      	cmp	r3, #71	; 0x47
  4030d6:	f000 811e 	beq.w	403316 <_svfprintf_r+0x10a6>
  4030da:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4030de:	9307      	str	r3, [sp, #28]
  4030e0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4030e2:	1e1f      	subs	r7, r3, #0
  4030e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4030e6:	9308      	str	r3, [sp, #32]
  4030e8:	bfbb      	ittet	lt
  4030ea:	463b      	movlt	r3, r7
  4030ec:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4030f0:	2300      	movge	r3, #0
  4030f2:	232d      	movlt	r3, #45	; 0x2d
  4030f4:	9310      	str	r3, [sp, #64]	; 0x40
  4030f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4030f8:	2b66      	cmp	r3, #102	; 0x66
  4030fa:	f000 81bb 	beq.w	403474 <_svfprintf_r+0x1204>
  4030fe:	2b46      	cmp	r3, #70	; 0x46
  403100:	f000 80df 	beq.w	4032c2 <_svfprintf_r+0x1052>
  403104:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403106:	9a08      	ldr	r2, [sp, #32]
  403108:	2b45      	cmp	r3, #69	; 0x45
  40310a:	bf0c      	ite	eq
  40310c:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  40310e:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403110:	a823      	add	r0, sp, #140	; 0x8c
  403112:	a920      	add	r1, sp, #128	; 0x80
  403114:	bf08      	it	eq
  403116:	1c5d      	addeq	r5, r3, #1
  403118:	9004      	str	r0, [sp, #16]
  40311a:	9103      	str	r1, [sp, #12]
  40311c:	a81f      	add	r0, sp, #124	; 0x7c
  40311e:	2102      	movs	r1, #2
  403120:	463b      	mov	r3, r7
  403122:	9002      	str	r0, [sp, #8]
  403124:	9501      	str	r5, [sp, #4]
  403126:	9100      	str	r1, [sp, #0]
  403128:	980c      	ldr	r0, [sp, #48]	; 0x30
  40312a:	f000 fb75 	bl	403818 <_dtoa_r>
  40312e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403130:	2b67      	cmp	r3, #103	; 0x67
  403132:	4606      	mov	r6, r0
  403134:	f040 81e0 	bne.w	4034f8 <_svfprintf_r+0x1288>
  403138:	f01b 0f01 	tst.w	fp, #1
  40313c:	f000 8246 	beq.w	4035cc <_svfprintf_r+0x135c>
  403140:	1974      	adds	r4, r6, r5
  403142:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403144:	9808      	ldr	r0, [sp, #32]
  403146:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403148:	4639      	mov	r1, r7
  40314a:	f002 feb1 	bl	405eb0 <__aeabi_dcmpeq>
  40314e:	2800      	cmp	r0, #0
  403150:	f040 8165 	bne.w	40341e <_svfprintf_r+0x11ae>
  403154:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403156:	42a3      	cmp	r3, r4
  403158:	d206      	bcs.n	403168 <_svfprintf_r+0xef8>
  40315a:	2130      	movs	r1, #48	; 0x30
  40315c:	1c5a      	adds	r2, r3, #1
  40315e:	9223      	str	r2, [sp, #140]	; 0x8c
  403160:	7019      	strb	r1, [r3, #0]
  403162:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403164:	429c      	cmp	r4, r3
  403166:	d8f9      	bhi.n	40315c <_svfprintf_r+0xeec>
  403168:	1b9b      	subs	r3, r3, r6
  40316a:	9313      	str	r3, [sp, #76]	; 0x4c
  40316c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40316e:	2b47      	cmp	r3, #71	; 0x47
  403170:	f000 80e9 	beq.w	403346 <_svfprintf_r+0x10d6>
  403174:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403176:	2b65      	cmp	r3, #101	; 0x65
  403178:	f340 81cd 	ble.w	403516 <_svfprintf_r+0x12a6>
  40317c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40317e:	2b66      	cmp	r3, #102	; 0x66
  403180:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403182:	9312      	str	r3, [sp, #72]	; 0x48
  403184:	f000 819e 	beq.w	4034c4 <_svfprintf_r+0x1254>
  403188:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40318a:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40318c:	4619      	mov	r1, r3
  40318e:	4291      	cmp	r1, r2
  403190:	f300 818a 	bgt.w	4034a8 <_svfprintf_r+0x1238>
  403194:	f01b 0f01 	tst.w	fp, #1
  403198:	f040 8213 	bne.w	4035c2 <_svfprintf_r+0x1352>
  40319c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4031a0:	9308      	str	r3, [sp, #32]
  4031a2:	2367      	movs	r3, #103	; 0x67
  4031a4:	920e      	str	r2, [sp, #56]	; 0x38
  4031a6:	9311      	str	r3, [sp, #68]	; 0x44
  4031a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4031aa:	2b00      	cmp	r3, #0
  4031ac:	f040 80c4 	bne.w	403338 <_svfprintf_r+0x10c8>
  4031b0:	930a      	str	r3, [sp, #40]	; 0x28
  4031b2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4031b6:	f7ff b973 	b.w	4024a0 <_svfprintf_r+0x230>
  4031ba:	4635      	mov	r5, r6
  4031bc:	460c      	mov	r4, r1
  4031be:	4646      	mov	r6, r8
  4031c0:	4690      	mov	r8, r2
  4031c2:	3301      	adds	r3, #1
  4031c4:	443c      	add	r4, r7
  4031c6:	2b07      	cmp	r3, #7
  4031c8:	9427      	str	r4, [sp, #156]	; 0x9c
  4031ca:	9326      	str	r3, [sp, #152]	; 0x98
  4031cc:	e888 00a0 	stmia.w	r8, {r5, r7}
  4031d0:	f73f aed1 	bgt.w	402f76 <_svfprintf_r+0xd06>
  4031d4:	f108 0808 	add.w	r8, r8, #8
  4031d8:	e6d7      	b.n	402f8a <_svfprintf_r+0xd1a>
  4031da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4031dc:	6813      	ldr	r3, [r2, #0]
  4031de:	3204      	adds	r2, #4
  4031e0:	920f      	str	r2, [sp, #60]	; 0x3c
  4031e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4031e4:	601a      	str	r2, [r3, #0]
  4031e6:	f7ff b86a 	b.w	4022be <_svfprintf_r+0x4e>
  4031ea:	aa25      	add	r2, sp, #148	; 0x94
  4031ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031ee:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031f0:	f002 f994 	bl	40551c <__ssprint_r>
  4031f4:	2800      	cmp	r0, #0
  4031f6:	f47f a90d 	bne.w	402414 <_svfprintf_r+0x1a4>
  4031fa:	46c8      	mov	r8, r9
  4031fc:	e48d      	b.n	402b1a <_svfprintf_r+0x8aa>
  4031fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403200:	4a27      	ldr	r2, [pc, #156]	; (4032a0 <_svfprintf_r+0x1030>)
  403202:	f8c8 2000 	str.w	r2, [r8]
  403206:	3301      	adds	r3, #1
  403208:	3401      	adds	r4, #1
  40320a:	2201      	movs	r2, #1
  40320c:	2b07      	cmp	r3, #7
  40320e:	9427      	str	r4, [sp, #156]	; 0x9c
  403210:	9326      	str	r3, [sp, #152]	; 0x98
  403212:	f8c8 2004 	str.w	r2, [r8, #4]
  403216:	dc72      	bgt.n	4032fe <_svfprintf_r+0x108e>
  403218:	f108 0808 	add.w	r8, r8, #8
  40321c:	b929      	cbnz	r1, 40322a <_svfprintf_r+0xfba>
  40321e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403220:	b91b      	cbnz	r3, 40322a <_svfprintf_r+0xfba>
  403222:	9b07      	ldr	r3, [sp, #28]
  403224:	07d8      	lsls	r0, r3, #31
  403226:	f57f aa03 	bpl.w	402630 <_svfprintf_r+0x3c0>
  40322a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40322c:	9819      	ldr	r0, [sp, #100]	; 0x64
  40322e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403230:	f8c8 2000 	str.w	r2, [r8]
  403234:	3301      	adds	r3, #1
  403236:	4602      	mov	r2, r0
  403238:	4422      	add	r2, r4
  40323a:	2b07      	cmp	r3, #7
  40323c:	9227      	str	r2, [sp, #156]	; 0x9c
  40323e:	f8c8 0004 	str.w	r0, [r8, #4]
  403242:	9326      	str	r3, [sp, #152]	; 0x98
  403244:	f300 818d 	bgt.w	403562 <_svfprintf_r+0x12f2>
  403248:	f108 0808 	add.w	r8, r8, #8
  40324c:	2900      	cmp	r1, #0
  40324e:	f2c0 8165 	blt.w	40351c <_svfprintf_r+0x12ac>
  403252:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403254:	f8c8 6000 	str.w	r6, [r8]
  403258:	3301      	adds	r3, #1
  40325a:	188c      	adds	r4, r1, r2
  40325c:	2b07      	cmp	r3, #7
  40325e:	9427      	str	r4, [sp, #156]	; 0x9c
  403260:	9326      	str	r3, [sp, #152]	; 0x98
  403262:	f8c8 1004 	str.w	r1, [r8, #4]
  403266:	f77f a9e1 	ble.w	40262c <_svfprintf_r+0x3bc>
  40326a:	e52c      	b.n	402cc6 <_svfprintf_r+0xa56>
  40326c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40326e:	9909      	ldr	r1, [sp, #36]	; 0x24
  403270:	6813      	ldr	r3, [r2, #0]
  403272:	17cd      	asrs	r5, r1, #31
  403274:	4608      	mov	r0, r1
  403276:	3204      	adds	r2, #4
  403278:	4629      	mov	r1, r5
  40327a:	920f      	str	r2, [sp, #60]	; 0x3c
  40327c:	e9c3 0100 	strd	r0, r1, [r3]
  403280:	f7ff b81d 	b.w	4022be <_svfprintf_r+0x4e>
  403284:	aa25      	add	r2, sp, #148	; 0x94
  403286:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403288:	980c      	ldr	r0, [sp, #48]	; 0x30
  40328a:	f002 f947 	bl	40551c <__ssprint_r>
  40328e:	2800      	cmp	r0, #0
  403290:	f47f a8c0 	bne.w	402414 <_svfprintf_r+0x1a4>
  403294:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403296:	46c8      	mov	r8, r9
  403298:	e458      	b.n	402b4c <_svfprintf_r+0x8dc>
  40329a:	bf00      	nop
  40329c:	00406d5c 	.word	0x00406d5c
  4032a0:	00406d48 	.word	0x00406d48
  4032a4:	2140      	movs	r1, #64	; 0x40
  4032a6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032a8:	f001 fa0c 	bl	4046c4 <_malloc_r>
  4032ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4032ae:	6010      	str	r0, [r2, #0]
  4032b0:	6110      	str	r0, [r2, #16]
  4032b2:	2800      	cmp	r0, #0
  4032b4:	f000 81f2 	beq.w	40369c <_svfprintf_r+0x142c>
  4032b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4032ba:	2340      	movs	r3, #64	; 0x40
  4032bc:	6153      	str	r3, [r2, #20]
  4032be:	f7fe bfee 	b.w	40229e <_svfprintf_r+0x2e>
  4032c2:	a823      	add	r0, sp, #140	; 0x8c
  4032c4:	a920      	add	r1, sp, #128	; 0x80
  4032c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4032c8:	9004      	str	r0, [sp, #16]
  4032ca:	9103      	str	r1, [sp, #12]
  4032cc:	a81f      	add	r0, sp, #124	; 0x7c
  4032ce:	2103      	movs	r1, #3
  4032d0:	9002      	str	r0, [sp, #8]
  4032d2:	9a08      	ldr	r2, [sp, #32]
  4032d4:	9401      	str	r4, [sp, #4]
  4032d6:	463b      	mov	r3, r7
  4032d8:	9100      	str	r1, [sp, #0]
  4032da:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032dc:	f000 fa9c 	bl	403818 <_dtoa_r>
  4032e0:	4625      	mov	r5, r4
  4032e2:	4606      	mov	r6, r0
  4032e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032e6:	2b46      	cmp	r3, #70	; 0x46
  4032e8:	eb06 0405 	add.w	r4, r6, r5
  4032ec:	f47f af29 	bne.w	403142 <_svfprintf_r+0xed2>
  4032f0:	7833      	ldrb	r3, [r6, #0]
  4032f2:	2b30      	cmp	r3, #48	; 0x30
  4032f4:	f000 8178 	beq.w	4035e8 <_svfprintf_r+0x1378>
  4032f8:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  4032fa:	442c      	add	r4, r5
  4032fc:	e721      	b.n	403142 <_svfprintf_r+0xed2>
  4032fe:	aa25      	add	r2, sp, #148	; 0x94
  403300:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403302:	980c      	ldr	r0, [sp, #48]	; 0x30
  403304:	f002 f90a 	bl	40551c <__ssprint_r>
  403308:	2800      	cmp	r0, #0
  40330a:	f47f a883 	bne.w	402414 <_svfprintf_r+0x1a4>
  40330e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403310:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403312:	46c8      	mov	r8, r9
  403314:	e782      	b.n	40321c <_svfprintf_r+0xfac>
  403316:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403318:	2b00      	cmp	r3, #0
  40331a:	bf08      	it	eq
  40331c:	2301      	moveq	r3, #1
  40331e:	930a      	str	r3, [sp, #40]	; 0x28
  403320:	e6db      	b.n	4030da <_svfprintf_r+0xe6a>
  403322:	4630      	mov	r0, r6
  403324:	940a      	str	r4, [sp, #40]	; 0x28
  403326:	f002 f88b 	bl	405440 <strlen>
  40332a:	950f      	str	r5, [sp, #60]	; 0x3c
  40332c:	900e      	str	r0, [sp, #56]	; 0x38
  40332e:	f8cd b01c 	str.w	fp, [sp, #28]
  403332:	4603      	mov	r3, r0
  403334:	f7ff b9f9 	b.w	40272a <_svfprintf_r+0x4ba>
  403338:	272d      	movs	r7, #45	; 0x2d
  40333a:	2300      	movs	r3, #0
  40333c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403340:	930a      	str	r3, [sp, #40]	; 0x28
  403342:	f7ff b8ae 	b.w	4024a2 <_svfprintf_r+0x232>
  403346:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403348:	9312      	str	r3, [sp, #72]	; 0x48
  40334a:	461a      	mov	r2, r3
  40334c:	3303      	adds	r3, #3
  40334e:	db04      	blt.n	40335a <_svfprintf_r+0x10ea>
  403350:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403352:	4619      	mov	r1, r3
  403354:	4291      	cmp	r1, r2
  403356:	f6bf af17 	bge.w	403188 <_svfprintf_r+0xf18>
  40335a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40335c:	3b02      	subs	r3, #2
  40335e:	9311      	str	r3, [sp, #68]	; 0x44
  403360:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403364:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403368:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40336a:	3b01      	subs	r3, #1
  40336c:	2b00      	cmp	r3, #0
  40336e:	931f      	str	r3, [sp, #124]	; 0x7c
  403370:	bfbd      	ittte	lt
  403372:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403374:	f1c3 0301 	rsblt	r3, r3, #1
  403378:	222d      	movlt	r2, #45	; 0x2d
  40337a:	222b      	movge	r2, #43	; 0x2b
  40337c:	2b09      	cmp	r3, #9
  40337e:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  403382:	f340 8116 	ble.w	4035b2 <_svfprintf_r+0x1342>
  403386:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  40338a:	4620      	mov	r0, r4
  40338c:	4dab      	ldr	r5, [pc, #684]	; (40363c <_svfprintf_r+0x13cc>)
  40338e:	e000      	b.n	403392 <_svfprintf_r+0x1122>
  403390:	4610      	mov	r0, r2
  403392:	fb85 1203 	smull	r1, r2, r5, r3
  403396:	17d9      	asrs	r1, r3, #31
  403398:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  40339c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4033a0:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4033a4:	3230      	adds	r2, #48	; 0x30
  4033a6:	2909      	cmp	r1, #9
  4033a8:	f800 2c01 	strb.w	r2, [r0, #-1]
  4033ac:	460b      	mov	r3, r1
  4033ae:	f100 32ff 	add.w	r2, r0, #4294967295
  4033b2:	dced      	bgt.n	403390 <_svfprintf_r+0x1120>
  4033b4:	3330      	adds	r3, #48	; 0x30
  4033b6:	3802      	subs	r0, #2
  4033b8:	b2d9      	uxtb	r1, r3
  4033ba:	4284      	cmp	r4, r0
  4033bc:	f802 1c01 	strb.w	r1, [r2, #-1]
  4033c0:	f240 8165 	bls.w	40368e <_svfprintf_r+0x141e>
  4033c4:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4033c8:	4613      	mov	r3, r2
  4033ca:	e001      	b.n	4033d0 <_svfprintf_r+0x1160>
  4033cc:	f813 1b01 	ldrb.w	r1, [r3], #1
  4033d0:	f800 1b01 	strb.w	r1, [r0], #1
  4033d4:	42a3      	cmp	r3, r4
  4033d6:	d1f9      	bne.n	4033cc <_svfprintf_r+0x115c>
  4033d8:	3301      	adds	r3, #1
  4033da:	1a9b      	subs	r3, r3, r2
  4033dc:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  4033e0:	4413      	add	r3, r2
  4033e2:	aa21      	add	r2, sp, #132	; 0x84
  4033e4:	1a9b      	subs	r3, r3, r2
  4033e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4033e8:	931b      	str	r3, [sp, #108]	; 0x6c
  4033ea:	2a01      	cmp	r2, #1
  4033ec:	4413      	add	r3, r2
  4033ee:	930e      	str	r3, [sp, #56]	; 0x38
  4033f0:	f340 8119 	ble.w	403626 <_svfprintf_r+0x13b6>
  4033f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4033f6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4033f8:	4413      	add	r3, r2
  4033fa:	930e      	str	r3, [sp, #56]	; 0x38
  4033fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403400:	9308      	str	r3, [sp, #32]
  403402:	2300      	movs	r3, #0
  403404:	9312      	str	r3, [sp, #72]	; 0x48
  403406:	e6cf      	b.n	4031a8 <_svfprintf_r+0xf38>
  403408:	aa25      	add	r2, sp, #148	; 0x94
  40340a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40340c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40340e:	f002 f885 	bl	40551c <__ssprint_r>
  403412:	2800      	cmp	r0, #0
  403414:	f47e affe 	bne.w	402414 <_svfprintf_r+0x1a4>
  403418:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40341a:	46c8      	mov	r8, r9
  40341c:	e4d7      	b.n	402dce <_svfprintf_r+0xb5e>
  40341e:	4623      	mov	r3, r4
  403420:	e6a2      	b.n	403168 <_svfprintf_r+0xef8>
  403422:	aa25      	add	r2, sp, #148	; 0x94
  403424:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403426:	980c      	ldr	r0, [sp, #48]	; 0x30
  403428:	f002 f878 	bl	40551c <__ssprint_r>
  40342c:	2800      	cmp	r0, #0
  40342e:	f47e aff1 	bne.w	402414 <_svfprintf_r+0x1a4>
  403432:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403434:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403436:	46c8      	mov	r8, r9
  403438:	e5ae      	b.n	402f98 <_svfprintf_r+0xd28>
  40343a:	aa25      	add	r2, sp, #148	; 0x94
  40343c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40343e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403440:	f002 f86c 	bl	40551c <__ssprint_r>
  403444:	2800      	cmp	r0, #0
  403446:	f47e afe5 	bne.w	402414 <_svfprintf_r+0x1a4>
  40344a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40344c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40344e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403450:	1a9a      	subs	r2, r3, r2
  403452:	46c8      	mov	r8, r9
  403454:	e5b8      	b.n	402fc8 <_svfprintf_r+0xd58>
  403456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403458:	9612      	str	r6, [sp, #72]	; 0x48
  40345a:	2b06      	cmp	r3, #6
  40345c:	bf28      	it	cs
  40345e:	2306      	movcs	r3, #6
  403460:	960a      	str	r6, [sp, #40]	; 0x28
  403462:	4637      	mov	r7, r6
  403464:	9308      	str	r3, [sp, #32]
  403466:	950f      	str	r5, [sp, #60]	; 0x3c
  403468:	f8cd b01c 	str.w	fp, [sp, #28]
  40346c:	930e      	str	r3, [sp, #56]	; 0x38
  40346e:	4e74      	ldr	r6, [pc, #464]	; (403640 <_svfprintf_r+0x13d0>)
  403470:	f7ff b816 	b.w	4024a0 <_svfprintf_r+0x230>
  403474:	a823      	add	r0, sp, #140	; 0x8c
  403476:	a920      	add	r1, sp, #128	; 0x80
  403478:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40347a:	9004      	str	r0, [sp, #16]
  40347c:	9103      	str	r1, [sp, #12]
  40347e:	a81f      	add	r0, sp, #124	; 0x7c
  403480:	2103      	movs	r1, #3
  403482:	9002      	str	r0, [sp, #8]
  403484:	9a08      	ldr	r2, [sp, #32]
  403486:	9501      	str	r5, [sp, #4]
  403488:	463b      	mov	r3, r7
  40348a:	9100      	str	r1, [sp, #0]
  40348c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40348e:	f000 f9c3 	bl	403818 <_dtoa_r>
  403492:	4606      	mov	r6, r0
  403494:	1944      	adds	r4, r0, r5
  403496:	e72b      	b.n	4032f0 <_svfprintf_r+0x1080>
  403498:	2306      	movs	r3, #6
  40349a:	930a      	str	r3, [sp, #40]	; 0x28
  40349c:	e61d      	b.n	4030da <_svfprintf_r+0xe6a>
  40349e:	272d      	movs	r7, #45	; 0x2d
  4034a0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4034a4:	f7ff bacd 	b.w	402a42 <_svfprintf_r+0x7d2>
  4034a8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4034aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4034ac:	4413      	add	r3, r2
  4034ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4034b0:	930e      	str	r3, [sp, #56]	; 0x38
  4034b2:	2a00      	cmp	r2, #0
  4034b4:	f340 80b0 	ble.w	403618 <_svfprintf_r+0x13a8>
  4034b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4034bc:	9308      	str	r3, [sp, #32]
  4034be:	2367      	movs	r3, #103	; 0x67
  4034c0:	9311      	str	r3, [sp, #68]	; 0x44
  4034c2:	e671      	b.n	4031a8 <_svfprintf_r+0xf38>
  4034c4:	2b00      	cmp	r3, #0
  4034c6:	f340 80c3 	ble.w	403650 <_svfprintf_r+0x13e0>
  4034ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4034cc:	2a00      	cmp	r2, #0
  4034ce:	f040 8099 	bne.w	403604 <_svfprintf_r+0x1394>
  4034d2:	f01b 0f01 	tst.w	fp, #1
  4034d6:	f040 8095 	bne.w	403604 <_svfprintf_r+0x1394>
  4034da:	9308      	str	r3, [sp, #32]
  4034dc:	930e      	str	r3, [sp, #56]	; 0x38
  4034de:	e663      	b.n	4031a8 <_svfprintf_r+0xf38>
  4034e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034e2:	9308      	str	r3, [sp, #32]
  4034e4:	930e      	str	r3, [sp, #56]	; 0x38
  4034e6:	900a      	str	r0, [sp, #40]	; 0x28
  4034e8:	950f      	str	r5, [sp, #60]	; 0x3c
  4034ea:	f8cd b01c 	str.w	fp, [sp, #28]
  4034ee:	9012      	str	r0, [sp, #72]	; 0x48
  4034f0:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4034f4:	f7fe bfd4 	b.w	4024a0 <_svfprintf_r+0x230>
  4034f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4034fa:	2b47      	cmp	r3, #71	; 0x47
  4034fc:	f47f ae20 	bne.w	403140 <_svfprintf_r+0xed0>
  403500:	f01b 0f01 	tst.w	fp, #1
  403504:	f47f aeee 	bne.w	4032e4 <_svfprintf_r+0x1074>
  403508:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40350a:	1b9b      	subs	r3, r3, r6
  40350c:	9313      	str	r3, [sp, #76]	; 0x4c
  40350e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403510:	2b47      	cmp	r3, #71	; 0x47
  403512:	f43f af18 	beq.w	403346 <_svfprintf_r+0x10d6>
  403516:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403518:	9312      	str	r3, [sp, #72]	; 0x48
  40351a:	e721      	b.n	403360 <_svfprintf_r+0x10f0>
  40351c:	424f      	negs	r7, r1
  40351e:	3110      	adds	r1, #16
  403520:	4d48      	ldr	r5, [pc, #288]	; (403644 <_svfprintf_r+0x13d4>)
  403522:	da2f      	bge.n	403584 <_svfprintf_r+0x1314>
  403524:	2410      	movs	r4, #16
  403526:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40352a:	e004      	b.n	403536 <_svfprintf_r+0x12c6>
  40352c:	f108 0808 	add.w	r8, r8, #8
  403530:	3f10      	subs	r7, #16
  403532:	2f10      	cmp	r7, #16
  403534:	dd26      	ble.n	403584 <_svfprintf_r+0x1314>
  403536:	3301      	adds	r3, #1
  403538:	3210      	adds	r2, #16
  40353a:	2b07      	cmp	r3, #7
  40353c:	9227      	str	r2, [sp, #156]	; 0x9c
  40353e:	9326      	str	r3, [sp, #152]	; 0x98
  403540:	f8c8 5000 	str.w	r5, [r8]
  403544:	f8c8 4004 	str.w	r4, [r8, #4]
  403548:	ddf0      	ble.n	40352c <_svfprintf_r+0x12bc>
  40354a:	aa25      	add	r2, sp, #148	; 0x94
  40354c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40354e:	4658      	mov	r0, fp
  403550:	f001 ffe4 	bl	40551c <__ssprint_r>
  403554:	2800      	cmp	r0, #0
  403556:	f47e af5d 	bne.w	402414 <_svfprintf_r+0x1a4>
  40355a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40355c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40355e:	46c8      	mov	r8, r9
  403560:	e7e6      	b.n	403530 <_svfprintf_r+0x12c0>
  403562:	aa25      	add	r2, sp, #148	; 0x94
  403564:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403566:	980c      	ldr	r0, [sp, #48]	; 0x30
  403568:	f001 ffd8 	bl	40551c <__ssprint_r>
  40356c:	2800      	cmp	r0, #0
  40356e:	f47e af51 	bne.w	402414 <_svfprintf_r+0x1a4>
  403572:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403574:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403576:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403578:	46c8      	mov	r8, r9
  40357a:	e667      	b.n	40324c <_svfprintf_r+0xfdc>
  40357c:	2000      	movs	r0, #0
  40357e:	900a      	str	r0, [sp, #40]	; 0x28
  403580:	f7fe bed0 	b.w	402324 <_svfprintf_r+0xb4>
  403584:	3301      	adds	r3, #1
  403586:	443a      	add	r2, r7
  403588:	2b07      	cmp	r3, #7
  40358a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40358e:	9227      	str	r2, [sp, #156]	; 0x9c
  403590:	9326      	str	r3, [sp, #152]	; 0x98
  403592:	f108 0808 	add.w	r8, r8, #8
  403596:	f77f ae5c 	ble.w	403252 <_svfprintf_r+0xfe2>
  40359a:	aa25      	add	r2, sp, #148	; 0x94
  40359c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40359e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035a0:	f001 ffbc 	bl	40551c <__ssprint_r>
  4035a4:	2800      	cmp	r0, #0
  4035a6:	f47e af35 	bne.w	402414 <_svfprintf_r+0x1a4>
  4035aa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4035ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4035ae:	46c8      	mov	r8, r9
  4035b0:	e64f      	b.n	403252 <_svfprintf_r+0xfe2>
  4035b2:	3330      	adds	r3, #48	; 0x30
  4035b4:	2230      	movs	r2, #48	; 0x30
  4035b6:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4035ba:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4035be:	ab22      	add	r3, sp, #136	; 0x88
  4035c0:	e70f      	b.n	4033e2 <_svfprintf_r+0x1172>
  4035c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4035c4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4035c6:	4413      	add	r3, r2
  4035c8:	930e      	str	r3, [sp, #56]	; 0x38
  4035ca:	e775      	b.n	4034b8 <_svfprintf_r+0x1248>
  4035cc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4035ce:	e5cb      	b.n	403168 <_svfprintf_r+0xef8>
  4035d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4035d2:	4e1d      	ldr	r6, [pc, #116]	; (403648 <_svfprintf_r+0x13d8>)
  4035d4:	2b00      	cmp	r3, #0
  4035d6:	bfb6      	itet	lt
  4035d8:	272d      	movlt	r7, #45	; 0x2d
  4035da:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4035de:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4035e2:	4b1a      	ldr	r3, [pc, #104]	; (40364c <_svfprintf_r+0x13dc>)
  4035e4:	f7ff ba2f 	b.w	402a46 <_svfprintf_r+0x7d6>
  4035e8:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4035ea:	9808      	ldr	r0, [sp, #32]
  4035ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4035ee:	4639      	mov	r1, r7
  4035f0:	f002 fc5e 	bl	405eb0 <__aeabi_dcmpeq>
  4035f4:	2800      	cmp	r0, #0
  4035f6:	f47f ae7f 	bne.w	4032f8 <_svfprintf_r+0x1088>
  4035fa:	f1c5 0501 	rsb	r5, r5, #1
  4035fe:	951f      	str	r5, [sp, #124]	; 0x7c
  403600:	442c      	add	r4, r5
  403602:	e59e      	b.n	403142 <_svfprintf_r+0xed2>
  403604:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403606:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403608:	4413      	add	r3, r2
  40360a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40360c:	441a      	add	r2, r3
  40360e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403612:	920e      	str	r2, [sp, #56]	; 0x38
  403614:	9308      	str	r3, [sp, #32]
  403616:	e5c7      	b.n	4031a8 <_svfprintf_r+0xf38>
  403618:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40361a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40361c:	f1c3 0301 	rsb	r3, r3, #1
  403620:	441a      	add	r2, r3
  403622:	4613      	mov	r3, r2
  403624:	e7d0      	b.n	4035c8 <_svfprintf_r+0x1358>
  403626:	f01b 0301 	ands.w	r3, fp, #1
  40362a:	9312      	str	r3, [sp, #72]	; 0x48
  40362c:	f47f aee2 	bne.w	4033f4 <_svfprintf_r+0x1184>
  403630:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403632:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403636:	9308      	str	r3, [sp, #32]
  403638:	e5b6      	b.n	4031a8 <_svfprintf_r+0xf38>
  40363a:	bf00      	nop
  40363c:	66666667 	.word	0x66666667
  403640:	00406d40 	.word	0x00406d40
  403644:	00406d5c 	.word	0x00406d5c
  403648:	00406d14 	.word	0x00406d14
  40364c:	00406d10 	.word	0x00406d10
  403650:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403652:	b913      	cbnz	r3, 40365a <_svfprintf_r+0x13ea>
  403654:	f01b 0f01 	tst.w	fp, #1
  403658:	d002      	beq.n	403660 <_svfprintf_r+0x13f0>
  40365a:	9b19      	ldr	r3, [sp, #100]	; 0x64
  40365c:	3301      	adds	r3, #1
  40365e:	e7d4      	b.n	40360a <_svfprintf_r+0x139a>
  403660:	2301      	movs	r3, #1
  403662:	e73a      	b.n	4034da <_svfprintf_r+0x126a>
  403664:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403666:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40366a:	6828      	ldr	r0, [r5, #0]
  40366c:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403670:	900a      	str	r0, [sp, #40]	; 0x28
  403672:	4628      	mov	r0, r5
  403674:	3004      	adds	r0, #4
  403676:	46a2      	mov	sl, r4
  403678:	900f      	str	r0, [sp, #60]	; 0x3c
  40367a:	f7fe be51 	b.w	402320 <_svfprintf_r+0xb0>
  40367e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403682:	f7ff b867 	b.w	402754 <_svfprintf_r+0x4e4>
  403686:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40368a:	f7ff ba15 	b.w	402ab8 <_svfprintf_r+0x848>
  40368e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403692:	e6a6      	b.n	4033e2 <_svfprintf_r+0x1172>
  403694:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403698:	f7ff b8eb 	b.w	402872 <_svfprintf_r+0x602>
  40369c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40369e:	230c      	movs	r3, #12
  4036a0:	6013      	str	r3, [r2, #0]
  4036a2:	f04f 33ff 	mov.w	r3, #4294967295
  4036a6:	9309      	str	r3, [sp, #36]	; 0x24
  4036a8:	f7fe bebd 	b.w	402426 <_svfprintf_r+0x1b6>
  4036ac:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036b0:	f7ff b99a 	b.w	4029e8 <_svfprintf_r+0x778>
  4036b4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036b8:	f7ff b976 	b.w	4029a8 <_svfprintf_r+0x738>
  4036bc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036c0:	f7ff b959 	b.w	402976 <_svfprintf_r+0x706>
  4036c4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036c8:	f7ff b912 	b.w	4028f0 <_svfprintf_r+0x680>

004036cc <register_fini>:
  4036cc:	4b02      	ldr	r3, [pc, #8]	; (4036d8 <register_fini+0xc>)
  4036ce:	b113      	cbz	r3, 4036d6 <register_fini+0xa>
  4036d0:	4802      	ldr	r0, [pc, #8]	; (4036dc <register_fini+0x10>)
  4036d2:	f000 b805 	b.w	4036e0 <atexit>
  4036d6:	4770      	bx	lr
  4036d8:	00000000 	.word	0x00000000
  4036dc:	0040466d 	.word	0x0040466d

004036e0 <atexit>:
  4036e0:	2300      	movs	r3, #0
  4036e2:	4601      	mov	r1, r0
  4036e4:	461a      	mov	r2, r3
  4036e6:	4618      	mov	r0, r3
  4036e8:	f001 bf96 	b.w	405618 <__register_exitproc>

004036ec <quorem>:
  4036ec:	6902      	ldr	r2, [r0, #16]
  4036ee:	690b      	ldr	r3, [r1, #16]
  4036f0:	4293      	cmp	r3, r2
  4036f2:	f300 808d 	bgt.w	403810 <quorem+0x124>
  4036f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4036fa:	f103 38ff 	add.w	r8, r3, #4294967295
  4036fe:	f101 0714 	add.w	r7, r1, #20
  403702:	f100 0b14 	add.w	fp, r0, #20
  403706:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40370a:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40370e:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403712:	b083      	sub	sp, #12
  403714:	3201      	adds	r2, #1
  403716:	fbb3 f9f2 	udiv	r9, r3, r2
  40371a:	eb0b 0304 	add.w	r3, fp, r4
  40371e:	9400      	str	r4, [sp, #0]
  403720:	eb07 0a04 	add.w	sl, r7, r4
  403724:	9301      	str	r3, [sp, #4]
  403726:	f1b9 0f00 	cmp.w	r9, #0
  40372a:	d039      	beq.n	4037a0 <quorem+0xb4>
  40372c:	2500      	movs	r5, #0
  40372e:	462e      	mov	r6, r5
  403730:	46bc      	mov	ip, r7
  403732:	46de      	mov	lr, fp
  403734:	f85c 4b04 	ldr.w	r4, [ip], #4
  403738:	f8de 3000 	ldr.w	r3, [lr]
  40373c:	b2a2      	uxth	r2, r4
  40373e:	fb09 5502 	mla	r5, r9, r2, r5
  403742:	0c22      	lsrs	r2, r4, #16
  403744:	0c2c      	lsrs	r4, r5, #16
  403746:	fb09 4202 	mla	r2, r9, r2, r4
  40374a:	b2ad      	uxth	r5, r5
  40374c:	1b75      	subs	r5, r6, r5
  40374e:	b296      	uxth	r6, r2
  403750:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403754:	fa15 f383 	uxtah	r3, r5, r3
  403758:	eb06 4623 	add.w	r6, r6, r3, asr #16
  40375c:	b29b      	uxth	r3, r3
  40375e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403762:	45e2      	cmp	sl, ip
  403764:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403768:	f84e 3b04 	str.w	r3, [lr], #4
  40376c:	ea4f 4626 	mov.w	r6, r6, asr #16
  403770:	d2e0      	bcs.n	403734 <quorem+0x48>
  403772:	9b00      	ldr	r3, [sp, #0]
  403774:	f85b 3003 	ldr.w	r3, [fp, r3]
  403778:	b993      	cbnz	r3, 4037a0 <quorem+0xb4>
  40377a:	9c01      	ldr	r4, [sp, #4]
  40377c:	1f23      	subs	r3, r4, #4
  40377e:	459b      	cmp	fp, r3
  403780:	d20c      	bcs.n	40379c <quorem+0xb0>
  403782:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403786:	b94b      	cbnz	r3, 40379c <quorem+0xb0>
  403788:	f1a4 0308 	sub.w	r3, r4, #8
  40378c:	e002      	b.n	403794 <quorem+0xa8>
  40378e:	681a      	ldr	r2, [r3, #0]
  403790:	3b04      	subs	r3, #4
  403792:	b91a      	cbnz	r2, 40379c <quorem+0xb0>
  403794:	459b      	cmp	fp, r3
  403796:	f108 38ff 	add.w	r8, r8, #4294967295
  40379a:	d3f8      	bcc.n	40378e <quorem+0xa2>
  40379c:	f8c0 8010 	str.w	r8, [r0, #16]
  4037a0:	4604      	mov	r4, r0
  4037a2:	f001 fd39 	bl	405218 <__mcmp>
  4037a6:	2800      	cmp	r0, #0
  4037a8:	db2e      	blt.n	403808 <quorem+0x11c>
  4037aa:	f109 0901 	add.w	r9, r9, #1
  4037ae:	465d      	mov	r5, fp
  4037b0:	2300      	movs	r3, #0
  4037b2:	f857 1b04 	ldr.w	r1, [r7], #4
  4037b6:	6828      	ldr	r0, [r5, #0]
  4037b8:	b28a      	uxth	r2, r1
  4037ba:	1a9a      	subs	r2, r3, r2
  4037bc:	0c0b      	lsrs	r3, r1, #16
  4037be:	fa12 f280 	uxtah	r2, r2, r0
  4037c2:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4037c6:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4037ca:	b292      	uxth	r2, r2
  4037cc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4037d0:	45ba      	cmp	sl, r7
  4037d2:	f845 2b04 	str.w	r2, [r5], #4
  4037d6:	ea4f 4323 	mov.w	r3, r3, asr #16
  4037da:	d2ea      	bcs.n	4037b2 <quorem+0xc6>
  4037dc:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4037e0:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4037e4:	b982      	cbnz	r2, 403808 <quorem+0x11c>
  4037e6:	1f1a      	subs	r2, r3, #4
  4037e8:	4593      	cmp	fp, r2
  4037ea:	d20b      	bcs.n	403804 <quorem+0x118>
  4037ec:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4037f0:	b942      	cbnz	r2, 403804 <quorem+0x118>
  4037f2:	3b08      	subs	r3, #8
  4037f4:	e002      	b.n	4037fc <quorem+0x110>
  4037f6:	681a      	ldr	r2, [r3, #0]
  4037f8:	3b04      	subs	r3, #4
  4037fa:	b91a      	cbnz	r2, 403804 <quorem+0x118>
  4037fc:	459b      	cmp	fp, r3
  4037fe:	f108 38ff 	add.w	r8, r8, #4294967295
  403802:	d3f8      	bcc.n	4037f6 <quorem+0x10a>
  403804:	f8c4 8010 	str.w	r8, [r4, #16]
  403808:	4648      	mov	r0, r9
  40380a:	b003      	add	sp, #12
  40380c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403810:	2000      	movs	r0, #0
  403812:	4770      	bx	lr
  403814:	0000      	movs	r0, r0
	...

00403818 <_dtoa_r>:
  403818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40381c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  40381e:	b09b      	sub	sp, #108	; 0x6c
  403820:	4604      	mov	r4, r0
  403822:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403824:	4692      	mov	sl, r2
  403826:	469b      	mov	fp, r3
  403828:	b141      	cbz	r1, 40383c <_dtoa_r+0x24>
  40382a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  40382c:	604a      	str	r2, [r1, #4]
  40382e:	2301      	movs	r3, #1
  403830:	4093      	lsls	r3, r2
  403832:	608b      	str	r3, [r1, #8]
  403834:	f001 fb18 	bl	404e68 <_Bfree>
  403838:	2300      	movs	r3, #0
  40383a:	6423      	str	r3, [r4, #64]	; 0x40
  40383c:	f1bb 0f00 	cmp.w	fp, #0
  403840:	465d      	mov	r5, fp
  403842:	db35      	blt.n	4038b0 <_dtoa_r+0x98>
  403844:	2300      	movs	r3, #0
  403846:	6033      	str	r3, [r6, #0]
  403848:	4b9d      	ldr	r3, [pc, #628]	; (403ac0 <_dtoa_r+0x2a8>)
  40384a:	43ab      	bics	r3, r5
  40384c:	d015      	beq.n	40387a <_dtoa_r+0x62>
  40384e:	4650      	mov	r0, sl
  403850:	4659      	mov	r1, fp
  403852:	2200      	movs	r2, #0
  403854:	2300      	movs	r3, #0
  403856:	f002 fb2b 	bl	405eb0 <__aeabi_dcmpeq>
  40385a:	4680      	mov	r8, r0
  40385c:	2800      	cmp	r0, #0
  40385e:	d02d      	beq.n	4038bc <_dtoa_r+0xa4>
  403860:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403862:	2301      	movs	r3, #1
  403864:	6013      	str	r3, [r2, #0]
  403866:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403868:	2b00      	cmp	r3, #0
  40386a:	f000 80bd 	beq.w	4039e8 <_dtoa_r+0x1d0>
  40386e:	4895      	ldr	r0, [pc, #596]	; (403ac4 <_dtoa_r+0x2ac>)
  403870:	6018      	str	r0, [r3, #0]
  403872:	3801      	subs	r0, #1
  403874:	b01b      	add	sp, #108	; 0x6c
  403876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40387a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40387c:	f242 730f 	movw	r3, #9999	; 0x270f
  403880:	6013      	str	r3, [r2, #0]
  403882:	f1ba 0f00 	cmp.w	sl, #0
  403886:	d10d      	bne.n	4038a4 <_dtoa_r+0x8c>
  403888:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40388c:	b955      	cbnz	r5, 4038a4 <_dtoa_r+0x8c>
  40388e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403890:	488d      	ldr	r0, [pc, #564]	; (403ac8 <_dtoa_r+0x2b0>)
  403892:	2b00      	cmp	r3, #0
  403894:	d0ee      	beq.n	403874 <_dtoa_r+0x5c>
  403896:	f100 0308 	add.w	r3, r0, #8
  40389a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40389c:	6013      	str	r3, [r2, #0]
  40389e:	b01b      	add	sp, #108	; 0x6c
  4038a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4038a6:	4889      	ldr	r0, [pc, #548]	; (403acc <_dtoa_r+0x2b4>)
  4038a8:	2b00      	cmp	r3, #0
  4038aa:	d0e3      	beq.n	403874 <_dtoa_r+0x5c>
  4038ac:	1cc3      	adds	r3, r0, #3
  4038ae:	e7f4      	b.n	40389a <_dtoa_r+0x82>
  4038b0:	2301      	movs	r3, #1
  4038b2:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4038b6:	6033      	str	r3, [r6, #0]
  4038b8:	46ab      	mov	fp, r5
  4038ba:	e7c5      	b.n	403848 <_dtoa_r+0x30>
  4038bc:	aa18      	add	r2, sp, #96	; 0x60
  4038be:	ab19      	add	r3, sp, #100	; 0x64
  4038c0:	9201      	str	r2, [sp, #4]
  4038c2:	9300      	str	r3, [sp, #0]
  4038c4:	4652      	mov	r2, sl
  4038c6:	465b      	mov	r3, fp
  4038c8:	4620      	mov	r0, r4
  4038ca:	f001 fd45 	bl	405358 <__d2b>
  4038ce:	0d2b      	lsrs	r3, r5, #20
  4038d0:	4681      	mov	r9, r0
  4038d2:	d071      	beq.n	4039b8 <_dtoa_r+0x1a0>
  4038d4:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4038d8:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4038dc:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4038de:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4038e2:	4650      	mov	r0, sl
  4038e4:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4038e8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4038ec:	2200      	movs	r2, #0
  4038ee:	4b78      	ldr	r3, [pc, #480]	; (403ad0 <_dtoa_r+0x2b8>)
  4038f0:	f7fe f85c 	bl	4019ac <__aeabi_dsub>
  4038f4:	a36c      	add	r3, pc, #432	; (adr r3, 403aa8 <_dtoa_r+0x290>)
  4038f6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4038fa:	f7fe fa0b 	bl	401d14 <__aeabi_dmul>
  4038fe:	a36c      	add	r3, pc, #432	; (adr r3, 403ab0 <_dtoa_r+0x298>)
  403900:	e9d3 2300 	ldrd	r2, r3, [r3]
  403904:	f7fe f854 	bl	4019b0 <__adddf3>
  403908:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40390c:	4630      	mov	r0, r6
  40390e:	f7fe f99b 	bl	401c48 <__aeabi_i2d>
  403912:	a369      	add	r3, pc, #420	; (adr r3, 403ab8 <_dtoa_r+0x2a0>)
  403914:	e9d3 2300 	ldrd	r2, r3, [r3]
  403918:	f7fe f9fc 	bl	401d14 <__aeabi_dmul>
  40391c:	4602      	mov	r2, r0
  40391e:	460b      	mov	r3, r1
  403920:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403924:	f7fe f844 	bl	4019b0 <__adddf3>
  403928:	e9cd 0104 	strd	r0, r1, [sp, #16]
  40392c:	f002 fb08 	bl	405f40 <__aeabi_d2iz>
  403930:	2200      	movs	r2, #0
  403932:	9002      	str	r0, [sp, #8]
  403934:	2300      	movs	r3, #0
  403936:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40393a:	f002 fac3 	bl	405ec4 <__aeabi_dcmplt>
  40393e:	2800      	cmp	r0, #0
  403940:	f040 8173 	bne.w	403c2a <_dtoa_r+0x412>
  403944:	9d02      	ldr	r5, [sp, #8]
  403946:	2d16      	cmp	r5, #22
  403948:	f200 815d 	bhi.w	403c06 <_dtoa_r+0x3ee>
  40394c:	4b61      	ldr	r3, [pc, #388]	; (403ad4 <_dtoa_r+0x2bc>)
  40394e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403952:	e9d3 0100 	ldrd	r0, r1, [r3]
  403956:	4652      	mov	r2, sl
  403958:	465b      	mov	r3, fp
  40395a:	f002 fad1 	bl	405f00 <__aeabi_dcmpgt>
  40395e:	2800      	cmp	r0, #0
  403960:	f000 81c5 	beq.w	403cee <_dtoa_r+0x4d6>
  403964:	1e6b      	subs	r3, r5, #1
  403966:	9302      	str	r3, [sp, #8]
  403968:	2300      	movs	r3, #0
  40396a:	930e      	str	r3, [sp, #56]	; 0x38
  40396c:	1bbf      	subs	r7, r7, r6
  40396e:	1e7b      	subs	r3, r7, #1
  403970:	9306      	str	r3, [sp, #24]
  403972:	f100 8154 	bmi.w	403c1e <_dtoa_r+0x406>
  403976:	2300      	movs	r3, #0
  403978:	9308      	str	r3, [sp, #32]
  40397a:	9b02      	ldr	r3, [sp, #8]
  40397c:	2b00      	cmp	r3, #0
  40397e:	f2c0 8145 	blt.w	403c0c <_dtoa_r+0x3f4>
  403982:	9a06      	ldr	r2, [sp, #24]
  403984:	930d      	str	r3, [sp, #52]	; 0x34
  403986:	4611      	mov	r1, r2
  403988:	4419      	add	r1, r3
  40398a:	2300      	movs	r3, #0
  40398c:	9106      	str	r1, [sp, #24]
  40398e:	930c      	str	r3, [sp, #48]	; 0x30
  403990:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403992:	2b09      	cmp	r3, #9
  403994:	d82a      	bhi.n	4039ec <_dtoa_r+0x1d4>
  403996:	2b05      	cmp	r3, #5
  403998:	f340 865b 	ble.w	404652 <_dtoa_r+0xe3a>
  40399c:	3b04      	subs	r3, #4
  40399e:	9324      	str	r3, [sp, #144]	; 0x90
  4039a0:	2500      	movs	r5, #0
  4039a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4039a4:	3b02      	subs	r3, #2
  4039a6:	2b03      	cmp	r3, #3
  4039a8:	f200 8642 	bhi.w	404630 <_dtoa_r+0xe18>
  4039ac:	e8df f013 	tbh	[pc, r3, lsl #1]
  4039b0:	02c903d4 	.word	0x02c903d4
  4039b4:	046103df 	.word	0x046103df
  4039b8:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4039ba:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4039bc:	443e      	add	r6, r7
  4039be:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4039c2:	2b20      	cmp	r3, #32
  4039c4:	f340 818e 	ble.w	403ce4 <_dtoa_r+0x4cc>
  4039c8:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4039cc:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4039d0:	409d      	lsls	r5, r3
  4039d2:	fa2a f000 	lsr.w	r0, sl, r0
  4039d6:	4328      	orrs	r0, r5
  4039d8:	f7fe f926 	bl	401c28 <__aeabi_ui2d>
  4039dc:	2301      	movs	r3, #1
  4039de:	3e01      	subs	r6, #1
  4039e0:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4039e4:	9314      	str	r3, [sp, #80]	; 0x50
  4039e6:	e781      	b.n	4038ec <_dtoa_r+0xd4>
  4039e8:	483b      	ldr	r0, [pc, #236]	; (403ad8 <_dtoa_r+0x2c0>)
  4039ea:	e743      	b.n	403874 <_dtoa_r+0x5c>
  4039ec:	2100      	movs	r1, #0
  4039ee:	6461      	str	r1, [r4, #68]	; 0x44
  4039f0:	4620      	mov	r0, r4
  4039f2:	9125      	str	r1, [sp, #148]	; 0x94
  4039f4:	f001 fa12 	bl	404e1c <_Balloc>
  4039f8:	f04f 33ff 	mov.w	r3, #4294967295
  4039fc:	930a      	str	r3, [sp, #40]	; 0x28
  4039fe:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403a00:	930f      	str	r3, [sp, #60]	; 0x3c
  403a02:	2301      	movs	r3, #1
  403a04:	9004      	str	r0, [sp, #16]
  403a06:	6420      	str	r0, [r4, #64]	; 0x40
  403a08:	9224      	str	r2, [sp, #144]	; 0x90
  403a0a:	930b      	str	r3, [sp, #44]	; 0x2c
  403a0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403a0e:	2b00      	cmp	r3, #0
  403a10:	f2c0 80d9 	blt.w	403bc6 <_dtoa_r+0x3ae>
  403a14:	9a02      	ldr	r2, [sp, #8]
  403a16:	2a0e      	cmp	r2, #14
  403a18:	f300 80d5 	bgt.w	403bc6 <_dtoa_r+0x3ae>
  403a1c:	4b2d      	ldr	r3, [pc, #180]	; (403ad4 <_dtoa_r+0x2bc>)
  403a1e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403a22:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a26:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403a2a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403a2c:	2b00      	cmp	r3, #0
  403a2e:	f2c0 83ba 	blt.w	4041a6 <_dtoa_r+0x98e>
  403a32:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403a36:	4650      	mov	r0, sl
  403a38:	462a      	mov	r2, r5
  403a3a:	4633      	mov	r3, r6
  403a3c:	4659      	mov	r1, fp
  403a3e:	f7fe fa93 	bl	401f68 <__aeabi_ddiv>
  403a42:	f002 fa7d 	bl	405f40 <__aeabi_d2iz>
  403a46:	4680      	mov	r8, r0
  403a48:	f7fe f8fe 	bl	401c48 <__aeabi_i2d>
  403a4c:	462a      	mov	r2, r5
  403a4e:	4633      	mov	r3, r6
  403a50:	f7fe f960 	bl	401d14 <__aeabi_dmul>
  403a54:	460b      	mov	r3, r1
  403a56:	4602      	mov	r2, r0
  403a58:	4659      	mov	r1, fp
  403a5a:	4650      	mov	r0, sl
  403a5c:	f7fd ffa6 	bl	4019ac <__aeabi_dsub>
  403a60:	9d04      	ldr	r5, [sp, #16]
  403a62:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403a66:	702b      	strb	r3, [r5, #0]
  403a68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a6a:	2b01      	cmp	r3, #1
  403a6c:	4606      	mov	r6, r0
  403a6e:	460f      	mov	r7, r1
  403a70:	f105 0501 	add.w	r5, r5, #1
  403a74:	d068      	beq.n	403b48 <_dtoa_r+0x330>
  403a76:	2200      	movs	r2, #0
  403a78:	4b18      	ldr	r3, [pc, #96]	; (403adc <_dtoa_r+0x2c4>)
  403a7a:	f7fe f94b 	bl	401d14 <__aeabi_dmul>
  403a7e:	2200      	movs	r2, #0
  403a80:	2300      	movs	r3, #0
  403a82:	4606      	mov	r6, r0
  403a84:	460f      	mov	r7, r1
  403a86:	f002 fa13 	bl	405eb0 <__aeabi_dcmpeq>
  403a8a:	2800      	cmp	r0, #0
  403a8c:	f040 8088 	bne.w	403ba0 <_dtoa_r+0x388>
  403a90:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403a94:	f04f 0a00 	mov.w	sl, #0
  403a98:	f8df b040 	ldr.w	fp, [pc, #64]	; 403adc <_dtoa_r+0x2c4>
  403a9c:	940c      	str	r4, [sp, #48]	; 0x30
  403a9e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403aa2:	e028      	b.n	403af6 <_dtoa_r+0x2de>
  403aa4:	f3af 8000 	nop.w
  403aa8:	636f4361 	.word	0x636f4361
  403aac:	3fd287a7 	.word	0x3fd287a7
  403ab0:	8b60c8b3 	.word	0x8b60c8b3
  403ab4:	3fc68a28 	.word	0x3fc68a28
  403ab8:	509f79fb 	.word	0x509f79fb
  403abc:	3fd34413 	.word	0x3fd34413
  403ac0:	7ff00000 	.word	0x7ff00000
  403ac4:	00406d49 	.word	0x00406d49
  403ac8:	00406d6c 	.word	0x00406d6c
  403acc:	00406d78 	.word	0x00406d78
  403ad0:	3ff80000 	.word	0x3ff80000
  403ad4:	00406da8 	.word	0x00406da8
  403ad8:	00406d48 	.word	0x00406d48
  403adc:	40240000 	.word	0x40240000
  403ae0:	f7fe f918 	bl	401d14 <__aeabi_dmul>
  403ae4:	2200      	movs	r2, #0
  403ae6:	2300      	movs	r3, #0
  403ae8:	4606      	mov	r6, r0
  403aea:	460f      	mov	r7, r1
  403aec:	f002 f9e0 	bl	405eb0 <__aeabi_dcmpeq>
  403af0:	2800      	cmp	r0, #0
  403af2:	f040 83c1 	bne.w	404278 <_dtoa_r+0xa60>
  403af6:	4642      	mov	r2, r8
  403af8:	464b      	mov	r3, r9
  403afa:	4630      	mov	r0, r6
  403afc:	4639      	mov	r1, r7
  403afe:	f7fe fa33 	bl	401f68 <__aeabi_ddiv>
  403b02:	f002 fa1d 	bl	405f40 <__aeabi_d2iz>
  403b06:	4604      	mov	r4, r0
  403b08:	f7fe f89e 	bl	401c48 <__aeabi_i2d>
  403b0c:	4642      	mov	r2, r8
  403b0e:	464b      	mov	r3, r9
  403b10:	f7fe f900 	bl	401d14 <__aeabi_dmul>
  403b14:	4602      	mov	r2, r0
  403b16:	460b      	mov	r3, r1
  403b18:	4630      	mov	r0, r6
  403b1a:	4639      	mov	r1, r7
  403b1c:	f7fd ff46 	bl	4019ac <__aeabi_dsub>
  403b20:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403b24:	9e04      	ldr	r6, [sp, #16]
  403b26:	f805 eb01 	strb.w	lr, [r5], #1
  403b2a:	eba5 0e06 	sub.w	lr, r5, r6
  403b2e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403b30:	45b6      	cmp	lr, r6
  403b32:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403b36:	4652      	mov	r2, sl
  403b38:	465b      	mov	r3, fp
  403b3a:	d1d1      	bne.n	403ae0 <_dtoa_r+0x2c8>
  403b3c:	46a0      	mov	r8, r4
  403b3e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403b42:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403b44:	4606      	mov	r6, r0
  403b46:	460f      	mov	r7, r1
  403b48:	4632      	mov	r2, r6
  403b4a:	463b      	mov	r3, r7
  403b4c:	4630      	mov	r0, r6
  403b4e:	4639      	mov	r1, r7
  403b50:	f7fd ff2e 	bl	4019b0 <__adddf3>
  403b54:	4606      	mov	r6, r0
  403b56:	460f      	mov	r7, r1
  403b58:	4602      	mov	r2, r0
  403b5a:	460b      	mov	r3, r1
  403b5c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403b60:	f002 f9b0 	bl	405ec4 <__aeabi_dcmplt>
  403b64:	b948      	cbnz	r0, 403b7a <_dtoa_r+0x362>
  403b66:	4632      	mov	r2, r6
  403b68:	463b      	mov	r3, r7
  403b6a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403b6e:	f002 f99f 	bl	405eb0 <__aeabi_dcmpeq>
  403b72:	b1a8      	cbz	r0, 403ba0 <_dtoa_r+0x388>
  403b74:	f018 0f01 	tst.w	r8, #1
  403b78:	d012      	beq.n	403ba0 <_dtoa_r+0x388>
  403b7a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403b7e:	9a04      	ldr	r2, [sp, #16]
  403b80:	1e6b      	subs	r3, r5, #1
  403b82:	e004      	b.n	403b8e <_dtoa_r+0x376>
  403b84:	429a      	cmp	r2, r3
  403b86:	f000 8401 	beq.w	40438c <_dtoa_r+0xb74>
  403b8a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403b8e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403b92:	f103 0501 	add.w	r5, r3, #1
  403b96:	d0f5      	beq.n	403b84 <_dtoa_r+0x36c>
  403b98:	f108 0801 	add.w	r8, r8, #1
  403b9c:	f883 8000 	strb.w	r8, [r3]
  403ba0:	4649      	mov	r1, r9
  403ba2:	4620      	mov	r0, r4
  403ba4:	f001 f960 	bl	404e68 <_Bfree>
  403ba8:	2200      	movs	r2, #0
  403baa:	9b02      	ldr	r3, [sp, #8]
  403bac:	702a      	strb	r2, [r5, #0]
  403bae:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403bb0:	3301      	adds	r3, #1
  403bb2:	6013      	str	r3, [r2, #0]
  403bb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403bb6:	2b00      	cmp	r3, #0
  403bb8:	f000 839e 	beq.w	4042f8 <_dtoa_r+0xae0>
  403bbc:	9804      	ldr	r0, [sp, #16]
  403bbe:	601d      	str	r5, [r3, #0]
  403bc0:	b01b      	add	sp, #108	; 0x6c
  403bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403bc6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403bc8:	2a00      	cmp	r2, #0
  403bca:	d03e      	beq.n	403c4a <_dtoa_r+0x432>
  403bcc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403bce:	2a01      	cmp	r2, #1
  403bd0:	f340 8311 	ble.w	4041f6 <_dtoa_r+0x9de>
  403bd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403bd6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403bd8:	1e5f      	subs	r7, r3, #1
  403bda:	42ba      	cmp	r2, r7
  403bdc:	f2c0 838f 	blt.w	4042fe <_dtoa_r+0xae6>
  403be0:	1bd7      	subs	r7, r2, r7
  403be2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403be4:	2b00      	cmp	r3, #0
  403be6:	f2c0 848b 	blt.w	404500 <_dtoa_r+0xce8>
  403bea:	9d08      	ldr	r5, [sp, #32]
  403bec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403bee:	9a08      	ldr	r2, [sp, #32]
  403bf0:	441a      	add	r2, r3
  403bf2:	9208      	str	r2, [sp, #32]
  403bf4:	9a06      	ldr	r2, [sp, #24]
  403bf6:	2101      	movs	r1, #1
  403bf8:	441a      	add	r2, r3
  403bfa:	4620      	mov	r0, r4
  403bfc:	9206      	str	r2, [sp, #24]
  403bfe:	f001 f9cd 	bl	404f9c <__i2b>
  403c02:	4606      	mov	r6, r0
  403c04:	e024      	b.n	403c50 <_dtoa_r+0x438>
  403c06:	2301      	movs	r3, #1
  403c08:	930e      	str	r3, [sp, #56]	; 0x38
  403c0a:	e6af      	b.n	40396c <_dtoa_r+0x154>
  403c0c:	9a08      	ldr	r2, [sp, #32]
  403c0e:	9b02      	ldr	r3, [sp, #8]
  403c10:	1ad2      	subs	r2, r2, r3
  403c12:	425b      	negs	r3, r3
  403c14:	930c      	str	r3, [sp, #48]	; 0x30
  403c16:	2300      	movs	r3, #0
  403c18:	9208      	str	r2, [sp, #32]
  403c1a:	930d      	str	r3, [sp, #52]	; 0x34
  403c1c:	e6b8      	b.n	403990 <_dtoa_r+0x178>
  403c1e:	f1c7 0301 	rsb	r3, r7, #1
  403c22:	9308      	str	r3, [sp, #32]
  403c24:	2300      	movs	r3, #0
  403c26:	9306      	str	r3, [sp, #24]
  403c28:	e6a7      	b.n	40397a <_dtoa_r+0x162>
  403c2a:	9d02      	ldr	r5, [sp, #8]
  403c2c:	4628      	mov	r0, r5
  403c2e:	f7fe f80b 	bl	401c48 <__aeabi_i2d>
  403c32:	4602      	mov	r2, r0
  403c34:	460b      	mov	r3, r1
  403c36:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403c3a:	f002 f939 	bl	405eb0 <__aeabi_dcmpeq>
  403c3e:	2800      	cmp	r0, #0
  403c40:	f47f ae80 	bne.w	403944 <_dtoa_r+0x12c>
  403c44:	1e6b      	subs	r3, r5, #1
  403c46:	9302      	str	r3, [sp, #8]
  403c48:	e67c      	b.n	403944 <_dtoa_r+0x12c>
  403c4a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403c4c:	9d08      	ldr	r5, [sp, #32]
  403c4e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403c50:	2d00      	cmp	r5, #0
  403c52:	dd0c      	ble.n	403c6e <_dtoa_r+0x456>
  403c54:	9906      	ldr	r1, [sp, #24]
  403c56:	2900      	cmp	r1, #0
  403c58:	460b      	mov	r3, r1
  403c5a:	dd08      	ble.n	403c6e <_dtoa_r+0x456>
  403c5c:	42a9      	cmp	r1, r5
  403c5e:	9a08      	ldr	r2, [sp, #32]
  403c60:	bfa8      	it	ge
  403c62:	462b      	movge	r3, r5
  403c64:	1ad2      	subs	r2, r2, r3
  403c66:	1aed      	subs	r5, r5, r3
  403c68:	1acb      	subs	r3, r1, r3
  403c6a:	9208      	str	r2, [sp, #32]
  403c6c:	9306      	str	r3, [sp, #24]
  403c6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403c70:	b1d3      	cbz	r3, 403ca8 <_dtoa_r+0x490>
  403c72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403c74:	2b00      	cmp	r3, #0
  403c76:	f000 82b7 	beq.w	4041e8 <_dtoa_r+0x9d0>
  403c7a:	2f00      	cmp	r7, #0
  403c7c:	dd10      	ble.n	403ca0 <_dtoa_r+0x488>
  403c7e:	4631      	mov	r1, r6
  403c80:	463a      	mov	r2, r7
  403c82:	4620      	mov	r0, r4
  403c84:	f001 fa26 	bl	4050d4 <__pow5mult>
  403c88:	464a      	mov	r2, r9
  403c8a:	4601      	mov	r1, r0
  403c8c:	4606      	mov	r6, r0
  403c8e:	4620      	mov	r0, r4
  403c90:	f001 f98e 	bl	404fb0 <__multiply>
  403c94:	4649      	mov	r1, r9
  403c96:	4680      	mov	r8, r0
  403c98:	4620      	mov	r0, r4
  403c9a:	f001 f8e5 	bl	404e68 <_Bfree>
  403c9e:	46c1      	mov	r9, r8
  403ca0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ca2:	1bda      	subs	r2, r3, r7
  403ca4:	f040 82a1 	bne.w	4041ea <_dtoa_r+0x9d2>
  403ca8:	2101      	movs	r1, #1
  403caa:	4620      	mov	r0, r4
  403cac:	f001 f976 	bl	404f9c <__i2b>
  403cb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403cb2:	2b00      	cmp	r3, #0
  403cb4:	4680      	mov	r8, r0
  403cb6:	dd1c      	ble.n	403cf2 <_dtoa_r+0x4da>
  403cb8:	4601      	mov	r1, r0
  403cba:	461a      	mov	r2, r3
  403cbc:	4620      	mov	r0, r4
  403cbe:	f001 fa09 	bl	4050d4 <__pow5mult>
  403cc2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403cc4:	2b01      	cmp	r3, #1
  403cc6:	4680      	mov	r8, r0
  403cc8:	f340 8254 	ble.w	404174 <_dtoa_r+0x95c>
  403ccc:	2300      	movs	r3, #0
  403cce:	930c      	str	r3, [sp, #48]	; 0x30
  403cd0:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403cd4:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403cd8:	6918      	ldr	r0, [r3, #16]
  403cda:	f001 f90f 	bl	404efc <__hi0bits>
  403cde:	f1c0 0020 	rsb	r0, r0, #32
  403ce2:	e010      	b.n	403d06 <_dtoa_r+0x4ee>
  403ce4:	f1c3 0520 	rsb	r5, r3, #32
  403ce8:	fa0a f005 	lsl.w	r0, sl, r5
  403cec:	e674      	b.n	4039d8 <_dtoa_r+0x1c0>
  403cee:	900e      	str	r0, [sp, #56]	; 0x38
  403cf0:	e63c      	b.n	40396c <_dtoa_r+0x154>
  403cf2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403cf4:	2b01      	cmp	r3, #1
  403cf6:	f340 8287 	ble.w	404208 <_dtoa_r+0x9f0>
  403cfa:	2300      	movs	r3, #0
  403cfc:	930c      	str	r3, [sp, #48]	; 0x30
  403cfe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403d00:	2001      	movs	r0, #1
  403d02:	2b00      	cmp	r3, #0
  403d04:	d1e4      	bne.n	403cd0 <_dtoa_r+0x4b8>
  403d06:	9a06      	ldr	r2, [sp, #24]
  403d08:	4410      	add	r0, r2
  403d0a:	f010 001f 	ands.w	r0, r0, #31
  403d0e:	f000 80a1 	beq.w	403e54 <_dtoa_r+0x63c>
  403d12:	f1c0 0320 	rsb	r3, r0, #32
  403d16:	2b04      	cmp	r3, #4
  403d18:	f340 849e 	ble.w	404658 <_dtoa_r+0xe40>
  403d1c:	9b08      	ldr	r3, [sp, #32]
  403d1e:	f1c0 001c 	rsb	r0, r0, #28
  403d22:	4403      	add	r3, r0
  403d24:	9308      	str	r3, [sp, #32]
  403d26:	4613      	mov	r3, r2
  403d28:	4403      	add	r3, r0
  403d2a:	4405      	add	r5, r0
  403d2c:	9306      	str	r3, [sp, #24]
  403d2e:	9b08      	ldr	r3, [sp, #32]
  403d30:	2b00      	cmp	r3, #0
  403d32:	dd05      	ble.n	403d40 <_dtoa_r+0x528>
  403d34:	4649      	mov	r1, r9
  403d36:	461a      	mov	r2, r3
  403d38:	4620      	mov	r0, r4
  403d3a:	f001 fa1b 	bl	405174 <__lshift>
  403d3e:	4681      	mov	r9, r0
  403d40:	9b06      	ldr	r3, [sp, #24]
  403d42:	2b00      	cmp	r3, #0
  403d44:	dd05      	ble.n	403d52 <_dtoa_r+0x53a>
  403d46:	4641      	mov	r1, r8
  403d48:	461a      	mov	r2, r3
  403d4a:	4620      	mov	r0, r4
  403d4c:	f001 fa12 	bl	405174 <__lshift>
  403d50:	4680      	mov	r8, r0
  403d52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d54:	2b00      	cmp	r3, #0
  403d56:	f040 8086 	bne.w	403e66 <_dtoa_r+0x64e>
  403d5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d5c:	2b00      	cmp	r3, #0
  403d5e:	f340 8266 	ble.w	40422e <_dtoa_r+0xa16>
  403d62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403d64:	2b00      	cmp	r3, #0
  403d66:	f000 8098 	beq.w	403e9a <_dtoa_r+0x682>
  403d6a:	2d00      	cmp	r5, #0
  403d6c:	dd05      	ble.n	403d7a <_dtoa_r+0x562>
  403d6e:	4631      	mov	r1, r6
  403d70:	462a      	mov	r2, r5
  403d72:	4620      	mov	r0, r4
  403d74:	f001 f9fe 	bl	405174 <__lshift>
  403d78:	4606      	mov	r6, r0
  403d7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403d7c:	2b00      	cmp	r3, #0
  403d7e:	f040 8337 	bne.w	4043f0 <_dtoa_r+0xbd8>
  403d82:	9606      	str	r6, [sp, #24]
  403d84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d86:	9a04      	ldr	r2, [sp, #16]
  403d88:	f8dd b018 	ldr.w	fp, [sp, #24]
  403d8c:	3b01      	subs	r3, #1
  403d8e:	18d3      	adds	r3, r2, r3
  403d90:	930b      	str	r3, [sp, #44]	; 0x2c
  403d92:	f00a 0301 	and.w	r3, sl, #1
  403d96:	930c      	str	r3, [sp, #48]	; 0x30
  403d98:	4617      	mov	r7, r2
  403d9a:	46c2      	mov	sl, r8
  403d9c:	4651      	mov	r1, sl
  403d9e:	4648      	mov	r0, r9
  403da0:	f7ff fca4 	bl	4036ec <quorem>
  403da4:	4631      	mov	r1, r6
  403da6:	4605      	mov	r5, r0
  403da8:	4648      	mov	r0, r9
  403daa:	f001 fa35 	bl	405218 <__mcmp>
  403dae:	465a      	mov	r2, fp
  403db0:	900a      	str	r0, [sp, #40]	; 0x28
  403db2:	4651      	mov	r1, sl
  403db4:	4620      	mov	r0, r4
  403db6:	f001 fa4b 	bl	405250 <__mdiff>
  403dba:	68c2      	ldr	r2, [r0, #12]
  403dbc:	4680      	mov	r8, r0
  403dbe:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403dc2:	2a00      	cmp	r2, #0
  403dc4:	f040 822b 	bne.w	40421e <_dtoa_r+0xa06>
  403dc8:	4601      	mov	r1, r0
  403dca:	4648      	mov	r0, r9
  403dcc:	9308      	str	r3, [sp, #32]
  403dce:	f001 fa23 	bl	405218 <__mcmp>
  403dd2:	4641      	mov	r1, r8
  403dd4:	9006      	str	r0, [sp, #24]
  403dd6:	4620      	mov	r0, r4
  403dd8:	f001 f846 	bl	404e68 <_Bfree>
  403ddc:	9a06      	ldr	r2, [sp, #24]
  403dde:	9b08      	ldr	r3, [sp, #32]
  403de0:	b932      	cbnz	r2, 403df0 <_dtoa_r+0x5d8>
  403de2:	9924      	ldr	r1, [sp, #144]	; 0x90
  403de4:	b921      	cbnz	r1, 403df0 <_dtoa_r+0x5d8>
  403de6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403de8:	2a00      	cmp	r2, #0
  403dea:	f000 83ef 	beq.w	4045cc <_dtoa_r+0xdb4>
  403dee:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403df0:	990a      	ldr	r1, [sp, #40]	; 0x28
  403df2:	2900      	cmp	r1, #0
  403df4:	f2c0 829f 	blt.w	404336 <_dtoa_r+0xb1e>
  403df8:	d105      	bne.n	403e06 <_dtoa_r+0x5ee>
  403dfa:	9924      	ldr	r1, [sp, #144]	; 0x90
  403dfc:	b919      	cbnz	r1, 403e06 <_dtoa_r+0x5ee>
  403dfe:	990c      	ldr	r1, [sp, #48]	; 0x30
  403e00:	2900      	cmp	r1, #0
  403e02:	f000 8298 	beq.w	404336 <_dtoa_r+0xb1e>
  403e06:	2a00      	cmp	r2, #0
  403e08:	f300 8306 	bgt.w	404418 <_dtoa_r+0xc00>
  403e0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403e0e:	703b      	strb	r3, [r7, #0]
  403e10:	f107 0801 	add.w	r8, r7, #1
  403e14:	4297      	cmp	r7, r2
  403e16:	4645      	mov	r5, r8
  403e18:	f000 830c 	beq.w	404434 <_dtoa_r+0xc1c>
  403e1c:	4649      	mov	r1, r9
  403e1e:	2300      	movs	r3, #0
  403e20:	220a      	movs	r2, #10
  403e22:	4620      	mov	r0, r4
  403e24:	f001 f82a 	bl	404e7c <__multadd>
  403e28:	455e      	cmp	r6, fp
  403e2a:	4681      	mov	r9, r0
  403e2c:	4631      	mov	r1, r6
  403e2e:	f04f 0300 	mov.w	r3, #0
  403e32:	f04f 020a 	mov.w	r2, #10
  403e36:	4620      	mov	r0, r4
  403e38:	f000 81eb 	beq.w	404212 <_dtoa_r+0x9fa>
  403e3c:	f001 f81e 	bl	404e7c <__multadd>
  403e40:	4659      	mov	r1, fp
  403e42:	4606      	mov	r6, r0
  403e44:	2300      	movs	r3, #0
  403e46:	220a      	movs	r2, #10
  403e48:	4620      	mov	r0, r4
  403e4a:	f001 f817 	bl	404e7c <__multadd>
  403e4e:	4647      	mov	r7, r8
  403e50:	4683      	mov	fp, r0
  403e52:	e7a3      	b.n	403d9c <_dtoa_r+0x584>
  403e54:	201c      	movs	r0, #28
  403e56:	9b08      	ldr	r3, [sp, #32]
  403e58:	4403      	add	r3, r0
  403e5a:	9308      	str	r3, [sp, #32]
  403e5c:	9b06      	ldr	r3, [sp, #24]
  403e5e:	4403      	add	r3, r0
  403e60:	4405      	add	r5, r0
  403e62:	9306      	str	r3, [sp, #24]
  403e64:	e763      	b.n	403d2e <_dtoa_r+0x516>
  403e66:	4641      	mov	r1, r8
  403e68:	4648      	mov	r0, r9
  403e6a:	f001 f9d5 	bl	405218 <__mcmp>
  403e6e:	2800      	cmp	r0, #0
  403e70:	f6bf af73 	bge.w	403d5a <_dtoa_r+0x542>
  403e74:	9f02      	ldr	r7, [sp, #8]
  403e76:	4649      	mov	r1, r9
  403e78:	2300      	movs	r3, #0
  403e7a:	220a      	movs	r2, #10
  403e7c:	4620      	mov	r0, r4
  403e7e:	3f01      	subs	r7, #1
  403e80:	9702      	str	r7, [sp, #8]
  403e82:	f000 fffb 	bl	404e7c <__multadd>
  403e86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e88:	4681      	mov	r9, r0
  403e8a:	2b00      	cmp	r3, #0
  403e8c:	f040 83b6 	bne.w	4045fc <_dtoa_r+0xde4>
  403e90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e92:	2b00      	cmp	r3, #0
  403e94:	f340 83bf 	ble.w	404616 <_dtoa_r+0xdfe>
  403e98:	930a      	str	r3, [sp, #40]	; 0x28
  403e9a:	f8dd b010 	ldr.w	fp, [sp, #16]
  403e9e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403ea0:	465d      	mov	r5, fp
  403ea2:	e002      	b.n	403eaa <_dtoa_r+0x692>
  403ea4:	f000 ffea 	bl	404e7c <__multadd>
  403ea8:	4681      	mov	r9, r0
  403eaa:	4641      	mov	r1, r8
  403eac:	4648      	mov	r0, r9
  403eae:	f7ff fc1d 	bl	4036ec <quorem>
  403eb2:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403eb6:	f805 ab01 	strb.w	sl, [r5], #1
  403eba:	eba5 030b 	sub.w	r3, r5, fp
  403ebe:	42bb      	cmp	r3, r7
  403ec0:	f04f 020a 	mov.w	r2, #10
  403ec4:	f04f 0300 	mov.w	r3, #0
  403ec8:	4649      	mov	r1, r9
  403eca:	4620      	mov	r0, r4
  403ecc:	dbea      	blt.n	403ea4 <_dtoa_r+0x68c>
  403ece:	9b04      	ldr	r3, [sp, #16]
  403ed0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403ed2:	2a01      	cmp	r2, #1
  403ed4:	bfac      	ite	ge
  403ed6:	189b      	addge	r3, r3, r2
  403ed8:	3301      	addlt	r3, #1
  403eda:	461d      	mov	r5, r3
  403edc:	f04f 0b00 	mov.w	fp, #0
  403ee0:	4649      	mov	r1, r9
  403ee2:	2201      	movs	r2, #1
  403ee4:	4620      	mov	r0, r4
  403ee6:	f001 f945 	bl	405174 <__lshift>
  403eea:	4641      	mov	r1, r8
  403eec:	4681      	mov	r9, r0
  403eee:	f001 f993 	bl	405218 <__mcmp>
  403ef2:	2800      	cmp	r0, #0
  403ef4:	f340 823d 	ble.w	404372 <_dtoa_r+0xb5a>
  403ef8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403efc:	9904      	ldr	r1, [sp, #16]
  403efe:	1e6b      	subs	r3, r5, #1
  403f00:	e004      	b.n	403f0c <_dtoa_r+0x6f4>
  403f02:	428b      	cmp	r3, r1
  403f04:	f000 81ae 	beq.w	404264 <_dtoa_r+0xa4c>
  403f08:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403f0c:	2a39      	cmp	r2, #57	; 0x39
  403f0e:	f103 0501 	add.w	r5, r3, #1
  403f12:	d0f6      	beq.n	403f02 <_dtoa_r+0x6ea>
  403f14:	3201      	adds	r2, #1
  403f16:	701a      	strb	r2, [r3, #0]
  403f18:	4641      	mov	r1, r8
  403f1a:	4620      	mov	r0, r4
  403f1c:	f000 ffa4 	bl	404e68 <_Bfree>
  403f20:	2e00      	cmp	r6, #0
  403f22:	f43f ae3d 	beq.w	403ba0 <_dtoa_r+0x388>
  403f26:	f1bb 0f00 	cmp.w	fp, #0
  403f2a:	d005      	beq.n	403f38 <_dtoa_r+0x720>
  403f2c:	45b3      	cmp	fp, r6
  403f2e:	d003      	beq.n	403f38 <_dtoa_r+0x720>
  403f30:	4659      	mov	r1, fp
  403f32:	4620      	mov	r0, r4
  403f34:	f000 ff98 	bl	404e68 <_Bfree>
  403f38:	4631      	mov	r1, r6
  403f3a:	4620      	mov	r0, r4
  403f3c:	f000 ff94 	bl	404e68 <_Bfree>
  403f40:	e62e      	b.n	403ba0 <_dtoa_r+0x388>
  403f42:	2300      	movs	r3, #0
  403f44:	930b      	str	r3, [sp, #44]	; 0x2c
  403f46:	9b02      	ldr	r3, [sp, #8]
  403f48:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403f4a:	4413      	add	r3, r2
  403f4c:	930f      	str	r3, [sp, #60]	; 0x3c
  403f4e:	3301      	adds	r3, #1
  403f50:	2b01      	cmp	r3, #1
  403f52:	461f      	mov	r7, r3
  403f54:	461e      	mov	r6, r3
  403f56:	930a      	str	r3, [sp, #40]	; 0x28
  403f58:	bfb8      	it	lt
  403f5a:	2701      	movlt	r7, #1
  403f5c:	2100      	movs	r1, #0
  403f5e:	2f17      	cmp	r7, #23
  403f60:	6461      	str	r1, [r4, #68]	; 0x44
  403f62:	d90a      	bls.n	403f7a <_dtoa_r+0x762>
  403f64:	2201      	movs	r2, #1
  403f66:	2304      	movs	r3, #4
  403f68:	005b      	lsls	r3, r3, #1
  403f6a:	f103 0014 	add.w	r0, r3, #20
  403f6e:	4287      	cmp	r7, r0
  403f70:	4611      	mov	r1, r2
  403f72:	f102 0201 	add.w	r2, r2, #1
  403f76:	d2f7      	bcs.n	403f68 <_dtoa_r+0x750>
  403f78:	6461      	str	r1, [r4, #68]	; 0x44
  403f7a:	4620      	mov	r0, r4
  403f7c:	f000 ff4e 	bl	404e1c <_Balloc>
  403f80:	2e0e      	cmp	r6, #14
  403f82:	9004      	str	r0, [sp, #16]
  403f84:	6420      	str	r0, [r4, #64]	; 0x40
  403f86:	f63f ad41 	bhi.w	403a0c <_dtoa_r+0x1f4>
  403f8a:	2d00      	cmp	r5, #0
  403f8c:	f43f ad3e 	beq.w	403a0c <_dtoa_r+0x1f4>
  403f90:	9902      	ldr	r1, [sp, #8]
  403f92:	2900      	cmp	r1, #0
  403f94:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403f98:	f340 8202 	ble.w	4043a0 <_dtoa_r+0xb88>
  403f9c:	4bb8      	ldr	r3, [pc, #736]	; (404280 <_dtoa_r+0xa68>)
  403f9e:	f001 020f 	and.w	r2, r1, #15
  403fa2:	110d      	asrs	r5, r1, #4
  403fa4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403fa8:	06e9      	lsls	r1, r5, #27
  403faa:	e9d3 6700 	ldrd	r6, r7, [r3]
  403fae:	f140 81ae 	bpl.w	40430e <_dtoa_r+0xaf6>
  403fb2:	4bb4      	ldr	r3, [pc, #720]	; (404284 <_dtoa_r+0xa6c>)
  403fb4:	4650      	mov	r0, sl
  403fb6:	4659      	mov	r1, fp
  403fb8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403fbc:	f7fd ffd4 	bl	401f68 <__aeabi_ddiv>
  403fc0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403fc4:	f005 050f 	and.w	r5, r5, #15
  403fc8:	f04f 0a03 	mov.w	sl, #3
  403fcc:	b18d      	cbz	r5, 403ff2 <_dtoa_r+0x7da>
  403fce:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 404284 <_dtoa_r+0xa6c>
  403fd2:	07ea      	lsls	r2, r5, #31
  403fd4:	d509      	bpl.n	403fea <_dtoa_r+0x7d2>
  403fd6:	4630      	mov	r0, r6
  403fd8:	4639      	mov	r1, r7
  403fda:	e9d8 2300 	ldrd	r2, r3, [r8]
  403fde:	f7fd fe99 	bl	401d14 <__aeabi_dmul>
  403fe2:	f10a 0a01 	add.w	sl, sl, #1
  403fe6:	4606      	mov	r6, r0
  403fe8:	460f      	mov	r7, r1
  403fea:	106d      	asrs	r5, r5, #1
  403fec:	f108 0808 	add.w	r8, r8, #8
  403ff0:	d1ef      	bne.n	403fd2 <_dtoa_r+0x7ba>
  403ff2:	463b      	mov	r3, r7
  403ff4:	4632      	mov	r2, r6
  403ff6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403ffa:	f7fd ffb5 	bl	401f68 <__aeabi_ddiv>
  403ffe:	4607      	mov	r7, r0
  404000:	4688      	mov	r8, r1
  404002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404004:	b143      	cbz	r3, 404018 <_dtoa_r+0x800>
  404006:	2200      	movs	r2, #0
  404008:	4b9f      	ldr	r3, [pc, #636]	; (404288 <_dtoa_r+0xa70>)
  40400a:	4638      	mov	r0, r7
  40400c:	4641      	mov	r1, r8
  40400e:	f001 ff59 	bl	405ec4 <__aeabi_dcmplt>
  404012:	2800      	cmp	r0, #0
  404014:	f040 8286 	bne.w	404524 <_dtoa_r+0xd0c>
  404018:	4650      	mov	r0, sl
  40401a:	f7fd fe15 	bl	401c48 <__aeabi_i2d>
  40401e:	463a      	mov	r2, r7
  404020:	4643      	mov	r3, r8
  404022:	f7fd fe77 	bl	401d14 <__aeabi_dmul>
  404026:	4b99      	ldr	r3, [pc, #612]	; (40428c <_dtoa_r+0xa74>)
  404028:	2200      	movs	r2, #0
  40402a:	f7fd fcc1 	bl	4019b0 <__adddf3>
  40402e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404030:	4605      	mov	r5, r0
  404032:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404036:	2b00      	cmp	r3, #0
  404038:	f000 813e 	beq.w	4042b8 <_dtoa_r+0xaa0>
  40403c:	9b02      	ldr	r3, [sp, #8]
  40403e:	9315      	str	r3, [sp, #84]	; 0x54
  404040:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404042:	9312      	str	r3, [sp, #72]	; 0x48
  404044:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404046:	2b00      	cmp	r3, #0
  404048:	f000 81fa 	beq.w	404440 <_dtoa_r+0xc28>
  40404c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40404e:	4b8c      	ldr	r3, [pc, #560]	; (404280 <_dtoa_r+0xa68>)
  404050:	498f      	ldr	r1, [pc, #572]	; (404290 <_dtoa_r+0xa78>)
  404052:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404056:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  40405a:	2000      	movs	r0, #0
  40405c:	f7fd ff84 	bl	401f68 <__aeabi_ddiv>
  404060:	462a      	mov	r2, r5
  404062:	4633      	mov	r3, r6
  404064:	f7fd fca2 	bl	4019ac <__aeabi_dsub>
  404068:	4682      	mov	sl, r0
  40406a:	468b      	mov	fp, r1
  40406c:	4638      	mov	r0, r7
  40406e:	4641      	mov	r1, r8
  404070:	f001 ff66 	bl	405f40 <__aeabi_d2iz>
  404074:	4605      	mov	r5, r0
  404076:	f7fd fde7 	bl	401c48 <__aeabi_i2d>
  40407a:	4602      	mov	r2, r0
  40407c:	460b      	mov	r3, r1
  40407e:	4638      	mov	r0, r7
  404080:	4641      	mov	r1, r8
  404082:	f7fd fc93 	bl	4019ac <__aeabi_dsub>
  404086:	3530      	adds	r5, #48	; 0x30
  404088:	fa5f f885 	uxtb.w	r8, r5
  40408c:	9d04      	ldr	r5, [sp, #16]
  40408e:	4606      	mov	r6, r0
  404090:	460f      	mov	r7, r1
  404092:	f885 8000 	strb.w	r8, [r5]
  404096:	4602      	mov	r2, r0
  404098:	460b      	mov	r3, r1
  40409a:	4650      	mov	r0, sl
  40409c:	4659      	mov	r1, fp
  40409e:	3501      	adds	r5, #1
  4040a0:	f001 ff2e 	bl	405f00 <__aeabi_dcmpgt>
  4040a4:	2800      	cmp	r0, #0
  4040a6:	d154      	bne.n	404152 <_dtoa_r+0x93a>
  4040a8:	4632      	mov	r2, r6
  4040aa:	463b      	mov	r3, r7
  4040ac:	2000      	movs	r0, #0
  4040ae:	4976      	ldr	r1, [pc, #472]	; (404288 <_dtoa_r+0xa70>)
  4040b0:	f7fd fc7c 	bl	4019ac <__aeabi_dsub>
  4040b4:	4602      	mov	r2, r0
  4040b6:	460b      	mov	r3, r1
  4040b8:	4650      	mov	r0, sl
  4040ba:	4659      	mov	r1, fp
  4040bc:	f001 ff20 	bl	405f00 <__aeabi_dcmpgt>
  4040c0:	2800      	cmp	r0, #0
  4040c2:	f040 8270 	bne.w	4045a6 <_dtoa_r+0xd8e>
  4040c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4040c8:	2a01      	cmp	r2, #1
  4040ca:	f000 8111 	beq.w	4042f0 <_dtoa_r+0xad8>
  4040ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4040d0:	9a04      	ldr	r2, [sp, #16]
  4040d2:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4040d6:	4413      	add	r3, r2
  4040d8:	4699      	mov	r9, r3
  4040da:	e00d      	b.n	4040f8 <_dtoa_r+0x8e0>
  4040dc:	2000      	movs	r0, #0
  4040de:	496a      	ldr	r1, [pc, #424]	; (404288 <_dtoa_r+0xa70>)
  4040e0:	f7fd fc64 	bl	4019ac <__aeabi_dsub>
  4040e4:	4652      	mov	r2, sl
  4040e6:	465b      	mov	r3, fp
  4040e8:	f001 feec 	bl	405ec4 <__aeabi_dcmplt>
  4040ec:	2800      	cmp	r0, #0
  4040ee:	f040 8258 	bne.w	4045a2 <_dtoa_r+0xd8a>
  4040f2:	454d      	cmp	r5, r9
  4040f4:	f000 80fa 	beq.w	4042ec <_dtoa_r+0xad4>
  4040f8:	4650      	mov	r0, sl
  4040fa:	4659      	mov	r1, fp
  4040fc:	2200      	movs	r2, #0
  4040fe:	4b65      	ldr	r3, [pc, #404]	; (404294 <_dtoa_r+0xa7c>)
  404100:	f7fd fe08 	bl	401d14 <__aeabi_dmul>
  404104:	2200      	movs	r2, #0
  404106:	4b63      	ldr	r3, [pc, #396]	; (404294 <_dtoa_r+0xa7c>)
  404108:	4682      	mov	sl, r0
  40410a:	468b      	mov	fp, r1
  40410c:	4630      	mov	r0, r6
  40410e:	4639      	mov	r1, r7
  404110:	f7fd fe00 	bl	401d14 <__aeabi_dmul>
  404114:	460f      	mov	r7, r1
  404116:	4606      	mov	r6, r0
  404118:	f001 ff12 	bl	405f40 <__aeabi_d2iz>
  40411c:	4680      	mov	r8, r0
  40411e:	f7fd fd93 	bl	401c48 <__aeabi_i2d>
  404122:	4602      	mov	r2, r0
  404124:	460b      	mov	r3, r1
  404126:	4630      	mov	r0, r6
  404128:	4639      	mov	r1, r7
  40412a:	f7fd fc3f 	bl	4019ac <__aeabi_dsub>
  40412e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404132:	fa5f f888 	uxtb.w	r8, r8
  404136:	4652      	mov	r2, sl
  404138:	465b      	mov	r3, fp
  40413a:	f805 8b01 	strb.w	r8, [r5], #1
  40413e:	4606      	mov	r6, r0
  404140:	460f      	mov	r7, r1
  404142:	f001 febf 	bl	405ec4 <__aeabi_dcmplt>
  404146:	4632      	mov	r2, r6
  404148:	463b      	mov	r3, r7
  40414a:	2800      	cmp	r0, #0
  40414c:	d0c6      	beq.n	4040dc <_dtoa_r+0x8c4>
  40414e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404152:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404154:	9302      	str	r3, [sp, #8]
  404156:	e523      	b.n	403ba0 <_dtoa_r+0x388>
  404158:	2300      	movs	r3, #0
  40415a:	930b      	str	r3, [sp, #44]	; 0x2c
  40415c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40415e:	2b00      	cmp	r3, #0
  404160:	f340 80dc 	ble.w	40431c <_dtoa_r+0xb04>
  404164:	461f      	mov	r7, r3
  404166:	461e      	mov	r6, r3
  404168:	930f      	str	r3, [sp, #60]	; 0x3c
  40416a:	930a      	str	r3, [sp, #40]	; 0x28
  40416c:	e6f6      	b.n	403f5c <_dtoa_r+0x744>
  40416e:	2301      	movs	r3, #1
  404170:	930b      	str	r3, [sp, #44]	; 0x2c
  404172:	e7f3      	b.n	40415c <_dtoa_r+0x944>
  404174:	f1ba 0f00 	cmp.w	sl, #0
  404178:	f47f ada8 	bne.w	403ccc <_dtoa_r+0x4b4>
  40417c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404180:	2b00      	cmp	r3, #0
  404182:	f47f adba 	bne.w	403cfa <_dtoa_r+0x4e2>
  404186:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  40418a:	0d3f      	lsrs	r7, r7, #20
  40418c:	053f      	lsls	r7, r7, #20
  40418e:	2f00      	cmp	r7, #0
  404190:	f000 820d 	beq.w	4045ae <_dtoa_r+0xd96>
  404194:	9b08      	ldr	r3, [sp, #32]
  404196:	3301      	adds	r3, #1
  404198:	9308      	str	r3, [sp, #32]
  40419a:	9b06      	ldr	r3, [sp, #24]
  40419c:	3301      	adds	r3, #1
  40419e:	9306      	str	r3, [sp, #24]
  4041a0:	2301      	movs	r3, #1
  4041a2:	930c      	str	r3, [sp, #48]	; 0x30
  4041a4:	e5ab      	b.n	403cfe <_dtoa_r+0x4e6>
  4041a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041a8:	2b00      	cmp	r3, #0
  4041aa:	f73f ac42 	bgt.w	403a32 <_dtoa_r+0x21a>
  4041ae:	f040 8221 	bne.w	4045f4 <_dtoa_r+0xddc>
  4041b2:	2200      	movs	r2, #0
  4041b4:	4b38      	ldr	r3, [pc, #224]	; (404298 <_dtoa_r+0xa80>)
  4041b6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4041ba:	f7fd fdab 	bl	401d14 <__aeabi_dmul>
  4041be:	4652      	mov	r2, sl
  4041c0:	465b      	mov	r3, fp
  4041c2:	f001 fe93 	bl	405eec <__aeabi_dcmpge>
  4041c6:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4041ca:	4646      	mov	r6, r8
  4041cc:	2800      	cmp	r0, #0
  4041ce:	d041      	beq.n	404254 <_dtoa_r+0xa3c>
  4041d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4041d2:	9d04      	ldr	r5, [sp, #16]
  4041d4:	43db      	mvns	r3, r3
  4041d6:	9302      	str	r3, [sp, #8]
  4041d8:	4641      	mov	r1, r8
  4041da:	4620      	mov	r0, r4
  4041dc:	f000 fe44 	bl	404e68 <_Bfree>
  4041e0:	2e00      	cmp	r6, #0
  4041e2:	f43f acdd 	beq.w	403ba0 <_dtoa_r+0x388>
  4041e6:	e6a7      	b.n	403f38 <_dtoa_r+0x720>
  4041e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4041ea:	4649      	mov	r1, r9
  4041ec:	4620      	mov	r0, r4
  4041ee:	f000 ff71 	bl	4050d4 <__pow5mult>
  4041f2:	4681      	mov	r9, r0
  4041f4:	e558      	b.n	403ca8 <_dtoa_r+0x490>
  4041f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  4041f8:	2a00      	cmp	r2, #0
  4041fa:	f000 8187 	beq.w	40450c <_dtoa_r+0xcf4>
  4041fe:	f203 4333 	addw	r3, r3, #1075	; 0x433
  404202:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404204:	9d08      	ldr	r5, [sp, #32]
  404206:	e4f2      	b.n	403bee <_dtoa_r+0x3d6>
  404208:	f1ba 0f00 	cmp.w	sl, #0
  40420c:	f47f ad75 	bne.w	403cfa <_dtoa_r+0x4e2>
  404210:	e7b4      	b.n	40417c <_dtoa_r+0x964>
  404212:	f000 fe33 	bl	404e7c <__multadd>
  404216:	4647      	mov	r7, r8
  404218:	4606      	mov	r6, r0
  40421a:	4683      	mov	fp, r0
  40421c:	e5be      	b.n	403d9c <_dtoa_r+0x584>
  40421e:	4601      	mov	r1, r0
  404220:	4620      	mov	r0, r4
  404222:	9306      	str	r3, [sp, #24]
  404224:	f000 fe20 	bl	404e68 <_Bfree>
  404228:	2201      	movs	r2, #1
  40422a:	9b06      	ldr	r3, [sp, #24]
  40422c:	e5e0      	b.n	403df0 <_dtoa_r+0x5d8>
  40422e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404230:	2b02      	cmp	r3, #2
  404232:	f77f ad96 	ble.w	403d62 <_dtoa_r+0x54a>
  404236:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404238:	2b00      	cmp	r3, #0
  40423a:	d1c9      	bne.n	4041d0 <_dtoa_r+0x9b8>
  40423c:	4641      	mov	r1, r8
  40423e:	2205      	movs	r2, #5
  404240:	4620      	mov	r0, r4
  404242:	f000 fe1b 	bl	404e7c <__multadd>
  404246:	4601      	mov	r1, r0
  404248:	4680      	mov	r8, r0
  40424a:	4648      	mov	r0, r9
  40424c:	f000 ffe4 	bl	405218 <__mcmp>
  404250:	2800      	cmp	r0, #0
  404252:	ddbd      	ble.n	4041d0 <_dtoa_r+0x9b8>
  404254:	9a02      	ldr	r2, [sp, #8]
  404256:	9904      	ldr	r1, [sp, #16]
  404258:	2331      	movs	r3, #49	; 0x31
  40425a:	3201      	adds	r2, #1
  40425c:	9202      	str	r2, [sp, #8]
  40425e:	700b      	strb	r3, [r1, #0]
  404260:	1c4d      	adds	r5, r1, #1
  404262:	e7b9      	b.n	4041d8 <_dtoa_r+0x9c0>
  404264:	9a02      	ldr	r2, [sp, #8]
  404266:	3201      	adds	r2, #1
  404268:	9202      	str	r2, [sp, #8]
  40426a:	9a04      	ldr	r2, [sp, #16]
  40426c:	2331      	movs	r3, #49	; 0x31
  40426e:	7013      	strb	r3, [r2, #0]
  404270:	e652      	b.n	403f18 <_dtoa_r+0x700>
  404272:	2301      	movs	r3, #1
  404274:	930b      	str	r3, [sp, #44]	; 0x2c
  404276:	e666      	b.n	403f46 <_dtoa_r+0x72e>
  404278:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40427c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40427e:	e48f      	b.n	403ba0 <_dtoa_r+0x388>
  404280:	00406da8 	.word	0x00406da8
  404284:	00406d80 	.word	0x00406d80
  404288:	3ff00000 	.word	0x3ff00000
  40428c:	401c0000 	.word	0x401c0000
  404290:	3fe00000 	.word	0x3fe00000
  404294:	40240000 	.word	0x40240000
  404298:	40140000 	.word	0x40140000
  40429c:	4650      	mov	r0, sl
  40429e:	f7fd fcd3 	bl	401c48 <__aeabi_i2d>
  4042a2:	463a      	mov	r2, r7
  4042a4:	4643      	mov	r3, r8
  4042a6:	f7fd fd35 	bl	401d14 <__aeabi_dmul>
  4042aa:	2200      	movs	r2, #0
  4042ac:	4bc1      	ldr	r3, [pc, #772]	; (4045b4 <_dtoa_r+0xd9c>)
  4042ae:	f7fd fb7f 	bl	4019b0 <__adddf3>
  4042b2:	4605      	mov	r5, r0
  4042b4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4042b8:	4641      	mov	r1, r8
  4042ba:	2200      	movs	r2, #0
  4042bc:	4bbe      	ldr	r3, [pc, #760]	; (4045b8 <_dtoa_r+0xda0>)
  4042be:	4638      	mov	r0, r7
  4042c0:	f7fd fb74 	bl	4019ac <__aeabi_dsub>
  4042c4:	462a      	mov	r2, r5
  4042c6:	4633      	mov	r3, r6
  4042c8:	4682      	mov	sl, r0
  4042ca:	468b      	mov	fp, r1
  4042cc:	f001 fe18 	bl	405f00 <__aeabi_dcmpgt>
  4042d0:	4680      	mov	r8, r0
  4042d2:	2800      	cmp	r0, #0
  4042d4:	f040 8110 	bne.w	4044f8 <_dtoa_r+0xce0>
  4042d8:	462a      	mov	r2, r5
  4042da:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4042de:	4650      	mov	r0, sl
  4042e0:	4659      	mov	r1, fp
  4042e2:	f001 fdef 	bl	405ec4 <__aeabi_dcmplt>
  4042e6:	b118      	cbz	r0, 4042f0 <_dtoa_r+0xad8>
  4042e8:	4646      	mov	r6, r8
  4042ea:	e771      	b.n	4041d0 <_dtoa_r+0x9b8>
  4042ec:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4042f0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4042f4:	f7ff bb8a 	b.w	403a0c <_dtoa_r+0x1f4>
  4042f8:	9804      	ldr	r0, [sp, #16]
  4042fa:	f7ff babb 	b.w	403874 <_dtoa_r+0x5c>
  4042fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404300:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404302:	970c      	str	r7, [sp, #48]	; 0x30
  404304:	1afb      	subs	r3, r7, r3
  404306:	441a      	add	r2, r3
  404308:	920d      	str	r2, [sp, #52]	; 0x34
  40430a:	2700      	movs	r7, #0
  40430c:	e469      	b.n	403be2 <_dtoa_r+0x3ca>
  40430e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404312:	f04f 0a02 	mov.w	sl, #2
  404316:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40431a:	e657      	b.n	403fcc <_dtoa_r+0x7b4>
  40431c:	2100      	movs	r1, #0
  40431e:	2301      	movs	r3, #1
  404320:	6461      	str	r1, [r4, #68]	; 0x44
  404322:	4620      	mov	r0, r4
  404324:	9325      	str	r3, [sp, #148]	; 0x94
  404326:	f000 fd79 	bl	404e1c <_Balloc>
  40432a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40432c:	9004      	str	r0, [sp, #16]
  40432e:	6420      	str	r0, [r4, #64]	; 0x40
  404330:	930a      	str	r3, [sp, #40]	; 0x28
  404332:	930f      	str	r3, [sp, #60]	; 0x3c
  404334:	e629      	b.n	403f8a <_dtoa_r+0x772>
  404336:	2a00      	cmp	r2, #0
  404338:	46d0      	mov	r8, sl
  40433a:	f8cd b018 	str.w	fp, [sp, #24]
  40433e:	469a      	mov	sl, r3
  404340:	dd11      	ble.n	404366 <_dtoa_r+0xb4e>
  404342:	4649      	mov	r1, r9
  404344:	2201      	movs	r2, #1
  404346:	4620      	mov	r0, r4
  404348:	f000 ff14 	bl	405174 <__lshift>
  40434c:	4641      	mov	r1, r8
  40434e:	4681      	mov	r9, r0
  404350:	f000 ff62 	bl	405218 <__mcmp>
  404354:	2800      	cmp	r0, #0
  404356:	f340 8146 	ble.w	4045e6 <_dtoa_r+0xdce>
  40435a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40435e:	f000 8106 	beq.w	40456e <_dtoa_r+0xd56>
  404362:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  404366:	46b3      	mov	fp, r6
  404368:	f887 a000 	strb.w	sl, [r7]
  40436c:	1c7d      	adds	r5, r7, #1
  40436e:	9e06      	ldr	r6, [sp, #24]
  404370:	e5d2      	b.n	403f18 <_dtoa_r+0x700>
  404372:	d104      	bne.n	40437e <_dtoa_r+0xb66>
  404374:	f01a 0f01 	tst.w	sl, #1
  404378:	d001      	beq.n	40437e <_dtoa_r+0xb66>
  40437a:	e5bd      	b.n	403ef8 <_dtoa_r+0x6e0>
  40437c:	4615      	mov	r5, r2
  40437e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404382:	2b30      	cmp	r3, #48	; 0x30
  404384:	f105 32ff 	add.w	r2, r5, #4294967295
  404388:	d0f8      	beq.n	40437c <_dtoa_r+0xb64>
  40438a:	e5c5      	b.n	403f18 <_dtoa_r+0x700>
  40438c:	9904      	ldr	r1, [sp, #16]
  40438e:	2230      	movs	r2, #48	; 0x30
  404390:	700a      	strb	r2, [r1, #0]
  404392:	9a02      	ldr	r2, [sp, #8]
  404394:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404398:	3201      	adds	r2, #1
  40439a:	9202      	str	r2, [sp, #8]
  40439c:	f7ff bbfc 	b.w	403b98 <_dtoa_r+0x380>
  4043a0:	f000 80bb 	beq.w	40451a <_dtoa_r+0xd02>
  4043a4:	9b02      	ldr	r3, [sp, #8]
  4043a6:	425d      	negs	r5, r3
  4043a8:	4b84      	ldr	r3, [pc, #528]	; (4045bc <_dtoa_r+0xda4>)
  4043aa:	f005 020f 	and.w	r2, r5, #15
  4043ae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4043b2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4043b6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4043ba:	f7fd fcab 	bl	401d14 <__aeabi_dmul>
  4043be:	112d      	asrs	r5, r5, #4
  4043c0:	4607      	mov	r7, r0
  4043c2:	4688      	mov	r8, r1
  4043c4:	f000 812c 	beq.w	404620 <_dtoa_r+0xe08>
  4043c8:	4e7d      	ldr	r6, [pc, #500]	; (4045c0 <_dtoa_r+0xda8>)
  4043ca:	f04f 0a02 	mov.w	sl, #2
  4043ce:	07eb      	lsls	r3, r5, #31
  4043d0:	d509      	bpl.n	4043e6 <_dtoa_r+0xbce>
  4043d2:	4638      	mov	r0, r7
  4043d4:	4641      	mov	r1, r8
  4043d6:	e9d6 2300 	ldrd	r2, r3, [r6]
  4043da:	f7fd fc9b 	bl	401d14 <__aeabi_dmul>
  4043de:	f10a 0a01 	add.w	sl, sl, #1
  4043e2:	4607      	mov	r7, r0
  4043e4:	4688      	mov	r8, r1
  4043e6:	106d      	asrs	r5, r5, #1
  4043e8:	f106 0608 	add.w	r6, r6, #8
  4043ec:	d1ef      	bne.n	4043ce <_dtoa_r+0xbb6>
  4043ee:	e608      	b.n	404002 <_dtoa_r+0x7ea>
  4043f0:	6871      	ldr	r1, [r6, #4]
  4043f2:	4620      	mov	r0, r4
  4043f4:	f000 fd12 	bl	404e1c <_Balloc>
  4043f8:	6933      	ldr	r3, [r6, #16]
  4043fa:	3302      	adds	r3, #2
  4043fc:	009a      	lsls	r2, r3, #2
  4043fe:	4605      	mov	r5, r0
  404400:	f106 010c 	add.w	r1, r6, #12
  404404:	300c      	adds	r0, #12
  404406:	f000 fc63 	bl	404cd0 <memcpy>
  40440a:	4629      	mov	r1, r5
  40440c:	2201      	movs	r2, #1
  40440e:	4620      	mov	r0, r4
  404410:	f000 feb0 	bl	405174 <__lshift>
  404414:	9006      	str	r0, [sp, #24]
  404416:	e4b5      	b.n	403d84 <_dtoa_r+0x56c>
  404418:	2b39      	cmp	r3, #57	; 0x39
  40441a:	f8cd b018 	str.w	fp, [sp, #24]
  40441e:	46d0      	mov	r8, sl
  404420:	f000 80a5 	beq.w	40456e <_dtoa_r+0xd56>
  404424:	f103 0a01 	add.w	sl, r3, #1
  404428:	46b3      	mov	fp, r6
  40442a:	f887 a000 	strb.w	sl, [r7]
  40442e:	1c7d      	adds	r5, r7, #1
  404430:	9e06      	ldr	r6, [sp, #24]
  404432:	e571      	b.n	403f18 <_dtoa_r+0x700>
  404434:	465a      	mov	r2, fp
  404436:	46d0      	mov	r8, sl
  404438:	46b3      	mov	fp, r6
  40443a:	469a      	mov	sl, r3
  40443c:	4616      	mov	r6, r2
  40443e:	e54f      	b.n	403ee0 <_dtoa_r+0x6c8>
  404440:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404442:	495e      	ldr	r1, [pc, #376]	; (4045bc <_dtoa_r+0xda4>)
  404444:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404448:	462a      	mov	r2, r5
  40444a:	4633      	mov	r3, r6
  40444c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404450:	f7fd fc60 	bl	401d14 <__aeabi_dmul>
  404454:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404458:	4638      	mov	r0, r7
  40445a:	4641      	mov	r1, r8
  40445c:	f001 fd70 	bl	405f40 <__aeabi_d2iz>
  404460:	4605      	mov	r5, r0
  404462:	f7fd fbf1 	bl	401c48 <__aeabi_i2d>
  404466:	460b      	mov	r3, r1
  404468:	4602      	mov	r2, r0
  40446a:	4641      	mov	r1, r8
  40446c:	4638      	mov	r0, r7
  40446e:	f7fd fa9d 	bl	4019ac <__aeabi_dsub>
  404472:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404474:	460f      	mov	r7, r1
  404476:	9904      	ldr	r1, [sp, #16]
  404478:	3530      	adds	r5, #48	; 0x30
  40447a:	2b01      	cmp	r3, #1
  40447c:	700d      	strb	r5, [r1, #0]
  40447e:	4606      	mov	r6, r0
  404480:	f101 0501 	add.w	r5, r1, #1
  404484:	d026      	beq.n	4044d4 <_dtoa_r+0xcbc>
  404486:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404488:	9a04      	ldr	r2, [sp, #16]
  40448a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4045c8 <_dtoa_r+0xdb0>
  40448e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404492:	4413      	add	r3, r2
  404494:	f04f 0a00 	mov.w	sl, #0
  404498:	4699      	mov	r9, r3
  40449a:	4652      	mov	r2, sl
  40449c:	465b      	mov	r3, fp
  40449e:	4630      	mov	r0, r6
  4044a0:	4639      	mov	r1, r7
  4044a2:	f7fd fc37 	bl	401d14 <__aeabi_dmul>
  4044a6:	460f      	mov	r7, r1
  4044a8:	4606      	mov	r6, r0
  4044aa:	f001 fd49 	bl	405f40 <__aeabi_d2iz>
  4044ae:	4680      	mov	r8, r0
  4044b0:	f7fd fbca 	bl	401c48 <__aeabi_i2d>
  4044b4:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4044b8:	4602      	mov	r2, r0
  4044ba:	460b      	mov	r3, r1
  4044bc:	4630      	mov	r0, r6
  4044be:	4639      	mov	r1, r7
  4044c0:	f7fd fa74 	bl	4019ac <__aeabi_dsub>
  4044c4:	f805 8b01 	strb.w	r8, [r5], #1
  4044c8:	454d      	cmp	r5, r9
  4044ca:	4606      	mov	r6, r0
  4044cc:	460f      	mov	r7, r1
  4044ce:	d1e4      	bne.n	40449a <_dtoa_r+0xc82>
  4044d0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4044d4:	4b3b      	ldr	r3, [pc, #236]	; (4045c4 <_dtoa_r+0xdac>)
  4044d6:	2200      	movs	r2, #0
  4044d8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4044dc:	f7fd fa68 	bl	4019b0 <__adddf3>
  4044e0:	4632      	mov	r2, r6
  4044e2:	463b      	mov	r3, r7
  4044e4:	f001 fcee 	bl	405ec4 <__aeabi_dcmplt>
  4044e8:	2800      	cmp	r0, #0
  4044ea:	d046      	beq.n	40457a <_dtoa_r+0xd62>
  4044ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4044ee:	9302      	str	r3, [sp, #8]
  4044f0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4044f4:	f7ff bb43 	b.w	403b7e <_dtoa_r+0x366>
  4044f8:	f04f 0800 	mov.w	r8, #0
  4044fc:	4646      	mov	r6, r8
  4044fe:	e6a9      	b.n	404254 <_dtoa_r+0xa3c>
  404500:	9b08      	ldr	r3, [sp, #32]
  404502:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404504:	1a9d      	subs	r5, r3, r2
  404506:	2300      	movs	r3, #0
  404508:	f7ff bb71 	b.w	403bee <_dtoa_r+0x3d6>
  40450c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40450e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404510:	9d08      	ldr	r5, [sp, #32]
  404512:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404516:	f7ff bb6a 	b.w	403bee <_dtoa_r+0x3d6>
  40451a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40451e:	f04f 0a02 	mov.w	sl, #2
  404522:	e56e      	b.n	404002 <_dtoa_r+0x7ea>
  404524:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404526:	2b00      	cmp	r3, #0
  404528:	f43f aeb8 	beq.w	40429c <_dtoa_r+0xa84>
  40452c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40452e:	2b00      	cmp	r3, #0
  404530:	f77f aede 	ble.w	4042f0 <_dtoa_r+0xad8>
  404534:	2200      	movs	r2, #0
  404536:	4b24      	ldr	r3, [pc, #144]	; (4045c8 <_dtoa_r+0xdb0>)
  404538:	4638      	mov	r0, r7
  40453a:	4641      	mov	r1, r8
  40453c:	f7fd fbea 	bl	401d14 <__aeabi_dmul>
  404540:	4607      	mov	r7, r0
  404542:	4688      	mov	r8, r1
  404544:	f10a 0001 	add.w	r0, sl, #1
  404548:	f7fd fb7e 	bl	401c48 <__aeabi_i2d>
  40454c:	463a      	mov	r2, r7
  40454e:	4643      	mov	r3, r8
  404550:	f7fd fbe0 	bl	401d14 <__aeabi_dmul>
  404554:	2200      	movs	r2, #0
  404556:	4b17      	ldr	r3, [pc, #92]	; (4045b4 <_dtoa_r+0xd9c>)
  404558:	f7fd fa2a 	bl	4019b0 <__adddf3>
  40455c:	9a02      	ldr	r2, [sp, #8]
  40455e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404560:	9312      	str	r3, [sp, #72]	; 0x48
  404562:	3a01      	subs	r2, #1
  404564:	4605      	mov	r5, r0
  404566:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40456a:	9215      	str	r2, [sp, #84]	; 0x54
  40456c:	e56a      	b.n	404044 <_dtoa_r+0x82c>
  40456e:	2239      	movs	r2, #57	; 0x39
  404570:	46b3      	mov	fp, r6
  404572:	703a      	strb	r2, [r7, #0]
  404574:	9e06      	ldr	r6, [sp, #24]
  404576:	1c7d      	adds	r5, r7, #1
  404578:	e4c0      	b.n	403efc <_dtoa_r+0x6e4>
  40457a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  40457e:	2000      	movs	r0, #0
  404580:	4910      	ldr	r1, [pc, #64]	; (4045c4 <_dtoa_r+0xdac>)
  404582:	f7fd fa13 	bl	4019ac <__aeabi_dsub>
  404586:	4632      	mov	r2, r6
  404588:	463b      	mov	r3, r7
  40458a:	f001 fcb9 	bl	405f00 <__aeabi_dcmpgt>
  40458e:	b908      	cbnz	r0, 404594 <_dtoa_r+0xd7c>
  404590:	e6ae      	b.n	4042f0 <_dtoa_r+0xad8>
  404592:	4615      	mov	r5, r2
  404594:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404598:	2b30      	cmp	r3, #48	; 0x30
  40459a:	f105 32ff 	add.w	r2, r5, #4294967295
  40459e:	d0f8      	beq.n	404592 <_dtoa_r+0xd7a>
  4045a0:	e5d7      	b.n	404152 <_dtoa_r+0x93a>
  4045a2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4045a6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4045a8:	9302      	str	r3, [sp, #8]
  4045aa:	f7ff bae8 	b.w	403b7e <_dtoa_r+0x366>
  4045ae:	970c      	str	r7, [sp, #48]	; 0x30
  4045b0:	f7ff bba5 	b.w	403cfe <_dtoa_r+0x4e6>
  4045b4:	401c0000 	.word	0x401c0000
  4045b8:	40140000 	.word	0x40140000
  4045bc:	00406da8 	.word	0x00406da8
  4045c0:	00406d80 	.word	0x00406d80
  4045c4:	3fe00000 	.word	0x3fe00000
  4045c8:	40240000 	.word	0x40240000
  4045cc:	2b39      	cmp	r3, #57	; 0x39
  4045ce:	f8cd b018 	str.w	fp, [sp, #24]
  4045d2:	46d0      	mov	r8, sl
  4045d4:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4045d8:	469a      	mov	sl, r3
  4045da:	d0c8      	beq.n	40456e <_dtoa_r+0xd56>
  4045dc:	f1bb 0f00 	cmp.w	fp, #0
  4045e0:	f73f aebf 	bgt.w	404362 <_dtoa_r+0xb4a>
  4045e4:	e6bf      	b.n	404366 <_dtoa_r+0xb4e>
  4045e6:	f47f aebe 	bne.w	404366 <_dtoa_r+0xb4e>
  4045ea:	f01a 0f01 	tst.w	sl, #1
  4045ee:	f43f aeba 	beq.w	404366 <_dtoa_r+0xb4e>
  4045f2:	e6b2      	b.n	40435a <_dtoa_r+0xb42>
  4045f4:	f04f 0800 	mov.w	r8, #0
  4045f8:	4646      	mov	r6, r8
  4045fa:	e5e9      	b.n	4041d0 <_dtoa_r+0x9b8>
  4045fc:	4631      	mov	r1, r6
  4045fe:	2300      	movs	r3, #0
  404600:	220a      	movs	r2, #10
  404602:	4620      	mov	r0, r4
  404604:	f000 fc3a 	bl	404e7c <__multadd>
  404608:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40460a:	2b00      	cmp	r3, #0
  40460c:	4606      	mov	r6, r0
  40460e:	dd0a      	ble.n	404626 <_dtoa_r+0xe0e>
  404610:	930a      	str	r3, [sp, #40]	; 0x28
  404612:	f7ff bbaa 	b.w	403d6a <_dtoa_r+0x552>
  404616:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404618:	2b02      	cmp	r3, #2
  40461a:	dc23      	bgt.n	404664 <_dtoa_r+0xe4c>
  40461c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40461e:	e43b      	b.n	403e98 <_dtoa_r+0x680>
  404620:	f04f 0a02 	mov.w	sl, #2
  404624:	e4ed      	b.n	404002 <_dtoa_r+0x7ea>
  404626:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404628:	2b02      	cmp	r3, #2
  40462a:	dc1b      	bgt.n	404664 <_dtoa_r+0xe4c>
  40462c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40462e:	e7ef      	b.n	404610 <_dtoa_r+0xdf8>
  404630:	2500      	movs	r5, #0
  404632:	6465      	str	r5, [r4, #68]	; 0x44
  404634:	4629      	mov	r1, r5
  404636:	4620      	mov	r0, r4
  404638:	f000 fbf0 	bl	404e1c <_Balloc>
  40463c:	f04f 33ff 	mov.w	r3, #4294967295
  404640:	930a      	str	r3, [sp, #40]	; 0x28
  404642:	930f      	str	r3, [sp, #60]	; 0x3c
  404644:	2301      	movs	r3, #1
  404646:	9004      	str	r0, [sp, #16]
  404648:	9525      	str	r5, [sp, #148]	; 0x94
  40464a:	6420      	str	r0, [r4, #64]	; 0x40
  40464c:	930b      	str	r3, [sp, #44]	; 0x2c
  40464e:	f7ff b9dd 	b.w	403a0c <_dtoa_r+0x1f4>
  404652:	2501      	movs	r5, #1
  404654:	f7ff b9a5 	b.w	4039a2 <_dtoa_r+0x18a>
  404658:	f43f ab69 	beq.w	403d2e <_dtoa_r+0x516>
  40465c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404660:	f7ff bbf9 	b.w	403e56 <_dtoa_r+0x63e>
  404664:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404666:	930a      	str	r3, [sp, #40]	; 0x28
  404668:	e5e5      	b.n	404236 <_dtoa_r+0xa1e>
  40466a:	bf00      	nop

0040466c <__libc_fini_array>:
  40466c:	b538      	push	{r3, r4, r5, lr}
  40466e:	4c0a      	ldr	r4, [pc, #40]	; (404698 <__libc_fini_array+0x2c>)
  404670:	4d0a      	ldr	r5, [pc, #40]	; (40469c <__libc_fini_array+0x30>)
  404672:	1b64      	subs	r4, r4, r5
  404674:	10a4      	asrs	r4, r4, #2
  404676:	d00a      	beq.n	40468e <__libc_fini_array+0x22>
  404678:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40467c:	3b01      	subs	r3, #1
  40467e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404682:	3c01      	subs	r4, #1
  404684:	f855 3904 	ldr.w	r3, [r5], #-4
  404688:	4798      	blx	r3
  40468a:	2c00      	cmp	r4, #0
  40468c:	d1f9      	bne.n	404682 <__libc_fini_array+0x16>
  40468e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404692:	f002 bc87 	b.w	406fa4 <_fini>
  404696:	bf00      	nop
  404698:	00406fb4 	.word	0x00406fb4
  40469c:	00406fb0 	.word	0x00406fb0

004046a0 <_localeconv_r>:
  4046a0:	4a04      	ldr	r2, [pc, #16]	; (4046b4 <_localeconv_r+0x14>)
  4046a2:	4b05      	ldr	r3, [pc, #20]	; (4046b8 <_localeconv_r+0x18>)
  4046a4:	6812      	ldr	r2, [r2, #0]
  4046a6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4046a8:	2800      	cmp	r0, #0
  4046aa:	bf08      	it	eq
  4046ac:	4618      	moveq	r0, r3
  4046ae:	30f0      	adds	r0, #240	; 0xf0
  4046b0:	4770      	bx	lr
  4046b2:	bf00      	nop
  4046b4:	20400028 	.word	0x20400028
  4046b8:	2040086c 	.word	0x2040086c

004046bc <__retarget_lock_acquire_recursive>:
  4046bc:	4770      	bx	lr
  4046be:	bf00      	nop

004046c0 <__retarget_lock_release_recursive>:
  4046c0:	4770      	bx	lr
  4046c2:	bf00      	nop

004046c4 <_malloc_r>:
  4046c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4046c8:	f101 060b 	add.w	r6, r1, #11
  4046cc:	2e16      	cmp	r6, #22
  4046ce:	b083      	sub	sp, #12
  4046d0:	4605      	mov	r5, r0
  4046d2:	f240 809e 	bls.w	404812 <_malloc_r+0x14e>
  4046d6:	f036 0607 	bics.w	r6, r6, #7
  4046da:	f100 80bd 	bmi.w	404858 <_malloc_r+0x194>
  4046de:	42b1      	cmp	r1, r6
  4046e0:	f200 80ba 	bhi.w	404858 <_malloc_r+0x194>
  4046e4:	f000 fb8e 	bl	404e04 <__malloc_lock>
  4046e8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  4046ec:	f0c0 8293 	bcc.w	404c16 <_malloc_r+0x552>
  4046f0:	0a73      	lsrs	r3, r6, #9
  4046f2:	f000 80b8 	beq.w	404866 <_malloc_r+0x1a2>
  4046f6:	2b04      	cmp	r3, #4
  4046f8:	f200 8179 	bhi.w	4049ee <_malloc_r+0x32a>
  4046fc:	09b3      	lsrs	r3, r6, #6
  4046fe:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404702:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404706:	00c3      	lsls	r3, r0, #3
  404708:	4fbf      	ldr	r7, [pc, #764]	; (404a08 <_malloc_r+0x344>)
  40470a:	443b      	add	r3, r7
  40470c:	f1a3 0108 	sub.w	r1, r3, #8
  404710:	685c      	ldr	r4, [r3, #4]
  404712:	42a1      	cmp	r1, r4
  404714:	d106      	bne.n	404724 <_malloc_r+0x60>
  404716:	e00c      	b.n	404732 <_malloc_r+0x6e>
  404718:	2a00      	cmp	r2, #0
  40471a:	f280 80aa 	bge.w	404872 <_malloc_r+0x1ae>
  40471e:	68e4      	ldr	r4, [r4, #12]
  404720:	42a1      	cmp	r1, r4
  404722:	d006      	beq.n	404732 <_malloc_r+0x6e>
  404724:	6863      	ldr	r3, [r4, #4]
  404726:	f023 0303 	bic.w	r3, r3, #3
  40472a:	1b9a      	subs	r2, r3, r6
  40472c:	2a0f      	cmp	r2, #15
  40472e:	ddf3      	ble.n	404718 <_malloc_r+0x54>
  404730:	4670      	mov	r0, lr
  404732:	693c      	ldr	r4, [r7, #16]
  404734:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404a1c <_malloc_r+0x358>
  404738:	4574      	cmp	r4, lr
  40473a:	f000 81ab 	beq.w	404a94 <_malloc_r+0x3d0>
  40473e:	6863      	ldr	r3, [r4, #4]
  404740:	f023 0303 	bic.w	r3, r3, #3
  404744:	1b9a      	subs	r2, r3, r6
  404746:	2a0f      	cmp	r2, #15
  404748:	f300 8190 	bgt.w	404a6c <_malloc_r+0x3a8>
  40474c:	2a00      	cmp	r2, #0
  40474e:	f8c7 e014 	str.w	lr, [r7, #20]
  404752:	f8c7 e010 	str.w	lr, [r7, #16]
  404756:	f280 809d 	bge.w	404894 <_malloc_r+0x1d0>
  40475a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40475e:	f080 8161 	bcs.w	404a24 <_malloc_r+0x360>
  404762:	08db      	lsrs	r3, r3, #3
  404764:	f103 0c01 	add.w	ip, r3, #1
  404768:	1099      	asrs	r1, r3, #2
  40476a:	687a      	ldr	r2, [r7, #4]
  40476c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404770:	f8c4 8008 	str.w	r8, [r4, #8]
  404774:	2301      	movs	r3, #1
  404776:	408b      	lsls	r3, r1
  404778:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40477c:	4313      	orrs	r3, r2
  40477e:	3908      	subs	r1, #8
  404780:	60e1      	str	r1, [r4, #12]
  404782:	607b      	str	r3, [r7, #4]
  404784:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404788:	f8c8 400c 	str.w	r4, [r8, #12]
  40478c:	1082      	asrs	r2, r0, #2
  40478e:	2401      	movs	r4, #1
  404790:	4094      	lsls	r4, r2
  404792:	429c      	cmp	r4, r3
  404794:	f200 808b 	bhi.w	4048ae <_malloc_r+0x1ea>
  404798:	421c      	tst	r4, r3
  40479a:	d106      	bne.n	4047aa <_malloc_r+0xe6>
  40479c:	f020 0003 	bic.w	r0, r0, #3
  4047a0:	0064      	lsls	r4, r4, #1
  4047a2:	421c      	tst	r4, r3
  4047a4:	f100 0004 	add.w	r0, r0, #4
  4047a8:	d0fa      	beq.n	4047a0 <_malloc_r+0xdc>
  4047aa:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4047ae:	46cc      	mov	ip, r9
  4047b0:	4680      	mov	r8, r0
  4047b2:	f8dc 300c 	ldr.w	r3, [ip, #12]
  4047b6:	459c      	cmp	ip, r3
  4047b8:	d107      	bne.n	4047ca <_malloc_r+0x106>
  4047ba:	e16d      	b.n	404a98 <_malloc_r+0x3d4>
  4047bc:	2a00      	cmp	r2, #0
  4047be:	f280 817b 	bge.w	404ab8 <_malloc_r+0x3f4>
  4047c2:	68db      	ldr	r3, [r3, #12]
  4047c4:	459c      	cmp	ip, r3
  4047c6:	f000 8167 	beq.w	404a98 <_malloc_r+0x3d4>
  4047ca:	6859      	ldr	r1, [r3, #4]
  4047cc:	f021 0103 	bic.w	r1, r1, #3
  4047d0:	1b8a      	subs	r2, r1, r6
  4047d2:	2a0f      	cmp	r2, #15
  4047d4:	ddf2      	ble.n	4047bc <_malloc_r+0xf8>
  4047d6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  4047da:	f8d3 8008 	ldr.w	r8, [r3, #8]
  4047de:	9300      	str	r3, [sp, #0]
  4047e0:	199c      	adds	r4, r3, r6
  4047e2:	4628      	mov	r0, r5
  4047e4:	f046 0601 	orr.w	r6, r6, #1
  4047e8:	f042 0501 	orr.w	r5, r2, #1
  4047ec:	605e      	str	r6, [r3, #4]
  4047ee:	f8c8 c00c 	str.w	ip, [r8, #12]
  4047f2:	f8cc 8008 	str.w	r8, [ip, #8]
  4047f6:	617c      	str	r4, [r7, #20]
  4047f8:	613c      	str	r4, [r7, #16]
  4047fa:	f8c4 e00c 	str.w	lr, [r4, #12]
  4047fe:	f8c4 e008 	str.w	lr, [r4, #8]
  404802:	6065      	str	r5, [r4, #4]
  404804:	505a      	str	r2, [r3, r1]
  404806:	f000 fb03 	bl	404e10 <__malloc_unlock>
  40480a:	9b00      	ldr	r3, [sp, #0]
  40480c:	f103 0408 	add.w	r4, r3, #8
  404810:	e01e      	b.n	404850 <_malloc_r+0x18c>
  404812:	2910      	cmp	r1, #16
  404814:	d820      	bhi.n	404858 <_malloc_r+0x194>
  404816:	f000 faf5 	bl	404e04 <__malloc_lock>
  40481a:	2610      	movs	r6, #16
  40481c:	2318      	movs	r3, #24
  40481e:	2002      	movs	r0, #2
  404820:	4f79      	ldr	r7, [pc, #484]	; (404a08 <_malloc_r+0x344>)
  404822:	443b      	add	r3, r7
  404824:	f1a3 0208 	sub.w	r2, r3, #8
  404828:	685c      	ldr	r4, [r3, #4]
  40482a:	4294      	cmp	r4, r2
  40482c:	f000 813d 	beq.w	404aaa <_malloc_r+0x3e6>
  404830:	6863      	ldr	r3, [r4, #4]
  404832:	68e1      	ldr	r1, [r4, #12]
  404834:	68a6      	ldr	r6, [r4, #8]
  404836:	f023 0303 	bic.w	r3, r3, #3
  40483a:	4423      	add	r3, r4
  40483c:	4628      	mov	r0, r5
  40483e:	685a      	ldr	r2, [r3, #4]
  404840:	60f1      	str	r1, [r6, #12]
  404842:	f042 0201 	orr.w	r2, r2, #1
  404846:	608e      	str	r6, [r1, #8]
  404848:	605a      	str	r2, [r3, #4]
  40484a:	f000 fae1 	bl	404e10 <__malloc_unlock>
  40484e:	3408      	adds	r4, #8
  404850:	4620      	mov	r0, r4
  404852:	b003      	add	sp, #12
  404854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404858:	2400      	movs	r4, #0
  40485a:	230c      	movs	r3, #12
  40485c:	4620      	mov	r0, r4
  40485e:	602b      	str	r3, [r5, #0]
  404860:	b003      	add	sp, #12
  404862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404866:	2040      	movs	r0, #64	; 0x40
  404868:	f44f 7300 	mov.w	r3, #512	; 0x200
  40486c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404870:	e74a      	b.n	404708 <_malloc_r+0x44>
  404872:	4423      	add	r3, r4
  404874:	68e1      	ldr	r1, [r4, #12]
  404876:	685a      	ldr	r2, [r3, #4]
  404878:	68a6      	ldr	r6, [r4, #8]
  40487a:	f042 0201 	orr.w	r2, r2, #1
  40487e:	60f1      	str	r1, [r6, #12]
  404880:	4628      	mov	r0, r5
  404882:	608e      	str	r6, [r1, #8]
  404884:	605a      	str	r2, [r3, #4]
  404886:	f000 fac3 	bl	404e10 <__malloc_unlock>
  40488a:	3408      	adds	r4, #8
  40488c:	4620      	mov	r0, r4
  40488e:	b003      	add	sp, #12
  404890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404894:	4423      	add	r3, r4
  404896:	4628      	mov	r0, r5
  404898:	685a      	ldr	r2, [r3, #4]
  40489a:	f042 0201 	orr.w	r2, r2, #1
  40489e:	605a      	str	r2, [r3, #4]
  4048a0:	f000 fab6 	bl	404e10 <__malloc_unlock>
  4048a4:	3408      	adds	r4, #8
  4048a6:	4620      	mov	r0, r4
  4048a8:	b003      	add	sp, #12
  4048aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4048ae:	68bc      	ldr	r4, [r7, #8]
  4048b0:	6863      	ldr	r3, [r4, #4]
  4048b2:	f023 0803 	bic.w	r8, r3, #3
  4048b6:	45b0      	cmp	r8, r6
  4048b8:	d304      	bcc.n	4048c4 <_malloc_r+0x200>
  4048ba:	eba8 0306 	sub.w	r3, r8, r6
  4048be:	2b0f      	cmp	r3, #15
  4048c0:	f300 8085 	bgt.w	4049ce <_malloc_r+0x30a>
  4048c4:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404a20 <_malloc_r+0x35c>
  4048c8:	4b50      	ldr	r3, [pc, #320]	; (404a0c <_malloc_r+0x348>)
  4048ca:	f8d9 2000 	ldr.w	r2, [r9]
  4048ce:	681b      	ldr	r3, [r3, #0]
  4048d0:	3201      	adds	r2, #1
  4048d2:	4433      	add	r3, r6
  4048d4:	eb04 0a08 	add.w	sl, r4, r8
  4048d8:	f000 8155 	beq.w	404b86 <_malloc_r+0x4c2>
  4048dc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  4048e0:	330f      	adds	r3, #15
  4048e2:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  4048e6:	f02b 0b0f 	bic.w	fp, fp, #15
  4048ea:	4659      	mov	r1, fp
  4048ec:	4628      	mov	r0, r5
  4048ee:	f000 fd8f 	bl	405410 <_sbrk_r>
  4048f2:	1c41      	adds	r1, r0, #1
  4048f4:	4602      	mov	r2, r0
  4048f6:	f000 80fc 	beq.w	404af2 <_malloc_r+0x42e>
  4048fa:	4582      	cmp	sl, r0
  4048fc:	f200 80f7 	bhi.w	404aee <_malloc_r+0x42a>
  404900:	4b43      	ldr	r3, [pc, #268]	; (404a10 <_malloc_r+0x34c>)
  404902:	6819      	ldr	r1, [r3, #0]
  404904:	4459      	add	r1, fp
  404906:	6019      	str	r1, [r3, #0]
  404908:	f000 814d 	beq.w	404ba6 <_malloc_r+0x4e2>
  40490c:	f8d9 0000 	ldr.w	r0, [r9]
  404910:	3001      	adds	r0, #1
  404912:	bf1b      	ittet	ne
  404914:	eba2 0a0a 	subne.w	sl, r2, sl
  404918:	4451      	addne	r1, sl
  40491a:	f8c9 2000 	streq.w	r2, [r9]
  40491e:	6019      	strne	r1, [r3, #0]
  404920:	f012 0107 	ands.w	r1, r2, #7
  404924:	f000 8115 	beq.w	404b52 <_malloc_r+0x48e>
  404928:	f1c1 0008 	rsb	r0, r1, #8
  40492c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404930:	4402      	add	r2, r0
  404932:	3108      	adds	r1, #8
  404934:	eb02 090b 	add.w	r9, r2, fp
  404938:	f3c9 090b 	ubfx	r9, r9, #0, #12
  40493c:	eba1 0909 	sub.w	r9, r1, r9
  404940:	4649      	mov	r1, r9
  404942:	4628      	mov	r0, r5
  404944:	9301      	str	r3, [sp, #4]
  404946:	9200      	str	r2, [sp, #0]
  404948:	f000 fd62 	bl	405410 <_sbrk_r>
  40494c:	1c43      	adds	r3, r0, #1
  40494e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404952:	f000 8143 	beq.w	404bdc <_malloc_r+0x518>
  404956:	1a80      	subs	r0, r0, r2
  404958:	4448      	add	r0, r9
  40495a:	f040 0001 	orr.w	r0, r0, #1
  40495e:	6819      	ldr	r1, [r3, #0]
  404960:	60ba      	str	r2, [r7, #8]
  404962:	4449      	add	r1, r9
  404964:	42bc      	cmp	r4, r7
  404966:	6050      	str	r0, [r2, #4]
  404968:	6019      	str	r1, [r3, #0]
  40496a:	d017      	beq.n	40499c <_malloc_r+0x2d8>
  40496c:	f1b8 0f0f 	cmp.w	r8, #15
  404970:	f240 80fb 	bls.w	404b6a <_malloc_r+0x4a6>
  404974:	6860      	ldr	r0, [r4, #4]
  404976:	f1a8 020c 	sub.w	r2, r8, #12
  40497a:	f022 0207 	bic.w	r2, r2, #7
  40497e:	eb04 0e02 	add.w	lr, r4, r2
  404982:	f000 0001 	and.w	r0, r0, #1
  404986:	f04f 0c05 	mov.w	ip, #5
  40498a:	4310      	orrs	r0, r2
  40498c:	2a0f      	cmp	r2, #15
  40498e:	6060      	str	r0, [r4, #4]
  404990:	f8ce c004 	str.w	ip, [lr, #4]
  404994:	f8ce c008 	str.w	ip, [lr, #8]
  404998:	f200 8117 	bhi.w	404bca <_malloc_r+0x506>
  40499c:	4b1d      	ldr	r3, [pc, #116]	; (404a14 <_malloc_r+0x350>)
  40499e:	68bc      	ldr	r4, [r7, #8]
  4049a0:	681a      	ldr	r2, [r3, #0]
  4049a2:	4291      	cmp	r1, r2
  4049a4:	bf88      	it	hi
  4049a6:	6019      	strhi	r1, [r3, #0]
  4049a8:	4b1b      	ldr	r3, [pc, #108]	; (404a18 <_malloc_r+0x354>)
  4049aa:	681a      	ldr	r2, [r3, #0]
  4049ac:	4291      	cmp	r1, r2
  4049ae:	6862      	ldr	r2, [r4, #4]
  4049b0:	bf88      	it	hi
  4049b2:	6019      	strhi	r1, [r3, #0]
  4049b4:	f022 0203 	bic.w	r2, r2, #3
  4049b8:	4296      	cmp	r6, r2
  4049ba:	eba2 0306 	sub.w	r3, r2, r6
  4049be:	d801      	bhi.n	4049c4 <_malloc_r+0x300>
  4049c0:	2b0f      	cmp	r3, #15
  4049c2:	dc04      	bgt.n	4049ce <_malloc_r+0x30a>
  4049c4:	4628      	mov	r0, r5
  4049c6:	f000 fa23 	bl	404e10 <__malloc_unlock>
  4049ca:	2400      	movs	r4, #0
  4049cc:	e740      	b.n	404850 <_malloc_r+0x18c>
  4049ce:	19a2      	adds	r2, r4, r6
  4049d0:	f043 0301 	orr.w	r3, r3, #1
  4049d4:	f046 0601 	orr.w	r6, r6, #1
  4049d8:	6066      	str	r6, [r4, #4]
  4049da:	4628      	mov	r0, r5
  4049dc:	60ba      	str	r2, [r7, #8]
  4049de:	6053      	str	r3, [r2, #4]
  4049e0:	f000 fa16 	bl	404e10 <__malloc_unlock>
  4049e4:	3408      	adds	r4, #8
  4049e6:	4620      	mov	r0, r4
  4049e8:	b003      	add	sp, #12
  4049ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049ee:	2b14      	cmp	r3, #20
  4049f0:	d971      	bls.n	404ad6 <_malloc_r+0x412>
  4049f2:	2b54      	cmp	r3, #84	; 0x54
  4049f4:	f200 80a3 	bhi.w	404b3e <_malloc_r+0x47a>
  4049f8:	0b33      	lsrs	r3, r6, #12
  4049fa:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4049fe:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404a02:	00c3      	lsls	r3, r0, #3
  404a04:	e680      	b.n	404708 <_malloc_r+0x44>
  404a06:	bf00      	nop
  404a08:	2040045c 	.word	0x2040045c
  404a0c:	20400cc4 	.word	0x20400cc4
  404a10:	20400c94 	.word	0x20400c94
  404a14:	20400cbc 	.word	0x20400cbc
  404a18:	20400cc0 	.word	0x20400cc0
  404a1c:	20400464 	.word	0x20400464
  404a20:	20400864 	.word	0x20400864
  404a24:	0a5a      	lsrs	r2, r3, #9
  404a26:	2a04      	cmp	r2, #4
  404a28:	d95b      	bls.n	404ae2 <_malloc_r+0x41e>
  404a2a:	2a14      	cmp	r2, #20
  404a2c:	f200 80ae 	bhi.w	404b8c <_malloc_r+0x4c8>
  404a30:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404a34:	00c9      	lsls	r1, r1, #3
  404a36:	325b      	adds	r2, #91	; 0x5b
  404a38:	eb07 0c01 	add.w	ip, r7, r1
  404a3c:	5879      	ldr	r1, [r7, r1]
  404a3e:	f1ac 0c08 	sub.w	ip, ip, #8
  404a42:	458c      	cmp	ip, r1
  404a44:	f000 8088 	beq.w	404b58 <_malloc_r+0x494>
  404a48:	684a      	ldr	r2, [r1, #4]
  404a4a:	f022 0203 	bic.w	r2, r2, #3
  404a4e:	4293      	cmp	r3, r2
  404a50:	d273      	bcs.n	404b3a <_malloc_r+0x476>
  404a52:	6889      	ldr	r1, [r1, #8]
  404a54:	458c      	cmp	ip, r1
  404a56:	d1f7      	bne.n	404a48 <_malloc_r+0x384>
  404a58:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404a5c:	687b      	ldr	r3, [r7, #4]
  404a5e:	60e2      	str	r2, [r4, #12]
  404a60:	f8c4 c008 	str.w	ip, [r4, #8]
  404a64:	6094      	str	r4, [r2, #8]
  404a66:	f8cc 400c 	str.w	r4, [ip, #12]
  404a6a:	e68f      	b.n	40478c <_malloc_r+0xc8>
  404a6c:	19a1      	adds	r1, r4, r6
  404a6e:	f046 0c01 	orr.w	ip, r6, #1
  404a72:	f042 0601 	orr.w	r6, r2, #1
  404a76:	f8c4 c004 	str.w	ip, [r4, #4]
  404a7a:	4628      	mov	r0, r5
  404a7c:	6179      	str	r1, [r7, #20]
  404a7e:	6139      	str	r1, [r7, #16]
  404a80:	f8c1 e00c 	str.w	lr, [r1, #12]
  404a84:	f8c1 e008 	str.w	lr, [r1, #8]
  404a88:	604e      	str	r6, [r1, #4]
  404a8a:	50e2      	str	r2, [r4, r3]
  404a8c:	f000 f9c0 	bl	404e10 <__malloc_unlock>
  404a90:	3408      	adds	r4, #8
  404a92:	e6dd      	b.n	404850 <_malloc_r+0x18c>
  404a94:	687b      	ldr	r3, [r7, #4]
  404a96:	e679      	b.n	40478c <_malloc_r+0xc8>
  404a98:	f108 0801 	add.w	r8, r8, #1
  404a9c:	f018 0f03 	tst.w	r8, #3
  404aa0:	f10c 0c08 	add.w	ip, ip, #8
  404aa4:	f47f ae85 	bne.w	4047b2 <_malloc_r+0xee>
  404aa8:	e02d      	b.n	404b06 <_malloc_r+0x442>
  404aaa:	68dc      	ldr	r4, [r3, #12]
  404aac:	42a3      	cmp	r3, r4
  404aae:	bf08      	it	eq
  404ab0:	3002      	addeq	r0, #2
  404ab2:	f43f ae3e 	beq.w	404732 <_malloc_r+0x6e>
  404ab6:	e6bb      	b.n	404830 <_malloc_r+0x16c>
  404ab8:	4419      	add	r1, r3
  404aba:	461c      	mov	r4, r3
  404abc:	684a      	ldr	r2, [r1, #4]
  404abe:	68db      	ldr	r3, [r3, #12]
  404ac0:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404ac4:	f042 0201 	orr.w	r2, r2, #1
  404ac8:	604a      	str	r2, [r1, #4]
  404aca:	4628      	mov	r0, r5
  404acc:	60f3      	str	r3, [r6, #12]
  404ace:	609e      	str	r6, [r3, #8]
  404ad0:	f000 f99e 	bl	404e10 <__malloc_unlock>
  404ad4:	e6bc      	b.n	404850 <_malloc_r+0x18c>
  404ad6:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404ada:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404ade:	00c3      	lsls	r3, r0, #3
  404ae0:	e612      	b.n	404708 <_malloc_r+0x44>
  404ae2:	099a      	lsrs	r2, r3, #6
  404ae4:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404ae8:	00c9      	lsls	r1, r1, #3
  404aea:	3238      	adds	r2, #56	; 0x38
  404aec:	e7a4      	b.n	404a38 <_malloc_r+0x374>
  404aee:	42bc      	cmp	r4, r7
  404af0:	d054      	beq.n	404b9c <_malloc_r+0x4d8>
  404af2:	68bc      	ldr	r4, [r7, #8]
  404af4:	6862      	ldr	r2, [r4, #4]
  404af6:	f022 0203 	bic.w	r2, r2, #3
  404afa:	e75d      	b.n	4049b8 <_malloc_r+0x2f4>
  404afc:	f859 3908 	ldr.w	r3, [r9], #-8
  404b00:	4599      	cmp	r9, r3
  404b02:	f040 8086 	bne.w	404c12 <_malloc_r+0x54e>
  404b06:	f010 0f03 	tst.w	r0, #3
  404b0a:	f100 30ff 	add.w	r0, r0, #4294967295
  404b0e:	d1f5      	bne.n	404afc <_malloc_r+0x438>
  404b10:	687b      	ldr	r3, [r7, #4]
  404b12:	ea23 0304 	bic.w	r3, r3, r4
  404b16:	607b      	str	r3, [r7, #4]
  404b18:	0064      	lsls	r4, r4, #1
  404b1a:	429c      	cmp	r4, r3
  404b1c:	f63f aec7 	bhi.w	4048ae <_malloc_r+0x1ea>
  404b20:	2c00      	cmp	r4, #0
  404b22:	f43f aec4 	beq.w	4048ae <_malloc_r+0x1ea>
  404b26:	421c      	tst	r4, r3
  404b28:	4640      	mov	r0, r8
  404b2a:	f47f ae3e 	bne.w	4047aa <_malloc_r+0xe6>
  404b2e:	0064      	lsls	r4, r4, #1
  404b30:	421c      	tst	r4, r3
  404b32:	f100 0004 	add.w	r0, r0, #4
  404b36:	d0fa      	beq.n	404b2e <_malloc_r+0x46a>
  404b38:	e637      	b.n	4047aa <_malloc_r+0xe6>
  404b3a:	468c      	mov	ip, r1
  404b3c:	e78c      	b.n	404a58 <_malloc_r+0x394>
  404b3e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404b42:	d815      	bhi.n	404b70 <_malloc_r+0x4ac>
  404b44:	0bf3      	lsrs	r3, r6, #15
  404b46:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404b4a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404b4e:	00c3      	lsls	r3, r0, #3
  404b50:	e5da      	b.n	404708 <_malloc_r+0x44>
  404b52:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404b56:	e6ed      	b.n	404934 <_malloc_r+0x270>
  404b58:	687b      	ldr	r3, [r7, #4]
  404b5a:	1092      	asrs	r2, r2, #2
  404b5c:	2101      	movs	r1, #1
  404b5e:	fa01 f202 	lsl.w	r2, r1, r2
  404b62:	4313      	orrs	r3, r2
  404b64:	607b      	str	r3, [r7, #4]
  404b66:	4662      	mov	r2, ip
  404b68:	e779      	b.n	404a5e <_malloc_r+0x39a>
  404b6a:	2301      	movs	r3, #1
  404b6c:	6053      	str	r3, [r2, #4]
  404b6e:	e729      	b.n	4049c4 <_malloc_r+0x300>
  404b70:	f240 5254 	movw	r2, #1364	; 0x554
  404b74:	4293      	cmp	r3, r2
  404b76:	d822      	bhi.n	404bbe <_malloc_r+0x4fa>
  404b78:	0cb3      	lsrs	r3, r6, #18
  404b7a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404b7e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404b82:	00c3      	lsls	r3, r0, #3
  404b84:	e5c0      	b.n	404708 <_malloc_r+0x44>
  404b86:	f103 0b10 	add.w	fp, r3, #16
  404b8a:	e6ae      	b.n	4048ea <_malloc_r+0x226>
  404b8c:	2a54      	cmp	r2, #84	; 0x54
  404b8e:	d829      	bhi.n	404be4 <_malloc_r+0x520>
  404b90:	0b1a      	lsrs	r2, r3, #12
  404b92:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404b96:	00c9      	lsls	r1, r1, #3
  404b98:	326e      	adds	r2, #110	; 0x6e
  404b9a:	e74d      	b.n	404a38 <_malloc_r+0x374>
  404b9c:	4b20      	ldr	r3, [pc, #128]	; (404c20 <_malloc_r+0x55c>)
  404b9e:	6819      	ldr	r1, [r3, #0]
  404ba0:	4459      	add	r1, fp
  404ba2:	6019      	str	r1, [r3, #0]
  404ba4:	e6b2      	b.n	40490c <_malloc_r+0x248>
  404ba6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404baa:	2800      	cmp	r0, #0
  404bac:	f47f aeae 	bne.w	40490c <_malloc_r+0x248>
  404bb0:	eb08 030b 	add.w	r3, r8, fp
  404bb4:	68ba      	ldr	r2, [r7, #8]
  404bb6:	f043 0301 	orr.w	r3, r3, #1
  404bba:	6053      	str	r3, [r2, #4]
  404bbc:	e6ee      	b.n	40499c <_malloc_r+0x2d8>
  404bbe:	207f      	movs	r0, #127	; 0x7f
  404bc0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404bc4:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404bc8:	e59e      	b.n	404708 <_malloc_r+0x44>
  404bca:	f104 0108 	add.w	r1, r4, #8
  404bce:	4628      	mov	r0, r5
  404bd0:	9300      	str	r3, [sp, #0]
  404bd2:	f000 fe03 	bl	4057dc <_free_r>
  404bd6:	9b00      	ldr	r3, [sp, #0]
  404bd8:	6819      	ldr	r1, [r3, #0]
  404bda:	e6df      	b.n	40499c <_malloc_r+0x2d8>
  404bdc:	2001      	movs	r0, #1
  404bde:	f04f 0900 	mov.w	r9, #0
  404be2:	e6bc      	b.n	40495e <_malloc_r+0x29a>
  404be4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404be8:	d805      	bhi.n	404bf6 <_malloc_r+0x532>
  404bea:	0bda      	lsrs	r2, r3, #15
  404bec:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404bf0:	00c9      	lsls	r1, r1, #3
  404bf2:	3277      	adds	r2, #119	; 0x77
  404bf4:	e720      	b.n	404a38 <_malloc_r+0x374>
  404bf6:	f240 5154 	movw	r1, #1364	; 0x554
  404bfa:	428a      	cmp	r2, r1
  404bfc:	d805      	bhi.n	404c0a <_malloc_r+0x546>
  404bfe:	0c9a      	lsrs	r2, r3, #18
  404c00:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404c04:	00c9      	lsls	r1, r1, #3
  404c06:	327c      	adds	r2, #124	; 0x7c
  404c08:	e716      	b.n	404a38 <_malloc_r+0x374>
  404c0a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404c0e:	227e      	movs	r2, #126	; 0x7e
  404c10:	e712      	b.n	404a38 <_malloc_r+0x374>
  404c12:	687b      	ldr	r3, [r7, #4]
  404c14:	e780      	b.n	404b18 <_malloc_r+0x454>
  404c16:	08f0      	lsrs	r0, r6, #3
  404c18:	f106 0308 	add.w	r3, r6, #8
  404c1c:	e600      	b.n	404820 <_malloc_r+0x15c>
  404c1e:	bf00      	nop
  404c20:	20400c94 	.word	0x20400c94
	...

00404c30 <memchr>:
  404c30:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404c34:	2a10      	cmp	r2, #16
  404c36:	db2b      	blt.n	404c90 <memchr+0x60>
  404c38:	f010 0f07 	tst.w	r0, #7
  404c3c:	d008      	beq.n	404c50 <memchr+0x20>
  404c3e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404c42:	3a01      	subs	r2, #1
  404c44:	428b      	cmp	r3, r1
  404c46:	d02d      	beq.n	404ca4 <memchr+0x74>
  404c48:	f010 0f07 	tst.w	r0, #7
  404c4c:	b342      	cbz	r2, 404ca0 <memchr+0x70>
  404c4e:	d1f6      	bne.n	404c3e <memchr+0xe>
  404c50:	b4f0      	push	{r4, r5, r6, r7}
  404c52:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404c56:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404c5a:	f022 0407 	bic.w	r4, r2, #7
  404c5e:	f07f 0700 	mvns.w	r7, #0
  404c62:	2300      	movs	r3, #0
  404c64:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404c68:	3c08      	subs	r4, #8
  404c6a:	ea85 0501 	eor.w	r5, r5, r1
  404c6e:	ea86 0601 	eor.w	r6, r6, r1
  404c72:	fa85 f547 	uadd8	r5, r5, r7
  404c76:	faa3 f587 	sel	r5, r3, r7
  404c7a:	fa86 f647 	uadd8	r6, r6, r7
  404c7e:	faa5 f687 	sel	r6, r5, r7
  404c82:	b98e      	cbnz	r6, 404ca8 <memchr+0x78>
  404c84:	d1ee      	bne.n	404c64 <memchr+0x34>
  404c86:	bcf0      	pop	{r4, r5, r6, r7}
  404c88:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404c8c:	f002 0207 	and.w	r2, r2, #7
  404c90:	b132      	cbz	r2, 404ca0 <memchr+0x70>
  404c92:	f810 3b01 	ldrb.w	r3, [r0], #1
  404c96:	3a01      	subs	r2, #1
  404c98:	ea83 0301 	eor.w	r3, r3, r1
  404c9c:	b113      	cbz	r3, 404ca4 <memchr+0x74>
  404c9e:	d1f8      	bne.n	404c92 <memchr+0x62>
  404ca0:	2000      	movs	r0, #0
  404ca2:	4770      	bx	lr
  404ca4:	3801      	subs	r0, #1
  404ca6:	4770      	bx	lr
  404ca8:	2d00      	cmp	r5, #0
  404caa:	bf06      	itte	eq
  404cac:	4635      	moveq	r5, r6
  404cae:	3803      	subeq	r0, #3
  404cb0:	3807      	subne	r0, #7
  404cb2:	f015 0f01 	tst.w	r5, #1
  404cb6:	d107      	bne.n	404cc8 <memchr+0x98>
  404cb8:	3001      	adds	r0, #1
  404cba:	f415 7f80 	tst.w	r5, #256	; 0x100
  404cbe:	bf02      	ittt	eq
  404cc0:	3001      	addeq	r0, #1
  404cc2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404cc6:	3001      	addeq	r0, #1
  404cc8:	bcf0      	pop	{r4, r5, r6, r7}
  404cca:	3801      	subs	r0, #1
  404ccc:	4770      	bx	lr
  404cce:	bf00      	nop

00404cd0 <memcpy>:
  404cd0:	4684      	mov	ip, r0
  404cd2:	ea41 0300 	orr.w	r3, r1, r0
  404cd6:	f013 0303 	ands.w	r3, r3, #3
  404cda:	d16d      	bne.n	404db8 <memcpy+0xe8>
  404cdc:	3a40      	subs	r2, #64	; 0x40
  404cde:	d341      	bcc.n	404d64 <memcpy+0x94>
  404ce0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ce4:	f840 3b04 	str.w	r3, [r0], #4
  404ce8:	f851 3b04 	ldr.w	r3, [r1], #4
  404cec:	f840 3b04 	str.w	r3, [r0], #4
  404cf0:	f851 3b04 	ldr.w	r3, [r1], #4
  404cf4:	f840 3b04 	str.w	r3, [r0], #4
  404cf8:	f851 3b04 	ldr.w	r3, [r1], #4
  404cfc:	f840 3b04 	str.w	r3, [r0], #4
  404d00:	f851 3b04 	ldr.w	r3, [r1], #4
  404d04:	f840 3b04 	str.w	r3, [r0], #4
  404d08:	f851 3b04 	ldr.w	r3, [r1], #4
  404d0c:	f840 3b04 	str.w	r3, [r0], #4
  404d10:	f851 3b04 	ldr.w	r3, [r1], #4
  404d14:	f840 3b04 	str.w	r3, [r0], #4
  404d18:	f851 3b04 	ldr.w	r3, [r1], #4
  404d1c:	f840 3b04 	str.w	r3, [r0], #4
  404d20:	f851 3b04 	ldr.w	r3, [r1], #4
  404d24:	f840 3b04 	str.w	r3, [r0], #4
  404d28:	f851 3b04 	ldr.w	r3, [r1], #4
  404d2c:	f840 3b04 	str.w	r3, [r0], #4
  404d30:	f851 3b04 	ldr.w	r3, [r1], #4
  404d34:	f840 3b04 	str.w	r3, [r0], #4
  404d38:	f851 3b04 	ldr.w	r3, [r1], #4
  404d3c:	f840 3b04 	str.w	r3, [r0], #4
  404d40:	f851 3b04 	ldr.w	r3, [r1], #4
  404d44:	f840 3b04 	str.w	r3, [r0], #4
  404d48:	f851 3b04 	ldr.w	r3, [r1], #4
  404d4c:	f840 3b04 	str.w	r3, [r0], #4
  404d50:	f851 3b04 	ldr.w	r3, [r1], #4
  404d54:	f840 3b04 	str.w	r3, [r0], #4
  404d58:	f851 3b04 	ldr.w	r3, [r1], #4
  404d5c:	f840 3b04 	str.w	r3, [r0], #4
  404d60:	3a40      	subs	r2, #64	; 0x40
  404d62:	d2bd      	bcs.n	404ce0 <memcpy+0x10>
  404d64:	3230      	adds	r2, #48	; 0x30
  404d66:	d311      	bcc.n	404d8c <memcpy+0xbc>
  404d68:	f851 3b04 	ldr.w	r3, [r1], #4
  404d6c:	f840 3b04 	str.w	r3, [r0], #4
  404d70:	f851 3b04 	ldr.w	r3, [r1], #4
  404d74:	f840 3b04 	str.w	r3, [r0], #4
  404d78:	f851 3b04 	ldr.w	r3, [r1], #4
  404d7c:	f840 3b04 	str.w	r3, [r0], #4
  404d80:	f851 3b04 	ldr.w	r3, [r1], #4
  404d84:	f840 3b04 	str.w	r3, [r0], #4
  404d88:	3a10      	subs	r2, #16
  404d8a:	d2ed      	bcs.n	404d68 <memcpy+0x98>
  404d8c:	320c      	adds	r2, #12
  404d8e:	d305      	bcc.n	404d9c <memcpy+0xcc>
  404d90:	f851 3b04 	ldr.w	r3, [r1], #4
  404d94:	f840 3b04 	str.w	r3, [r0], #4
  404d98:	3a04      	subs	r2, #4
  404d9a:	d2f9      	bcs.n	404d90 <memcpy+0xc0>
  404d9c:	3204      	adds	r2, #4
  404d9e:	d008      	beq.n	404db2 <memcpy+0xe2>
  404da0:	07d2      	lsls	r2, r2, #31
  404da2:	bf1c      	itt	ne
  404da4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404da8:	f800 3b01 	strbne.w	r3, [r0], #1
  404dac:	d301      	bcc.n	404db2 <memcpy+0xe2>
  404dae:	880b      	ldrh	r3, [r1, #0]
  404db0:	8003      	strh	r3, [r0, #0]
  404db2:	4660      	mov	r0, ip
  404db4:	4770      	bx	lr
  404db6:	bf00      	nop
  404db8:	2a08      	cmp	r2, #8
  404dba:	d313      	bcc.n	404de4 <memcpy+0x114>
  404dbc:	078b      	lsls	r3, r1, #30
  404dbe:	d08d      	beq.n	404cdc <memcpy+0xc>
  404dc0:	f010 0303 	ands.w	r3, r0, #3
  404dc4:	d08a      	beq.n	404cdc <memcpy+0xc>
  404dc6:	f1c3 0304 	rsb	r3, r3, #4
  404dca:	1ad2      	subs	r2, r2, r3
  404dcc:	07db      	lsls	r3, r3, #31
  404dce:	bf1c      	itt	ne
  404dd0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404dd4:	f800 3b01 	strbne.w	r3, [r0], #1
  404dd8:	d380      	bcc.n	404cdc <memcpy+0xc>
  404dda:	f831 3b02 	ldrh.w	r3, [r1], #2
  404dde:	f820 3b02 	strh.w	r3, [r0], #2
  404de2:	e77b      	b.n	404cdc <memcpy+0xc>
  404de4:	3a04      	subs	r2, #4
  404de6:	d3d9      	bcc.n	404d9c <memcpy+0xcc>
  404de8:	3a01      	subs	r2, #1
  404dea:	f811 3b01 	ldrb.w	r3, [r1], #1
  404dee:	f800 3b01 	strb.w	r3, [r0], #1
  404df2:	d2f9      	bcs.n	404de8 <memcpy+0x118>
  404df4:	780b      	ldrb	r3, [r1, #0]
  404df6:	7003      	strb	r3, [r0, #0]
  404df8:	784b      	ldrb	r3, [r1, #1]
  404dfa:	7043      	strb	r3, [r0, #1]
  404dfc:	788b      	ldrb	r3, [r1, #2]
  404dfe:	7083      	strb	r3, [r0, #2]
  404e00:	4660      	mov	r0, ip
  404e02:	4770      	bx	lr

00404e04 <__malloc_lock>:
  404e04:	4801      	ldr	r0, [pc, #4]	; (404e0c <__malloc_lock+0x8>)
  404e06:	f7ff bc59 	b.w	4046bc <__retarget_lock_acquire_recursive>
  404e0a:	bf00      	nop
  404e0c:	20400cd8 	.word	0x20400cd8

00404e10 <__malloc_unlock>:
  404e10:	4801      	ldr	r0, [pc, #4]	; (404e18 <__malloc_unlock+0x8>)
  404e12:	f7ff bc55 	b.w	4046c0 <__retarget_lock_release_recursive>
  404e16:	bf00      	nop
  404e18:	20400cd8 	.word	0x20400cd8

00404e1c <_Balloc>:
  404e1c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404e1e:	b570      	push	{r4, r5, r6, lr}
  404e20:	4605      	mov	r5, r0
  404e22:	460c      	mov	r4, r1
  404e24:	b14b      	cbz	r3, 404e3a <_Balloc+0x1e>
  404e26:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404e2a:	b180      	cbz	r0, 404e4e <_Balloc+0x32>
  404e2c:	6802      	ldr	r2, [r0, #0]
  404e2e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404e32:	2300      	movs	r3, #0
  404e34:	6103      	str	r3, [r0, #16]
  404e36:	60c3      	str	r3, [r0, #12]
  404e38:	bd70      	pop	{r4, r5, r6, pc}
  404e3a:	2221      	movs	r2, #33	; 0x21
  404e3c:	2104      	movs	r1, #4
  404e3e:	f000 fc4d 	bl	4056dc <_calloc_r>
  404e42:	64e8      	str	r0, [r5, #76]	; 0x4c
  404e44:	4603      	mov	r3, r0
  404e46:	2800      	cmp	r0, #0
  404e48:	d1ed      	bne.n	404e26 <_Balloc+0xa>
  404e4a:	2000      	movs	r0, #0
  404e4c:	bd70      	pop	{r4, r5, r6, pc}
  404e4e:	2101      	movs	r1, #1
  404e50:	fa01 f604 	lsl.w	r6, r1, r4
  404e54:	1d72      	adds	r2, r6, #5
  404e56:	4628      	mov	r0, r5
  404e58:	0092      	lsls	r2, r2, #2
  404e5a:	f000 fc3f 	bl	4056dc <_calloc_r>
  404e5e:	2800      	cmp	r0, #0
  404e60:	d0f3      	beq.n	404e4a <_Balloc+0x2e>
  404e62:	6044      	str	r4, [r0, #4]
  404e64:	6086      	str	r6, [r0, #8]
  404e66:	e7e4      	b.n	404e32 <_Balloc+0x16>

00404e68 <_Bfree>:
  404e68:	b131      	cbz	r1, 404e78 <_Bfree+0x10>
  404e6a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404e6c:	684a      	ldr	r2, [r1, #4]
  404e6e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404e72:	6008      	str	r0, [r1, #0]
  404e74:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404e78:	4770      	bx	lr
  404e7a:	bf00      	nop

00404e7c <__multadd>:
  404e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
  404e7e:	690c      	ldr	r4, [r1, #16]
  404e80:	b083      	sub	sp, #12
  404e82:	460d      	mov	r5, r1
  404e84:	4606      	mov	r6, r0
  404e86:	f101 0e14 	add.w	lr, r1, #20
  404e8a:	2700      	movs	r7, #0
  404e8c:	f8de 0000 	ldr.w	r0, [lr]
  404e90:	b281      	uxth	r1, r0
  404e92:	fb02 3301 	mla	r3, r2, r1, r3
  404e96:	0c01      	lsrs	r1, r0, #16
  404e98:	0c18      	lsrs	r0, r3, #16
  404e9a:	fb02 0101 	mla	r1, r2, r1, r0
  404e9e:	b29b      	uxth	r3, r3
  404ea0:	3701      	adds	r7, #1
  404ea2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404ea6:	42bc      	cmp	r4, r7
  404ea8:	f84e 3b04 	str.w	r3, [lr], #4
  404eac:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404eb0:	dcec      	bgt.n	404e8c <__multadd+0x10>
  404eb2:	b13b      	cbz	r3, 404ec4 <__multadd+0x48>
  404eb4:	68aa      	ldr	r2, [r5, #8]
  404eb6:	4294      	cmp	r4, r2
  404eb8:	da07      	bge.n	404eca <__multadd+0x4e>
  404eba:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  404ebe:	3401      	adds	r4, #1
  404ec0:	6153      	str	r3, [r2, #20]
  404ec2:	612c      	str	r4, [r5, #16]
  404ec4:	4628      	mov	r0, r5
  404ec6:	b003      	add	sp, #12
  404ec8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404eca:	6869      	ldr	r1, [r5, #4]
  404ecc:	9301      	str	r3, [sp, #4]
  404ece:	3101      	adds	r1, #1
  404ed0:	4630      	mov	r0, r6
  404ed2:	f7ff ffa3 	bl	404e1c <_Balloc>
  404ed6:	692a      	ldr	r2, [r5, #16]
  404ed8:	3202      	adds	r2, #2
  404eda:	f105 010c 	add.w	r1, r5, #12
  404ede:	4607      	mov	r7, r0
  404ee0:	0092      	lsls	r2, r2, #2
  404ee2:	300c      	adds	r0, #12
  404ee4:	f7ff fef4 	bl	404cd0 <memcpy>
  404ee8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  404eea:	6869      	ldr	r1, [r5, #4]
  404eec:	9b01      	ldr	r3, [sp, #4]
  404eee:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404ef2:	6028      	str	r0, [r5, #0]
  404ef4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404ef8:	463d      	mov	r5, r7
  404efa:	e7de      	b.n	404eba <__multadd+0x3e>

00404efc <__hi0bits>:
  404efc:	0c02      	lsrs	r2, r0, #16
  404efe:	0412      	lsls	r2, r2, #16
  404f00:	4603      	mov	r3, r0
  404f02:	b9b2      	cbnz	r2, 404f32 <__hi0bits+0x36>
  404f04:	0403      	lsls	r3, r0, #16
  404f06:	2010      	movs	r0, #16
  404f08:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  404f0c:	bf04      	itt	eq
  404f0e:	021b      	lsleq	r3, r3, #8
  404f10:	3008      	addeq	r0, #8
  404f12:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404f16:	bf04      	itt	eq
  404f18:	011b      	lsleq	r3, r3, #4
  404f1a:	3004      	addeq	r0, #4
  404f1c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404f20:	bf04      	itt	eq
  404f22:	009b      	lsleq	r3, r3, #2
  404f24:	3002      	addeq	r0, #2
  404f26:	2b00      	cmp	r3, #0
  404f28:	db02      	blt.n	404f30 <__hi0bits+0x34>
  404f2a:	005b      	lsls	r3, r3, #1
  404f2c:	d403      	bmi.n	404f36 <__hi0bits+0x3a>
  404f2e:	2020      	movs	r0, #32
  404f30:	4770      	bx	lr
  404f32:	2000      	movs	r0, #0
  404f34:	e7e8      	b.n	404f08 <__hi0bits+0xc>
  404f36:	3001      	adds	r0, #1
  404f38:	4770      	bx	lr
  404f3a:	bf00      	nop

00404f3c <__lo0bits>:
  404f3c:	6803      	ldr	r3, [r0, #0]
  404f3e:	f013 0207 	ands.w	r2, r3, #7
  404f42:	4601      	mov	r1, r0
  404f44:	d007      	beq.n	404f56 <__lo0bits+0x1a>
  404f46:	07da      	lsls	r2, r3, #31
  404f48:	d421      	bmi.n	404f8e <__lo0bits+0x52>
  404f4a:	0798      	lsls	r0, r3, #30
  404f4c:	d421      	bmi.n	404f92 <__lo0bits+0x56>
  404f4e:	089b      	lsrs	r3, r3, #2
  404f50:	600b      	str	r3, [r1, #0]
  404f52:	2002      	movs	r0, #2
  404f54:	4770      	bx	lr
  404f56:	b298      	uxth	r0, r3
  404f58:	b198      	cbz	r0, 404f82 <__lo0bits+0x46>
  404f5a:	4610      	mov	r0, r2
  404f5c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404f60:	bf04      	itt	eq
  404f62:	0a1b      	lsreq	r3, r3, #8
  404f64:	3008      	addeq	r0, #8
  404f66:	071a      	lsls	r2, r3, #28
  404f68:	bf04      	itt	eq
  404f6a:	091b      	lsreq	r3, r3, #4
  404f6c:	3004      	addeq	r0, #4
  404f6e:	079a      	lsls	r2, r3, #30
  404f70:	bf04      	itt	eq
  404f72:	089b      	lsreq	r3, r3, #2
  404f74:	3002      	addeq	r0, #2
  404f76:	07da      	lsls	r2, r3, #31
  404f78:	d407      	bmi.n	404f8a <__lo0bits+0x4e>
  404f7a:	085b      	lsrs	r3, r3, #1
  404f7c:	d104      	bne.n	404f88 <__lo0bits+0x4c>
  404f7e:	2020      	movs	r0, #32
  404f80:	4770      	bx	lr
  404f82:	0c1b      	lsrs	r3, r3, #16
  404f84:	2010      	movs	r0, #16
  404f86:	e7e9      	b.n	404f5c <__lo0bits+0x20>
  404f88:	3001      	adds	r0, #1
  404f8a:	600b      	str	r3, [r1, #0]
  404f8c:	4770      	bx	lr
  404f8e:	2000      	movs	r0, #0
  404f90:	4770      	bx	lr
  404f92:	085b      	lsrs	r3, r3, #1
  404f94:	600b      	str	r3, [r1, #0]
  404f96:	2001      	movs	r0, #1
  404f98:	4770      	bx	lr
  404f9a:	bf00      	nop

00404f9c <__i2b>:
  404f9c:	b510      	push	{r4, lr}
  404f9e:	460c      	mov	r4, r1
  404fa0:	2101      	movs	r1, #1
  404fa2:	f7ff ff3b 	bl	404e1c <_Balloc>
  404fa6:	2201      	movs	r2, #1
  404fa8:	6144      	str	r4, [r0, #20]
  404faa:	6102      	str	r2, [r0, #16]
  404fac:	bd10      	pop	{r4, pc}
  404fae:	bf00      	nop

00404fb0 <__multiply>:
  404fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404fb4:	690c      	ldr	r4, [r1, #16]
  404fb6:	6915      	ldr	r5, [r2, #16]
  404fb8:	42ac      	cmp	r4, r5
  404fba:	b083      	sub	sp, #12
  404fbc:	468b      	mov	fp, r1
  404fbe:	4616      	mov	r6, r2
  404fc0:	da04      	bge.n	404fcc <__multiply+0x1c>
  404fc2:	4622      	mov	r2, r4
  404fc4:	46b3      	mov	fp, r6
  404fc6:	462c      	mov	r4, r5
  404fc8:	460e      	mov	r6, r1
  404fca:	4615      	mov	r5, r2
  404fcc:	f8db 3008 	ldr.w	r3, [fp, #8]
  404fd0:	f8db 1004 	ldr.w	r1, [fp, #4]
  404fd4:	eb04 0805 	add.w	r8, r4, r5
  404fd8:	4598      	cmp	r8, r3
  404fda:	bfc8      	it	gt
  404fdc:	3101      	addgt	r1, #1
  404fde:	f7ff ff1d 	bl	404e1c <_Balloc>
  404fe2:	f100 0914 	add.w	r9, r0, #20
  404fe6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  404fea:	45d1      	cmp	r9, sl
  404fec:	9000      	str	r0, [sp, #0]
  404fee:	d205      	bcs.n	404ffc <__multiply+0x4c>
  404ff0:	464b      	mov	r3, r9
  404ff2:	2100      	movs	r1, #0
  404ff4:	f843 1b04 	str.w	r1, [r3], #4
  404ff8:	459a      	cmp	sl, r3
  404ffa:	d8fb      	bhi.n	404ff4 <__multiply+0x44>
  404ffc:	f106 0c14 	add.w	ip, r6, #20
  405000:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405004:	f10b 0b14 	add.w	fp, fp, #20
  405008:	459c      	cmp	ip, r3
  40500a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40500e:	d24c      	bcs.n	4050aa <__multiply+0xfa>
  405010:	f8cd a004 	str.w	sl, [sp, #4]
  405014:	469a      	mov	sl, r3
  405016:	f8dc 5000 	ldr.w	r5, [ip]
  40501a:	b2af      	uxth	r7, r5
  40501c:	b1ef      	cbz	r7, 40505a <__multiply+0xaa>
  40501e:	2100      	movs	r1, #0
  405020:	464d      	mov	r5, r9
  405022:	465e      	mov	r6, fp
  405024:	460c      	mov	r4, r1
  405026:	f856 2b04 	ldr.w	r2, [r6], #4
  40502a:	6828      	ldr	r0, [r5, #0]
  40502c:	b293      	uxth	r3, r2
  40502e:	b281      	uxth	r1, r0
  405030:	fb07 1303 	mla	r3, r7, r3, r1
  405034:	0c12      	lsrs	r2, r2, #16
  405036:	0c01      	lsrs	r1, r0, #16
  405038:	4423      	add	r3, r4
  40503a:	fb07 1102 	mla	r1, r7, r2, r1
  40503e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405042:	b29b      	uxth	r3, r3
  405044:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405048:	45b6      	cmp	lr, r6
  40504a:	f845 3b04 	str.w	r3, [r5], #4
  40504e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  405052:	d8e8      	bhi.n	405026 <__multiply+0x76>
  405054:	602c      	str	r4, [r5, #0]
  405056:	f8dc 5000 	ldr.w	r5, [ip]
  40505a:	0c2d      	lsrs	r5, r5, #16
  40505c:	d01d      	beq.n	40509a <__multiply+0xea>
  40505e:	f8d9 3000 	ldr.w	r3, [r9]
  405062:	4648      	mov	r0, r9
  405064:	461c      	mov	r4, r3
  405066:	4659      	mov	r1, fp
  405068:	2200      	movs	r2, #0
  40506a:	880e      	ldrh	r6, [r1, #0]
  40506c:	0c24      	lsrs	r4, r4, #16
  40506e:	fb05 4406 	mla	r4, r5, r6, r4
  405072:	4422      	add	r2, r4
  405074:	b29b      	uxth	r3, r3
  405076:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40507a:	f840 3b04 	str.w	r3, [r0], #4
  40507e:	f851 3b04 	ldr.w	r3, [r1], #4
  405082:	6804      	ldr	r4, [r0, #0]
  405084:	0c1b      	lsrs	r3, r3, #16
  405086:	b2a6      	uxth	r6, r4
  405088:	fb05 6303 	mla	r3, r5, r3, r6
  40508c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405090:	458e      	cmp	lr, r1
  405092:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405096:	d8e8      	bhi.n	40506a <__multiply+0xba>
  405098:	6003      	str	r3, [r0, #0]
  40509a:	f10c 0c04 	add.w	ip, ip, #4
  40509e:	45e2      	cmp	sl, ip
  4050a0:	f109 0904 	add.w	r9, r9, #4
  4050a4:	d8b7      	bhi.n	405016 <__multiply+0x66>
  4050a6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4050aa:	f1b8 0f00 	cmp.w	r8, #0
  4050ae:	dd0b      	ble.n	4050c8 <__multiply+0x118>
  4050b0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4050b4:	f1aa 0a04 	sub.w	sl, sl, #4
  4050b8:	b11b      	cbz	r3, 4050c2 <__multiply+0x112>
  4050ba:	e005      	b.n	4050c8 <__multiply+0x118>
  4050bc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4050c0:	b913      	cbnz	r3, 4050c8 <__multiply+0x118>
  4050c2:	f1b8 0801 	subs.w	r8, r8, #1
  4050c6:	d1f9      	bne.n	4050bc <__multiply+0x10c>
  4050c8:	9800      	ldr	r0, [sp, #0]
  4050ca:	f8c0 8010 	str.w	r8, [r0, #16]
  4050ce:	b003      	add	sp, #12
  4050d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004050d4 <__pow5mult>:
  4050d4:	f012 0303 	ands.w	r3, r2, #3
  4050d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4050dc:	4614      	mov	r4, r2
  4050de:	4607      	mov	r7, r0
  4050e0:	d12e      	bne.n	405140 <__pow5mult+0x6c>
  4050e2:	460d      	mov	r5, r1
  4050e4:	10a4      	asrs	r4, r4, #2
  4050e6:	d01c      	beq.n	405122 <__pow5mult+0x4e>
  4050e8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  4050ea:	b396      	cbz	r6, 405152 <__pow5mult+0x7e>
  4050ec:	07e3      	lsls	r3, r4, #31
  4050ee:	f04f 0800 	mov.w	r8, #0
  4050f2:	d406      	bmi.n	405102 <__pow5mult+0x2e>
  4050f4:	1064      	asrs	r4, r4, #1
  4050f6:	d014      	beq.n	405122 <__pow5mult+0x4e>
  4050f8:	6830      	ldr	r0, [r6, #0]
  4050fa:	b1a8      	cbz	r0, 405128 <__pow5mult+0x54>
  4050fc:	4606      	mov	r6, r0
  4050fe:	07e3      	lsls	r3, r4, #31
  405100:	d5f8      	bpl.n	4050f4 <__pow5mult+0x20>
  405102:	4632      	mov	r2, r6
  405104:	4629      	mov	r1, r5
  405106:	4638      	mov	r0, r7
  405108:	f7ff ff52 	bl	404fb0 <__multiply>
  40510c:	b1b5      	cbz	r5, 40513c <__pow5mult+0x68>
  40510e:	686a      	ldr	r2, [r5, #4]
  405110:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405112:	1064      	asrs	r4, r4, #1
  405114:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405118:	6029      	str	r1, [r5, #0]
  40511a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40511e:	4605      	mov	r5, r0
  405120:	d1ea      	bne.n	4050f8 <__pow5mult+0x24>
  405122:	4628      	mov	r0, r5
  405124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405128:	4632      	mov	r2, r6
  40512a:	4631      	mov	r1, r6
  40512c:	4638      	mov	r0, r7
  40512e:	f7ff ff3f 	bl	404fb0 <__multiply>
  405132:	6030      	str	r0, [r6, #0]
  405134:	f8c0 8000 	str.w	r8, [r0]
  405138:	4606      	mov	r6, r0
  40513a:	e7e0      	b.n	4050fe <__pow5mult+0x2a>
  40513c:	4605      	mov	r5, r0
  40513e:	e7d9      	b.n	4050f4 <__pow5mult+0x20>
  405140:	1e5a      	subs	r2, r3, #1
  405142:	4d0b      	ldr	r5, [pc, #44]	; (405170 <__pow5mult+0x9c>)
  405144:	2300      	movs	r3, #0
  405146:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40514a:	f7ff fe97 	bl	404e7c <__multadd>
  40514e:	4605      	mov	r5, r0
  405150:	e7c8      	b.n	4050e4 <__pow5mult+0x10>
  405152:	2101      	movs	r1, #1
  405154:	4638      	mov	r0, r7
  405156:	f7ff fe61 	bl	404e1c <_Balloc>
  40515a:	f240 2171 	movw	r1, #625	; 0x271
  40515e:	2201      	movs	r2, #1
  405160:	2300      	movs	r3, #0
  405162:	6141      	str	r1, [r0, #20]
  405164:	6102      	str	r2, [r0, #16]
  405166:	4606      	mov	r6, r0
  405168:	64b8      	str	r0, [r7, #72]	; 0x48
  40516a:	6003      	str	r3, [r0, #0]
  40516c:	e7be      	b.n	4050ec <__pow5mult+0x18>
  40516e:	bf00      	nop
  405170:	00406e70 	.word	0x00406e70

00405174 <__lshift>:
  405174:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405178:	4691      	mov	r9, r2
  40517a:	690a      	ldr	r2, [r1, #16]
  40517c:	688b      	ldr	r3, [r1, #8]
  40517e:	ea4f 1469 	mov.w	r4, r9, asr #5
  405182:	eb04 0802 	add.w	r8, r4, r2
  405186:	f108 0501 	add.w	r5, r8, #1
  40518a:	429d      	cmp	r5, r3
  40518c:	460e      	mov	r6, r1
  40518e:	4607      	mov	r7, r0
  405190:	6849      	ldr	r1, [r1, #4]
  405192:	dd04      	ble.n	40519e <__lshift+0x2a>
  405194:	005b      	lsls	r3, r3, #1
  405196:	429d      	cmp	r5, r3
  405198:	f101 0101 	add.w	r1, r1, #1
  40519c:	dcfa      	bgt.n	405194 <__lshift+0x20>
  40519e:	4638      	mov	r0, r7
  4051a0:	f7ff fe3c 	bl	404e1c <_Balloc>
  4051a4:	2c00      	cmp	r4, #0
  4051a6:	f100 0314 	add.w	r3, r0, #20
  4051aa:	dd06      	ble.n	4051ba <__lshift+0x46>
  4051ac:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4051b0:	2100      	movs	r1, #0
  4051b2:	f843 1b04 	str.w	r1, [r3], #4
  4051b6:	429a      	cmp	r2, r3
  4051b8:	d1fb      	bne.n	4051b2 <__lshift+0x3e>
  4051ba:	6934      	ldr	r4, [r6, #16]
  4051bc:	f106 0114 	add.w	r1, r6, #20
  4051c0:	f019 091f 	ands.w	r9, r9, #31
  4051c4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4051c8:	d01d      	beq.n	405206 <__lshift+0x92>
  4051ca:	f1c9 0c20 	rsb	ip, r9, #32
  4051ce:	2200      	movs	r2, #0
  4051d0:	680c      	ldr	r4, [r1, #0]
  4051d2:	fa04 f409 	lsl.w	r4, r4, r9
  4051d6:	4314      	orrs	r4, r2
  4051d8:	f843 4b04 	str.w	r4, [r3], #4
  4051dc:	f851 2b04 	ldr.w	r2, [r1], #4
  4051e0:	458e      	cmp	lr, r1
  4051e2:	fa22 f20c 	lsr.w	r2, r2, ip
  4051e6:	d8f3      	bhi.n	4051d0 <__lshift+0x5c>
  4051e8:	601a      	str	r2, [r3, #0]
  4051ea:	b10a      	cbz	r2, 4051f0 <__lshift+0x7c>
  4051ec:	f108 0502 	add.w	r5, r8, #2
  4051f0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4051f2:	6872      	ldr	r2, [r6, #4]
  4051f4:	3d01      	subs	r5, #1
  4051f6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4051fa:	6105      	str	r5, [r0, #16]
  4051fc:	6031      	str	r1, [r6, #0]
  4051fe:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405202:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405206:	3b04      	subs	r3, #4
  405208:	f851 2b04 	ldr.w	r2, [r1], #4
  40520c:	f843 2f04 	str.w	r2, [r3, #4]!
  405210:	458e      	cmp	lr, r1
  405212:	d8f9      	bhi.n	405208 <__lshift+0x94>
  405214:	e7ec      	b.n	4051f0 <__lshift+0x7c>
  405216:	bf00      	nop

00405218 <__mcmp>:
  405218:	b430      	push	{r4, r5}
  40521a:	690b      	ldr	r3, [r1, #16]
  40521c:	4605      	mov	r5, r0
  40521e:	6900      	ldr	r0, [r0, #16]
  405220:	1ac0      	subs	r0, r0, r3
  405222:	d10f      	bne.n	405244 <__mcmp+0x2c>
  405224:	009b      	lsls	r3, r3, #2
  405226:	3514      	adds	r5, #20
  405228:	3114      	adds	r1, #20
  40522a:	4419      	add	r1, r3
  40522c:	442b      	add	r3, r5
  40522e:	e001      	b.n	405234 <__mcmp+0x1c>
  405230:	429d      	cmp	r5, r3
  405232:	d207      	bcs.n	405244 <__mcmp+0x2c>
  405234:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405238:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40523c:	4294      	cmp	r4, r2
  40523e:	d0f7      	beq.n	405230 <__mcmp+0x18>
  405240:	d302      	bcc.n	405248 <__mcmp+0x30>
  405242:	2001      	movs	r0, #1
  405244:	bc30      	pop	{r4, r5}
  405246:	4770      	bx	lr
  405248:	f04f 30ff 	mov.w	r0, #4294967295
  40524c:	e7fa      	b.n	405244 <__mcmp+0x2c>
  40524e:	bf00      	nop

00405250 <__mdiff>:
  405250:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405254:	690f      	ldr	r7, [r1, #16]
  405256:	460e      	mov	r6, r1
  405258:	6911      	ldr	r1, [r2, #16]
  40525a:	1a7f      	subs	r7, r7, r1
  40525c:	2f00      	cmp	r7, #0
  40525e:	4690      	mov	r8, r2
  405260:	d117      	bne.n	405292 <__mdiff+0x42>
  405262:	0089      	lsls	r1, r1, #2
  405264:	f106 0514 	add.w	r5, r6, #20
  405268:	f102 0e14 	add.w	lr, r2, #20
  40526c:	186b      	adds	r3, r5, r1
  40526e:	4471      	add	r1, lr
  405270:	e001      	b.n	405276 <__mdiff+0x26>
  405272:	429d      	cmp	r5, r3
  405274:	d25c      	bcs.n	405330 <__mdiff+0xe0>
  405276:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40527a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40527e:	42a2      	cmp	r2, r4
  405280:	d0f7      	beq.n	405272 <__mdiff+0x22>
  405282:	d25e      	bcs.n	405342 <__mdiff+0xf2>
  405284:	4633      	mov	r3, r6
  405286:	462c      	mov	r4, r5
  405288:	4646      	mov	r6, r8
  40528a:	4675      	mov	r5, lr
  40528c:	4698      	mov	r8, r3
  40528e:	2701      	movs	r7, #1
  405290:	e005      	b.n	40529e <__mdiff+0x4e>
  405292:	db58      	blt.n	405346 <__mdiff+0xf6>
  405294:	f106 0514 	add.w	r5, r6, #20
  405298:	f108 0414 	add.w	r4, r8, #20
  40529c:	2700      	movs	r7, #0
  40529e:	6871      	ldr	r1, [r6, #4]
  4052a0:	f7ff fdbc 	bl	404e1c <_Balloc>
  4052a4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4052a8:	6936      	ldr	r6, [r6, #16]
  4052aa:	60c7      	str	r7, [r0, #12]
  4052ac:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4052b0:	46a6      	mov	lr, r4
  4052b2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4052b6:	f100 0414 	add.w	r4, r0, #20
  4052ba:	2300      	movs	r3, #0
  4052bc:	f85e 1b04 	ldr.w	r1, [lr], #4
  4052c0:	f855 8b04 	ldr.w	r8, [r5], #4
  4052c4:	b28a      	uxth	r2, r1
  4052c6:	fa13 f388 	uxtah	r3, r3, r8
  4052ca:	0c09      	lsrs	r1, r1, #16
  4052cc:	1a9a      	subs	r2, r3, r2
  4052ce:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4052d2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4052d6:	b292      	uxth	r2, r2
  4052d8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4052dc:	45f4      	cmp	ip, lr
  4052de:	f844 2b04 	str.w	r2, [r4], #4
  4052e2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4052e6:	d8e9      	bhi.n	4052bc <__mdiff+0x6c>
  4052e8:	42af      	cmp	r7, r5
  4052ea:	d917      	bls.n	40531c <__mdiff+0xcc>
  4052ec:	46a4      	mov	ip, r4
  4052ee:	46ae      	mov	lr, r5
  4052f0:	f85e 2b04 	ldr.w	r2, [lr], #4
  4052f4:	fa13 f382 	uxtah	r3, r3, r2
  4052f8:	1419      	asrs	r1, r3, #16
  4052fa:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  4052fe:	b29b      	uxth	r3, r3
  405300:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405304:	4577      	cmp	r7, lr
  405306:	f84c 2b04 	str.w	r2, [ip], #4
  40530a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40530e:	d8ef      	bhi.n	4052f0 <__mdiff+0xa0>
  405310:	43ed      	mvns	r5, r5
  405312:	442f      	add	r7, r5
  405314:	f027 0703 	bic.w	r7, r7, #3
  405318:	3704      	adds	r7, #4
  40531a:	443c      	add	r4, r7
  40531c:	3c04      	subs	r4, #4
  40531e:	b922      	cbnz	r2, 40532a <__mdiff+0xda>
  405320:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405324:	3e01      	subs	r6, #1
  405326:	2b00      	cmp	r3, #0
  405328:	d0fa      	beq.n	405320 <__mdiff+0xd0>
  40532a:	6106      	str	r6, [r0, #16]
  40532c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405330:	2100      	movs	r1, #0
  405332:	f7ff fd73 	bl	404e1c <_Balloc>
  405336:	2201      	movs	r2, #1
  405338:	2300      	movs	r3, #0
  40533a:	6102      	str	r2, [r0, #16]
  40533c:	6143      	str	r3, [r0, #20]
  40533e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405342:	4674      	mov	r4, lr
  405344:	e7ab      	b.n	40529e <__mdiff+0x4e>
  405346:	4633      	mov	r3, r6
  405348:	f106 0414 	add.w	r4, r6, #20
  40534c:	f102 0514 	add.w	r5, r2, #20
  405350:	4616      	mov	r6, r2
  405352:	2701      	movs	r7, #1
  405354:	4698      	mov	r8, r3
  405356:	e7a2      	b.n	40529e <__mdiff+0x4e>

00405358 <__d2b>:
  405358:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40535c:	b082      	sub	sp, #8
  40535e:	2101      	movs	r1, #1
  405360:	461c      	mov	r4, r3
  405362:	f3c3 570a 	ubfx	r7, r3, #20, #11
  405366:	4615      	mov	r5, r2
  405368:	9e08      	ldr	r6, [sp, #32]
  40536a:	f7ff fd57 	bl	404e1c <_Balloc>
  40536e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405372:	4680      	mov	r8, r0
  405374:	b10f      	cbz	r7, 40537a <__d2b+0x22>
  405376:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40537a:	9401      	str	r4, [sp, #4]
  40537c:	b31d      	cbz	r5, 4053c6 <__d2b+0x6e>
  40537e:	a802      	add	r0, sp, #8
  405380:	f840 5d08 	str.w	r5, [r0, #-8]!
  405384:	f7ff fdda 	bl	404f3c <__lo0bits>
  405388:	2800      	cmp	r0, #0
  40538a:	d134      	bne.n	4053f6 <__d2b+0x9e>
  40538c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405390:	f8c8 2014 	str.w	r2, [r8, #20]
  405394:	2b00      	cmp	r3, #0
  405396:	bf0c      	ite	eq
  405398:	2101      	moveq	r1, #1
  40539a:	2102      	movne	r1, #2
  40539c:	f8c8 3018 	str.w	r3, [r8, #24]
  4053a0:	f8c8 1010 	str.w	r1, [r8, #16]
  4053a4:	b9df      	cbnz	r7, 4053de <__d2b+0x86>
  4053a6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4053aa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4053ae:	6030      	str	r0, [r6, #0]
  4053b0:	6918      	ldr	r0, [r3, #16]
  4053b2:	f7ff fda3 	bl	404efc <__hi0bits>
  4053b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4053b8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  4053bc:	6018      	str	r0, [r3, #0]
  4053be:	4640      	mov	r0, r8
  4053c0:	b002      	add	sp, #8
  4053c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4053c6:	a801      	add	r0, sp, #4
  4053c8:	f7ff fdb8 	bl	404f3c <__lo0bits>
  4053cc:	9b01      	ldr	r3, [sp, #4]
  4053ce:	f8c8 3014 	str.w	r3, [r8, #20]
  4053d2:	2101      	movs	r1, #1
  4053d4:	3020      	adds	r0, #32
  4053d6:	f8c8 1010 	str.w	r1, [r8, #16]
  4053da:	2f00      	cmp	r7, #0
  4053dc:	d0e3      	beq.n	4053a6 <__d2b+0x4e>
  4053de:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4053e0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  4053e4:	4407      	add	r7, r0
  4053e6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4053ea:	6037      	str	r7, [r6, #0]
  4053ec:	6018      	str	r0, [r3, #0]
  4053ee:	4640      	mov	r0, r8
  4053f0:	b002      	add	sp, #8
  4053f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4053f6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  4053fa:	f1c0 0220 	rsb	r2, r0, #32
  4053fe:	fa03 f202 	lsl.w	r2, r3, r2
  405402:	430a      	orrs	r2, r1
  405404:	40c3      	lsrs	r3, r0
  405406:	9301      	str	r3, [sp, #4]
  405408:	f8c8 2014 	str.w	r2, [r8, #20]
  40540c:	e7c2      	b.n	405394 <__d2b+0x3c>
  40540e:	bf00      	nop

00405410 <_sbrk_r>:
  405410:	b538      	push	{r3, r4, r5, lr}
  405412:	4c07      	ldr	r4, [pc, #28]	; (405430 <_sbrk_r+0x20>)
  405414:	2300      	movs	r3, #0
  405416:	4605      	mov	r5, r0
  405418:	4608      	mov	r0, r1
  40541a:	6023      	str	r3, [r4, #0]
  40541c:	f7fc f8b8 	bl	401590 <_sbrk>
  405420:	1c43      	adds	r3, r0, #1
  405422:	d000      	beq.n	405426 <_sbrk_r+0x16>
  405424:	bd38      	pop	{r3, r4, r5, pc}
  405426:	6823      	ldr	r3, [r4, #0]
  405428:	2b00      	cmp	r3, #0
  40542a:	d0fb      	beq.n	405424 <_sbrk_r+0x14>
  40542c:	602b      	str	r3, [r5, #0]
  40542e:	bd38      	pop	{r3, r4, r5, pc}
  405430:	20400cec 	.word	0x20400cec
	...

00405440 <strlen>:
  405440:	f890 f000 	pld	[r0]
  405444:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405448:	f020 0107 	bic.w	r1, r0, #7
  40544c:	f06f 0c00 	mvn.w	ip, #0
  405450:	f010 0407 	ands.w	r4, r0, #7
  405454:	f891 f020 	pld	[r1, #32]
  405458:	f040 8049 	bne.w	4054ee <strlen+0xae>
  40545c:	f04f 0400 	mov.w	r4, #0
  405460:	f06f 0007 	mvn.w	r0, #7
  405464:	e9d1 2300 	ldrd	r2, r3, [r1]
  405468:	f891 f040 	pld	[r1, #64]	; 0x40
  40546c:	f100 0008 	add.w	r0, r0, #8
  405470:	fa82 f24c 	uadd8	r2, r2, ip
  405474:	faa4 f28c 	sel	r2, r4, ip
  405478:	fa83 f34c 	uadd8	r3, r3, ip
  40547c:	faa2 f38c 	sel	r3, r2, ip
  405480:	bb4b      	cbnz	r3, 4054d6 <strlen+0x96>
  405482:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405486:	fa82 f24c 	uadd8	r2, r2, ip
  40548a:	f100 0008 	add.w	r0, r0, #8
  40548e:	faa4 f28c 	sel	r2, r4, ip
  405492:	fa83 f34c 	uadd8	r3, r3, ip
  405496:	faa2 f38c 	sel	r3, r2, ip
  40549a:	b9e3      	cbnz	r3, 4054d6 <strlen+0x96>
  40549c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  4054a0:	fa82 f24c 	uadd8	r2, r2, ip
  4054a4:	f100 0008 	add.w	r0, r0, #8
  4054a8:	faa4 f28c 	sel	r2, r4, ip
  4054ac:	fa83 f34c 	uadd8	r3, r3, ip
  4054b0:	faa2 f38c 	sel	r3, r2, ip
  4054b4:	b97b      	cbnz	r3, 4054d6 <strlen+0x96>
  4054b6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  4054ba:	f101 0120 	add.w	r1, r1, #32
  4054be:	fa82 f24c 	uadd8	r2, r2, ip
  4054c2:	f100 0008 	add.w	r0, r0, #8
  4054c6:	faa4 f28c 	sel	r2, r4, ip
  4054ca:	fa83 f34c 	uadd8	r3, r3, ip
  4054ce:	faa2 f38c 	sel	r3, r2, ip
  4054d2:	2b00      	cmp	r3, #0
  4054d4:	d0c6      	beq.n	405464 <strlen+0x24>
  4054d6:	2a00      	cmp	r2, #0
  4054d8:	bf04      	itt	eq
  4054da:	3004      	addeq	r0, #4
  4054dc:	461a      	moveq	r2, r3
  4054de:	ba12      	rev	r2, r2
  4054e0:	fab2 f282 	clz	r2, r2
  4054e4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  4054e8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  4054ec:	4770      	bx	lr
  4054ee:	e9d1 2300 	ldrd	r2, r3, [r1]
  4054f2:	f004 0503 	and.w	r5, r4, #3
  4054f6:	f1c4 0000 	rsb	r0, r4, #0
  4054fa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  4054fe:	f014 0f04 	tst.w	r4, #4
  405502:	f891 f040 	pld	[r1, #64]	; 0x40
  405506:	fa0c f505 	lsl.w	r5, ip, r5
  40550a:	ea62 0205 	orn	r2, r2, r5
  40550e:	bf1c      	itt	ne
  405510:	ea63 0305 	ornne	r3, r3, r5
  405514:	4662      	movne	r2, ip
  405516:	f04f 0400 	mov.w	r4, #0
  40551a:	e7a9      	b.n	405470 <strlen+0x30>

0040551c <__ssprint_r>:
  40551c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405520:	6893      	ldr	r3, [r2, #8]
  405522:	b083      	sub	sp, #12
  405524:	4690      	mov	r8, r2
  405526:	2b00      	cmp	r3, #0
  405528:	d070      	beq.n	40560c <__ssprint_r+0xf0>
  40552a:	4682      	mov	sl, r0
  40552c:	460c      	mov	r4, r1
  40552e:	6817      	ldr	r7, [r2, #0]
  405530:	688d      	ldr	r5, [r1, #8]
  405532:	6808      	ldr	r0, [r1, #0]
  405534:	e042      	b.n	4055bc <__ssprint_r+0xa0>
  405536:	89a3      	ldrh	r3, [r4, #12]
  405538:	f413 6f90 	tst.w	r3, #1152	; 0x480
  40553c:	d02e      	beq.n	40559c <__ssprint_r+0x80>
  40553e:	6965      	ldr	r5, [r4, #20]
  405540:	6921      	ldr	r1, [r4, #16]
  405542:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405546:	eba0 0b01 	sub.w	fp, r0, r1
  40554a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  40554e:	f10b 0001 	add.w	r0, fp, #1
  405552:	106d      	asrs	r5, r5, #1
  405554:	4430      	add	r0, r6
  405556:	42a8      	cmp	r0, r5
  405558:	462a      	mov	r2, r5
  40555a:	bf84      	itt	hi
  40555c:	4605      	movhi	r5, r0
  40555e:	462a      	movhi	r2, r5
  405560:	055b      	lsls	r3, r3, #21
  405562:	d538      	bpl.n	4055d6 <__ssprint_r+0xba>
  405564:	4611      	mov	r1, r2
  405566:	4650      	mov	r0, sl
  405568:	f7ff f8ac 	bl	4046c4 <_malloc_r>
  40556c:	2800      	cmp	r0, #0
  40556e:	d03c      	beq.n	4055ea <__ssprint_r+0xce>
  405570:	465a      	mov	r2, fp
  405572:	6921      	ldr	r1, [r4, #16]
  405574:	9001      	str	r0, [sp, #4]
  405576:	f7ff fbab 	bl	404cd0 <memcpy>
  40557a:	89a2      	ldrh	r2, [r4, #12]
  40557c:	9b01      	ldr	r3, [sp, #4]
  40557e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405582:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405586:	81a2      	strh	r2, [r4, #12]
  405588:	eba5 020b 	sub.w	r2, r5, fp
  40558c:	eb03 000b 	add.w	r0, r3, fp
  405590:	6165      	str	r5, [r4, #20]
  405592:	6123      	str	r3, [r4, #16]
  405594:	6020      	str	r0, [r4, #0]
  405596:	60a2      	str	r2, [r4, #8]
  405598:	4635      	mov	r5, r6
  40559a:	46b3      	mov	fp, r6
  40559c:	465a      	mov	r2, fp
  40559e:	4649      	mov	r1, r9
  4055a0:	f000 fa18 	bl	4059d4 <memmove>
  4055a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  4055a8:	68a2      	ldr	r2, [r4, #8]
  4055aa:	6820      	ldr	r0, [r4, #0]
  4055ac:	1b55      	subs	r5, r2, r5
  4055ae:	4458      	add	r0, fp
  4055b0:	1b9e      	subs	r6, r3, r6
  4055b2:	60a5      	str	r5, [r4, #8]
  4055b4:	6020      	str	r0, [r4, #0]
  4055b6:	f8c8 6008 	str.w	r6, [r8, #8]
  4055ba:	b33e      	cbz	r6, 40560c <__ssprint_r+0xf0>
  4055bc:	687e      	ldr	r6, [r7, #4]
  4055be:	463b      	mov	r3, r7
  4055c0:	3708      	adds	r7, #8
  4055c2:	2e00      	cmp	r6, #0
  4055c4:	d0fa      	beq.n	4055bc <__ssprint_r+0xa0>
  4055c6:	42ae      	cmp	r6, r5
  4055c8:	f8d3 9000 	ldr.w	r9, [r3]
  4055cc:	46ab      	mov	fp, r5
  4055ce:	d2b2      	bcs.n	405536 <__ssprint_r+0x1a>
  4055d0:	4635      	mov	r5, r6
  4055d2:	46b3      	mov	fp, r6
  4055d4:	e7e2      	b.n	40559c <__ssprint_r+0x80>
  4055d6:	4650      	mov	r0, sl
  4055d8:	f000 fa60 	bl	405a9c <_realloc_r>
  4055dc:	4603      	mov	r3, r0
  4055de:	2800      	cmp	r0, #0
  4055e0:	d1d2      	bne.n	405588 <__ssprint_r+0x6c>
  4055e2:	6921      	ldr	r1, [r4, #16]
  4055e4:	4650      	mov	r0, sl
  4055e6:	f000 f8f9 	bl	4057dc <_free_r>
  4055ea:	230c      	movs	r3, #12
  4055ec:	f8ca 3000 	str.w	r3, [sl]
  4055f0:	89a3      	ldrh	r3, [r4, #12]
  4055f2:	2200      	movs	r2, #0
  4055f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4055f8:	f04f 30ff 	mov.w	r0, #4294967295
  4055fc:	81a3      	strh	r3, [r4, #12]
  4055fe:	f8c8 2008 	str.w	r2, [r8, #8]
  405602:	f8c8 2004 	str.w	r2, [r8, #4]
  405606:	b003      	add	sp, #12
  405608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40560c:	2000      	movs	r0, #0
  40560e:	f8c8 0004 	str.w	r0, [r8, #4]
  405612:	b003      	add	sp, #12
  405614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405618 <__register_exitproc>:
  405618:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40561c:	4d2c      	ldr	r5, [pc, #176]	; (4056d0 <__register_exitproc+0xb8>)
  40561e:	4606      	mov	r6, r0
  405620:	6828      	ldr	r0, [r5, #0]
  405622:	4698      	mov	r8, r3
  405624:	460f      	mov	r7, r1
  405626:	4691      	mov	r9, r2
  405628:	f7ff f848 	bl	4046bc <__retarget_lock_acquire_recursive>
  40562c:	4b29      	ldr	r3, [pc, #164]	; (4056d4 <__register_exitproc+0xbc>)
  40562e:	681c      	ldr	r4, [r3, #0]
  405630:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405634:	2b00      	cmp	r3, #0
  405636:	d03e      	beq.n	4056b6 <__register_exitproc+0x9e>
  405638:	685a      	ldr	r2, [r3, #4]
  40563a:	2a1f      	cmp	r2, #31
  40563c:	dc1c      	bgt.n	405678 <__register_exitproc+0x60>
  40563e:	f102 0e01 	add.w	lr, r2, #1
  405642:	b176      	cbz	r6, 405662 <__register_exitproc+0x4a>
  405644:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405648:	2401      	movs	r4, #1
  40564a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40564e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405652:	4094      	lsls	r4, r2
  405654:	4320      	orrs	r0, r4
  405656:	2e02      	cmp	r6, #2
  405658:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40565c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405660:	d023      	beq.n	4056aa <__register_exitproc+0x92>
  405662:	3202      	adds	r2, #2
  405664:	f8c3 e004 	str.w	lr, [r3, #4]
  405668:	6828      	ldr	r0, [r5, #0]
  40566a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40566e:	f7ff f827 	bl	4046c0 <__retarget_lock_release_recursive>
  405672:	2000      	movs	r0, #0
  405674:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405678:	4b17      	ldr	r3, [pc, #92]	; (4056d8 <__register_exitproc+0xc0>)
  40567a:	b30b      	cbz	r3, 4056c0 <__register_exitproc+0xa8>
  40567c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405680:	f3af 8000 	nop.w
  405684:	4603      	mov	r3, r0
  405686:	b1d8      	cbz	r0, 4056c0 <__register_exitproc+0xa8>
  405688:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40568c:	6002      	str	r2, [r0, #0]
  40568e:	2100      	movs	r1, #0
  405690:	6041      	str	r1, [r0, #4]
  405692:	460a      	mov	r2, r1
  405694:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405698:	f04f 0e01 	mov.w	lr, #1
  40569c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4056a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4056a4:	2e00      	cmp	r6, #0
  4056a6:	d0dc      	beq.n	405662 <__register_exitproc+0x4a>
  4056a8:	e7cc      	b.n	405644 <__register_exitproc+0x2c>
  4056aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  4056ae:	430c      	orrs	r4, r1
  4056b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  4056b4:	e7d5      	b.n	405662 <__register_exitproc+0x4a>
  4056b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  4056ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  4056be:	e7bb      	b.n	405638 <__register_exitproc+0x20>
  4056c0:	6828      	ldr	r0, [r5, #0]
  4056c2:	f7fe fffd 	bl	4046c0 <__retarget_lock_release_recursive>
  4056c6:	f04f 30ff 	mov.w	r0, #4294967295
  4056ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4056ce:	bf00      	nop
  4056d0:	20400458 	.word	0x20400458
  4056d4:	00406d04 	.word	0x00406d04
  4056d8:	00000000 	.word	0x00000000

004056dc <_calloc_r>:
  4056dc:	b510      	push	{r4, lr}
  4056de:	fb02 f101 	mul.w	r1, r2, r1
  4056e2:	f7fe ffef 	bl	4046c4 <_malloc_r>
  4056e6:	4604      	mov	r4, r0
  4056e8:	b1d8      	cbz	r0, 405722 <_calloc_r+0x46>
  4056ea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4056ee:	f022 0203 	bic.w	r2, r2, #3
  4056f2:	3a04      	subs	r2, #4
  4056f4:	2a24      	cmp	r2, #36	; 0x24
  4056f6:	d818      	bhi.n	40572a <_calloc_r+0x4e>
  4056f8:	2a13      	cmp	r2, #19
  4056fa:	d914      	bls.n	405726 <_calloc_r+0x4a>
  4056fc:	2300      	movs	r3, #0
  4056fe:	2a1b      	cmp	r2, #27
  405700:	6003      	str	r3, [r0, #0]
  405702:	6043      	str	r3, [r0, #4]
  405704:	d916      	bls.n	405734 <_calloc_r+0x58>
  405706:	2a24      	cmp	r2, #36	; 0x24
  405708:	6083      	str	r3, [r0, #8]
  40570a:	60c3      	str	r3, [r0, #12]
  40570c:	bf11      	iteee	ne
  40570e:	f100 0210 	addne.w	r2, r0, #16
  405712:	6103      	streq	r3, [r0, #16]
  405714:	6143      	streq	r3, [r0, #20]
  405716:	f100 0218 	addeq.w	r2, r0, #24
  40571a:	2300      	movs	r3, #0
  40571c:	6013      	str	r3, [r2, #0]
  40571e:	6053      	str	r3, [r2, #4]
  405720:	6093      	str	r3, [r2, #8]
  405722:	4620      	mov	r0, r4
  405724:	bd10      	pop	{r4, pc}
  405726:	4602      	mov	r2, r0
  405728:	e7f7      	b.n	40571a <_calloc_r+0x3e>
  40572a:	2100      	movs	r1, #0
  40572c:	f7fc fd2c 	bl	402188 <memset>
  405730:	4620      	mov	r0, r4
  405732:	bd10      	pop	{r4, pc}
  405734:	f100 0208 	add.w	r2, r0, #8
  405738:	e7ef      	b.n	40571a <_calloc_r+0x3e>
  40573a:	bf00      	nop

0040573c <_malloc_trim_r>:
  40573c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40573e:	4f24      	ldr	r7, [pc, #144]	; (4057d0 <_malloc_trim_r+0x94>)
  405740:	460c      	mov	r4, r1
  405742:	4606      	mov	r6, r0
  405744:	f7ff fb5e 	bl	404e04 <__malloc_lock>
  405748:	68bb      	ldr	r3, [r7, #8]
  40574a:	685d      	ldr	r5, [r3, #4]
  40574c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405750:	310f      	adds	r1, #15
  405752:	f025 0503 	bic.w	r5, r5, #3
  405756:	4429      	add	r1, r5
  405758:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40575c:	f021 010f 	bic.w	r1, r1, #15
  405760:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405764:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405768:	db07      	blt.n	40577a <_malloc_trim_r+0x3e>
  40576a:	2100      	movs	r1, #0
  40576c:	4630      	mov	r0, r6
  40576e:	f7ff fe4f 	bl	405410 <_sbrk_r>
  405772:	68bb      	ldr	r3, [r7, #8]
  405774:	442b      	add	r3, r5
  405776:	4298      	cmp	r0, r3
  405778:	d004      	beq.n	405784 <_malloc_trim_r+0x48>
  40577a:	4630      	mov	r0, r6
  40577c:	f7ff fb48 	bl	404e10 <__malloc_unlock>
  405780:	2000      	movs	r0, #0
  405782:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405784:	4261      	negs	r1, r4
  405786:	4630      	mov	r0, r6
  405788:	f7ff fe42 	bl	405410 <_sbrk_r>
  40578c:	3001      	adds	r0, #1
  40578e:	d00d      	beq.n	4057ac <_malloc_trim_r+0x70>
  405790:	4b10      	ldr	r3, [pc, #64]	; (4057d4 <_malloc_trim_r+0x98>)
  405792:	68ba      	ldr	r2, [r7, #8]
  405794:	6819      	ldr	r1, [r3, #0]
  405796:	1b2d      	subs	r5, r5, r4
  405798:	f045 0501 	orr.w	r5, r5, #1
  40579c:	4630      	mov	r0, r6
  40579e:	1b09      	subs	r1, r1, r4
  4057a0:	6055      	str	r5, [r2, #4]
  4057a2:	6019      	str	r1, [r3, #0]
  4057a4:	f7ff fb34 	bl	404e10 <__malloc_unlock>
  4057a8:	2001      	movs	r0, #1
  4057aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4057ac:	2100      	movs	r1, #0
  4057ae:	4630      	mov	r0, r6
  4057b0:	f7ff fe2e 	bl	405410 <_sbrk_r>
  4057b4:	68ba      	ldr	r2, [r7, #8]
  4057b6:	1a83      	subs	r3, r0, r2
  4057b8:	2b0f      	cmp	r3, #15
  4057ba:	ddde      	ble.n	40577a <_malloc_trim_r+0x3e>
  4057bc:	4c06      	ldr	r4, [pc, #24]	; (4057d8 <_malloc_trim_r+0x9c>)
  4057be:	4905      	ldr	r1, [pc, #20]	; (4057d4 <_malloc_trim_r+0x98>)
  4057c0:	6824      	ldr	r4, [r4, #0]
  4057c2:	f043 0301 	orr.w	r3, r3, #1
  4057c6:	1b00      	subs	r0, r0, r4
  4057c8:	6053      	str	r3, [r2, #4]
  4057ca:	6008      	str	r0, [r1, #0]
  4057cc:	e7d5      	b.n	40577a <_malloc_trim_r+0x3e>
  4057ce:	bf00      	nop
  4057d0:	2040045c 	.word	0x2040045c
  4057d4:	20400c94 	.word	0x20400c94
  4057d8:	20400864 	.word	0x20400864

004057dc <_free_r>:
  4057dc:	2900      	cmp	r1, #0
  4057de:	d044      	beq.n	40586a <_free_r+0x8e>
  4057e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4057e4:	460d      	mov	r5, r1
  4057e6:	4680      	mov	r8, r0
  4057e8:	f7ff fb0c 	bl	404e04 <__malloc_lock>
  4057ec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4057f0:	4969      	ldr	r1, [pc, #420]	; (405998 <_free_r+0x1bc>)
  4057f2:	f027 0301 	bic.w	r3, r7, #1
  4057f6:	f1a5 0408 	sub.w	r4, r5, #8
  4057fa:	18e2      	adds	r2, r4, r3
  4057fc:	688e      	ldr	r6, [r1, #8]
  4057fe:	6850      	ldr	r0, [r2, #4]
  405800:	42b2      	cmp	r2, r6
  405802:	f020 0003 	bic.w	r0, r0, #3
  405806:	d05e      	beq.n	4058c6 <_free_r+0xea>
  405808:	07fe      	lsls	r6, r7, #31
  40580a:	6050      	str	r0, [r2, #4]
  40580c:	d40b      	bmi.n	405826 <_free_r+0x4a>
  40580e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405812:	1be4      	subs	r4, r4, r7
  405814:	f101 0e08 	add.w	lr, r1, #8
  405818:	68a5      	ldr	r5, [r4, #8]
  40581a:	4575      	cmp	r5, lr
  40581c:	443b      	add	r3, r7
  40581e:	d06d      	beq.n	4058fc <_free_r+0x120>
  405820:	68e7      	ldr	r7, [r4, #12]
  405822:	60ef      	str	r7, [r5, #12]
  405824:	60bd      	str	r5, [r7, #8]
  405826:	1815      	adds	r5, r2, r0
  405828:	686d      	ldr	r5, [r5, #4]
  40582a:	07ed      	lsls	r5, r5, #31
  40582c:	d53e      	bpl.n	4058ac <_free_r+0xd0>
  40582e:	f043 0201 	orr.w	r2, r3, #1
  405832:	6062      	str	r2, [r4, #4]
  405834:	50e3      	str	r3, [r4, r3]
  405836:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40583a:	d217      	bcs.n	40586c <_free_r+0x90>
  40583c:	08db      	lsrs	r3, r3, #3
  40583e:	1c58      	adds	r0, r3, #1
  405840:	109a      	asrs	r2, r3, #2
  405842:	684d      	ldr	r5, [r1, #4]
  405844:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405848:	60a7      	str	r7, [r4, #8]
  40584a:	2301      	movs	r3, #1
  40584c:	4093      	lsls	r3, r2
  40584e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405852:	432b      	orrs	r3, r5
  405854:	3a08      	subs	r2, #8
  405856:	60e2      	str	r2, [r4, #12]
  405858:	604b      	str	r3, [r1, #4]
  40585a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40585e:	60fc      	str	r4, [r7, #12]
  405860:	4640      	mov	r0, r8
  405862:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405866:	f7ff bad3 	b.w	404e10 <__malloc_unlock>
  40586a:	4770      	bx	lr
  40586c:	0a5a      	lsrs	r2, r3, #9
  40586e:	2a04      	cmp	r2, #4
  405870:	d852      	bhi.n	405918 <_free_r+0x13c>
  405872:	099a      	lsrs	r2, r3, #6
  405874:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405878:	00ff      	lsls	r7, r7, #3
  40587a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40587e:	19c8      	adds	r0, r1, r7
  405880:	59ca      	ldr	r2, [r1, r7]
  405882:	3808      	subs	r0, #8
  405884:	4290      	cmp	r0, r2
  405886:	d04f      	beq.n	405928 <_free_r+0x14c>
  405888:	6851      	ldr	r1, [r2, #4]
  40588a:	f021 0103 	bic.w	r1, r1, #3
  40588e:	428b      	cmp	r3, r1
  405890:	d232      	bcs.n	4058f8 <_free_r+0x11c>
  405892:	6892      	ldr	r2, [r2, #8]
  405894:	4290      	cmp	r0, r2
  405896:	d1f7      	bne.n	405888 <_free_r+0xac>
  405898:	68c3      	ldr	r3, [r0, #12]
  40589a:	60a0      	str	r0, [r4, #8]
  40589c:	60e3      	str	r3, [r4, #12]
  40589e:	609c      	str	r4, [r3, #8]
  4058a0:	60c4      	str	r4, [r0, #12]
  4058a2:	4640      	mov	r0, r8
  4058a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4058a8:	f7ff bab2 	b.w	404e10 <__malloc_unlock>
  4058ac:	6895      	ldr	r5, [r2, #8]
  4058ae:	4f3b      	ldr	r7, [pc, #236]	; (40599c <_free_r+0x1c0>)
  4058b0:	42bd      	cmp	r5, r7
  4058b2:	4403      	add	r3, r0
  4058b4:	d040      	beq.n	405938 <_free_r+0x15c>
  4058b6:	68d0      	ldr	r0, [r2, #12]
  4058b8:	60e8      	str	r0, [r5, #12]
  4058ba:	f043 0201 	orr.w	r2, r3, #1
  4058be:	6085      	str	r5, [r0, #8]
  4058c0:	6062      	str	r2, [r4, #4]
  4058c2:	50e3      	str	r3, [r4, r3]
  4058c4:	e7b7      	b.n	405836 <_free_r+0x5a>
  4058c6:	07ff      	lsls	r7, r7, #31
  4058c8:	4403      	add	r3, r0
  4058ca:	d407      	bmi.n	4058dc <_free_r+0x100>
  4058cc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  4058d0:	1aa4      	subs	r4, r4, r2
  4058d2:	4413      	add	r3, r2
  4058d4:	68a0      	ldr	r0, [r4, #8]
  4058d6:	68e2      	ldr	r2, [r4, #12]
  4058d8:	60c2      	str	r2, [r0, #12]
  4058da:	6090      	str	r0, [r2, #8]
  4058dc:	4a30      	ldr	r2, [pc, #192]	; (4059a0 <_free_r+0x1c4>)
  4058de:	6812      	ldr	r2, [r2, #0]
  4058e0:	f043 0001 	orr.w	r0, r3, #1
  4058e4:	4293      	cmp	r3, r2
  4058e6:	6060      	str	r0, [r4, #4]
  4058e8:	608c      	str	r4, [r1, #8]
  4058ea:	d3b9      	bcc.n	405860 <_free_r+0x84>
  4058ec:	4b2d      	ldr	r3, [pc, #180]	; (4059a4 <_free_r+0x1c8>)
  4058ee:	4640      	mov	r0, r8
  4058f0:	6819      	ldr	r1, [r3, #0]
  4058f2:	f7ff ff23 	bl	40573c <_malloc_trim_r>
  4058f6:	e7b3      	b.n	405860 <_free_r+0x84>
  4058f8:	4610      	mov	r0, r2
  4058fa:	e7cd      	b.n	405898 <_free_r+0xbc>
  4058fc:	1811      	adds	r1, r2, r0
  4058fe:	6849      	ldr	r1, [r1, #4]
  405900:	07c9      	lsls	r1, r1, #31
  405902:	d444      	bmi.n	40598e <_free_r+0x1b2>
  405904:	6891      	ldr	r1, [r2, #8]
  405906:	68d2      	ldr	r2, [r2, #12]
  405908:	60ca      	str	r2, [r1, #12]
  40590a:	4403      	add	r3, r0
  40590c:	f043 0001 	orr.w	r0, r3, #1
  405910:	6091      	str	r1, [r2, #8]
  405912:	6060      	str	r0, [r4, #4]
  405914:	50e3      	str	r3, [r4, r3]
  405916:	e7a3      	b.n	405860 <_free_r+0x84>
  405918:	2a14      	cmp	r2, #20
  40591a:	d816      	bhi.n	40594a <_free_r+0x16e>
  40591c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405920:	00ff      	lsls	r7, r7, #3
  405922:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405926:	e7aa      	b.n	40587e <_free_r+0xa2>
  405928:	10aa      	asrs	r2, r5, #2
  40592a:	2301      	movs	r3, #1
  40592c:	684d      	ldr	r5, [r1, #4]
  40592e:	4093      	lsls	r3, r2
  405930:	432b      	orrs	r3, r5
  405932:	604b      	str	r3, [r1, #4]
  405934:	4603      	mov	r3, r0
  405936:	e7b0      	b.n	40589a <_free_r+0xbe>
  405938:	f043 0201 	orr.w	r2, r3, #1
  40593c:	614c      	str	r4, [r1, #20]
  40593e:	610c      	str	r4, [r1, #16]
  405940:	60e5      	str	r5, [r4, #12]
  405942:	60a5      	str	r5, [r4, #8]
  405944:	6062      	str	r2, [r4, #4]
  405946:	50e3      	str	r3, [r4, r3]
  405948:	e78a      	b.n	405860 <_free_r+0x84>
  40594a:	2a54      	cmp	r2, #84	; 0x54
  40594c:	d806      	bhi.n	40595c <_free_r+0x180>
  40594e:	0b1a      	lsrs	r2, r3, #12
  405950:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405954:	00ff      	lsls	r7, r7, #3
  405956:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40595a:	e790      	b.n	40587e <_free_r+0xa2>
  40595c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405960:	d806      	bhi.n	405970 <_free_r+0x194>
  405962:	0bda      	lsrs	r2, r3, #15
  405964:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405968:	00ff      	lsls	r7, r7, #3
  40596a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40596e:	e786      	b.n	40587e <_free_r+0xa2>
  405970:	f240 5054 	movw	r0, #1364	; 0x554
  405974:	4282      	cmp	r2, r0
  405976:	d806      	bhi.n	405986 <_free_r+0x1aa>
  405978:	0c9a      	lsrs	r2, r3, #18
  40597a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40597e:	00ff      	lsls	r7, r7, #3
  405980:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405984:	e77b      	b.n	40587e <_free_r+0xa2>
  405986:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40598a:	257e      	movs	r5, #126	; 0x7e
  40598c:	e777      	b.n	40587e <_free_r+0xa2>
  40598e:	f043 0101 	orr.w	r1, r3, #1
  405992:	6061      	str	r1, [r4, #4]
  405994:	6013      	str	r3, [r2, #0]
  405996:	e763      	b.n	405860 <_free_r+0x84>
  405998:	2040045c 	.word	0x2040045c
  40599c:	20400464 	.word	0x20400464
  4059a0:	20400868 	.word	0x20400868
  4059a4:	20400cc4 	.word	0x20400cc4

004059a8 <__ascii_mbtowc>:
  4059a8:	b082      	sub	sp, #8
  4059aa:	b149      	cbz	r1, 4059c0 <__ascii_mbtowc+0x18>
  4059ac:	b15a      	cbz	r2, 4059c6 <__ascii_mbtowc+0x1e>
  4059ae:	b16b      	cbz	r3, 4059cc <__ascii_mbtowc+0x24>
  4059b0:	7813      	ldrb	r3, [r2, #0]
  4059b2:	600b      	str	r3, [r1, #0]
  4059b4:	7812      	ldrb	r2, [r2, #0]
  4059b6:	1c10      	adds	r0, r2, #0
  4059b8:	bf18      	it	ne
  4059ba:	2001      	movne	r0, #1
  4059bc:	b002      	add	sp, #8
  4059be:	4770      	bx	lr
  4059c0:	a901      	add	r1, sp, #4
  4059c2:	2a00      	cmp	r2, #0
  4059c4:	d1f3      	bne.n	4059ae <__ascii_mbtowc+0x6>
  4059c6:	4610      	mov	r0, r2
  4059c8:	b002      	add	sp, #8
  4059ca:	4770      	bx	lr
  4059cc:	f06f 0001 	mvn.w	r0, #1
  4059d0:	e7f4      	b.n	4059bc <__ascii_mbtowc+0x14>
  4059d2:	bf00      	nop

004059d4 <memmove>:
  4059d4:	4288      	cmp	r0, r1
  4059d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4059d8:	d90d      	bls.n	4059f6 <memmove+0x22>
  4059da:	188b      	adds	r3, r1, r2
  4059dc:	4298      	cmp	r0, r3
  4059de:	d20a      	bcs.n	4059f6 <memmove+0x22>
  4059e0:	1884      	adds	r4, r0, r2
  4059e2:	2a00      	cmp	r2, #0
  4059e4:	d051      	beq.n	405a8a <memmove+0xb6>
  4059e6:	4622      	mov	r2, r4
  4059e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4059ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4059f0:	4299      	cmp	r1, r3
  4059f2:	d1f9      	bne.n	4059e8 <memmove+0x14>
  4059f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4059f6:	2a0f      	cmp	r2, #15
  4059f8:	d948      	bls.n	405a8c <memmove+0xb8>
  4059fa:	ea41 0300 	orr.w	r3, r1, r0
  4059fe:	079b      	lsls	r3, r3, #30
  405a00:	d146      	bne.n	405a90 <memmove+0xbc>
  405a02:	f100 0410 	add.w	r4, r0, #16
  405a06:	f101 0310 	add.w	r3, r1, #16
  405a0a:	4615      	mov	r5, r2
  405a0c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405a10:	f844 6c10 	str.w	r6, [r4, #-16]
  405a14:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405a18:	f844 6c0c 	str.w	r6, [r4, #-12]
  405a1c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405a20:	f844 6c08 	str.w	r6, [r4, #-8]
  405a24:	3d10      	subs	r5, #16
  405a26:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405a2a:	f844 6c04 	str.w	r6, [r4, #-4]
  405a2e:	2d0f      	cmp	r5, #15
  405a30:	f103 0310 	add.w	r3, r3, #16
  405a34:	f104 0410 	add.w	r4, r4, #16
  405a38:	d8e8      	bhi.n	405a0c <memmove+0x38>
  405a3a:	f1a2 0310 	sub.w	r3, r2, #16
  405a3e:	f023 030f 	bic.w	r3, r3, #15
  405a42:	f002 0e0f 	and.w	lr, r2, #15
  405a46:	3310      	adds	r3, #16
  405a48:	f1be 0f03 	cmp.w	lr, #3
  405a4c:	4419      	add	r1, r3
  405a4e:	4403      	add	r3, r0
  405a50:	d921      	bls.n	405a96 <memmove+0xc2>
  405a52:	1f1e      	subs	r6, r3, #4
  405a54:	460d      	mov	r5, r1
  405a56:	4674      	mov	r4, lr
  405a58:	3c04      	subs	r4, #4
  405a5a:	f855 7b04 	ldr.w	r7, [r5], #4
  405a5e:	f846 7f04 	str.w	r7, [r6, #4]!
  405a62:	2c03      	cmp	r4, #3
  405a64:	d8f8      	bhi.n	405a58 <memmove+0x84>
  405a66:	f1ae 0404 	sub.w	r4, lr, #4
  405a6a:	f024 0403 	bic.w	r4, r4, #3
  405a6e:	3404      	adds	r4, #4
  405a70:	4421      	add	r1, r4
  405a72:	4423      	add	r3, r4
  405a74:	f002 0203 	and.w	r2, r2, #3
  405a78:	b162      	cbz	r2, 405a94 <memmove+0xc0>
  405a7a:	3b01      	subs	r3, #1
  405a7c:	440a      	add	r2, r1
  405a7e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405a82:	f803 4f01 	strb.w	r4, [r3, #1]!
  405a86:	428a      	cmp	r2, r1
  405a88:	d1f9      	bne.n	405a7e <memmove+0xaa>
  405a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405a8c:	4603      	mov	r3, r0
  405a8e:	e7f3      	b.n	405a78 <memmove+0xa4>
  405a90:	4603      	mov	r3, r0
  405a92:	e7f2      	b.n	405a7a <memmove+0xa6>
  405a94:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405a96:	4672      	mov	r2, lr
  405a98:	e7ee      	b.n	405a78 <memmove+0xa4>
  405a9a:	bf00      	nop

00405a9c <_realloc_r>:
  405a9c:	2900      	cmp	r1, #0
  405a9e:	f000 8095 	beq.w	405bcc <_realloc_r+0x130>
  405aa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405aa6:	460d      	mov	r5, r1
  405aa8:	4616      	mov	r6, r2
  405aaa:	b083      	sub	sp, #12
  405aac:	4680      	mov	r8, r0
  405aae:	f106 070b 	add.w	r7, r6, #11
  405ab2:	f7ff f9a7 	bl	404e04 <__malloc_lock>
  405ab6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405aba:	2f16      	cmp	r7, #22
  405abc:	f02e 0403 	bic.w	r4, lr, #3
  405ac0:	f1a5 0908 	sub.w	r9, r5, #8
  405ac4:	d83c      	bhi.n	405b40 <_realloc_r+0xa4>
  405ac6:	2210      	movs	r2, #16
  405ac8:	4617      	mov	r7, r2
  405aca:	42be      	cmp	r6, r7
  405acc:	d83d      	bhi.n	405b4a <_realloc_r+0xae>
  405ace:	4294      	cmp	r4, r2
  405ad0:	da43      	bge.n	405b5a <_realloc_r+0xbe>
  405ad2:	4bc4      	ldr	r3, [pc, #784]	; (405de4 <_realloc_r+0x348>)
  405ad4:	6899      	ldr	r1, [r3, #8]
  405ad6:	eb09 0004 	add.w	r0, r9, r4
  405ada:	4288      	cmp	r0, r1
  405adc:	f000 80b4 	beq.w	405c48 <_realloc_r+0x1ac>
  405ae0:	6843      	ldr	r3, [r0, #4]
  405ae2:	f023 0101 	bic.w	r1, r3, #1
  405ae6:	4401      	add	r1, r0
  405ae8:	6849      	ldr	r1, [r1, #4]
  405aea:	07c9      	lsls	r1, r1, #31
  405aec:	d54c      	bpl.n	405b88 <_realloc_r+0xec>
  405aee:	f01e 0f01 	tst.w	lr, #1
  405af2:	f000 809b 	beq.w	405c2c <_realloc_r+0x190>
  405af6:	4631      	mov	r1, r6
  405af8:	4640      	mov	r0, r8
  405afa:	f7fe fde3 	bl	4046c4 <_malloc_r>
  405afe:	4606      	mov	r6, r0
  405b00:	2800      	cmp	r0, #0
  405b02:	d03a      	beq.n	405b7a <_realloc_r+0xde>
  405b04:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405b08:	f023 0301 	bic.w	r3, r3, #1
  405b0c:	444b      	add	r3, r9
  405b0e:	f1a0 0208 	sub.w	r2, r0, #8
  405b12:	429a      	cmp	r2, r3
  405b14:	f000 8121 	beq.w	405d5a <_realloc_r+0x2be>
  405b18:	1f22      	subs	r2, r4, #4
  405b1a:	2a24      	cmp	r2, #36	; 0x24
  405b1c:	f200 8107 	bhi.w	405d2e <_realloc_r+0x292>
  405b20:	2a13      	cmp	r2, #19
  405b22:	f200 80db 	bhi.w	405cdc <_realloc_r+0x240>
  405b26:	4603      	mov	r3, r0
  405b28:	462a      	mov	r2, r5
  405b2a:	6811      	ldr	r1, [r2, #0]
  405b2c:	6019      	str	r1, [r3, #0]
  405b2e:	6851      	ldr	r1, [r2, #4]
  405b30:	6059      	str	r1, [r3, #4]
  405b32:	6892      	ldr	r2, [r2, #8]
  405b34:	609a      	str	r2, [r3, #8]
  405b36:	4629      	mov	r1, r5
  405b38:	4640      	mov	r0, r8
  405b3a:	f7ff fe4f 	bl	4057dc <_free_r>
  405b3e:	e01c      	b.n	405b7a <_realloc_r+0xde>
  405b40:	f027 0707 	bic.w	r7, r7, #7
  405b44:	2f00      	cmp	r7, #0
  405b46:	463a      	mov	r2, r7
  405b48:	dabf      	bge.n	405aca <_realloc_r+0x2e>
  405b4a:	2600      	movs	r6, #0
  405b4c:	230c      	movs	r3, #12
  405b4e:	4630      	mov	r0, r6
  405b50:	f8c8 3000 	str.w	r3, [r8]
  405b54:	b003      	add	sp, #12
  405b56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405b5a:	462e      	mov	r6, r5
  405b5c:	1be3      	subs	r3, r4, r7
  405b5e:	2b0f      	cmp	r3, #15
  405b60:	d81e      	bhi.n	405ba0 <_realloc_r+0x104>
  405b62:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405b66:	f003 0301 	and.w	r3, r3, #1
  405b6a:	4323      	orrs	r3, r4
  405b6c:	444c      	add	r4, r9
  405b6e:	f8c9 3004 	str.w	r3, [r9, #4]
  405b72:	6863      	ldr	r3, [r4, #4]
  405b74:	f043 0301 	orr.w	r3, r3, #1
  405b78:	6063      	str	r3, [r4, #4]
  405b7a:	4640      	mov	r0, r8
  405b7c:	f7ff f948 	bl	404e10 <__malloc_unlock>
  405b80:	4630      	mov	r0, r6
  405b82:	b003      	add	sp, #12
  405b84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405b88:	f023 0303 	bic.w	r3, r3, #3
  405b8c:	18e1      	adds	r1, r4, r3
  405b8e:	4291      	cmp	r1, r2
  405b90:	db1f      	blt.n	405bd2 <_realloc_r+0x136>
  405b92:	68c3      	ldr	r3, [r0, #12]
  405b94:	6882      	ldr	r2, [r0, #8]
  405b96:	462e      	mov	r6, r5
  405b98:	60d3      	str	r3, [r2, #12]
  405b9a:	460c      	mov	r4, r1
  405b9c:	609a      	str	r2, [r3, #8]
  405b9e:	e7dd      	b.n	405b5c <_realloc_r+0xc0>
  405ba0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405ba4:	eb09 0107 	add.w	r1, r9, r7
  405ba8:	f002 0201 	and.w	r2, r2, #1
  405bac:	444c      	add	r4, r9
  405bae:	f043 0301 	orr.w	r3, r3, #1
  405bb2:	4317      	orrs	r7, r2
  405bb4:	f8c9 7004 	str.w	r7, [r9, #4]
  405bb8:	604b      	str	r3, [r1, #4]
  405bba:	6863      	ldr	r3, [r4, #4]
  405bbc:	f043 0301 	orr.w	r3, r3, #1
  405bc0:	3108      	adds	r1, #8
  405bc2:	6063      	str	r3, [r4, #4]
  405bc4:	4640      	mov	r0, r8
  405bc6:	f7ff fe09 	bl	4057dc <_free_r>
  405bca:	e7d6      	b.n	405b7a <_realloc_r+0xde>
  405bcc:	4611      	mov	r1, r2
  405bce:	f7fe bd79 	b.w	4046c4 <_malloc_r>
  405bd2:	f01e 0f01 	tst.w	lr, #1
  405bd6:	d18e      	bne.n	405af6 <_realloc_r+0x5a>
  405bd8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405bdc:	eba9 0a01 	sub.w	sl, r9, r1
  405be0:	f8da 1004 	ldr.w	r1, [sl, #4]
  405be4:	f021 0103 	bic.w	r1, r1, #3
  405be8:	440b      	add	r3, r1
  405bea:	4423      	add	r3, r4
  405bec:	4293      	cmp	r3, r2
  405bee:	db25      	blt.n	405c3c <_realloc_r+0x1a0>
  405bf0:	68c2      	ldr	r2, [r0, #12]
  405bf2:	6881      	ldr	r1, [r0, #8]
  405bf4:	4656      	mov	r6, sl
  405bf6:	60ca      	str	r2, [r1, #12]
  405bf8:	6091      	str	r1, [r2, #8]
  405bfa:	f8da 100c 	ldr.w	r1, [sl, #12]
  405bfe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405c02:	1f22      	subs	r2, r4, #4
  405c04:	2a24      	cmp	r2, #36	; 0x24
  405c06:	60c1      	str	r1, [r0, #12]
  405c08:	6088      	str	r0, [r1, #8]
  405c0a:	f200 8094 	bhi.w	405d36 <_realloc_r+0x29a>
  405c0e:	2a13      	cmp	r2, #19
  405c10:	d96f      	bls.n	405cf2 <_realloc_r+0x256>
  405c12:	6829      	ldr	r1, [r5, #0]
  405c14:	f8ca 1008 	str.w	r1, [sl, #8]
  405c18:	6869      	ldr	r1, [r5, #4]
  405c1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405c1e:	2a1b      	cmp	r2, #27
  405c20:	f200 80a2 	bhi.w	405d68 <_realloc_r+0x2cc>
  405c24:	3508      	adds	r5, #8
  405c26:	f10a 0210 	add.w	r2, sl, #16
  405c2a:	e063      	b.n	405cf4 <_realloc_r+0x258>
  405c2c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405c30:	eba9 0a03 	sub.w	sl, r9, r3
  405c34:	f8da 1004 	ldr.w	r1, [sl, #4]
  405c38:	f021 0103 	bic.w	r1, r1, #3
  405c3c:	1863      	adds	r3, r4, r1
  405c3e:	4293      	cmp	r3, r2
  405c40:	f6ff af59 	blt.w	405af6 <_realloc_r+0x5a>
  405c44:	4656      	mov	r6, sl
  405c46:	e7d8      	b.n	405bfa <_realloc_r+0x15e>
  405c48:	6841      	ldr	r1, [r0, #4]
  405c4a:	f021 0b03 	bic.w	fp, r1, #3
  405c4e:	44a3      	add	fp, r4
  405c50:	f107 0010 	add.w	r0, r7, #16
  405c54:	4583      	cmp	fp, r0
  405c56:	da56      	bge.n	405d06 <_realloc_r+0x26a>
  405c58:	f01e 0f01 	tst.w	lr, #1
  405c5c:	f47f af4b 	bne.w	405af6 <_realloc_r+0x5a>
  405c60:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405c64:	eba9 0a01 	sub.w	sl, r9, r1
  405c68:	f8da 1004 	ldr.w	r1, [sl, #4]
  405c6c:	f021 0103 	bic.w	r1, r1, #3
  405c70:	448b      	add	fp, r1
  405c72:	4558      	cmp	r0, fp
  405c74:	dce2      	bgt.n	405c3c <_realloc_r+0x1a0>
  405c76:	4656      	mov	r6, sl
  405c78:	f8da 100c 	ldr.w	r1, [sl, #12]
  405c7c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405c80:	1f22      	subs	r2, r4, #4
  405c82:	2a24      	cmp	r2, #36	; 0x24
  405c84:	60c1      	str	r1, [r0, #12]
  405c86:	6088      	str	r0, [r1, #8]
  405c88:	f200 808f 	bhi.w	405daa <_realloc_r+0x30e>
  405c8c:	2a13      	cmp	r2, #19
  405c8e:	f240 808a 	bls.w	405da6 <_realloc_r+0x30a>
  405c92:	6829      	ldr	r1, [r5, #0]
  405c94:	f8ca 1008 	str.w	r1, [sl, #8]
  405c98:	6869      	ldr	r1, [r5, #4]
  405c9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405c9e:	2a1b      	cmp	r2, #27
  405ca0:	f200 808a 	bhi.w	405db8 <_realloc_r+0x31c>
  405ca4:	3508      	adds	r5, #8
  405ca6:	f10a 0210 	add.w	r2, sl, #16
  405caa:	6829      	ldr	r1, [r5, #0]
  405cac:	6011      	str	r1, [r2, #0]
  405cae:	6869      	ldr	r1, [r5, #4]
  405cb0:	6051      	str	r1, [r2, #4]
  405cb2:	68a9      	ldr	r1, [r5, #8]
  405cb4:	6091      	str	r1, [r2, #8]
  405cb6:	eb0a 0107 	add.w	r1, sl, r7
  405cba:	ebab 0207 	sub.w	r2, fp, r7
  405cbe:	f042 0201 	orr.w	r2, r2, #1
  405cc2:	6099      	str	r1, [r3, #8]
  405cc4:	604a      	str	r2, [r1, #4]
  405cc6:	f8da 3004 	ldr.w	r3, [sl, #4]
  405cca:	f003 0301 	and.w	r3, r3, #1
  405cce:	431f      	orrs	r7, r3
  405cd0:	4640      	mov	r0, r8
  405cd2:	f8ca 7004 	str.w	r7, [sl, #4]
  405cd6:	f7ff f89b 	bl	404e10 <__malloc_unlock>
  405cda:	e751      	b.n	405b80 <_realloc_r+0xe4>
  405cdc:	682b      	ldr	r3, [r5, #0]
  405cde:	6003      	str	r3, [r0, #0]
  405ce0:	686b      	ldr	r3, [r5, #4]
  405ce2:	6043      	str	r3, [r0, #4]
  405ce4:	2a1b      	cmp	r2, #27
  405ce6:	d82d      	bhi.n	405d44 <_realloc_r+0x2a8>
  405ce8:	f100 0308 	add.w	r3, r0, #8
  405cec:	f105 0208 	add.w	r2, r5, #8
  405cf0:	e71b      	b.n	405b2a <_realloc_r+0x8e>
  405cf2:	4632      	mov	r2, r6
  405cf4:	6829      	ldr	r1, [r5, #0]
  405cf6:	6011      	str	r1, [r2, #0]
  405cf8:	6869      	ldr	r1, [r5, #4]
  405cfa:	6051      	str	r1, [r2, #4]
  405cfc:	68a9      	ldr	r1, [r5, #8]
  405cfe:	6091      	str	r1, [r2, #8]
  405d00:	461c      	mov	r4, r3
  405d02:	46d1      	mov	r9, sl
  405d04:	e72a      	b.n	405b5c <_realloc_r+0xc0>
  405d06:	eb09 0107 	add.w	r1, r9, r7
  405d0a:	ebab 0b07 	sub.w	fp, fp, r7
  405d0e:	f04b 0201 	orr.w	r2, fp, #1
  405d12:	6099      	str	r1, [r3, #8]
  405d14:	604a      	str	r2, [r1, #4]
  405d16:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405d1a:	f003 0301 	and.w	r3, r3, #1
  405d1e:	431f      	orrs	r7, r3
  405d20:	4640      	mov	r0, r8
  405d22:	f845 7c04 	str.w	r7, [r5, #-4]
  405d26:	f7ff f873 	bl	404e10 <__malloc_unlock>
  405d2a:	462e      	mov	r6, r5
  405d2c:	e728      	b.n	405b80 <_realloc_r+0xe4>
  405d2e:	4629      	mov	r1, r5
  405d30:	f7ff fe50 	bl	4059d4 <memmove>
  405d34:	e6ff      	b.n	405b36 <_realloc_r+0x9a>
  405d36:	4629      	mov	r1, r5
  405d38:	4630      	mov	r0, r6
  405d3a:	461c      	mov	r4, r3
  405d3c:	46d1      	mov	r9, sl
  405d3e:	f7ff fe49 	bl	4059d4 <memmove>
  405d42:	e70b      	b.n	405b5c <_realloc_r+0xc0>
  405d44:	68ab      	ldr	r3, [r5, #8]
  405d46:	6083      	str	r3, [r0, #8]
  405d48:	68eb      	ldr	r3, [r5, #12]
  405d4a:	60c3      	str	r3, [r0, #12]
  405d4c:	2a24      	cmp	r2, #36	; 0x24
  405d4e:	d017      	beq.n	405d80 <_realloc_r+0x2e4>
  405d50:	f100 0310 	add.w	r3, r0, #16
  405d54:	f105 0210 	add.w	r2, r5, #16
  405d58:	e6e7      	b.n	405b2a <_realloc_r+0x8e>
  405d5a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405d5e:	f023 0303 	bic.w	r3, r3, #3
  405d62:	441c      	add	r4, r3
  405d64:	462e      	mov	r6, r5
  405d66:	e6f9      	b.n	405b5c <_realloc_r+0xc0>
  405d68:	68a9      	ldr	r1, [r5, #8]
  405d6a:	f8ca 1010 	str.w	r1, [sl, #16]
  405d6e:	68e9      	ldr	r1, [r5, #12]
  405d70:	f8ca 1014 	str.w	r1, [sl, #20]
  405d74:	2a24      	cmp	r2, #36	; 0x24
  405d76:	d00c      	beq.n	405d92 <_realloc_r+0x2f6>
  405d78:	3510      	adds	r5, #16
  405d7a:	f10a 0218 	add.w	r2, sl, #24
  405d7e:	e7b9      	b.n	405cf4 <_realloc_r+0x258>
  405d80:	692b      	ldr	r3, [r5, #16]
  405d82:	6103      	str	r3, [r0, #16]
  405d84:	696b      	ldr	r3, [r5, #20]
  405d86:	6143      	str	r3, [r0, #20]
  405d88:	f105 0218 	add.w	r2, r5, #24
  405d8c:	f100 0318 	add.w	r3, r0, #24
  405d90:	e6cb      	b.n	405b2a <_realloc_r+0x8e>
  405d92:	692a      	ldr	r2, [r5, #16]
  405d94:	f8ca 2018 	str.w	r2, [sl, #24]
  405d98:	696a      	ldr	r2, [r5, #20]
  405d9a:	f8ca 201c 	str.w	r2, [sl, #28]
  405d9e:	3518      	adds	r5, #24
  405da0:	f10a 0220 	add.w	r2, sl, #32
  405da4:	e7a6      	b.n	405cf4 <_realloc_r+0x258>
  405da6:	4632      	mov	r2, r6
  405da8:	e77f      	b.n	405caa <_realloc_r+0x20e>
  405daa:	4629      	mov	r1, r5
  405dac:	4630      	mov	r0, r6
  405dae:	9301      	str	r3, [sp, #4]
  405db0:	f7ff fe10 	bl	4059d4 <memmove>
  405db4:	9b01      	ldr	r3, [sp, #4]
  405db6:	e77e      	b.n	405cb6 <_realloc_r+0x21a>
  405db8:	68a9      	ldr	r1, [r5, #8]
  405dba:	f8ca 1010 	str.w	r1, [sl, #16]
  405dbe:	68e9      	ldr	r1, [r5, #12]
  405dc0:	f8ca 1014 	str.w	r1, [sl, #20]
  405dc4:	2a24      	cmp	r2, #36	; 0x24
  405dc6:	d003      	beq.n	405dd0 <_realloc_r+0x334>
  405dc8:	3510      	adds	r5, #16
  405dca:	f10a 0218 	add.w	r2, sl, #24
  405dce:	e76c      	b.n	405caa <_realloc_r+0x20e>
  405dd0:	692a      	ldr	r2, [r5, #16]
  405dd2:	f8ca 2018 	str.w	r2, [sl, #24]
  405dd6:	696a      	ldr	r2, [r5, #20]
  405dd8:	f8ca 201c 	str.w	r2, [sl, #28]
  405ddc:	3518      	adds	r5, #24
  405dde:	f10a 0220 	add.w	r2, sl, #32
  405de2:	e762      	b.n	405caa <_realloc_r+0x20e>
  405de4:	2040045c 	.word	0x2040045c

00405de8 <__ascii_wctomb>:
  405de8:	b121      	cbz	r1, 405df4 <__ascii_wctomb+0xc>
  405dea:	2aff      	cmp	r2, #255	; 0xff
  405dec:	d804      	bhi.n	405df8 <__ascii_wctomb+0x10>
  405dee:	700a      	strb	r2, [r1, #0]
  405df0:	2001      	movs	r0, #1
  405df2:	4770      	bx	lr
  405df4:	4608      	mov	r0, r1
  405df6:	4770      	bx	lr
  405df8:	238a      	movs	r3, #138	; 0x8a
  405dfa:	6003      	str	r3, [r0, #0]
  405dfc:	f04f 30ff 	mov.w	r0, #4294967295
  405e00:	4770      	bx	lr
  405e02:	bf00      	nop

00405e04 <__gedf2>:
  405e04:	f04f 3cff 	mov.w	ip, #4294967295
  405e08:	e006      	b.n	405e18 <__cmpdf2+0x4>
  405e0a:	bf00      	nop

00405e0c <__ledf2>:
  405e0c:	f04f 0c01 	mov.w	ip, #1
  405e10:	e002      	b.n	405e18 <__cmpdf2+0x4>
  405e12:	bf00      	nop

00405e14 <__cmpdf2>:
  405e14:	f04f 0c01 	mov.w	ip, #1
  405e18:	f84d cd04 	str.w	ip, [sp, #-4]!
  405e1c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e24:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e28:	bf18      	it	ne
  405e2a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405e2e:	d01b      	beq.n	405e68 <__cmpdf2+0x54>
  405e30:	b001      	add	sp, #4
  405e32:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405e36:	bf0c      	ite	eq
  405e38:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405e3c:	ea91 0f03 	teqne	r1, r3
  405e40:	bf02      	ittt	eq
  405e42:	ea90 0f02 	teqeq	r0, r2
  405e46:	2000      	moveq	r0, #0
  405e48:	4770      	bxeq	lr
  405e4a:	f110 0f00 	cmn.w	r0, #0
  405e4e:	ea91 0f03 	teq	r1, r3
  405e52:	bf58      	it	pl
  405e54:	4299      	cmppl	r1, r3
  405e56:	bf08      	it	eq
  405e58:	4290      	cmpeq	r0, r2
  405e5a:	bf2c      	ite	cs
  405e5c:	17d8      	asrcs	r0, r3, #31
  405e5e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405e62:	f040 0001 	orr.w	r0, r0, #1
  405e66:	4770      	bx	lr
  405e68:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e70:	d102      	bne.n	405e78 <__cmpdf2+0x64>
  405e72:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405e76:	d107      	bne.n	405e88 <__cmpdf2+0x74>
  405e78:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e80:	d1d6      	bne.n	405e30 <__cmpdf2+0x1c>
  405e82:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405e86:	d0d3      	beq.n	405e30 <__cmpdf2+0x1c>
  405e88:	f85d 0b04 	ldr.w	r0, [sp], #4
  405e8c:	4770      	bx	lr
  405e8e:	bf00      	nop

00405e90 <__aeabi_cdrcmple>:
  405e90:	4684      	mov	ip, r0
  405e92:	4610      	mov	r0, r2
  405e94:	4662      	mov	r2, ip
  405e96:	468c      	mov	ip, r1
  405e98:	4619      	mov	r1, r3
  405e9a:	4663      	mov	r3, ip
  405e9c:	e000      	b.n	405ea0 <__aeabi_cdcmpeq>
  405e9e:	bf00      	nop

00405ea0 <__aeabi_cdcmpeq>:
  405ea0:	b501      	push	{r0, lr}
  405ea2:	f7ff ffb7 	bl	405e14 <__cmpdf2>
  405ea6:	2800      	cmp	r0, #0
  405ea8:	bf48      	it	mi
  405eaa:	f110 0f00 	cmnmi.w	r0, #0
  405eae:	bd01      	pop	{r0, pc}

00405eb0 <__aeabi_dcmpeq>:
  405eb0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405eb4:	f7ff fff4 	bl	405ea0 <__aeabi_cdcmpeq>
  405eb8:	bf0c      	ite	eq
  405eba:	2001      	moveq	r0, #1
  405ebc:	2000      	movne	r0, #0
  405ebe:	f85d fb08 	ldr.w	pc, [sp], #8
  405ec2:	bf00      	nop

00405ec4 <__aeabi_dcmplt>:
  405ec4:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ec8:	f7ff ffea 	bl	405ea0 <__aeabi_cdcmpeq>
  405ecc:	bf34      	ite	cc
  405ece:	2001      	movcc	r0, #1
  405ed0:	2000      	movcs	r0, #0
  405ed2:	f85d fb08 	ldr.w	pc, [sp], #8
  405ed6:	bf00      	nop

00405ed8 <__aeabi_dcmple>:
  405ed8:	f84d ed08 	str.w	lr, [sp, #-8]!
  405edc:	f7ff ffe0 	bl	405ea0 <__aeabi_cdcmpeq>
  405ee0:	bf94      	ite	ls
  405ee2:	2001      	movls	r0, #1
  405ee4:	2000      	movhi	r0, #0
  405ee6:	f85d fb08 	ldr.w	pc, [sp], #8
  405eea:	bf00      	nop

00405eec <__aeabi_dcmpge>:
  405eec:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ef0:	f7ff ffce 	bl	405e90 <__aeabi_cdrcmple>
  405ef4:	bf94      	ite	ls
  405ef6:	2001      	movls	r0, #1
  405ef8:	2000      	movhi	r0, #0
  405efa:	f85d fb08 	ldr.w	pc, [sp], #8
  405efe:	bf00      	nop

00405f00 <__aeabi_dcmpgt>:
  405f00:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f04:	f7ff ffc4 	bl	405e90 <__aeabi_cdrcmple>
  405f08:	bf34      	ite	cc
  405f0a:	2001      	movcc	r0, #1
  405f0c:	2000      	movcs	r0, #0
  405f0e:	f85d fb08 	ldr.w	pc, [sp], #8
  405f12:	bf00      	nop

00405f14 <__aeabi_dcmpun>:
  405f14:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f1c:	d102      	bne.n	405f24 <__aeabi_dcmpun+0x10>
  405f1e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f22:	d10a      	bne.n	405f3a <__aeabi_dcmpun+0x26>
  405f24:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f2c:	d102      	bne.n	405f34 <__aeabi_dcmpun+0x20>
  405f2e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f32:	d102      	bne.n	405f3a <__aeabi_dcmpun+0x26>
  405f34:	f04f 0000 	mov.w	r0, #0
  405f38:	4770      	bx	lr
  405f3a:	f04f 0001 	mov.w	r0, #1
  405f3e:	4770      	bx	lr

00405f40 <__aeabi_d2iz>:
  405f40:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405f44:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405f48:	d215      	bcs.n	405f76 <__aeabi_d2iz+0x36>
  405f4a:	d511      	bpl.n	405f70 <__aeabi_d2iz+0x30>
  405f4c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405f50:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405f54:	d912      	bls.n	405f7c <__aeabi_d2iz+0x3c>
  405f56:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405f5a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405f5e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405f62:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405f66:	fa23 f002 	lsr.w	r0, r3, r2
  405f6a:	bf18      	it	ne
  405f6c:	4240      	negne	r0, r0
  405f6e:	4770      	bx	lr
  405f70:	f04f 0000 	mov.w	r0, #0
  405f74:	4770      	bx	lr
  405f76:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405f7a:	d105      	bne.n	405f88 <__aeabi_d2iz+0x48>
  405f7c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405f80:	bf08      	it	eq
  405f82:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405f86:	4770      	bx	lr
  405f88:	f04f 0000 	mov.w	r0, #0
  405f8c:	4770      	bx	lr
  405f8e:	bf00      	nop

00405f90 <__aeabi_uldivmod>:
  405f90:	b953      	cbnz	r3, 405fa8 <__aeabi_uldivmod+0x18>
  405f92:	b94a      	cbnz	r2, 405fa8 <__aeabi_uldivmod+0x18>
  405f94:	2900      	cmp	r1, #0
  405f96:	bf08      	it	eq
  405f98:	2800      	cmpeq	r0, #0
  405f9a:	bf1c      	itt	ne
  405f9c:	f04f 31ff 	movne.w	r1, #4294967295
  405fa0:	f04f 30ff 	movne.w	r0, #4294967295
  405fa4:	f000 b97a 	b.w	40629c <__aeabi_idiv0>
  405fa8:	f1ad 0c08 	sub.w	ip, sp, #8
  405fac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405fb0:	f000 f806 	bl	405fc0 <__udivmoddi4>
  405fb4:	f8dd e004 	ldr.w	lr, [sp, #4]
  405fb8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405fbc:	b004      	add	sp, #16
  405fbe:	4770      	bx	lr

00405fc0 <__udivmoddi4>:
  405fc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405fc4:	468c      	mov	ip, r1
  405fc6:	460d      	mov	r5, r1
  405fc8:	4604      	mov	r4, r0
  405fca:	9e08      	ldr	r6, [sp, #32]
  405fcc:	2b00      	cmp	r3, #0
  405fce:	d151      	bne.n	406074 <__udivmoddi4+0xb4>
  405fd0:	428a      	cmp	r2, r1
  405fd2:	4617      	mov	r7, r2
  405fd4:	d96d      	bls.n	4060b2 <__udivmoddi4+0xf2>
  405fd6:	fab2 fe82 	clz	lr, r2
  405fda:	f1be 0f00 	cmp.w	lr, #0
  405fde:	d00b      	beq.n	405ff8 <__udivmoddi4+0x38>
  405fe0:	f1ce 0c20 	rsb	ip, lr, #32
  405fe4:	fa01 f50e 	lsl.w	r5, r1, lr
  405fe8:	fa20 fc0c 	lsr.w	ip, r0, ip
  405fec:	fa02 f70e 	lsl.w	r7, r2, lr
  405ff0:	ea4c 0c05 	orr.w	ip, ip, r5
  405ff4:	fa00 f40e 	lsl.w	r4, r0, lr
  405ff8:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405ffc:	0c25      	lsrs	r5, r4, #16
  405ffe:	fbbc f8fa 	udiv	r8, ip, sl
  406002:	fa1f f987 	uxth.w	r9, r7
  406006:	fb0a cc18 	mls	ip, sl, r8, ip
  40600a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40600e:	fb08 f309 	mul.w	r3, r8, r9
  406012:	42ab      	cmp	r3, r5
  406014:	d90a      	bls.n	40602c <__udivmoddi4+0x6c>
  406016:	19ed      	adds	r5, r5, r7
  406018:	f108 32ff 	add.w	r2, r8, #4294967295
  40601c:	f080 8123 	bcs.w	406266 <__udivmoddi4+0x2a6>
  406020:	42ab      	cmp	r3, r5
  406022:	f240 8120 	bls.w	406266 <__udivmoddi4+0x2a6>
  406026:	f1a8 0802 	sub.w	r8, r8, #2
  40602a:	443d      	add	r5, r7
  40602c:	1aed      	subs	r5, r5, r3
  40602e:	b2a4      	uxth	r4, r4
  406030:	fbb5 f0fa 	udiv	r0, r5, sl
  406034:	fb0a 5510 	mls	r5, sl, r0, r5
  406038:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40603c:	fb00 f909 	mul.w	r9, r0, r9
  406040:	45a1      	cmp	r9, r4
  406042:	d909      	bls.n	406058 <__udivmoddi4+0x98>
  406044:	19e4      	adds	r4, r4, r7
  406046:	f100 33ff 	add.w	r3, r0, #4294967295
  40604a:	f080 810a 	bcs.w	406262 <__udivmoddi4+0x2a2>
  40604e:	45a1      	cmp	r9, r4
  406050:	f240 8107 	bls.w	406262 <__udivmoddi4+0x2a2>
  406054:	3802      	subs	r0, #2
  406056:	443c      	add	r4, r7
  406058:	eba4 0409 	sub.w	r4, r4, r9
  40605c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406060:	2100      	movs	r1, #0
  406062:	2e00      	cmp	r6, #0
  406064:	d061      	beq.n	40612a <__udivmoddi4+0x16a>
  406066:	fa24 f40e 	lsr.w	r4, r4, lr
  40606a:	2300      	movs	r3, #0
  40606c:	6034      	str	r4, [r6, #0]
  40606e:	6073      	str	r3, [r6, #4]
  406070:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406074:	428b      	cmp	r3, r1
  406076:	d907      	bls.n	406088 <__udivmoddi4+0xc8>
  406078:	2e00      	cmp	r6, #0
  40607a:	d054      	beq.n	406126 <__udivmoddi4+0x166>
  40607c:	2100      	movs	r1, #0
  40607e:	e886 0021 	stmia.w	r6, {r0, r5}
  406082:	4608      	mov	r0, r1
  406084:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406088:	fab3 f183 	clz	r1, r3
  40608c:	2900      	cmp	r1, #0
  40608e:	f040 808e 	bne.w	4061ae <__udivmoddi4+0x1ee>
  406092:	42ab      	cmp	r3, r5
  406094:	d302      	bcc.n	40609c <__udivmoddi4+0xdc>
  406096:	4282      	cmp	r2, r0
  406098:	f200 80fa 	bhi.w	406290 <__udivmoddi4+0x2d0>
  40609c:	1a84      	subs	r4, r0, r2
  40609e:	eb65 0503 	sbc.w	r5, r5, r3
  4060a2:	2001      	movs	r0, #1
  4060a4:	46ac      	mov	ip, r5
  4060a6:	2e00      	cmp	r6, #0
  4060a8:	d03f      	beq.n	40612a <__udivmoddi4+0x16a>
  4060aa:	e886 1010 	stmia.w	r6, {r4, ip}
  4060ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4060b2:	b912      	cbnz	r2, 4060ba <__udivmoddi4+0xfa>
  4060b4:	2701      	movs	r7, #1
  4060b6:	fbb7 f7f2 	udiv	r7, r7, r2
  4060ba:	fab7 fe87 	clz	lr, r7
  4060be:	f1be 0f00 	cmp.w	lr, #0
  4060c2:	d134      	bne.n	40612e <__udivmoddi4+0x16e>
  4060c4:	1beb      	subs	r3, r5, r7
  4060c6:	0c3a      	lsrs	r2, r7, #16
  4060c8:	fa1f fc87 	uxth.w	ip, r7
  4060cc:	2101      	movs	r1, #1
  4060ce:	fbb3 f8f2 	udiv	r8, r3, r2
  4060d2:	0c25      	lsrs	r5, r4, #16
  4060d4:	fb02 3318 	mls	r3, r2, r8, r3
  4060d8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4060dc:	fb0c f308 	mul.w	r3, ip, r8
  4060e0:	42ab      	cmp	r3, r5
  4060e2:	d907      	bls.n	4060f4 <__udivmoddi4+0x134>
  4060e4:	19ed      	adds	r5, r5, r7
  4060e6:	f108 30ff 	add.w	r0, r8, #4294967295
  4060ea:	d202      	bcs.n	4060f2 <__udivmoddi4+0x132>
  4060ec:	42ab      	cmp	r3, r5
  4060ee:	f200 80d1 	bhi.w	406294 <__udivmoddi4+0x2d4>
  4060f2:	4680      	mov	r8, r0
  4060f4:	1aed      	subs	r5, r5, r3
  4060f6:	b2a3      	uxth	r3, r4
  4060f8:	fbb5 f0f2 	udiv	r0, r5, r2
  4060fc:	fb02 5510 	mls	r5, r2, r0, r5
  406100:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406104:	fb0c fc00 	mul.w	ip, ip, r0
  406108:	45a4      	cmp	ip, r4
  40610a:	d907      	bls.n	40611c <__udivmoddi4+0x15c>
  40610c:	19e4      	adds	r4, r4, r7
  40610e:	f100 33ff 	add.w	r3, r0, #4294967295
  406112:	d202      	bcs.n	40611a <__udivmoddi4+0x15a>
  406114:	45a4      	cmp	ip, r4
  406116:	f200 80b8 	bhi.w	40628a <__udivmoddi4+0x2ca>
  40611a:	4618      	mov	r0, r3
  40611c:	eba4 040c 	sub.w	r4, r4, ip
  406120:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406124:	e79d      	b.n	406062 <__udivmoddi4+0xa2>
  406126:	4631      	mov	r1, r6
  406128:	4630      	mov	r0, r6
  40612a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40612e:	f1ce 0420 	rsb	r4, lr, #32
  406132:	fa05 f30e 	lsl.w	r3, r5, lr
  406136:	fa07 f70e 	lsl.w	r7, r7, lr
  40613a:	fa20 f804 	lsr.w	r8, r0, r4
  40613e:	0c3a      	lsrs	r2, r7, #16
  406140:	fa25 f404 	lsr.w	r4, r5, r4
  406144:	ea48 0803 	orr.w	r8, r8, r3
  406148:	fbb4 f1f2 	udiv	r1, r4, r2
  40614c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406150:	fb02 4411 	mls	r4, r2, r1, r4
  406154:	fa1f fc87 	uxth.w	ip, r7
  406158:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40615c:	fb01 f30c 	mul.w	r3, r1, ip
  406160:	42ab      	cmp	r3, r5
  406162:	fa00 f40e 	lsl.w	r4, r0, lr
  406166:	d909      	bls.n	40617c <__udivmoddi4+0x1bc>
  406168:	19ed      	adds	r5, r5, r7
  40616a:	f101 30ff 	add.w	r0, r1, #4294967295
  40616e:	f080 808a 	bcs.w	406286 <__udivmoddi4+0x2c6>
  406172:	42ab      	cmp	r3, r5
  406174:	f240 8087 	bls.w	406286 <__udivmoddi4+0x2c6>
  406178:	3902      	subs	r1, #2
  40617a:	443d      	add	r5, r7
  40617c:	1aeb      	subs	r3, r5, r3
  40617e:	fa1f f588 	uxth.w	r5, r8
  406182:	fbb3 f0f2 	udiv	r0, r3, r2
  406186:	fb02 3310 	mls	r3, r2, r0, r3
  40618a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40618e:	fb00 f30c 	mul.w	r3, r0, ip
  406192:	42ab      	cmp	r3, r5
  406194:	d907      	bls.n	4061a6 <__udivmoddi4+0x1e6>
  406196:	19ed      	adds	r5, r5, r7
  406198:	f100 38ff 	add.w	r8, r0, #4294967295
  40619c:	d26f      	bcs.n	40627e <__udivmoddi4+0x2be>
  40619e:	42ab      	cmp	r3, r5
  4061a0:	d96d      	bls.n	40627e <__udivmoddi4+0x2be>
  4061a2:	3802      	subs	r0, #2
  4061a4:	443d      	add	r5, r7
  4061a6:	1aeb      	subs	r3, r5, r3
  4061a8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4061ac:	e78f      	b.n	4060ce <__udivmoddi4+0x10e>
  4061ae:	f1c1 0720 	rsb	r7, r1, #32
  4061b2:	fa22 f807 	lsr.w	r8, r2, r7
  4061b6:	408b      	lsls	r3, r1
  4061b8:	fa05 f401 	lsl.w	r4, r5, r1
  4061bc:	ea48 0303 	orr.w	r3, r8, r3
  4061c0:	fa20 fe07 	lsr.w	lr, r0, r7
  4061c4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4061c8:	40fd      	lsrs	r5, r7
  4061ca:	ea4e 0e04 	orr.w	lr, lr, r4
  4061ce:	fbb5 f9fc 	udiv	r9, r5, ip
  4061d2:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4061d6:	fb0c 5519 	mls	r5, ip, r9, r5
  4061da:	fa1f f883 	uxth.w	r8, r3
  4061de:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4061e2:	fb09 f408 	mul.w	r4, r9, r8
  4061e6:	42ac      	cmp	r4, r5
  4061e8:	fa02 f201 	lsl.w	r2, r2, r1
  4061ec:	fa00 fa01 	lsl.w	sl, r0, r1
  4061f0:	d908      	bls.n	406204 <__udivmoddi4+0x244>
  4061f2:	18ed      	adds	r5, r5, r3
  4061f4:	f109 30ff 	add.w	r0, r9, #4294967295
  4061f8:	d243      	bcs.n	406282 <__udivmoddi4+0x2c2>
  4061fa:	42ac      	cmp	r4, r5
  4061fc:	d941      	bls.n	406282 <__udivmoddi4+0x2c2>
  4061fe:	f1a9 0902 	sub.w	r9, r9, #2
  406202:	441d      	add	r5, r3
  406204:	1b2d      	subs	r5, r5, r4
  406206:	fa1f fe8e 	uxth.w	lr, lr
  40620a:	fbb5 f0fc 	udiv	r0, r5, ip
  40620e:	fb0c 5510 	mls	r5, ip, r0, r5
  406212:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406216:	fb00 f808 	mul.w	r8, r0, r8
  40621a:	45a0      	cmp	r8, r4
  40621c:	d907      	bls.n	40622e <__udivmoddi4+0x26e>
  40621e:	18e4      	adds	r4, r4, r3
  406220:	f100 35ff 	add.w	r5, r0, #4294967295
  406224:	d229      	bcs.n	40627a <__udivmoddi4+0x2ba>
  406226:	45a0      	cmp	r8, r4
  406228:	d927      	bls.n	40627a <__udivmoddi4+0x2ba>
  40622a:	3802      	subs	r0, #2
  40622c:	441c      	add	r4, r3
  40622e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406232:	eba4 0408 	sub.w	r4, r4, r8
  406236:	fba0 8902 	umull	r8, r9, r0, r2
  40623a:	454c      	cmp	r4, r9
  40623c:	46c6      	mov	lr, r8
  40623e:	464d      	mov	r5, r9
  406240:	d315      	bcc.n	40626e <__udivmoddi4+0x2ae>
  406242:	d012      	beq.n	40626a <__udivmoddi4+0x2aa>
  406244:	b156      	cbz	r6, 40625c <__udivmoddi4+0x29c>
  406246:	ebba 030e 	subs.w	r3, sl, lr
  40624a:	eb64 0405 	sbc.w	r4, r4, r5
  40624e:	fa04 f707 	lsl.w	r7, r4, r7
  406252:	40cb      	lsrs	r3, r1
  406254:	431f      	orrs	r7, r3
  406256:	40cc      	lsrs	r4, r1
  406258:	6037      	str	r7, [r6, #0]
  40625a:	6074      	str	r4, [r6, #4]
  40625c:	2100      	movs	r1, #0
  40625e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406262:	4618      	mov	r0, r3
  406264:	e6f8      	b.n	406058 <__udivmoddi4+0x98>
  406266:	4690      	mov	r8, r2
  406268:	e6e0      	b.n	40602c <__udivmoddi4+0x6c>
  40626a:	45c2      	cmp	sl, r8
  40626c:	d2ea      	bcs.n	406244 <__udivmoddi4+0x284>
  40626e:	ebb8 0e02 	subs.w	lr, r8, r2
  406272:	eb69 0503 	sbc.w	r5, r9, r3
  406276:	3801      	subs	r0, #1
  406278:	e7e4      	b.n	406244 <__udivmoddi4+0x284>
  40627a:	4628      	mov	r0, r5
  40627c:	e7d7      	b.n	40622e <__udivmoddi4+0x26e>
  40627e:	4640      	mov	r0, r8
  406280:	e791      	b.n	4061a6 <__udivmoddi4+0x1e6>
  406282:	4681      	mov	r9, r0
  406284:	e7be      	b.n	406204 <__udivmoddi4+0x244>
  406286:	4601      	mov	r1, r0
  406288:	e778      	b.n	40617c <__udivmoddi4+0x1bc>
  40628a:	3802      	subs	r0, #2
  40628c:	443c      	add	r4, r7
  40628e:	e745      	b.n	40611c <__udivmoddi4+0x15c>
  406290:	4608      	mov	r0, r1
  406292:	e708      	b.n	4060a6 <__udivmoddi4+0xe6>
  406294:	f1a8 0802 	sub.w	r8, r8, #2
  406298:	443d      	add	r5, r7
  40629a:	e72b      	b.n	4060f4 <__udivmoddi4+0x134>

0040629c <__aeabi_idiv0>:
  40629c:	4770      	bx	lr
  40629e:	bf00      	nop

004062a0 <sysfont_glyphs>:
	...
  4062c0:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  4062d0:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  4062e0:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  4062f8:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406308:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406318:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406330:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406340:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406350:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  406368:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406384:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406394:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4063a4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4063b4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  4063dc:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406404:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406414:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406438:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406448:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406458:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  406468:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406480:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406490:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4064a0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4064b8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4064c8:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  4064d8:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  4064f0:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406500:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406510:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406528:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406538:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406548:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406560:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406570:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406580:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  40659c:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4065ac:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4065bc:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  4065d8:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  4065f0:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406608:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406618:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406628:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406640:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406650:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406660:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  406678:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  406688:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  406698:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4066b0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  4066c0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4066d0:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  4066e8:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  4066f8:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406708:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406720:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406730:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406740:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406758:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  406768:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  406778:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406790:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4067a0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4067b0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  4067c8:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4067d8:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  4067e8:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406800:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406810:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406820:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406838:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406848:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406858:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406870:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406880:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406890:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4068a8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4068b8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  4068c8:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  4068e0:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  4068f0:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406900:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406918:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406928:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406938:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406950:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406960:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406970:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406998:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  4069a8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4069c4:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  4069dc:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  4069ec:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  4069fc:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406a14:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406a24:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406a34:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406a4c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406a5c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406a6c:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406a7c:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406a8c:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406a9c:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406aac:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406abc:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406acc:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406adc:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406af4:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406b04:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b14:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406b30:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406b4c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406b68:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406b78:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406b88:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406ba0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406bbc:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406bd8:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406bf4:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406c10:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406c2c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406c48:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406c64:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406c74:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406c84:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406c94:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406ca4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406cb4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406cc4:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406cd4:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406ce4:	0000 0000 6425 0000 6556 3a6c 0020 0000     ....%d..Vel: ...
  406cf4:	6944 7473 203a 0000 6954 656d 203a 0000     Dist: ..Time: ..

00406d04 <_global_impure_ptr>:
  406d04:	0030 2040 4e49 0046 6e69 0066 414e 004e     0.@ INF.inf.NAN.
  406d14:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406d24:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406d34:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406d44:	296c 0000 0030 0000                         l)..0...

00406d4c <blanks.7223>:
  406d4c:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406d5c <zeroes.7224>:
  406d5c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406d6c:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406d7c:	0000 0000                                   ....

00406d80 <__mprec_bigtens>:
  406d80:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406d90:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406da0:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406da8 <__mprec_tens>:
  406da8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406db8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406dc8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406dd8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406de8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406df8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406e08:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406e18:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406e28:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406e38:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406e48:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406e58:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406e68:	9db4 79d9 7843 44ea                         ...yCx.D

00406e70 <p05.6055>:
  406e70:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406e80:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406e8c <_ctype_>:
  406e8c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406e9c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406eac:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406ebc:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406ecc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406edc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406eec:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406efc:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406f0c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406f90 <_init>:
  406f90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406f92:	bf00      	nop
  406f94:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406f96:	bc08      	pop	{r3}
  406f98:	469e      	mov	lr, r3
  406f9a:	4770      	bx	lr

00406f9c <__init_array_start>:
  406f9c:	004036cd 	.word	0x004036cd

00406fa0 <__frame_dummy_init_array_entry>:
  406fa0:	00400165                                e.@.

00406fa4 <_fini>:
  406fa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406fa6:	bf00      	nop
  406fa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406faa:	bc08      	pop	{r3}
  406fac:	469e      	mov	lr, r3
  406fae:	4770      	bx	lr

00406fb0 <__fini_array_start>:
  406fb0:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 62a0 0040 0e0a 7d20               .....b@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <raio>:
20400020:	0000 0000 0000 3ff0                         .......?

20400028 <_impure_ptr>:
20400028:	0030 2040 0000 0000                         0.@ ....

20400030 <impure_data>:
20400030:	0000 0000 031c 2040 0384 2040 03ec 2040     ......@ ..@ ..@ 
	...
204000d8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400458 <__atexit_recursive_mutex>:
20400458:	0cc8 2040                                   ..@ 

2040045c <__malloc_av_>:
	...
20400464:	045c 2040 045c 2040 0464 2040 0464 2040     \.@ \.@ d.@ d.@ 
20400474:	046c 2040 046c 2040 0474 2040 0474 2040     l.@ l.@ t.@ t.@ 
20400484:	047c 2040 047c 2040 0484 2040 0484 2040     |.@ |.@ ..@ ..@ 
20400494:	048c 2040 048c 2040 0494 2040 0494 2040     ..@ ..@ ..@ ..@ 
204004a4:	049c 2040 049c 2040 04a4 2040 04a4 2040     ..@ ..@ ..@ ..@ 
204004b4:	04ac 2040 04ac 2040 04b4 2040 04b4 2040     ..@ ..@ ..@ ..@ 
204004c4:	04bc 2040 04bc 2040 04c4 2040 04c4 2040     ..@ ..@ ..@ ..@ 
204004d4:	04cc 2040 04cc 2040 04d4 2040 04d4 2040     ..@ ..@ ..@ ..@ 
204004e4:	04dc 2040 04dc 2040 04e4 2040 04e4 2040     ..@ ..@ ..@ ..@ 
204004f4:	04ec 2040 04ec 2040 04f4 2040 04f4 2040     ..@ ..@ ..@ ..@ 
20400504:	04fc 2040 04fc 2040 0504 2040 0504 2040     ..@ ..@ ..@ ..@ 
20400514:	050c 2040 050c 2040 0514 2040 0514 2040     ..@ ..@ ..@ ..@ 
20400524:	051c 2040 051c 2040 0524 2040 0524 2040     ..@ ..@ $.@ $.@ 
20400534:	052c 2040 052c 2040 0534 2040 0534 2040     ,.@ ,.@ 4.@ 4.@ 
20400544:	053c 2040 053c 2040 0544 2040 0544 2040     <.@ <.@ D.@ D.@ 
20400554:	054c 2040 054c 2040 0554 2040 0554 2040     L.@ L.@ T.@ T.@ 
20400564:	055c 2040 055c 2040 0564 2040 0564 2040     \.@ \.@ d.@ d.@ 
20400574:	056c 2040 056c 2040 0574 2040 0574 2040     l.@ l.@ t.@ t.@ 
20400584:	057c 2040 057c 2040 0584 2040 0584 2040     |.@ |.@ ..@ ..@ 
20400594:	058c 2040 058c 2040 0594 2040 0594 2040     ..@ ..@ ..@ ..@ 
204005a4:	059c 2040 059c 2040 05a4 2040 05a4 2040     ..@ ..@ ..@ ..@ 
204005b4:	05ac 2040 05ac 2040 05b4 2040 05b4 2040     ..@ ..@ ..@ ..@ 
204005c4:	05bc 2040 05bc 2040 05c4 2040 05c4 2040     ..@ ..@ ..@ ..@ 
204005d4:	05cc 2040 05cc 2040 05d4 2040 05d4 2040     ..@ ..@ ..@ ..@ 
204005e4:	05dc 2040 05dc 2040 05e4 2040 05e4 2040     ..@ ..@ ..@ ..@ 
204005f4:	05ec 2040 05ec 2040 05f4 2040 05f4 2040     ..@ ..@ ..@ ..@ 
20400604:	05fc 2040 05fc 2040 0604 2040 0604 2040     ..@ ..@ ..@ ..@ 
20400614:	060c 2040 060c 2040 0614 2040 0614 2040     ..@ ..@ ..@ ..@ 
20400624:	061c 2040 061c 2040 0624 2040 0624 2040     ..@ ..@ $.@ $.@ 
20400634:	062c 2040 062c 2040 0634 2040 0634 2040     ,.@ ,.@ 4.@ 4.@ 
20400644:	063c 2040 063c 2040 0644 2040 0644 2040     <.@ <.@ D.@ D.@ 
20400654:	064c 2040 064c 2040 0654 2040 0654 2040     L.@ L.@ T.@ T.@ 
20400664:	065c 2040 065c 2040 0664 2040 0664 2040     \.@ \.@ d.@ d.@ 
20400674:	066c 2040 066c 2040 0674 2040 0674 2040     l.@ l.@ t.@ t.@ 
20400684:	067c 2040 067c 2040 0684 2040 0684 2040     |.@ |.@ ..@ ..@ 
20400694:	068c 2040 068c 2040 0694 2040 0694 2040     ..@ ..@ ..@ ..@ 
204006a4:	069c 2040 069c 2040 06a4 2040 06a4 2040     ..@ ..@ ..@ ..@ 
204006b4:	06ac 2040 06ac 2040 06b4 2040 06b4 2040     ..@ ..@ ..@ ..@ 
204006c4:	06bc 2040 06bc 2040 06c4 2040 06c4 2040     ..@ ..@ ..@ ..@ 
204006d4:	06cc 2040 06cc 2040 06d4 2040 06d4 2040     ..@ ..@ ..@ ..@ 
204006e4:	06dc 2040 06dc 2040 06e4 2040 06e4 2040     ..@ ..@ ..@ ..@ 
204006f4:	06ec 2040 06ec 2040 06f4 2040 06f4 2040     ..@ ..@ ..@ ..@ 
20400704:	06fc 2040 06fc 2040 0704 2040 0704 2040     ..@ ..@ ..@ ..@ 
20400714:	070c 2040 070c 2040 0714 2040 0714 2040     ..@ ..@ ..@ ..@ 
20400724:	071c 2040 071c 2040 0724 2040 0724 2040     ..@ ..@ $.@ $.@ 
20400734:	072c 2040 072c 2040 0734 2040 0734 2040     ,.@ ,.@ 4.@ 4.@ 
20400744:	073c 2040 073c 2040 0744 2040 0744 2040     <.@ <.@ D.@ D.@ 
20400754:	074c 2040 074c 2040 0754 2040 0754 2040     L.@ L.@ T.@ T.@ 
20400764:	075c 2040 075c 2040 0764 2040 0764 2040     \.@ \.@ d.@ d.@ 
20400774:	076c 2040 076c 2040 0774 2040 0774 2040     l.@ l.@ t.@ t.@ 
20400784:	077c 2040 077c 2040 0784 2040 0784 2040     |.@ |.@ ..@ ..@ 
20400794:	078c 2040 078c 2040 0794 2040 0794 2040     ..@ ..@ ..@ ..@ 
204007a4:	079c 2040 079c 2040 07a4 2040 07a4 2040     ..@ ..@ ..@ ..@ 
204007b4:	07ac 2040 07ac 2040 07b4 2040 07b4 2040     ..@ ..@ ..@ ..@ 
204007c4:	07bc 2040 07bc 2040 07c4 2040 07c4 2040     ..@ ..@ ..@ ..@ 
204007d4:	07cc 2040 07cc 2040 07d4 2040 07d4 2040     ..@ ..@ ..@ ..@ 
204007e4:	07dc 2040 07dc 2040 07e4 2040 07e4 2040     ..@ ..@ ..@ ..@ 
204007f4:	07ec 2040 07ec 2040 07f4 2040 07f4 2040     ..@ ..@ ..@ ..@ 
20400804:	07fc 2040 07fc 2040 0804 2040 0804 2040     ..@ ..@ ..@ ..@ 
20400814:	080c 2040 080c 2040 0814 2040 0814 2040     ..@ ..@ ..@ ..@ 
20400824:	081c 2040 081c 2040 0824 2040 0824 2040     ..@ ..@ $.@ $.@ 
20400834:	082c 2040 082c 2040 0834 2040 0834 2040     ,.@ ,.@ 4.@ 4.@ 
20400844:	083c 2040 083c 2040 0844 2040 0844 2040     <.@ <.@ D.@ D.@ 
20400854:	084c 2040 084c 2040 0854 2040 0854 2040     L.@ L.@ T.@ T.@ 

20400864 <__malloc_sbrk_base>:
20400864:	ffff ffff                                   ....

20400868 <__malloc_trim_threshold>:
20400868:	0000 0002                                   ....

2040086c <__global_locale>:
2040086c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040088c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ac:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008cc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ec:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040090c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040092c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040094c:	5de9 0040 59a9 0040 0000 0000 6e8c 0040     .]@..Y@......n@.
2040095c:	6e88 0040 6d28 0040 6d28 0040 6d28 0040     .n@.(m@.(m@.(m@.
2040096c:	6d28 0040 6d28 0040 6d28 0040 6d28 0040     (m@.(m@.(m@.(m@.
2040097c:	6d28 0040 6d28 0040 ffff ffff ffff ffff     (m@.(m@.........
2040098c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009b4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
