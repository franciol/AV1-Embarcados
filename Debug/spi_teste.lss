
spi_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007204  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407204  00407204  00017204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d8  20400000  0040720c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          0000031c  204009d8  00407be4  000209d8  2**2
                  ALLOC
  4 .stack        00002004  20400cf4  00407f00  000209d8  2**0
                  ALLOC
  5 .heap         00000200  20402cf8  00409f04  000209d8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00020a06  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019df0  00000000  00000000  00020a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003be0  00000000  00000000  0003a84f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00006151  00000000  00000000  0003e42f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000980  00000000  00000000  00044580  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009f0  00000000  00000000  00044f00  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00021e9e  00000000  00000000  000458f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fb84  00000000  00000000  0006778e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090565  00000000  00000000  00077312  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000020d0  00000000  00000000  00107878  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f8 2c 40 20 e5 13 40 00 e1 13 40 00 e1 13 40 00     .,@ ..@...@...@.
  400010:	e1 13 40 00 e1 13 40 00 e1 13 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	e1 13 40 00 e1 13 40 00 00 00 00 00 e1 13 40 00     ..@...@.......@.
  40003c:	e1 13 40 00 e1 13 40 00 e1 13 40 00 f1 17 40 00     ..@...@...@...@.
  40004c:	e9 16 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  40005c:	e1 13 40 00 e1 13 40 00 00 00 00 00 f1 0e 40 00     ..@...@.......@.
  40006c:	05 0f 40 00 19 0f 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  40007c:	e1 13 40 00 2d 0f 40 00 41 0f 40 00 e1 13 40 00     ..@.-.@.A.@...@.
  40008c:	e1 13 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  40009c:	e1 13 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  4000ac:	e1 13 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  4000bc:	e1 13 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  4000cc:	e1 13 40 00 00 00 00 00 e1 13 40 00 00 00 00 00     ..@.......@.....
  4000dc:	e1 13 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  4000ec:	e1 13 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  4000fc:	e1 13 40 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ..@...@...@...@.
  40010c:	e1 13 40 00 e1 13 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 e1 13 40 00 e1 13 40 00 e1 13 40 00     ......@...@...@.
  40012c:	e1 13 40 00 e1 13 40 00 00 00 00 00 e1 13 40 00     ..@...@.......@.
  40013c:	e1 13 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d8 	.word	0x204009d8
  40015c:	00000000 	.word	0x00000000
  400160:	0040720c 	.word	0x0040720c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040720c 	.word	0x0040720c
  4001a0:	204009dc 	.word	0x204009dc
  4001a4:	0040720c 	.word	0x0040720c
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
  4001ac:	b921      	cbnz	r1, 4001b8 <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
  4001ae:	6843      	ldr	r3, [r0, #4]
  4001b0:	f023 0301 	bic.w	r3, r3, #1
  4001b4:	6043      	str	r3, [r0, #4]
  4001b6:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
  4001b8:	6843      	ldr	r3, [r0, #4]
  4001ba:	f043 0301 	orr.w	r3, r3, #1
  4001be:	6043      	str	r3, [r0, #4]
  4001c0:	4770      	bx	lr

004001c2 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
  4001c2:	6201      	str	r1, [r0, #32]
  4001c4:	4770      	bx	lr
	...

004001c8 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
  4001c8:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  4001ca:	6844      	ldr	r4, [r0, #4]
		if (ul_hour > 12) {
  4001cc:	f014 0f01 	tst.w	r4, #1
  4001d0:	d005      	beq.n	4001de <rtc_set_time+0x16>
  4001d2:	290c      	cmp	r1, #12
  4001d4:	d903      	bls.n	4001de <rtc_set_time+0x16>
			ul_hour -= 12;
  4001d6:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
  4001d8:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
  4001dc:	e000      	b.n	4001e0 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
  4001de:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  4001e0:	4c1c      	ldr	r4, [pc, #112]	; (400254 <rtc_set_time+0x8c>)
  4001e2:	fba4 5603 	umull	r5, r6, r4, r3
  4001e6:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  4001e8:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  4001ec:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
  4001f0:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  4001f4:	fba4 6502 	umull	r6, r5, r4, r2
  4001f8:	08ed      	lsrs	r5, r5, #3
  4001fa:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  4001fe:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  400202:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
  400206:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  40020a:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40020c:	fba4 4201 	umull	r4, r2, r4, r1
  400210:	08d2      	lsrs	r2, r2, #3
  400212:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  400216:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  40021a:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  40021e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  400222:	6983      	ldr	r3, [r0, #24]
  400224:	f013 0f04 	tst.w	r3, #4
  400228:	d0fb      	beq.n	400222 <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
  40022a:	6803      	ldr	r3, [r0, #0]
  40022c:	f043 0301 	orr.w	r3, r3, #1
  400230:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  400232:	6983      	ldr	r3, [r0, #24]
  400234:	f013 0f01 	tst.w	r3, #1
  400238:	d0fb      	beq.n	400232 <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  40023a:	2301      	movs	r3, #1
  40023c:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
  40023e:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
  400240:	6803      	ldr	r3, [r0, #0]
  400242:	f023 0301 	bic.w	r3, r3, #1
  400246:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
  400248:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  40024a:	f000 0001 	and.w	r0, r0, #1
  40024e:	bcf0      	pop	{r4, r5, r6, r7}
  400250:	4770      	bx	lr
  400252:	bf00      	nop
  400254:	cccccccd 	.word	0xcccccccd

00400258 <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
  400258:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40025a:	4d2a      	ldr	r5, [pc, #168]	; (400304 <rtc_set_date+0xac>)
  40025c:	fba5 4603 	umull	r4, r6, r5, r3
  400260:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
  400262:	9c03      	ldr	r4, [sp, #12]
  400264:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400266:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  40026a:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  40026e:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400272:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400276:	fba5 6402 	umull	r6, r4, r5, r2
  40027a:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  40027c:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  400280:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  400284:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400288:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
  40028c:	4b1e      	ldr	r3, [pc, #120]	; (400308 <rtc_set_date+0xb0>)
  40028e:	fba3 4301 	umull	r4, r3, r3, r1
  400292:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400294:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
  400298:	4b1c      	ldr	r3, [pc, #112]	; (40030c <rtc_set_date+0xb4>)
  40029a:	fba3 4301 	umull	r4, r3, r3, r1
  40029e:	095b      	lsrs	r3, r3, #5
  4002a0:	fba5 6403 	umull	r6, r4, r5, r3
  4002a4:	08e4      	lsrs	r4, r4, #3
  4002a6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4002aa:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002ae:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
  4002b0:	fba5 4301 	umull	r4, r3, r5, r1
  4002b4:	08db      	lsrs	r3, r3, #3
  4002b6:	eb03 0483 	add.w	r4, r3, r3, lsl #2
  4002ba:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002be:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
  4002c2:	fba5 1503 	umull	r1, r5, r5, r3
  4002c6:	08ed      	lsrs	r5, r5, #3
  4002c8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  4002cc:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002d0:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  4002d4:	6983      	ldr	r3, [r0, #24]
  4002d6:	f013 0f04 	tst.w	r3, #4
  4002da:	d0fb      	beq.n	4002d4 <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
  4002dc:	6803      	ldr	r3, [r0, #0]
  4002de:	f043 0302 	orr.w	r3, r3, #2
  4002e2:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  4002e4:	6983      	ldr	r3, [r0, #24]
  4002e6:	f013 0f01 	tst.w	r3, #1
  4002ea:	d0fb      	beq.n	4002e4 <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  4002ec:	2301      	movs	r3, #1
  4002ee:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
  4002f0:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
  4002f2:	6803      	ldr	r3, [r0, #0]
  4002f4:	f023 0302 	bic.w	r3, r3, #2
  4002f8:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
  4002fa:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4002fc:	f000 0002 	and.w	r0, r0, #2
  400300:	bc70      	pop	{r4, r5, r6}
  400302:	4770      	bx	lr
  400304:	cccccccd 	.word	0xcccccccd
  400308:	10624dd3 	.word	0x10624dd3
  40030c:	51eb851f 	.word	0x51eb851f

00400310 <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  400310:	6980      	ldr	r0, [r0, #24]
}
  400312:	4770      	bx	lr

00400314 <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  400314:	61c1      	str	r1, [r0, #28]
  400316:	4770      	bx	lr

00400318 <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  400318:	4b03      	ldr	r3, [pc, #12]	; (400328 <rtt_init+0x10>)
  40031a:	681b      	ldr	r3, [r3, #0]
  40031c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  400320:	4319      	orrs	r1, r3
  400322:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  400324:	2000      	movs	r0, #0
  400326:	4770      	bx	lr
  400328:	204009f4 	.word	0x204009f4

0040032c <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  40032c:	b941      	cbnz	r1, 400340 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  40032e:	4a09      	ldr	r2, [pc, #36]	; (400354 <rtt_sel_source+0x28>)
  400330:	6813      	ldr	r3, [r2, #0]
  400332:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  400336:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  400338:	6802      	ldr	r2, [r0, #0]
  40033a:	4313      	orrs	r3, r2
  40033c:	6003      	str	r3, [r0, #0]
  40033e:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  400340:	4a04      	ldr	r2, [pc, #16]	; (400354 <rtt_sel_source+0x28>)
  400342:	6813      	ldr	r3, [r2, #0]
  400344:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  400348:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  40034a:	6802      	ldr	r2, [r0, #0]
  40034c:	4313      	orrs	r3, r2
  40034e:	6003      	str	r3, [r0, #0]
  400350:	4770      	bx	lr
  400352:	bf00      	nop
  400354:	204009f4 	.word	0x204009f4

00400358 <rtt_enable_interrupt>:
 */
void rtt_enable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp;

	temp = p_rtt->RTT_MR;
  400358:	6802      	ldr	r2, [r0, #0]
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  40035a:	4b03      	ldr	r3, [pc, #12]	; (400368 <rtt_enable_interrupt+0x10>)
  40035c:	681b      	ldr	r3, [r3, #0]
  40035e:	4319      	orrs	r1, r3
  400360:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  400362:	6001      	str	r1, [r0, #0]
  400364:	4770      	bx	lr
  400366:	bf00      	nop
  400368:	204009f4 	.word	0x204009f4

0040036c <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  40036c:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  40036e:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  400372:	4b02      	ldr	r3, [pc, #8]	; (40037c <rtt_disable_interrupt+0x10>)
  400374:	681b      	ldr	r3, [r3, #0]
  400376:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  400378:	6001      	str	r1, [r0, #0]
  40037a:	4770      	bx	lr
  40037c:	204009f4 	.word	0x204009f4

00400380 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  400380:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  400382:	6883      	ldr	r3, [r0, #8]
  400384:	429a      	cmp	r2, r3
  400386:	d003      	beq.n	400390 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  400388:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  40038a:	6883      	ldr	r3, [r0, #8]
  40038c:	4293      	cmp	r3, r2
  40038e:	d1fb      	bne.n	400388 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  400390:	4618      	mov	r0, r3
  400392:	4770      	bx	lr

00400394 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  400394:	68c0      	ldr	r0, [r0, #12]
}
  400396:	4770      	bx	lr

00400398 <rtt_write_alarm_time>:
 * \param ul_alarm_time Alarm time,Alarm time = ALMV + 1.
 *
 * \retval 0 Configuration is done.
 */
uint32_t rtt_write_alarm_time(Rtt *p_rtt, uint32_t ul_alarm_time)
{
  400398:	b570      	push	{r4, r5, r6, lr}
  40039a:	4606      	mov	r6, r0
  40039c:	460d      	mov	r5, r1
	uint32_t flag;

	flag = p_rtt->RTT_MR & RTT_MR_ALMIEN;
  40039e:	6804      	ldr	r4, [r0, #0]
  4003a0:	f404 3480 	and.w	r4, r4, #65536	; 0x10000

	rtt_disable_interrupt(RTT, RTT_MR_ALMIEN);
  4003a4:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  4003a8:	4809      	ldr	r0, [pc, #36]	; (4003d0 <rtt_write_alarm_time+0x38>)
  4003aa:	4b0a      	ldr	r3, [pc, #40]	; (4003d4 <rtt_write_alarm_time+0x3c>)
  4003ac:	4798      	blx	r3

	/**
	 * Alarm time = ALMV + 1,If the incoming parameter 
	 * is 0, the ALMV is set to 0xFFFFFFFF.
	*/
	if(ul_alarm_time == 0) {
  4003ae:	b92d      	cbnz	r5, 4003bc <rtt_write_alarm_time+0x24>
		p_rtt->RTT_AR = 0xFFFFFFFF;
  4003b0:	f04f 33ff 	mov.w	r3, #4294967295
  4003b4:	6073      	str	r3, [r6, #4]
	}
	else {
		p_rtt->RTT_AR = ul_alarm_time - 1;
	}

	if (flag) {
  4003b6:	b924      	cbnz	r4, 4003c2 <rtt_write_alarm_time+0x2a>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
	}

	return 0;
}
  4003b8:	2000      	movs	r0, #0
  4003ba:	bd70      	pop	{r4, r5, r6, pc}
		p_rtt->RTT_AR = ul_alarm_time - 1;
  4003bc:	3d01      	subs	r5, #1
  4003be:	6075      	str	r5, [r6, #4]
  4003c0:	e7f9      	b.n	4003b6 <rtt_write_alarm_time+0x1e>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  4003c2:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  4003c6:	4802      	ldr	r0, [pc, #8]	; (4003d0 <rtt_write_alarm_time+0x38>)
  4003c8:	4b03      	ldr	r3, [pc, #12]	; (4003d8 <rtt_write_alarm_time+0x40>)
  4003ca:	4798      	blx	r3
  4003cc:	e7f4      	b.n	4003b8 <rtt_write_alarm_time+0x20>
  4003ce:	bf00      	nop
  4003d0:	400e1830 	.word	0x400e1830
  4003d4:	0040036d 	.word	0x0040036d
  4003d8:	00400359 	.word	0x00400359

004003dc <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4003dc:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4003de:	4b07      	ldr	r3, [pc, #28]	; (4003fc <spi_enable_clock+0x20>)
  4003e0:	4298      	cmp	r0, r3
  4003e2:	d003      	beq.n	4003ec <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4003e4:	4b06      	ldr	r3, [pc, #24]	; (400400 <spi_enable_clock+0x24>)
  4003e6:	4298      	cmp	r0, r3
  4003e8:	d004      	beq.n	4003f4 <spi_enable_clock+0x18>
  4003ea:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4003ec:	2015      	movs	r0, #21
  4003ee:	4b05      	ldr	r3, [pc, #20]	; (400404 <spi_enable_clock+0x28>)
  4003f0:	4798      	blx	r3
  4003f2:	bd08      	pop	{r3, pc}
  4003f4:	202a      	movs	r0, #42	; 0x2a
  4003f6:	4b03      	ldr	r3, [pc, #12]	; (400404 <spi_enable_clock+0x28>)
  4003f8:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4003fa:	e7f6      	b.n	4003ea <spi_enable_clock+0xe>
  4003fc:	40008000 	.word	0x40008000
  400400:	40058000 	.word	0x40058000
  400404:	00401075 	.word	0x00401075

00400408 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400408:	6843      	ldr	r3, [r0, #4]
  40040a:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40040e:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400410:	6843      	ldr	r3, [r0, #4]
  400412:	0409      	lsls	r1, r1, #16
  400414:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400418:	4319      	orrs	r1, r3
  40041a:	6041      	str	r1, [r0, #4]
  40041c:	4770      	bx	lr

0040041e <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40041e:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  400420:	f643 2499 	movw	r4, #15001	; 0x3a99
  400424:	6905      	ldr	r5, [r0, #16]
  400426:	f015 0f02 	tst.w	r5, #2
  40042a:	d103      	bne.n	400434 <spi_write+0x16>
		if (!timeout--) {
  40042c:	3c01      	subs	r4, #1
  40042e:	d1f9      	bne.n	400424 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400430:	2001      	movs	r0, #1
  400432:	e00c      	b.n	40044e <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400434:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400436:	f014 0f02 	tst.w	r4, #2
  40043a:	d006      	beq.n	40044a <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40043c:	0412      	lsls	r2, r2, #16
  40043e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400442:	4311      	orrs	r1, r2
		if (uc_last) {
  400444:	b10b      	cbz	r3, 40044a <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400446:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40044a:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40044c:	2000      	movs	r0, #0
}
  40044e:	bc30      	pop	{r4, r5}
  400450:	4770      	bx	lr

00400452 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400452:	b932      	cbnz	r2, 400462 <spi_set_clock_polarity+0x10>
  400454:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400458:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40045a:	f023 0301 	bic.w	r3, r3, #1
  40045e:	6303      	str	r3, [r0, #48]	; 0x30
  400460:	4770      	bx	lr
  400462:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400466:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400468:	f043 0301 	orr.w	r3, r3, #1
  40046c:	6303      	str	r3, [r0, #48]	; 0x30
  40046e:	4770      	bx	lr

00400470 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400470:	b932      	cbnz	r2, 400480 <spi_set_clock_phase+0x10>
  400472:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400476:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400478:	f023 0302 	bic.w	r3, r3, #2
  40047c:	6303      	str	r3, [r0, #48]	; 0x30
  40047e:	4770      	bx	lr
  400480:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400484:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400486:	f043 0302 	orr.w	r3, r3, #2
  40048a:	6303      	str	r3, [r0, #48]	; 0x30
  40048c:	4770      	bx	lr

0040048e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40048e:	2a04      	cmp	r2, #4
  400490:	d003      	beq.n	40049a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400492:	b16a      	cbz	r2, 4004b0 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400494:	2a08      	cmp	r2, #8
  400496:	d016      	beq.n	4004c6 <spi_configure_cs_behavior+0x38>
  400498:	4770      	bx	lr
  40049a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40049e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004a0:	f023 0308 	bic.w	r3, r3, #8
  4004a4:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  4004a6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004a8:	f043 0304 	orr.w	r3, r3, #4
  4004ac:	6303      	str	r3, [r0, #48]	; 0x30
  4004ae:	4770      	bx	lr
  4004b0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4004b4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004b6:	f023 0308 	bic.w	r3, r3, #8
  4004ba:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  4004bc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004be:	f023 0304 	bic.w	r3, r3, #4
  4004c2:	6303      	str	r3, [r0, #48]	; 0x30
  4004c4:	4770      	bx	lr
  4004c6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  4004ca:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004cc:	f043 0308 	orr.w	r3, r3, #8
  4004d0:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4004d2:	e7e1      	b.n	400498 <spi_configure_cs_behavior+0xa>

004004d4 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4004d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4004d8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4004da:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4004de:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4004e0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4004e2:	431a      	orrs	r2, r3
  4004e4:	630a      	str	r2, [r1, #48]	; 0x30
  4004e6:	4770      	bx	lr

004004e8 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4004e8:	1e43      	subs	r3, r0, #1
  4004ea:	4419      	add	r1, r3
  4004ec:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4004f0:	1e43      	subs	r3, r0, #1
  4004f2:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4004f4:	bf94      	ite	ls
  4004f6:	b200      	sxthls	r0, r0
		return -1;
  4004f8:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4004fc:	4770      	bx	lr

004004fe <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4004fe:	b17a      	cbz	r2, 400520 <spi_set_baudrate_div+0x22>
{
  400500:	b410      	push	{r4}
  400502:	4614      	mov	r4, r2
  400504:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400508:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40050a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40050e:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400510:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  400512:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400516:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400518:	2000      	movs	r0, #0
}
  40051a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40051e:	4770      	bx	lr
        return -1;
  400520:	f04f 30ff 	mov.w	r0, #4294967295
  400524:	4770      	bx	lr
	...

00400528 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  400528:	4b01      	ldr	r3, [pc, #4]	; (400530 <gfx_mono_set_framebuffer+0x8>)
  40052a:	6018      	str	r0, [r3, #0]
  40052c:	4770      	bx	lr
  40052e:	bf00      	nop
  400530:	204009f8 	.word	0x204009f8

00400534 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400534:	4b02      	ldr	r3, [pc, #8]	; (400540 <gfx_mono_framebuffer_put_byte+0xc>)
  400536:	681b      	ldr	r3, [r3, #0]
  400538:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  40053c:	5442      	strb	r2, [r0, r1]
  40053e:	4770      	bx	lr
  400540:	204009f8 	.word	0x204009f8

00400544 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400544:	4b02      	ldr	r3, [pc, #8]	; (400550 <gfx_mono_framebuffer_get_byte+0xc>)
  400546:	681b      	ldr	r3, [r3, #0]
  400548:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  40054c:	5c40      	ldrb	r0, [r0, r1]
  40054e:	4770      	bx	lr
  400550:	204009f8 	.word	0x204009f8

00400554 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400554:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400558:	1884      	adds	r4, r0, r2
  40055a:	2c80      	cmp	r4, #128	; 0x80
  40055c:	dd02      	ble.n	400564 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40055e:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400562:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400564:	b322      	cbz	r2, 4005b0 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400566:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400568:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  40056c:	2601      	movs	r6, #1
  40056e:	fa06 f101 	lsl.w	r1, r6, r1
  400572:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400574:	2b01      	cmp	r3, #1
  400576:	d01d      	beq.n	4005b4 <gfx_mono_generic_draw_horizontal_line+0x60>
  400578:	2b00      	cmp	r3, #0
  40057a:	d035      	beq.n	4005e8 <gfx_mono_generic_draw_horizontal_line+0x94>
  40057c:	2b02      	cmp	r3, #2
  40057e:	d117      	bne.n	4005b0 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400580:	3801      	subs	r0, #1
  400582:	b2c7      	uxtb	r7, r0
  400584:	19d4      	adds	r4, r2, r7
  400586:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400588:	f8df a090 	ldr.w	sl, [pc, #144]	; 40061c <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  40058c:	f04f 0900 	mov.w	r9, #0
  400590:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400620 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400594:	4621      	mov	r1, r4
  400596:	4628      	mov	r0, r5
  400598:	47d0      	blx	sl
			temp ^= pixelmask;
  40059a:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40059e:	464b      	mov	r3, r9
  4005a0:	b2d2      	uxtb	r2, r2
  4005a2:	4621      	mov	r1, r4
  4005a4:	4628      	mov	r0, r5
  4005a6:	47c0      	blx	r8
  4005a8:	3c01      	subs	r4, #1
  4005aa:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4005ac:	42bc      	cmp	r4, r7
  4005ae:	d1f1      	bne.n	400594 <gfx_mono_generic_draw_horizontal_line+0x40>
  4005b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4005b4:	3801      	subs	r0, #1
  4005b6:	b2c7      	uxtb	r7, r0
  4005b8:	19d4      	adds	r4, r2, r7
  4005ba:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4005bc:	f8df a05c 	ldr.w	sl, [pc, #92]	; 40061c <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  4005c0:	f04f 0900 	mov.w	r9, #0
  4005c4:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400620 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4005c8:	4621      	mov	r1, r4
  4005ca:	4628      	mov	r0, r5
  4005cc:	47d0      	blx	sl
			temp |= pixelmask;
  4005ce:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4005d2:	464b      	mov	r3, r9
  4005d4:	b2d2      	uxtb	r2, r2
  4005d6:	4621      	mov	r1, r4
  4005d8:	4628      	mov	r0, r5
  4005da:	47c0      	blx	r8
  4005dc:	3c01      	subs	r4, #1
  4005de:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4005e0:	42bc      	cmp	r4, r7
  4005e2:	d1f1      	bne.n	4005c8 <gfx_mono_generic_draw_horizontal_line+0x74>
  4005e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4005e8:	3801      	subs	r0, #1
  4005ea:	b2c7      	uxtb	r7, r0
  4005ec:	19d4      	adds	r4, r2, r7
  4005ee:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4005f0:	f8df 8028 	ldr.w	r8, [pc, #40]	; 40061c <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4005f4:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4005f6:	f8df 9028 	ldr.w	r9, [pc, #40]	; 400620 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4005fa:	4621      	mov	r1, r4
  4005fc:	4628      	mov	r0, r5
  4005fe:	47c0      	blx	r8
			temp &= ~pixelmask;
  400600:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400604:	2300      	movs	r3, #0
  400606:	b2d2      	uxtb	r2, r2
  400608:	4621      	mov	r1, r4
  40060a:	4628      	mov	r0, r5
  40060c:	47c8      	blx	r9
  40060e:	3c01      	subs	r4, #1
  400610:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400612:	42bc      	cmp	r4, r7
  400614:	d1f1      	bne.n	4005fa <gfx_mono_generic_draw_horizontal_line+0xa6>
  400616:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40061a:	bf00      	nop
  40061c:	00400855 	.word	0x00400855
  400620:	00400751 	.word	0x00400751

00400624 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400624:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400628:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  40062c:	b18b      	cbz	r3, 400652 <gfx_mono_generic_draw_filled_rect+0x2e>
  40062e:	461c      	mov	r4, r3
  400630:	4690      	mov	r8, r2
  400632:	4606      	mov	r6, r0
  400634:	1e4d      	subs	r5, r1, #1
  400636:	b2ed      	uxtb	r5, r5
  400638:	442c      	add	r4, r5
  40063a:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  40063c:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400658 <gfx_mono_generic_draw_filled_rect+0x34>
  400640:	463b      	mov	r3, r7
  400642:	4642      	mov	r2, r8
  400644:	4621      	mov	r1, r4
  400646:	4630      	mov	r0, r6
  400648:	47c8      	blx	r9
  40064a:	3c01      	subs	r4, #1
  40064c:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40064e:	42ac      	cmp	r4, r5
  400650:	d1f6      	bne.n	400640 <gfx_mono_generic_draw_filled_rect+0x1c>
  400652:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400656:	bf00      	nop
  400658:	00400555 	.word	0x00400555

0040065c <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  40065c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400660:	b083      	sub	sp, #12
  400662:	4604      	mov	r4, r0
  400664:	4688      	mov	r8, r1
  400666:	4691      	mov	r9, r2
  400668:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  40066a:	7a5b      	ldrb	r3, [r3, #9]
  40066c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400670:	2100      	movs	r1, #0
  400672:	9100      	str	r1, [sp, #0]
  400674:	4649      	mov	r1, r9
  400676:	4640      	mov	r0, r8
  400678:	4d21      	ldr	r5, [pc, #132]	; (400700 <gfx_mono_draw_char+0xa4>)
  40067a:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  40067c:	f89b 3000 	ldrb.w	r3, [fp]
  400680:	b113      	cbz	r3, 400688 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400682:	b003      	add	sp, #12
  400684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400688:	f89b 2008 	ldrb.w	r2, [fp, #8]
  40068c:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40068e:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400692:	bf18      	it	ne
  400694:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400696:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40069a:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40069e:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  4006a0:	fb17 f70a 	smulbb	r7, r7, sl
  4006a4:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  4006a8:	f8db 3004 	ldr.w	r3, [fp, #4]
  4006ac:	fa13 f787 	uxtah	r7, r3, r7
  4006b0:	e01f      	b.n	4006f2 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  4006b2:	0064      	lsls	r4, r4, #1
  4006b4:	b2e4      	uxtb	r4, r4
  4006b6:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  4006b8:	b2eb      	uxtb	r3, r5
  4006ba:	429e      	cmp	r6, r3
  4006bc:	d910      	bls.n	4006e0 <gfx_mono_draw_char+0x84>
  4006be:	b2eb      	uxtb	r3, r5
  4006c0:	eb08 0003 	add.w	r0, r8, r3
  4006c4:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  4006c6:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  4006ca:	bf08      	it	eq
  4006cc:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  4006d0:	f014 0f80 	tst.w	r4, #128	; 0x80
  4006d4:	d0ed      	beq.n	4006b2 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  4006d6:	2201      	movs	r2, #1
  4006d8:	4649      	mov	r1, r9
  4006da:	4b0a      	ldr	r3, [pc, #40]	; (400704 <gfx_mono_draw_char+0xa8>)
  4006dc:	4798      	blx	r3
  4006de:	e7e8      	b.n	4006b2 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  4006e0:	f109 0901 	add.w	r9, r9, #1
  4006e4:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  4006e8:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  4006ec:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  4006f0:	d0c7      	beq.n	400682 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  4006f2:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  4006f6:	2e00      	cmp	r6, #0
  4006f8:	d0f2      	beq.n	4006e0 <gfx_mono_draw_char+0x84>
  4006fa:	2500      	movs	r5, #0
  4006fc:	462c      	mov	r4, r5
  4006fe:	e7de      	b.n	4006be <gfx_mono_draw_char+0x62>
  400700:	00400625 	.word	0x00400625
  400704:	004007f1 	.word	0x004007f1

00400708 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400708:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40070c:	4604      	mov	r4, r0
  40070e:	4690      	mov	r8, r2
  400710:	461d      	mov	r5, r3
  400712:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  400714:	4f0d      	ldr	r7, [pc, #52]	; (40074c <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  400716:	460e      	mov	r6, r1
  400718:	e008      	b.n	40072c <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  40071a:	7a6a      	ldrb	r2, [r5, #9]
  40071c:	3201      	adds	r2, #1
  40071e:	4442      	add	r2, r8
  400720:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  400724:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  400726:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40072a:	b16b      	cbz	r3, 400748 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  40072c:	7820      	ldrb	r0, [r4, #0]
  40072e:	280a      	cmp	r0, #10
  400730:	d0f3      	beq.n	40071a <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  400732:	280d      	cmp	r0, #13
  400734:	d0f7      	beq.n	400726 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  400736:	462b      	mov	r3, r5
  400738:	4642      	mov	r2, r8
  40073a:	4649      	mov	r1, r9
  40073c:	47b8      	blx	r7
			x += font->width;
  40073e:	7a2b      	ldrb	r3, [r5, #8]
  400740:	4499      	add	r9, r3
  400742:	fa5f f989 	uxtb.w	r9, r9
  400746:	e7ee      	b.n	400726 <gfx_mono_draw_string+0x1e>
}
  400748:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40074c:	0040065d 	.word	0x0040065d

00400750 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  400750:	b570      	push	{r4, r5, r6, lr}
  400752:	4604      	mov	r4, r0
  400754:	460d      	mov	r5, r1
  400756:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  400758:	b91b      	cbnz	r3, 400762 <gfx_mono_ssd1306_put_byte+0x12>
  40075a:	4b0d      	ldr	r3, [pc, #52]	; (400790 <gfx_mono_ssd1306_put_byte+0x40>)
  40075c:	4798      	blx	r3
  40075e:	42b0      	cmp	r0, r6
  400760:	d015      	beq.n	40078e <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  400762:	4632      	mov	r2, r6
  400764:	4629      	mov	r1, r5
  400766:	4620      	mov	r0, r4
  400768:	4b0a      	ldr	r3, [pc, #40]	; (400794 <gfx_mono_ssd1306_put_byte+0x44>)
  40076a:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  40076c:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400770:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400774:	4c08      	ldr	r4, [pc, #32]	; (400798 <gfx_mono_ssd1306_put_byte+0x48>)
  400776:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400778:	f3c5 1002 	ubfx	r0, r5, #4, #3
  40077c:	f040 0010 	orr.w	r0, r0, #16
  400780:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400782:	f005 000f 	and.w	r0, r5, #15
  400786:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400788:	4630      	mov	r0, r6
  40078a:	4b04      	ldr	r3, [pc, #16]	; (40079c <gfx_mono_ssd1306_put_byte+0x4c>)
  40078c:	4798      	blx	r3
  40078e:	bd70      	pop	{r4, r5, r6, pc}
  400790:	00400545 	.word	0x00400545
  400794:	00400535 	.word	0x00400535
  400798:	00400861 	.word	0x00400861
  40079c:	00400a81 	.word	0x00400a81

004007a0 <gfx_mono_ssd1306_init>:
{
  4007a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  4007a4:	480d      	ldr	r0, [pc, #52]	; (4007dc <gfx_mono_ssd1306_init+0x3c>)
  4007a6:	4b0e      	ldr	r3, [pc, #56]	; (4007e0 <gfx_mono_ssd1306_init+0x40>)
  4007a8:	4798      	blx	r3
	ssd1306_init();
  4007aa:	4b0e      	ldr	r3, [pc, #56]	; (4007e4 <gfx_mono_ssd1306_init+0x44>)
  4007ac:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  4007ae:	2040      	movs	r0, #64	; 0x40
  4007b0:	4b0d      	ldr	r3, [pc, #52]	; (4007e8 <gfx_mono_ssd1306_init+0x48>)
  4007b2:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4007b4:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4007b6:	f04f 0801 	mov.w	r8, #1
  4007ba:	462f      	mov	r7, r5
  4007bc:	4e0b      	ldr	r6, [pc, #44]	; (4007ec <gfx_mono_ssd1306_init+0x4c>)
{
  4007be:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4007c0:	4643      	mov	r3, r8
  4007c2:	463a      	mov	r2, r7
  4007c4:	b2e1      	uxtb	r1, r4
  4007c6:	4628      	mov	r0, r5
  4007c8:	47b0      	blx	r6
  4007ca:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  4007cc:	2c80      	cmp	r4, #128	; 0x80
  4007ce:	d1f7      	bne.n	4007c0 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4007d0:	3501      	adds	r5, #1
  4007d2:	b2ed      	uxtb	r5, r5
  4007d4:	2d04      	cmp	r5, #4
  4007d6:	d1f2      	bne.n	4007be <gfx_mono_ssd1306_init+0x1e>
  4007d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4007dc:	204009fc 	.word	0x204009fc
  4007e0:	00400529 	.word	0x00400529
  4007e4:	004008a1 	.word	0x004008a1
  4007e8:	00400861 	.word	0x00400861
  4007ec:	00400751 	.word	0x00400751

004007f0 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  4007f0:	09c3      	lsrs	r3, r0, #7
  4007f2:	d12a      	bne.n	40084a <gfx_mono_ssd1306_draw_pixel+0x5a>
  4007f4:	291f      	cmp	r1, #31
  4007f6:	d828      	bhi.n	40084a <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  4007f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4007fc:	4614      	mov	r4, r2
  4007fe:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400800:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  400802:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  400806:	2201      	movs	r2, #1
  400808:	fa02 f701 	lsl.w	r7, r2, r1
  40080c:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400810:	4601      	mov	r1, r0
  400812:	4630      	mov	r0, r6
  400814:	4b0d      	ldr	r3, [pc, #52]	; (40084c <gfx_mono_ssd1306_draw_pixel+0x5c>)
  400816:	4798      	blx	r3
  400818:	4602      	mov	r2, r0
	switch (color) {
  40081a:	2c01      	cmp	r4, #1
  40081c:	d009      	beq.n	400832 <gfx_mono_ssd1306_draw_pixel+0x42>
  40081e:	b164      	cbz	r4, 40083a <gfx_mono_ssd1306_draw_pixel+0x4a>
  400820:	2c02      	cmp	r4, #2
  400822:	d00e      	beq.n	400842 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  400824:	2300      	movs	r3, #0
  400826:	4629      	mov	r1, r5
  400828:	4630      	mov	r0, r6
  40082a:	4c09      	ldr	r4, [pc, #36]	; (400850 <gfx_mono_ssd1306_draw_pixel+0x60>)
  40082c:	47a0      	blx	r4
  40082e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  400832:	ea48 0200 	orr.w	r2, r8, r0
  400836:	b2d2      	uxtb	r2, r2
		break;
  400838:	e7f4      	b.n	400824 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  40083a:	ea20 0207 	bic.w	r2, r0, r7
  40083e:	b2d2      	uxtb	r2, r2
		break;
  400840:	e7f0      	b.n	400824 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  400842:	ea88 0200 	eor.w	r2, r8, r0
  400846:	b2d2      	uxtb	r2, r2
		break;
  400848:	e7ec      	b.n	400824 <gfx_mono_ssd1306_draw_pixel+0x34>
  40084a:	4770      	bx	lr
  40084c:	00400545 	.word	0x00400545
  400850:	00400751 	.word	0x00400751

00400854 <gfx_mono_ssd1306_get_byte>:
{
  400854:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400856:	4b01      	ldr	r3, [pc, #4]	; (40085c <gfx_mono_ssd1306_get_byte+0x8>)
  400858:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  40085a:	bd08      	pop	{r3, pc}
  40085c:	00400545 	.word	0x00400545

00400860 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400860:	b538      	push	{r3, r4, r5, lr}
  400862:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400864:	2208      	movs	r2, #8
  400866:	4b09      	ldr	r3, [pc, #36]	; (40088c <ssd1306_write_command+0x2c>)
  400868:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40086a:	4c09      	ldr	r4, [pc, #36]	; (400890 <ssd1306_write_command+0x30>)
  40086c:	2101      	movs	r1, #1
  40086e:	4620      	mov	r0, r4
  400870:	4b08      	ldr	r3, [pc, #32]	; (400894 <ssd1306_write_command+0x34>)
  400872:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400874:	2301      	movs	r3, #1
  400876:	461a      	mov	r2, r3
  400878:	4629      	mov	r1, r5
  40087a:	4620      	mov	r0, r4
  40087c:	4c06      	ldr	r4, [pc, #24]	; (400898 <ssd1306_write_command+0x38>)
  40087e:	47a0      	blx	r4
	delay_us(10);
  400880:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400884:	4b05      	ldr	r3, [pc, #20]	; (40089c <ssd1306_write_command+0x3c>)
  400886:	4798      	blx	r3
  400888:	bd38      	pop	{r3, r4, r5, pc}
  40088a:	bf00      	nop
  40088c:	400e1000 	.word	0x400e1000
  400890:	40008000 	.word	0x40008000
  400894:	00400409 	.word	0x00400409
  400898:	0040041f 	.word	0x0040041f
  40089c:	20400001 	.word	0x20400001

004008a0 <ssd1306_init>:
{
  4008a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4008a4:	4d66      	ldr	r5, [pc, #408]	; (400a40 <ssd1306_init+0x1a0>)
  4008a6:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  4008aa:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4008ac:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4008b0:	4b64      	ldr	r3, [pc, #400]	; (400a44 <ssd1306_init+0x1a4>)
  4008b2:	2708      	movs	r7, #8
  4008b4:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4008b6:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4008ba:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4008bc:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  4008c0:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  4008c2:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4008c4:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4008c8:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  4008ca:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4008ce:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4008d0:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  4008d2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4008d6:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  4008d8:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4008da:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4008de:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4008e0:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4008e2:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4008e6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4008e8:	f022 0208 	bic.w	r2, r2, #8
  4008ec:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4008ee:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4008f0:	f022 0208 	bic.w	r2, r2, #8
  4008f4:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  4008f6:	601f      	str	r7, [r3, #0]
  4008f8:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4008fa:	631f      	str	r7, [r3, #48]	; 0x30
  4008fc:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4008fe:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400a7c <ssd1306_init+0x1dc>
  400902:	2300      	movs	r3, #0
  400904:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400908:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40090c:	4640      	mov	r0, r8
  40090e:	4c4e      	ldr	r4, [pc, #312]	; (400a48 <ssd1306_init+0x1a8>)
  400910:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400912:	2300      	movs	r3, #0
  400914:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400918:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40091c:	4640      	mov	r0, r8
  40091e:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400920:	2300      	movs	r3, #0
  400922:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400926:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40092a:	4640      	mov	r0, r8
  40092c:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40092e:	2300      	movs	r3, #0
  400930:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400934:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400938:	4640      	mov	r0, r8
  40093a:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40093c:	2300      	movs	r3, #0
  40093e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400942:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400946:	4640      	mov	r0, r8
  400948:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40094a:	2300      	movs	r3, #0
  40094c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400950:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400954:	4640      	mov	r0, r8
  400956:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400958:	4c3c      	ldr	r4, [pc, #240]	; (400a4c <ssd1306_init+0x1ac>)
  40095a:	f04f 0902 	mov.w	r9, #2
  40095e:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400962:	f04f 0880 	mov.w	r8, #128	; 0x80
  400966:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  40096a:	6863      	ldr	r3, [r4, #4]
  40096c:	f043 0301 	orr.w	r3, r3, #1
  400970:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400972:	463a      	mov	r2, r7
  400974:	2101      	movs	r1, #1
  400976:	4620      	mov	r0, r4
  400978:	4b35      	ldr	r3, [pc, #212]	; (400a50 <ssd1306_init+0x1b0>)
  40097a:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  40097c:	2200      	movs	r2, #0
  40097e:	2101      	movs	r1, #1
  400980:	4620      	mov	r0, r4
  400982:	4b34      	ldr	r3, [pc, #208]	; (400a54 <ssd1306_init+0x1b4>)
  400984:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400986:	2200      	movs	r2, #0
  400988:	2101      	movs	r1, #1
  40098a:	4620      	mov	r0, r4
  40098c:	4b32      	ldr	r3, [pc, #200]	; (400a58 <ssd1306_init+0x1b8>)
  40098e:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400990:	6863      	ldr	r3, [r4, #4]
  400992:	f023 0302 	bic.w	r3, r3, #2
  400996:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400998:	2200      	movs	r2, #0
  40099a:	2101      	movs	r1, #1
  40099c:	4620      	mov	r0, r4
  40099e:	4b2f      	ldr	r3, [pc, #188]	; (400a5c <ssd1306_init+0x1bc>)
  4009a0:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4009a2:	6863      	ldr	r3, [r4, #4]
  4009a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4009a8:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4009aa:	6863      	ldr	r3, [r4, #4]
  4009ac:	f043 0310 	orr.w	r3, r3, #16
  4009b0:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  4009b2:	492b      	ldr	r1, [pc, #172]	; (400a60 <ssd1306_init+0x1c0>)
  4009b4:	482b      	ldr	r0, [pc, #172]	; (400a64 <ssd1306_init+0x1c4>)
  4009b6:	4b2c      	ldr	r3, [pc, #176]	; (400a68 <ssd1306_init+0x1c8>)
  4009b8:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  4009ba:	b2c2      	uxtb	r2, r0
  4009bc:	2101      	movs	r1, #1
  4009be:	4620      	mov	r0, r4
  4009c0:	4b2a      	ldr	r3, [pc, #168]	; (400a6c <ssd1306_init+0x1cc>)
  4009c2:	4798      	blx	r3
		spi_enable_clock(SPI0);
  4009c4:	4620      	mov	r0, r4
  4009c6:	4b2a      	ldr	r3, [pc, #168]	; (400a70 <ssd1306_init+0x1d0>)
  4009c8:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4009ca:	2301      	movs	r3, #1
  4009cc:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4009ce:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  4009d0:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4009d4:	4c27      	ldr	r4, [pc, #156]	; (400a74 <ssd1306_init+0x1d4>)
  4009d6:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4009d8:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  4009da:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4009de:	47a0      	blx	r4
  4009e0:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  4009e2:	20a8      	movs	r0, #168	; 0xa8
  4009e4:	4c24      	ldr	r4, [pc, #144]	; (400a78 <ssd1306_init+0x1d8>)
  4009e6:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  4009e8:	201f      	movs	r0, #31
  4009ea:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  4009ec:	20d3      	movs	r0, #211	; 0xd3
  4009ee:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  4009f0:	2000      	movs	r0, #0
  4009f2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  4009f4:	2040      	movs	r0, #64	; 0x40
  4009f6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  4009f8:	20a1      	movs	r0, #161	; 0xa1
  4009fa:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  4009fc:	20c8      	movs	r0, #200	; 0xc8
  4009fe:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400a00:	20da      	movs	r0, #218	; 0xda
  400a02:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400a04:	4648      	mov	r0, r9
  400a06:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400a08:	2081      	movs	r0, #129	; 0x81
  400a0a:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400a0c:	208f      	movs	r0, #143	; 0x8f
  400a0e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400a10:	20a4      	movs	r0, #164	; 0xa4
  400a12:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400a14:	20a6      	movs	r0, #166	; 0xa6
  400a16:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400a18:	20d5      	movs	r0, #213	; 0xd5
  400a1a:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400a1c:	4640      	mov	r0, r8
  400a1e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400a20:	208d      	movs	r0, #141	; 0x8d
  400a22:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400a24:	2014      	movs	r0, #20
  400a26:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400a28:	20db      	movs	r0, #219	; 0xdb
  400a2a:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400a2c:	2040      	movs	r0, #64	; 0x40
  400a2e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400a30:	20d9      	movs	r0, #217	; 0xd9
  400a32:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400a34:	20f1      	movs	r0, #241	; 0xf1
  400a36:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400a38:	20af      	movs	r0, #175	; 0xaf
  400a3a:	47a0      	blx	r4
  400a3c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400a40:	400e1200 	.word	0x400e1200
  400a44:	400e1000 	.word	0x400e1000
  400a48:	00400d61 	.word	0x00400d61
  400a4c:	40008000 	.word	0x40008000
  400a50:	0040048f 	.word	0x0040048f
  400a54:	00400453 	.word	0x00400453
  400a58:	00400471 	.word	0x00400471
  400a5c:	004004d5 	.word	0x004004d5
  400a60:	08f0d180 	.word	0x08f0d180
  400a64:	000f4240 	.word	0x000f4240
  400a68:	004004e9 	.word	0x004004e9
  400a6c:	004004ff 	.word	0x004004ff
  400a70:	004003dd 	.word	0x004003dd
  400a74:	20400001 	.word	0x20400001
  400a78:	00400861 	.word	0x00400861
  400a7c:	400e1400 	.word	0x400e1400

00400a80 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400a80:	b538      	push	{r3, r4, r5, lr}
  400a82:	4605      	mov	r5, r0
  400a84:	2208      	movs	r2, #8
  400a86:	4b09      	ldr	r3, [pc, #36]	; (400aac <ssd1306_write_data+0x2c>)
  400a88:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400a8a:	4c09      	ldr	r4, [pc, #36]	; (400ab0 <ssd1306_write_data+0x30>)
  400a8c:	2101      	movs	r1, #1
  400a8e:	4620      	mov	r0, r4
  400a90:	4b08      	ldr	r3, [pc, #32]	; (400ab4 <ssd1306_write_data+0x34>)
  400a92:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400a94:	2301      	movs	r3, #1
  400a96:	461a      	mov	r2, r3
  400a98:	4629      	mov	r1, r5
  400a9a:	4620      	mov	r0, r4
  400a9c:	4c06      	ldr	r4, [pc, #24]	; (400ab8 <ssd1306_write_data+0x38>)
  400a9e:	47a0      	blx	r4
	delay_us(10);
  400aa0:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400aa4:	4b05      	ldr	r3, [pc, #20]	; (400abc <ssd1306_write_data+0x3c>)
  400aa6:	4798      	blx	r3
  400aa8:	bd38      	pop	{r3, r4, r5, pc}
  400aaa:	bf00      	nop
  400aac:	400e1000 	.word	0x400e1000
  400ab0:	40008000 	.word	0x40008000
  400ab4:	00400409 	.word	0x00400409
  400ab8:	0040041f 	.word	0x0040041f
  400abc:	20400001 	.word	0x20400001

00400ac0 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400ac0:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400ac2:	4810      	ldr	r0, [pc, #64]	; (400b04 <sysclk_init+0x44>)
  400ac4:	4b10      	ldr	r3, [pc, #64]	; (400b08 <sysclk_init+0x48>)
  400ac6:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400ac8:	213e      	movs	r1, #62	; 0x3e
  400aca:	2000      	movs	r0, #0
  400acc:	4b0f      	ldr	r3, [pc, #60]	; (400b0c <sysclk_init+0x4c>)
  400ace:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400ad0:	4c0f      	ldr	r4, [pc, #60]	; (400b10 <sysclk_init+0x50>)
  400ad2:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400ad4:	2800      	cmp	r0, #0
  400ad6:	d0fc      	beq.n	400ad2 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400ad8:	4b0e      	ldr	r3, [pc, #56]	; (400b14 <sysclk_init+0x54>)
  400ada:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400adc:	4a0e      	ldr	r2, [pc, #56]	; (400b18 <sysclk_init+0x58>)
  400ade:	4b0f      	ldr	r3, [pc, #60]	; (400b1c <sysclk_init+0x5c>)
  400ae0:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400ae2:	4c0f      	ldr	r4, [pc, #60]	; (400b20 <sysclk_init+0x60>)
  400ae4:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400ae6:	2800      	cmp	r0, #0
  400ae8:	d0fc      	beq.n	400ae4 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400aea:	2002      	movs	r0, #2
  400aec:	4b0d      	ldr	r3, [pc, #52]	; (400b24 <sysclk_init+0x64>)
  400aee:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400af0:	2000      	movs	r0, #0
  400af2:	4b0d      	ldr	r3, [pc, #52]	; (400b28 <sysclk_init+0x68>)
  400af4:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400af6:	4b0d      	ldr	r3, [pc, #52]	; (400b2c <sysclk_init+0x6c>)
  400af8:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400afa:	4802      	ldr	r0, [pc, #8]	; (400b04 <sysclk_init+0x44>)
  400afc:	4b02      	ldr	r3, [pc, #8]	; (400b08 <sysclk_init+0x48>)
  400afe:	4798      	blx	r3
  400b00:	bd10      	pop	{r4, pc}
  400b02:	bf00      	nop
  400b04:	11e1a300 	.word	0x11e1a300
  400b08:	004015b9 	.word	0x004015b9
  400b0c:	00400ff1 	.word	0x00400ff1
  400b10:	00401045 	.word	0x00401045
  400b14:	00401055 	.word	0x00401055
  400b18:	20183f01 	.word	0x20183f01
  400b1c:	400e0600 	.word	0x400e0600
  400b20:	00401065 	.word	0x00401065
  400b24:	00400f55 	.word	0x00400f55
  400b28:	00400f8d 	.word	0x00400f8d
  400b2c:	004014ad 	.word	0x004014ad

00400b30 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400b32:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b36:	4b48      	ldr	r3, [pc, #288]	; (400c58 <board_init+0x128>)
  400b38:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400b3a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b3e:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400b42:	4b46      	ldr	r3, [pc, #280]	; (400c5c <board_init+0x12c>)
  400b44:	2200      	movs	r2, #0
  400b46:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400b4a:	695a      	ldr	r2, [r3, #20]
  400b4c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400b50:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400b52:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b56:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400b5a:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400b5e:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400b62:	f007 0007 	and.w	r0, r7, #7
  400b66:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400b68:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400b6c:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400b70:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400b74:	f3bf 8f4f 	dsb	sy
  400b78:	f04f 34ff 	mov.w	r4, #4294967295
  400b7c:	fa04 fc00 	lsl.w	ip, r4, r0
  400b80:	fa06 f000 	lsl.w	r0, r6, r0
  400b84:	fa04 f40e 	lsl.w	r4, r4, lr
  400b88:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400b8c:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400b8e:	463a      	mov	r2, r7
  400b90:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400b92:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400b96:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400b9a:	3a01      	subs	r2, #1
  400b9c:	4423      	add	r3, r4
  400b9e:	f1b2 3fff 	cmp.w	r2, #4294967295
  400ba2:	d1f6      	bne.n	400b92 <board_init+0x62>
        } while(sets--);
  400ba4:	3e01      	subs	r6, #1
  400ba6:	4460      	add	r0, ip
  400ba8:	f1b6 3fff 	cmp.w	r6, #4294967295
  400bac:	d1ef      	bne.n	400b8e <board_init+0x5e>
  400bae:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400bb2:	4b2a      	ldr	r3, [pc, #168]	; (400c5c <board_init+0x12c>)
  400bb4:	695a      	ldr	r2, [r3, #20]
  400bb6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400bba:	615a      	str	r2, [r3, #20]
  400bbc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bc0:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400bc4:	4a26      	ldr	r2, [pc, #152]	; (400c60 <board_init+0x130>)
  400bc6:	4927      	ldr	r1, [pc, #156]	; (400c64 <board_init+0x134>)
  400bc8:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400bca:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400bce:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400bd0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bd4:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400bd8:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400bdc:	f022 0201 	bic.w	r2, r2, #1
  400be0:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400be4:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400be8:	f022 0201 	bic.w	r2, r2, #1
  400bec:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400bf0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bf4:	f3bf 8f6f 	isb	sy
  400bf8:	200a      	movs	r0, #10
  400bfa:	4c1b      	ldr	r4, [pc, #108]	; (400c68 <board_init+0x138>)
  400bfc:	47a0      	blx	r4
  400bfe:	200b      	movs	r0, #11
  400c00:	47a0      	blx	r4
  400c02:	200c      	movs	r0, #12
  400c04:	47a0      	blx	r4
  400c06:	2010      	movs	r0, #16
  400c08:	47a0      	blx	r4
  400c0a:	2011      	movs	r0, #17
  400c0c:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400c0e:	4b17      	ldr	r3, [pc, #92]	; (400c6c <board_init+0x13c>)
  400c10:	f44f 7280 	mov.w	r2, #256	; 0x100
  400c14:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c16:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400c1a:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400c1c:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400c20:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400c24:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c26:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400c2a:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400c2c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400c30:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400c32:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400c34:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400c38:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400c3a:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c3e:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400c40:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400c42:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c46:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400c48:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400c4c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400c50:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400c54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400c56:	bf00      	nop
  400c58:	400e1850 	.word	0x400e1850
  400c5c:	e000ed00 	.word	0xe000ed00
  400c60:	400e0c00 	.word	0x400e0c00
  400c64:	5a00080c 	.word	0x5a00080c
  400c68:	00401075 	.word	0x00401075
  400c6c:	400e1200 	.word	0x400e1200

00400c70 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400c70:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400c72:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c76:	d03a      	beq.n	400cee <pio_set_peripheral+0x7e>
  400c78:	d813      	bhi.n	400ca2 <pio_set_peripheral+0x32>
  400c7a:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c7e:	d025      	beq.n	400ccc <pio_set_peripheral+0x5c>
  400c80:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c84:	d10a      	bne.n	400c9c <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c86:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c88:	4313      	orrs	r3, r2
  400c8a:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400c8c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c8e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c90:	400b      	ands	r3, r1
  400c92:	ea23 0302 	bic.w	r3, r3, r2
  400c96:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400c98:	6042      	str	r2, [r0, #4]
  400c9a:	4770      	bx	lr
	switch (ul_type) {
  400c9c:	2900      	cmp	r1, #0
  400c9e:	d1fb      	bne.n	400c98 <pio_set_peripheral+0x28>
  400ca0:	4770      	bx	lr
  400ca2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400ca6:	d021      	beq.n	400cec <pio_set_peripheral+0x7c>
  400ca8:	d809      	bhi.n	400cbe <pio_set_peripheral+0x4e>
  400caa:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400cae:	d1f3      	bne.n	400c98 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cb0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400cb2:	4313      	orrs	r3, r2
  400cb4:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400cb6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400cb8:	4313      	orrs	r3, r2
  400cba:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400cbc:	e7ec      	b.n	400c98 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400cbe:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400cc2:	d013      	beq.n	400cec <pio_set_peripheral+0x7c>
  400cc4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400cc8:	d010      	beq.n	400cec <pio_set_peripheral+0x7c>
  400cca:	e7e5      	b.n	400c98 <pio_set_peripheral+0x28>
{
  400ccc:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cce:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400cd0:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400cd2:	43d3      	mvns	r3, r2
  400cd4:	4021      	ands	r1, r4
  400cd6:	461c      	mov	r4, r3
  400cd8:	4019      	ands	r1, r3
  400cda:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400cdc:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400cde:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400ce0:	400b      	ands	r3, r1
  400ce2:	4023      	ands	r3, r4
  400ce4:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400ce6:	6042      	str	r2, [r0, #4]
}
  400ce8:	f85d 4b04 	ldr.w	r4, [sp], #4
  400cec:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cee:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400cf0:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400cf2:	400b      	ands	r3, r1
  400cf4:	ea23 0302 	bic.w	r3, r3, r2
  400cf8:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400cfa:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400cfc:	4313      	orrs	r3, r2
  400cfe:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d00:	e7ca      	b.n	400c98 <pio_set_peripheral+0x28>

00400d02 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400d02:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d04:	f012 0f01 	tst.w	r2, #1
  400d08:	d10d      	bne.n	400d26 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400d0a:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400d0c:	f012 0f0a 	tst.w	r2, #10
  400d10:	d00b      	beq.n	400d2a <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400d12:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400d14:	f012 0f02 	tst.w	r2, #2
  400d18:	d109      	bne.n	400d2e <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400d1a:	f012 0f08 	tst.w	r2, #8
  400d1e:	d008      	beq.n	400d32 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400d20:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400d24:	e005      	b.n	400d32 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400d26:	6641      	str	r1, [r0, #100]	; 0x64
  400d28:	e7f0      	b.n	400d0c <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400d2a:	6241      	str	r1, [r0, #36]	; 0x24
  400d2c:	e7f2      	b.n	400d14 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400d2e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400d32:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400d34:	6001      	str	r1, [r0, #0]
  400d36:	4770      	bx	lr

00400d38 <pio_set_output>:
{
  400d38:	b410      	push	{r4}
  400d3a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400d3c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d3e:	b94c      	cbnz	r4, 400d54 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400d40:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400d42:	b14b      	cbz	r3, 400d58 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400d44:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400d46:	b94a      	cbnz	r2, 400d5c <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400d48:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400d4a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400d4c:	6001      	str	r1, [r0, #0]
}
  400d4e:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d52:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400d54:	6641      	str	r1, [r0, #100]	; 0x64
  400d56:	e7f4      	b.n	400d42 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400d58:	6541      	str	r1, [r0, #84]	; 0x54
  400d5a:	e7f4      	b.n	400d46 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400d5c:	6301      	str	r1, [r0, #48]	; 0x30
  400d5e:	e7f4      	b.n	400d4a <pio_set_output+0x12>

00400d60 <pio_configure>:
{
  400d60:	b570      	push	{r4, r5, r6, lr}
  400d62:	b082      	sub	sp, #8
  400d64:	4605      	mov	r5, r0
  400d66:	4616      	mov	r6, r2
  400d68:	461c      	mov	r4, r3
	switch (ul_type) {
  400d6a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d6e:	d014      	beq.n	400d9a <pio_configure+0x3a>
  400d70:	d90a      	bls.n	400d88 <pio_configure+0x28>
  400d72:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d76:	d024      	beq.n	400dc2 <pio_configure+0x62>
  400d78:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d7c:	d021      	beq.n	400dc2 <pio_configure+0x62>
  400d7e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d82:	d017      	beq.n	400db4 <pio_configure+0x54>
		return 0;
  400d84:	2000      	movs	r0, #0
  400d86:	e01a      	b.n	400dbe <pio_configure+0x5e>
	switch (ul_type) {
  400d88:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d8c:	d005      	beq.n	400d9a <pio_configure+0x3a>
  400d8e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d92:	d002      	beq.n	400d9a <pio_configure+0x3a>
  400d94:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d98:	d1f4      	bne.n	400d84 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400d9a:	4632      	mov	r2, r6
  400d9c:	4628      	mov	r0, r5
  400d9e:	4b11      	ldr	r3, [pc, #68]	; (400de4 <pio_configure+0x84>)
  400da0:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400da2:	f014 0f01 	tst.w	r4, #1
  400da6:	d102      	bne.n	400dae <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400da8:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400daa:	2001      	movs	r0, #1
  400dac:	e007      	b.n	400dbe <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400dae:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400db0:	2001      	movs	r0, #1
  400db2:	e004      	b.n	400dbe <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400db4:	461a      	mov	r2, r3
  400db6:	4631      	mov	r1, r6
  400db8:	4b0b      	ldr	r3, [pc, #44]	; (400de8 <pio_configure+0x88>)
  400dba:	4798      	blx	r3
	return 1;
  400dbc:	2001      	movs	r0, #1
}
  400dbe:	b002      	add	sp, #8
  400dc0:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400dc2:	f004 0301 	and.w	r3, r4, #1
  400dc6:	9300      	str	r3, [sp, #0]
  400dc8:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400dcc:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400dd0:	bf14      	ite	ne
  400dd2:	2200      	movne	r2, #0
  400dd4:	2201      	moveq	r2, #1
  400dd6:	4631      	mov	r1, r6
  400dd8:	4628      	mov	r0, r5
  400dda:	4c04      	ldr	r4, [pc, #16]	; (400dec <pio_configure+0x8c>)
  400ddc:	47a0      	blx	r4
	return 1;
  400dde:	2001      	movs	r0, #1
		break;
  400de0:	e7ed      	b.n	400dbe <pio_configure+0x5e>
  400de2:	bf00      	nop
  400de4:	00400c71 	.word	0x00400c71
  400de8:	00400d03 	.word	0x00400d03
  400dec:	00400d39 	.word	0x00400d39

00400df0 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400df0:	f012 0f10 	tst.w	r2, #16
  400df4:	d012      	beq.n	400e1c <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400df6:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400dfa:	f012 0f20 	tst.w	r2, #32
  400dfe:	d007      	beq.n	400e10 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400e00:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400e04:	f012 0f40 	tst.w	r2, #64	; 0x40
  400e08:	d005      	beq.n	400e16 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400e0a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400e0e:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400e10:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400e14:	e7f6      	b.n	400e04 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400e16:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400e1a:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400e1c:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400e20:	4770      	bx	lr

00400e22 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400e22:	6401      	str	r1, [r0, #64]	; 0x40
  400e24:	4770      	bx	lr

00400e26 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400e26:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400e28:	4770      	bx	lr

00400e2a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400e2a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400e2c:	4770      	bx	lr
	...

00400e30 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e34:	4604      	mov	r4, r0
  400e36:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400e38:	4b0e      	ldr	r3, [pc, #56]	; (400e74 <pio_handler_process+0x44>)
  400e3a:	4798      	blx	r3
  400e3c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400e3e:	4620      	mov	r0, r4
  400e40:	4b0d      	ldr	r3, [pc, #52]	; (400e78 <pio_handler_process+0x48>)
  400e42:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400e44:	4005      	ands	r5, r0
  400e46:	d013      	beq.n	400e70 <pio_handler_process+0x40>
  400e48:	4c0c      	ldr	r4, [pc, #48]	; (400e7c <pio_handler_process+0x4c>)
  400e4a:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400e4e:	e003      	b.n	400e58 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400e50:	42b4      	cmp	r4, r6
  400e52:	d00d      	beq.n	400e70 <pio_handler_process+0x40>
  400e54:	3410      	adds	r4, #16
		while (status != 0) {
  400e56:	b15d      	cbz	r5, 400e70 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400e58:	6820      	ldr	r0, [r4, #0]
  400e5a:	4540      	cmp	r0, r8
  400e5c:	d1f8      	bne.n	400e50 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400e5e:	6861      	ldr	r1, [r4, #4]
  400e60:	4229      	tst	r1, r5
  400e62:	d0f5      	beq.n	400e50 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e64:	68e3      	ldr	r3, [r4, #12]
  400e66:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e68:	6863      	ldr	r3, [r4, #4]
  400e6a:	ea25 0503 	bic.w	r5, r5, r3
  400e6e:	e7ef      	b.n	400e50 <pio_handler_process+0x20>
  400e70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e74:	00400e27 	.word	0x00400e27
  400e78:	00400e2b 	.word	0x00400e2b
  400e7c:	20400bfc 	.word	0x20400bfc

00400e80 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400e80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400e82:	4c18      	ldr	r4, [pc, #96]	; (400ee4 <pio_handler_set+0x64>)
  400e84:	6826      	ldr	r6, [r4, #0]
  400e86:	2e06      	cmp	r6, #6
  400e88:	d82a      	bhi.n	400ee0 <pio_handler_set+0x60>
  400e8a:	f04f 0c00 	mov.w	ip, #0
  400e8e:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e90:	4f15      	ldr	r7, [pc, #84]	; (400ee8 <pio_handler_set+0x68>)
  400e92:	e004      	b.n	400e9e <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400e94:	3401      	adds	r4, #1
  400e96:	b2e4      	uxtb	r4, r4
  400e98:	46a4      	mov	ip, r4
  400e9a:	42a6      	cmp	r6, r4
  400e9c:	d309      	bcc.n	400eb2 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400e9e:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400ea0:	0125      	lsls	r5, r4, #4
  400ea2:	597d      	ldr	r5, [r7, r5]
  400ea4:	428d      	cmp	r5, r1
  400ea6:	d1f5      	bne.n	400e94 <pio_handler_set+0x14>
  400ea8:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400eac:	686d      	ldr	r5, [r5, #4]
  400eae:	4295      	cmp	r5, r2
  400eb0:	d1f0      	bne.n	400e94 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400eb2:	4d0d      	ldr	r5, [pc, #52]	; (400ee8 <pio_handler_set+0x68>)
  400eb4:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400eb8:	eb05 040e 	add.w	r4, r5, lr
  400ebc:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400ec0:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400ec2:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400ec4:	9906      	ldr	r1, [sp, #24]
  400ec6:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400ec8:	3601      	adds	r6, #1
  400eca:	4566      	cmp	r6, ip
  400ecc:	d005      	beq.n	400eda <pio_handler_set+0x5a>
  400ece:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400ed0:	461a      	mov	r2, r3
  400ed2:	4b06      	ldr	r3, [pc, #24]	; (400eec <pio_handler_set+0x6c>)
  400ed4:	4798      	blx	r3

	return 0;
  400ed6:	2000      	movs	r0, #0
  400ed8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400eda:	4902      	ldr	r1, [pc, #8]	; (400ee4 <pio_handler_set+0x64>)
  400edc:	600e      	str	r6, [r1, #0]
  400ede:	e7f6      	b.n	400ece <pio_handler_set+0x4e>
		return 1;
  400ee0:	2001      	movs	r0, #1
}
  400ee2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400ee4:	20400c6c 	.word	0x20400c6c
  400ee8:	20400bfc 	.word	0x20400bfc
  400eec:	00400df1 	.word	0x00400df1

00400ef0 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400ef0:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400ef2:	210a      	movs	r1, #10
  400ef4:	4801      	ldr	r0, [pc, #4]	; (400efc <PIOA_Handler+0xc>)
  400ef6:	4b02      	ldr	r3, [pc, #8]	; (400f00 <PIOA_Handler+0x10>)
  400ef8:	4798      	blx	r3
  400efa:	bd08      	pop	{r3, pc}
  400efc:	400e0e00 	.word	0x400e0e00
  400f00:	00400e31 	.word	0x00400e31

00400f04 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400f04:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400f06:	210b      	movs	r1, #11
  400f08:	4801      	ldr	r0, [pc, #4]	; (400f10 <PIOB_Handler+0xc>)
  400f0a:	4b02      	ldr	r3, [pc, #8]	; (400f14 <PIOB_Handler+0x10>)
  400f0c:	4798      	blx	r3
  400f0e:	bd08      	pop	{r3, pc}
  400f10:	400e1000 	.word	0x400e1000
  400f14:	00400e31 	.word	0x00400e31

00400f18 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400f18:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400f1a:	210c      	movs	r1, #12
  400f1c:	4801      	ldr	r0, [pc, #4]	; (400f24 <PIOC_Handler+0xc>)
  400f1e:	4b02      	ldr	r3, [pc, #8]	; (400f28 <PIOC_Handler+0x10>)
  400f20:	4798      	blx	r3
  400f22:	bd08      	pop	{r3, pc}
  400f24:	400e1200 	.word	0x400e1200
  400f28:	00400e31 	.word	0x00400e31

00400f2c <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400f2c:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400f2e:	2110      	movs	r1, #16
  400f30:	4801      	ldr	r0, [pc, #4]	; (400f38 <PIOD_Handler+0xc>)
  400f32:	4b02      	ldr	r3, [pc, #8]	; (400f3c <PIOD_Handler+0x10>)
  400f34:	4798      	blx	r3
  400f36:	bd08      	pop	{r3, pc}
  400f38:	400e1400 	.word	0x400e1400
  400f3c:	00400e31 	.word	0x00400e31

00400f40 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400f40:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400f42:	2111      	movs	r1, #17
  400f44:	4801      	ldr	r0, [pc, #4]	; (400f4c <PIOE_Handler+0xc>)
  400f46:	4b02      	ldr	r3, [pc, #8]	; (400f50 <PIOE_Handler+0x10>)
  400f48:	4798      	blx	r3
  400f4a:	bd08      	pop	{r3, pc}
  400f4c:	400e1600 	.word	0x400e1600
  400f50:	00400e31 	.word	0x00400e31

00400f54 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400f54:	2803      	cmp	r0, #3
  400f56:	d011      	beq.n	400f7c <pmc_mck_set_division+0x28>
  400f58:	2804      	cmp	r0, #4
  400f5a:	d012      	beq.n	400f82 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400f5c:	2802      	cmp	r0, #2
  400f5e:	bf0c      	ite	eq
  400f60:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400f64:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400f66:	4a08      	ldr	r2, [pc, #32]	; (400f88 <pmc_mck_set_division+0x34>)
  400f68:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f6a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400f6e:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400f70:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f72:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f74:	f013 0f08 	tst.w	r3, #8
  400f78:	d0fb      	beq.n	400f72 <pmc_mck_set_division+0x1e>
}
  400f7a:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400f7c:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400f80:	e7f1      	b.n	400f66 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400f82:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400f86:	e7ee      	b.n	400f66 <pmc_mck_set_division+0x12>
  400f88:	400e0600 	.word	0x400e0600

00400f8c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400f8c:	4a17      	ldr	r2, [pc, #92]	; (400fec <pmc_switch_mck_to_pllack+0x60>)
  400f8e:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f90:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400f94:	4318      	orrs	r0, r3
  400f96:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f98:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f9a:	f013 0f08 	tst.w	r3, #8
  400f9e:	d10a      	bne.n	400fb6 <pmc_switch_mck_to_pllack+0x2a>
  400fa0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400fa4:	4911      	ldr	r1, [pc, #68]	; (400fec <pmc_switch_mck_to_pllack+0x60>)
  400fa6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400fa8:	f012 0f08 	tst.w	r2, #8
  400fac:	d103      	bne.n	400fb6 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400fae:	3b01      	subs	r3, #1
  400fb0:	d1f9      	bne.n	400fa6 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400fb2:	2001      	movs	r0, #1
  400fb4:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400fb6:	4a0d      	ldr	r2, [pc, #52]	; (400fec <pmc_switch_mck_to_pllack+0x60>)
  400fb8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400fba:	f023 0303 	bic.w	r3, r3, #3
  400fbe:	f043 0302 	orr.w	r3, r3, #2
  400fc2:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400fc4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fc6:	f013 0f08 	tst.w	r3, #8
  400fca:	d10a      	bne.n	400fe2 <pmc_switch_mck_to_pllack+0x56>
  400fcc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400fd0:	4906      	ldr	r1, [pc, #24]	; (400fec <pmc_switch_mck_to_pllack+0x60>)
  400fd2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400fd4:	f012 0f08 	tst.w	r2, #8
  400fd8:	d105      	bne.n	400fe6 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400fda:	3b01      	subs	r3, #1
  400fdc:	d1f9      	bne.n	400fd2 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400fde:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400fe0:	4770      	bx	lr
	return 0;
  400fe2:	2000      	movs	r0, #0
  400fe4:	4770      	bx	lr
  400fe6:	2000      	movs	r0, #0
  400fe8:	4770      	bx	lr
  400fea:	bf00      	nop
  400fec:	400e0600 	.word	0x400e0600

00400ff0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400ff0:	b9a0      	cbnz	r0, 40101c <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400ff2:	480e      	ldr	r0, [pc, #56]	; (40102c <pmc_switch_mainck_to_xtal+0x3c>)
  400ff4:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400ff6:	0209      	lsls	r1, r1, #8
  400ff8:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400ffa:	4a0d      	ldr	r2, [pc, #52]	; (401030 <pmc_switch_mainck_to_xtal+0x40>)
  400ffc:	401a      	ands	r2, r3
  400ffe:	4b0d      	ldr	r3, [pc, #52]	; (401034 <pmc_switch_mainck_to_xtal+0x44>)
  401000:	4313      	orrs	r3, r2
  401002:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401004:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401006:	4602      	mov	r2, r0
  401008:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40100a:	f013 0f01 	tst.w	r3, #1
  40100e:	d0fb      	beq.n	401008 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401010:	4a06      	ldr	r2, [pc, #24]	; (40102c <pmc_switch_mainck_to_xtal+0x3c>)
  401012:	6a11      	ldr	r1, [r2, #32]
  401014:	4b08      	ldr	r3, [pc, #32]	; (401038 <pmc_switch_mainck_to_xtal+0x48>)
  401016:	430b      	orrs	r3, r1
  401018:	6213      	str	r3, [r2, #32]
  40101a:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40101c:	4903      	ldr	r1, [pc, #12]	; (40102c <pmc_switch_mainck_to_xtal+0x3c>)
  40101e:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401020:	4a06      	ldr	r2, [pc, #24]	; (40103c <pmc_switch_mainck_to_xtal+0x4c>)
  401022:	401a      	ands	r2, r3
  401024:	4b06      	ldr	r3, [pc, #24]	; (401040 <pmc_switch_mainck_to_xtal+0x50>)
  401026:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401028:	620b      	str	r3, [r1, #32]
  40102a:	4770      	bx	lr
  40102c:	400e0600 	.word	0x400e0600
  401030:	ffc8fffc 	.word	0xffc8fffc
  401034:	00370001 	.word	0x00370001
  401038:	01370000 	.word	0x01370000
  40103c:	fec8fffc 	.word	0xfec8fffc
  401040:	01370002 	.word	0x01370002

00401044 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401044:	4b02      	ldr	r3, [pc, #8]	; (401050 <pmc_osc_is_ready_mainck+0xc>)
  401046:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401048:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  40104c:	4770      	bx	lr
  40104e:	bf00      	nop
  401050:	400e0600 	.word	0x400e0600

00401054 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401054:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  401058:	4b01      	ldr	r3, [pc, #4]	; (401060 <pmc_disable_pllack+0xc>)
  40105a:	629a      	str	r2, [r3, #40]	; 0x28
  40105c:	4770      	bx	lr
  40105e:	bf00      	nop
  401060:	400e0600 	.word	0x400e0600

00401064 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401064:	4b02      	ldr	r3, [pc, #8]	; (401070 <pmc_is_locked_pllack+0xc>)
  401066:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  401068:	f000 0002 	and.w	r0, r0, #2
  40106c:	4770      	bx	lr
  40106e:	bf00      	nop
  401070:	400e0600 	.word	0x400e0600

00401074 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401074:	283f      	cmp	r0, #63	; 0x3f
  401076:	d81e      	bhi.n	4010b6 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  401078:	281f      	cmp	r0, #31
  40107a:	d80c      	bhi.n	401096 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  40107c:	4b11      	ldr	r3, [pc, #68]	; (4010c4 <pmc_enable_periph_clk+0x50>)
  40107e:	699a      	ldr	r2, [r3, #24]
  401080:	2301      	movs	r3, #1
  401082:	4083      	lsls	r3, r0
  401084:	4393      	bics	r3, r2
  401086:	d018      	beq.n	4010ba <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  401088:	2301      	movs	r3, #1
  40108a:	fa03 f000 	lsl.w	r0, r3, r0
  40108e:	4b0d      	ldr	r3, [pc, #52]	; (4010c4 <pmc_enable_periph_clk+0x50>)
  401090:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  401092:	2000      	movs	r0, #0
  401094:	4770      	bx	lr
		ul_id -= 32;
  401096:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  401098:	4b0a      	ldr	r3, [pc, #40]	; (4010c4 <pmc_enable_periph_clk+0x50>)
  40109a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  40109e:	2301      	movs	r3, #1
  4010a0:	4083      	lsls	r3, r0
  4010a2:	4393      	bics	r3, r2
  4010a4:	d00b      	beq.n	4010be <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4010a6:	2301      	movs	r3, #1
  4010a8:	fa03 f000 	lsl.w	r0, r3, r0
  4010ac:	4b05      	ldr	r3, [pc, #20]	; (4010c4 <pmc_enable_periph_clk+0x50>)
  4010ae:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  4010b2:	2000      	movs	r0, #0
  4010b4:	4770      	bx	lr
		return 1;
  4010b6:	2001      	movs	r0, #1
  4010b8:	4770      	bx	lr
	return 0;
  4010ba:	2000      	movs	r0, #0
  4010bc:	4770      	bx	lr
  4010be:	2000      	movs	r0, #0
}
  4010c0:	4770      	bx	lr
  4010c2:	bf00      	nop
  4010c4:	400e0600 	.word	0x400e0600

004010c8 <pmc_disable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4010c8:	283f      	cmp	r0, #63	; 0x3f
  4010ca:	d822      	bhi.n	401112 <pmc_disable_periph_clk+0x4a>
		return 1;
	}

	if (ul_id < 32) {
  4010cc:	281f      	cmp	r0, #31
  4010ce:	d80e      	bhi.n	4010ee <pmc_disable_periph_clk+0x26>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
  4010d0:	4b11      	ldr	r3, [pc, #68]	; (401118 <pmc_disable_periph_clk+0x50>)
  4010d2:	699a      	ldr	r2, [r3, #24]
  4010d4:	2301      	movs	r3, #1
  4010d6:	4083      	lsls	r3, r0
  4010d8:	4393      	bics	r3, r2
  4010da:	d001      	beq.n	4010e0 <pmc_disable_periph_clk+0x18>
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
  4010dc:	2000      	movs	r0, #0
  4010de:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
  4010e0:	2301      	movs	r3, #1
  4010e2:	fa03 f000 	lsl.w	r0, r3, r0
  4010e6:	4b0c      	ldr	r3, [pc, #48]	; (401118 <pmc_disable_periph_clk+0x50>)
  4010e8:	6158      	str	r0, [r3, #20]
	return 0;
  4010ea:	2000      	movs	r0, #0
  4010ec:	4770      	bx	lr
		ul_id -= 32;
  4010ee:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
  4010f0:	4b09      	ldr	r3, [pc, #36]	; (401118 <pmc_disable_periph_clk+0x50>)
  4010f2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4010f6:	2301      	movs	r3, #1
  4010f8:	4083      	lsls	r3, r0
  4010fa:	4393      	bics	r3, r2
  4010fc:	d001      	beq.n	401102 <pmc_disable_periph_clk+0x3a>
	return 0;
  4010fe:	2000      	movs	r0, #0
}
  401100:	4770      	bx	lr
			PMC->PMC_PCDR1 = 1 << ul_id;
  401102:	2301      	movs	r3, #1
  401104:	fa03 f000 	lsl.w	r0, r3, r0
  401108:	4b03      	ldr	r3, [pc, #12]	; (401118 <pmc_disable_periph_clk+0x50>)
  40110a:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
	return 0;
  40110e:	2000      	movs	r0, #0
  401110:	4770      	bx	lr
		return 1;
  401112:	2001      	movs	r0, #1
  401114:	4770      	bx	lr
  401116:	bf00      	nop
  401118:	400e0600 	.word	0x400e0600

0040111c <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  40111c:	4770      	bx	lr
	...

00401120 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  401120:	4a10      	ldr	r2, [pc, #64]	; (401164 <pmc_enable_waitmode+0x44>)
  401122:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401124:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401128:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  40112c:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  40112e:	6a11      	ldr	r1, [r2, #32]
  401130:	4b0d      	ldr	r3, [pc, #52]	; (401168 <pmc_enable_waitmode+0x48>)
  401132:	430b      	orrs	r3, r1
  401134:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401136:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401138:	f013 0f08 	tst.w	r3, #8
  40113c:	d0fb      	beq.n	401136 <pmc_enable_waitmode+0x16>
  40113e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  401142:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  401144:	3b01      	subs	r3, #1
  401146:	d1fc      	bne.n	401142 <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  401148:	4a06      	ldr	r2, [pc, #24]	; (401164 <pmc_enable_waitmode+0x44>)
  40114a:	6a13      	ldr	r3, [r2, #32]
  40114c:	f013 0f08 	tst.w	r3, #8
  401150:	d0fb      	beq.n	40114a <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  401152:	4a04      	ldr	r2, [pc, #16]	; (401164 <pmc_enable_waitmode+0x44>)
  401154:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401156:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  40115a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  40115e:	6713      	str	r3, [r2, #112]	; 0x70
  401160:	4770      	bx	lr
  401162:	bf00      	nop
  401164:	400e0600 	.word	0x400e0600
  401168:	00370004 	.word	0x00370004

0040116c <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  40116c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  401170:	1e43      	subs	r3, r0, #1
  401172:	2b04      	cmp	r3, #4
  401174:	f200 8107 	bhi.w	401386 <pmc_sleep+0x21a>
  401178:	e8df f013 	tbh	[pc, r3, lsl #1]
  40117c:	00050005 	.word	0x00050005
  401180:	00150015 	.word	0x00150015
  401184:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  401186:	4a81      	ldr	r2, [pc, #516]	; (40138c <pmc_sleep+0x220>)
  401188:	6913      	ldr	r3, [r2, #16]
  40118a:	f023 0304 	bic.w	r3, r3, #4
  40118e:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  401190:	2201      	movs	r2, #1
  401192:	4b7f      	ldr	r3, [pc, #508]	; (401390 <pmc_sleep+0x224>)
  401194:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401196:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  40119a:	b662      	cpsie	i
  __ASM volatile ("dsb");
  40119c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  4011a0:	bf30      	wfi
  4011a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4011a6:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  4011a8:	2803      	cmp	r0, #3
  4011aa:	bf0c      	ite	eq
  4011ac:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  4011ae:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  4011b2:	4b78      	ldr	r3, [pc, #480]	; (401394 <pmc_sleep+0x228>)
  4011b4:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  4011b6:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4011b8:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  4011bc:	2200      	movs	r2, #0
  4011be:	4b74      	ldr	r3, [pc, #464]	; (401390 <pmc_sleep+0x224>)
  4011c0:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  4011c2:	2201      	movs	r2, #1
  4011c4:	4b74      	ldr	r3, [pc, #464]	; (401398 <pmc_sleep+0x22c>)
  4011c6:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  4011c8:	4b74      	ldr	r3, [pc, #464]	; (40139c <pmc_sleep+0x230>)
  4011ca:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  4011cc:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  4011ce:	4a74      	ldr	r2, [pc, #464]	; (4013a0 <pmc_sleep+0x234>)
  4011d0:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  4011d4:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  4011d6:	4a73      	ldr	r2, [pc, #460]	; (4013a4 <pmc_sleep+0x238>)
  4011d8:	433a      	orrs	r2, r7
  4011da:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  4011dc:	f005 0903 	and.w	r9, r5, #3
  4011e0:	f1b9 0f01 	cmp.w	r9, #1
  4011e4:	f240 8089 	bls.w	4012fa <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  4011e8:	f025 0103 	bic.w	r1, r5, #3
  4011ec:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  4011f0:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4011f2:	461a      	mov	r2, r3
  4011f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011f6:	f013 0f08 	tst.w	r3, #8
  4011fa:	d0fb      	beq.n	4011f4 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  4011fc:	f011 0f70 	tst.w	r1, #112	; 0x70
  401200:	d008      	beq.n	401214 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  401202:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  401206:	4b65      	ldr	r3, [pc, #404]	; (40139c <pmc_sleep+0x230>)
  401208:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40120a:	461a      	mov	r2, r3
  40120c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40120e:	f013 0f08 	tst.w	r3, #8
  401212:	d0fb      	beq.n	40120c <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401214:	4b64      	ldr	r3, [pc, #400]	; (4013a8 <pmc_sleep+0x23c>)
  401216:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401218:	4a60      	ldr	r2, [pc, #384]	; (40139c <pmc_sleep+0x230>)
  40121a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40121c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  401220:	d0fb      	beq.n	40121a <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  401222:	4a5e      	ldr	r2, [pc, #376]	; (40139c <pmc_sleep+0x230>)
  401224:	6a11      	ldr	r1, [r2, #32]
  401226:	4b61      	ldr	r3, [pc, #388]	; (4013ac <pmc_sleep+0x240>)
  401228:	400b      	ands	r3, r1
  40122a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40122e:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401230:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401232:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401236:	d0fb      	beq.n	401230 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401238:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  40123c:	4a58      	ldr	r2, [pc, #352]	; (4013a0 <pmc_sleep+0x234>)
  40123e:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  401240:	2c04      	cmp	r4, #4
  401242:	d05c      	beq.n	4012fe <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401244:	4c52      	ldr	r4, [pc, #328]	; (401390 <pmc_sleep+0x224>)
  401246:	2301      	movs	r3, #1
  401248:	7023      	strb	r3, [r4, #0]
  40124a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40124e:	b662      	cpsie	i

		pmc_enable_waitmode();
  401250:	4b57      	ldr	r3, [pc, #348]	; (4013b0 <pmc_sleep+0x244>)
  401252:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  401254:	b672      	cpsid	i
  401256:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  40125a:	2300      	movs	r3, #0
  40125c:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  40125e:	f017 0f02 	tst.w	r7, #2
  401262:	d055      	beq.n	401310 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401264:	4a4d      	ldr	r2, [pc, #308]	; (40139c <pmc_sleep+0x230>)
  401266:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401268:	4952      	ldr	r1, [pc, #328]	; (4013b4 <pmc_sleep+0x248>)
  40126a:	4019      	ands	r1, r3
  40126c:	4b52      	ldr	r3, [pc, #328]	; (4013b8 <pmc_sleep+0x24c>)
  40126e:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401270:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401272:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  401274:	4b51      	ldr	r3, [pc, #324]	; (4013bc <pmc_sleep+0x250>)
  401276:	400b      	ands	r3, r1
  401278:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40127c:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  40127e:	4b50      	ldr	r3, [pc, #320]	; (4013c0 <pmc_sleep+0x254>)
  401280:	4033      	ands	r3, r6
  401282:	2b00      	cmp	r3, #0
  401284:	d06e      	beq.n	401364 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  401286:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  40128a:	4b44      	ldr	r3, [pc, #272]	; (40139c <pmc_sleep+0x230>)
  40128c:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  40128e:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  401290:	f1b9 0f02 	cmp.w	r9, #2
  401294:	d104      	bne.n	4012a0 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  401296:	4a41      	ldr	r2, [pc, #260]	; (40139c <pmc_sleep+0x230>)
  401298:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40129a:	f013 0f02 	tst.w	r3, #2
  40129e:	d0fb      	beq.n	401298 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4012a0:	4a3e      	ldr	r2, [pc, #248]	; (40139c <pmc_sleep+0x230>)
  4012a2:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4012a4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  4012a8:	f005 0070 	and.w	r0, r5, #112	; 0x70
  4012ac:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4012ae:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012b0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012b2:	f013 0f08 	tst.w	r3, #8
  4012b6:	d0fb      	beq.n	4012b0 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  4012b8:	4b39      	ldr	r3, [pc, #228]	; (4013a0 <pmc_sleep+0x234>)
  4012ba:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  4012be:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4012c2:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012c4:	461a      	mov	r2, r3
  4012c6:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012c8:	f013 0f08 	tst.w	r3, #8
  4012cc:	d0fb      	beq.n	4012c6 <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  4012ce:	4a33      	ldr	r2, [pc, #204]	; (40139c <pmc_sleep+0x230>)
  4012d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012d2:	420b      	tst	r3, r1
  4012d4:	d0fc      	beq.n	4012d0 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  4012d6:	2200      	movs	r2, #0
  4012d8:	4b2f      	ldr	r3, [pc, #188]	; (401398 <pmc_sleep+0x22c>)
  4012da:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  4012dc:	4b39      	ldr	r3, [pc, #228]	; (4013c4 <pmc_sleep+0x258>)
  4012de:	681b      	ldr	r3, [r3, #0]
  4012e0:	b11b      	cbz	r3, 4012ea <pmc_sleep+0x17e>
			callback_clocks_restored();
  4012e2:	4798      	blx	r3
			callback_clocks_restored = NULL;
  4012e4:	2200      	movs	r2, #0
  4012e6:	4b37      	ldr	r3, [pc, #220]	; (4013c4 <pmc_sleep+0x258>)
  4012e8:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  4012ea:	2201      	movs	r2, #1
  4012ec:	4b28      	ldr	r3, [pc, #160]	; (401390 <pmc_sleep+0x224>)
  4012ee:	701a      	strb	r2, [r3, #0]
  4012f0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4012f4:	b662      	cpsie	i
  4012f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  4012fa:	4629      	mov	r1, r5
  4012fc:	e77e      	b.n	4011fc <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4012fe:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  401302:	6a11      	ldr	r1, [r2, #32]
  401304:	4b30      	ldr	r3, [pc, #192]	; (4013c8 <pmc_sleep+0x25c>)
  401306:	400b      	ands	r3, r1
  401308:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40130c:	6213      	str	r3, [r2, #32]
  40130e:	e799      	b.n	401244 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  401310:	f017 0f01 	tst.w	r7, #1
  401314:	d0b3      	beq.n	40127e <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  401316:	4b21      	ldr	r3, [pc, #132]	; (40139c <pmc_sleep+0x230>)
  401318:	6a1b      	ldr	r3, [r3, #32]
  40131a:	f013 0f01 	tst.w	r3, #1
  40131e:	d10b      	bne.n	401338 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401320:	491e      	ldr	r1, [pc, #120]	; (40139c <pmc_sleep+0x230>)
  401322:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  401324:	4a29      	ldr	r2, [pc, #164]	; (4013cc <pmc_sleep+0x260>)
  401326:	401a      	ands	r2, r3
  401328:	4b29      	ldr	r3, [pc, #164]	; (4013d0 <pmc_sleep+0x264>)
  40132a:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40132c:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40132e:	460a      	mov	r2, r1
  401330:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401332:	f013 0f01 	tst.w	r3, #1
  401336:	d0fb      	beq.n	401330 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  401338:	4b18      	ldr	r3, [pc, #96]	; (40139c <pmc_sleep+0x230>)
  40133a:	6a1b      	ldr	r3, [r3, #32]
  40133c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401340:	d108      	bne.n	401354 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401342:	4a16      	ldr	r2, [pc, #88]	; (40139c <pmc_sleep+0x230>)
  401344:	6a11      	ldr	r1, [r2, #32]
  401346:	4b23      	ldr	r3, [pc, #140]	; (4013d4 <pmc_sleep+0x268>)
  401348:	430b      	orrs	r3, r1
  40134a:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  40134c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40134e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401352:	d0fb      	beq.n	40134c <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401354:	4a11      	ldr	r2, [pc, #68]	; (40139c <pmc_sleep+0x230>)
  401356:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401358:	4b18      	ldr	r3, [pc, #96]	; (4013bc <pmc_sleep+0x250>)
  40135a:	400b      	ands	r3, r1
  40135c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401360:	6213      	str	r3, [r2, #32]
  401362:	e78c      	b.n	40127e <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  401364:	2100      	movs	r1, #0
  401366:	e793      	b.n	401290 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  401368:	4a08      	ldr	r2, [pc, #32]	; (40138c <pmc_sleep+0x220>)
  40136a:	6913      	ldr	r3, [r2, #16]
  40136c:	f043 0304 	orr.w	r3, r3, #4
  401370:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  401372:	4a19      	ldr	r2, [pc, #100]	; (4013d8 <pmc_sleep+0x26c>)
  401374:	4b19      	ldr	r3, [pc, #100]	; (4013dc <pmc_sleep+0x270>)
  401376:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  401378:	2201      	movs	r2, #1
  40137a:	4b05      	ldr	r3, [pc, #20]	; (401390 <pmc_sleep+0x224>)
  40137c:	701a      	strb	r2, [r3, #0]
  40137e:	f3bf 8f5f 	dmb	sy
  401382:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401384:	bf30      	wfi
  401386:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40138a:	bf00      	nop
  40138c:	e000ed00 	.word	0xe000ed00
  401390:	20400018 	.word	0x20400018
  401394:	0040111d 	.word	0x0040111d
  401398:	20400c70 	.word	0x20400c70
  40139c:	400e0600 	.word	0x400e0600
  4013a0:	400e0c00 	.word	0x400e0c00
  4013a4:	00370008 	.word	0x00370008
  4013a8:	00401055 	.word	0x00401055
  4013ac:	fec8ffff 	.word	0xfec8ffff
  4013b0:	00401121 	.word	0x00401121
  4013b4:	fec8fffc 	.word	0xfec8fffc
  4013b8:	01370002 	.word	0x01370002
  4013bc:	ffc8ff87 	.word	0xffc8ff87
  4013c0:	07ff0000 	.word	0x07ff0000
  4013c4:	20400c74 	.word	0x20400c74
  4013c8:	ffc8fffe 	.word	0xffc8fffe
  4013cc:	ffc8fffc 	.word	0xffc8fffc
  4013d0:	00370001 	.word	0x00370001
  4013d4:	01370000 	.word	0x01370000
  4013d8:	a5000004 	.word	0xa5000004
  4013dc:	400e1810 	.word	0x400e1810

004013e0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4013e0:	e7fe      	b.n	4013e0 <Dummy_Handler>
	...

004013e4 <Reset_Handler>:
{
  4013e4:	b500      	push	{lr}
  4013e6:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4013e8:	4b25      	ldr	r3, [pc, #148]	; (401480 <Reset_Handler+0x9c>)
  4013ea:	4a26      	ldr	r2, [pc, #152]	; (401484 <Reset_Handler+0xa0>)
  4013ec:	429a      	cmp	r2, r3
  4013ee:	d010      	beq.n	401412 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4013f0:	4b25      	ldr	r3, [pc, #148]	; (401488 <Reset_Handler+0xa4>)
  4013f2:	4a23      	ldr	r2, [pc, #140]	; (401480 <Reset_Handler+0x9c>)
  4013f4:	429a      	cmp	r2, r3
  4013f6:	d20c      	bcs.n	401412 <Reset_Handler+0x2e>
  4013f8:	3b01      	subs	r3, #1
  4013fa:	1a9b      	subs	r3, r3, r2
  4013fc:	f023 0303 	bic.w	r3, r3, #3
  401400:	3304      	adds	r3, #4
  401402:	4413      	add	r3, r2
  401404:	491f      	ldr	r1, [pc, #124]	; (401484 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  401406:	f851 0b04 	ldr.w	r0, [r1], #4
  40140a:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  40140e:	429a      	cmp	r2, r3
  401410:	d1f9      	bne.n	401406 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401412:	4b1e      	ldr	r3, [pc, #120]	; (40148c <Reset_Handler+0xa8>)
  401414:	4a1e      	ldr	r2, [pc, #120]	; (401490 <Reset_Handler+0xac>)
  401416:	429a      	cmp	r2, r3
  401418:	d20a      	bcs.n	401430 <Reset_Handler+0x4c>
  40141a:	3b01      	subs	r3, #1
  40141c:	1a9b      	subs	r3, r3, r2
  40141e:	f023 0303 	bic.w	r3, r3, #3
  401422:	3304      	adds	r3, #4
  401424:	4413      	add	r3, r2
                *pDest++ = 0;
  401426:	2100      	movs	r1, #0
  401428:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  40142c:	4293      	cmp	r3, r2
  40142e:	d1fb      	bne.n	401428 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401430:	4a18      	ldr	r2, [pc, #96]	; (401494 <Reset_Handler+0xb0>)
  401432:	4b19      	ldr	r3, [pc, #100]	; (401498 <Reset_Handler+0xb4>)
  401434:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401438:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40143a:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40143e:	fab3 f383 	clz	r3, r3
  401442:	095b      	lsrs	r3, r3, #5
  401444:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401446:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401448:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  40144c:	2200      	movs	r2, #0
  40144e:	4b13      	ldr	r3, [pc, #76]	; (40149c <Reset_Handler+0xb8>)
  401450:	701a      	strb	r2, [r3, #0]
	return flags;
  401452:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401454:	4a12      	ldr	r2, [pc, #72]	; (4014a0 <Reset_Handler+0xbc>)
  401456:	6813      	ldr	r3, [r2, #0]
  401458:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  40145c:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  40145e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401462:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401466:	b129      	cbz	r1, 401474 <Reset_Handler+0x90>
		cpu_irq_enable();
  401468:	2201      	movs	r2, #1
  40146a:	4b0c      	ldr	r3, [pc, #48]	; (40149c <Reset_Handler+0xb8>)
  40146c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40146e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401472:	b662      	cpsie	i
        __libc_init_array();
  401474:	4b0b      	ldr	r3, [pc, #44]	; (4014a4 <Reset_Handler+0xc0>)
  401476:	4798      	blx	r3
        main();
  401478:	4b0b      	ldr	r3, [pc, #44]	; (4014a8 <Reset_Handler+0xc4>)
  40147a:	4798      	blx	r3
  40147c:	e7fe      	b.n	40147c <Reset_Handler+0x98>
  40147e:	bf00      	nop
  401480:	20400000 	.word	0x20400000
  401484:	0040720c 	.word	0x0040720c
  401488:	204009d8 	.word	0x204009d8
  40148c:	20400cf4 	.word	0x20400cf4
  401490:	204009d8 	.word	0x204009d8
  401494:	e000ed00 	.word	0xe000ed00
  401498:	00400000 	.word	0x00400000
  40149c:	20400018 	.word	0x20400018
  4014a0:	e000ed88 	.word	0xe000ed88
  4014a4:	00402389 	.word	0x00402389
  4014a8:	004019b5 	.word	0x004019b5

004014ac <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4014ac:	4b3b      	ldr	r3, [pc, #236]	; (40159c <SystemCoreClockUpdate+0xf0>)
  4014ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014b0:	f003 0303 	and.w	r3, r3, #3
  4014b4:	2b01      	cmp	r3, #1
  4014b6:	d01d      	beq.n	4014f4 <SystemCoreClockUpdate+0x48>
  4014b8:	b183      	cbz	r3, 4014dc <SystemCoreClockUpdate+0x30>
  4014ba:	2b02      	cmp	r3, #2
  4014bc:	d036      	beq.n	40152c <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4014be:	4b37      	ldr	r3, [pc, #220]	; (40159c <SystemCoreClockUpdate+0xf0>)
  4014c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014c2:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014c6:	2b70      	cmp	r3, #112	; 0x70
  4014c8:	d05f      	beq.n	40158a <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014ca:	4b34      	ldr	r3, [pc, #208]	; (40159c <SystemCoreClockUpdate+0xf0>)
  4014cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4014ce:	4934      	ldr	r1, [pc, #208]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  4014d0:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4014d4:	680b      	ldr	r3, [r1, #0]
  4014d6:	40d3      	lsrs	r3, r2
  4014d8:	600b      	str	r3, [r1, #0]
  4014da:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4014dc:	4b31      	ldr	r3, [pc, #196]	; (4015a4 <SystemCoreClockUpdate+0xf8>)
  4014de:	695b      	ldr	r3, [r3, #20]
  4014e0:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4014e4:	bf14      	ite	ne
  4014e6:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4014ea:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4014ee:	4b2c      	ldr	r3, [pc, #176]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  4014f0:	601a      	str	r2, [r3, #0]
  4014f2:	e7e4      	b.n	4014be <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4014f4:	4b29      	ldr	r3, [pc, #164]	; (40159c <SystemCoreClockUpdate+0xf0>)
  4014f6:	6a1b      	ldr	r3, [r3, #32]
  4014f8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4014fc:	d003      	beq.n	401506 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4014fe:	4a2a      	ldr	r2, [pc, #168]	; (4015a8 <SystemCoreClockUpdate+0xfc>)
  401500:	4b27      	ldr	r3, [pc, #156]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  401502:	601a      	str	r2, [r3, #0]
  401504:	e7db      	b.n	4014be <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401506:	4a29      	ldr	r2, [pc, #164]	; (4015ac <SystemCoreClockUpdate+0x100>)
  401508:	4b25      	ldr	r3, [pc, #148]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  40150a:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40150c:	4b23      	ldr	r3, [pc, #140]	; (40159c <SystemCoreClockUpdate+0xf0>)
  40150e:	6a1b      	ldr	r3, [r3, #32]
  401510:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401514:	2b10      	cmp	r3, #16
  401516:	d005      	beq.n	401524 <SystemCoreClockUpdate+0x78>
  401518:	2b20      	cmp	r3, #32
  40151a:	d1d0      	bne.n	4014be <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  40151c:	4a22      	ldr	r2, [pc, #136]	; (4015a8 <SystemCoreClockUpdate+0xfc>)
  40151e:	4b20      	ldr	r3, [pc, #128]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  401520:	601a      	str	r2, [r3, #0]
          break;
  401522:	e7cc      	b.n	4014be <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401524:	4a22      	ldr	r2, [pc, #136]	; (4015b0 <SystemCoreClockUpdate+0x104>)
  401526:	4b1e      	ldr	r3, [pc, #120]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  401528:	601a      	str	r2, [r3, #0]
          break;
  40152a:	e7c8      	b.n	4014be <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40152c:	4b1b      	ldr	r3, [pc, #108]	; (40159c <SystemCoreClockUpdate+0xf0>)
  40152e:	6a1b      	ldr	r3, [r3, #32]
  401530:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401534:	d016      	beq.n	401564 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  401536:	4a1c      	ldr	r2, [pc, #112]	; (4015a8 <SystemCoreClockUpdate+0xfc>)
  401538:	4b19      	ldr	r3, [pc, #100]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  40153a:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  40153c:	4b17      	ldr	r3, [pc, #92]	; (40159c <SystemCoreClockUpdate+0xf0>)
  40153e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401540:	f003 0303 	and.w	r3, r3, #3
  401544:	2b02      	cmp	r3, #2
  401546:	d1ba      	bne.n	4014be <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401548:	4a14      	ldr	r2, [pc, #80]	; (40159c <SystemCoreClockUpdate+0xf0>)
  40154a:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40154c:	6a92      	ldr	r2, [r2, #40]	; 0x28
  40154e:	4814      	ldr	r0, [pc, #80]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401550:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401554:	6803      	ldr	r3, [r0, #0]
  401556:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40155a:	b2d2      	uxtb	r2, r2
  40155c:	fbb3 f3f2 	udiv	r3, r3, r2
  401560:	6003      	str	r3, [r0, #0]
  401562:	e7ac      	b.n	4014be <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401564:	4a11      	ldr	r2, [pc, #68]	; (4015ac <SystemCoreClockUpdate+0x100>)
  401566:	4b0e      	ldr	r3, [pc, #56]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  401568:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40156a:	4b0c      	ldr	r3, [pc, #48]	; (40159c <SystemCoreClockUpdate+0xf0>)
  40156c:	6a1b      	ldr	r3, [r3, #32]
  40156e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401572:	2b10      	cmp	r3, #16
  401574:	d005      	beq.n	401582 <SystemCoreClockUpdate+0xd6>
  401576:	2b20      	cmp	r3, #32
  401578:	d1e0      	bne.n	40153c <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40157a:	4a0b      	ldr	r2, [pc, #44]	; (4015a8 <SystemCoreClockUpdate+0xfc>)
  40157c:	4b08      	ldr	r3, [pc, #32]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  40157e:	601a      	str	r2, [r3, #0]
          break;
  401580:	e7dc      	b.n	40153c <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401582:	4a0b      	ldr	r2, [pc, #44]	; (4015b0 <SystemCoreClockUpdate+0x104>)
  401584:	4b06      	ldr	r3, [pc, #24]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  401586:	601a      	str	r2, [r3, #0]
          break;
  401588:	e7d8      	b.n	40153c <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40158a:	4a05      	ldr	r2, [pc, #20]	; (4015a0 <SystemCoreClockUpdate+0xf4>)
  40158c:	6813      	ldr	r3, [r2, #0]
  40158e:	4909      	ldr	r1, [pc, #36]	; (4015b4 <SystemCoreClockUpdate+0x108>)
  401590:	fba1 1303 	umull	r1, r3, r1, r3
  401594:	085b      	lsrs	r3, r3, #1
  401596:	6013      	str	r3, [r2, #0]
  401598:	4770      	bx	lr
  40159a:	bf00      	nop
  40159c:	400e0600 	.word	0x400e0600
  4015a0:	2040001c 	.word	0x2040001c
  4015a4:	400e1810 	.word	0x400e1810
  4015a8:	00b71b00 	.word	0x00b71b00
  4015ac:	003d0900 	.word	0x003d0900
  4015b0:	007a1200 	.word	0x007a1200
  4015b4:	aaaaaaab 	.word	0xaaaaaaab

004015b8 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4015b8:	4b16      	ldr	r3, [pc, #88]	; (401614 <system_init_flash+0x5c>)
  4015ba:	4298      	cmp	r0, r3
  4015bc:	d913      	bls.n	4015e6 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4015be:	4b16      	ldr	r3, [pc, #88]	; (401618 <system_init_flash+0x60>)
  4015c0:	4298      	cmp	r0, r3
  4015c2:	d915      	bls.n	4015f0 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4015c4:	4b15      	ldr	r3, [pc, #84]	; (40161c <system_init_flash+0x64>)
  4015c6:	4298      	cmp	r0, r3
  4015c8:	d916      	bls.n	4015f8 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4015ca:	4b15      	ldr	r3, [pc, #84]	; (401620 <system_init_flash+0x68>)
  4015cc:	4298      	cmp	r0, r3
  4015ce:	d917      	bls.n	401600 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4015d0:	4b14      	ldr	r3, [pc, #80]	; (401624 <system_init_flash+0x6c>)
  4015d2:	4298      	cmp	r0, r3
  4015d4:	d918      	bls.n	401608 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4015d6:	4b14      	ldr	r3, [pc, #80]	; (401628 <system_init_flash+0x70>)
  4015d8:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4015da:	bf94      	ite	ls
  4015dc:	4a13      	ldrls	r2, [pc, #76]	; (40162c <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4015de:	4a14      	ldrhi	r2, [pc, #80]	; (401630 <system_init_flash+0x78>)
  4015e0:	4b14      	ldr	r3, [pc, #80]	; (401634 <system_init_flash+0x7c>)
  4015e2:	601a      	str	r2, [r3, #0]
  4015e4:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4015e6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4015ea:	4b12      	ldr	r3, [pc, #72]	; (401634 <system_init_flash+0x7c>)
  4015ec:	601a      	str	r2, [r3, #0]
  4015ee:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4015f0:	4a11      	ldr	r2, [pc, #68]	; (401638 <system_init_flash+0x80>)
  4015f2:	4b10      	ldr	r3, [pc, #64]	; (401634 <system_init_flash+0x7c>)
  4015f4:	601a      	str	r2, [r3, #0]
  4015f6:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4015f8:	4a10      	ldr	r2, [pc, #64]	; (40163c <system_init_flash+0x84>)
  4015fa:	4b0e      	ldr	r3, [pc, #56]	; (401634 <system_init_flash+0x7c>)
  4015fc:	601a      	str	r2, [r3, #0]
  4015fe:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401600:	4a0f      	ldr	r2, [pc, #60]	; (401640 <system_init_flash+0x88>)
  401602:	4b0c      	ldr	r3, [pc, #48]	; (401634 <system_init_flash+0x7c>)
  401604:	601a      	str	r2, [r3, #0]
  401606:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401608:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  40160c:	4b09      	ldr	r3, [pc, #36]	; (401634 <system_init_flash+0x7c>)
  40160e:	601a      	str	r2, [r3, #0]
  401610:	4770      	bx	lr
  401612:	bf00      	nop
  401614:	015ef3bf 	.word	0x015ef3bf
  401618:	02bde77f 	.word	0x02bde77f
  40161c:	041cdb3f 	.word	0x041cdb3f
  401620:	057bceff 	.word	0x057bceff
  401624:	06dac2bf 	.word	0x06dac2bf
  401628:	0839b67f 	.word	0x0839b67f
  40162c:	04000500 	.word	0x04000500
  401630:	04000600 	.word	0x04000600
  401634:	400e0c00 	.word	0x400e0c00
  401638:	04000100 	.word	0x04000100
  40163c:	04000200 	.word	0x04000200
  401640:	04000300 	.word	0x04000300

00401644 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401644:	4b0a      	ldr	r3, [pc, #40]	; (401670 <_sbrk+0x2c>)
  401646:	681b      	ldr	r3, [r3, #0]
  401648:	b153      	cbz	r3, 401660 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40164a:	4b09      	ldr	r3, [pc, #36]	; (401670 <_sbrk+0x2c>)
  40164c:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40164e:	181a      	adds	r2, r3, r0
  401650:	4908      	ldr	r1, [pc, #32]	; (401674 <_sbrk+0x30>)
  401652:	4291      	cmp	r1, r2
  401654:	db08      	blt.n	401668 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401656:	4610      	mov	r0, r2
  401658:	4a05      	ldr	r2, [pc, #20]	; (401670 <_sbrk+0x2c>)
  40165a:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  40165c:	4618      	mov	r0, r3
  40165e:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401660:	4a05      	ldr	r2, [pc, #20]	; (401678 <_sbrk+0x34>)
  401662:	4b03      	ldr	r3, [pc, #12]	; (401670 <_sbrk+0x2c>)
  401664:	601a      	str	r2, [r3, #0]
  401666:	e7f0      	b.n	40164a <_sbrk+0x6>
		return (caddr_t) -1;	
  401668:	f04f 30ff 	mov.w	r0, #4294967295
}
  40166c:	4770      	bx	lr
  40166e:	bf00      	nop
  401670:	20400c78 	.word	0x20400c78
  401674:	2045fffc 	.word	0x2045fffc
  401678:	20402ef8 	.word	0x20402ef8

0040167c <Button3_Handler>:



static void Button3_Handler(uint32_t id, uint32_t mask)
{
	mag_pulses = mag_pulses+1;
  40167c:	4a02      	ldr	r2, [pc, #8]	; (401688 <Button3_Handler+0xc>)
  40167e:	6813      	ldr	r3, [r2, #0]
  401680:	3301      	adds	r3, #1
  401682:	6013      	str	r3, [r2, #0]
  401684:	4770      	bx	lr
  401686:	bf00      	nop
  401688:	20400c84 	.word	0x20400c84

0040168c <Button2_Handler>:
		mag_pulses = 0;
	}
}
static void Button2_Handler(uint32_t id, uint32_t mask)
{
	what =what+1;
  40168c:	4a07      	ldr	r2, [pc, #28]	; (4016ac <Button2_Handler+0x20>)
  40168e:	7813      	ldrb	r3, [r2, #0]
  401690:	3301      	adds	r3, #1
  401692:	b2db      	uxtb	r3, r3
  401694:	7013      	strb	r3, [r2, #0]
	if (what > 2){
  401696:	7813      	ldrb	r3, [r2, #0]
  401698:	b2db      	uxtb	r3, r3
  40169a:	2b02      	cmp	r3, #2
  40169c:	d902      	bls.n	4016a4 <Button2_Handler+0x18>
		what = 0;
  40169e:	2200      	movs	r2, #0
  4016a0:	4b02      	ldr	r3, [pc, #8]	; (4016ac <Button2_Handler+0x20>)
  4016a2:	701a      	strb	r2, [r3, #0]
	}
	flag_draw = true;
  4016a4:	2201      	movs	r2, #1
  4016a6:	4b02      	ldr	r3, [pc, #8]	; (4016b0 <Button2_Handler+0x24>)
  4016a8:	701a      	strb	r2, [r3, #0]
  4016aa:	4770      	bx	lr
  4016ac:	20400c94 	.word	0x20400c94
  4016b0:	20400c81 	.word	0x20400c81

004016b4 <Button1_Handler>:
{
  4016b4:	b508      	push	{r3, lr}
	pmc_disable_periph_clk(ID_RTC);
  4016b6:	2002      	movs	r0, #2
  4016b8:	4b07      	ldr	r3, [pc, #28]	; (4016d8 <Button1_Handler+0x24>)
  4016ba:	4798      	blx	r3
	if(on_off){
  4016bc:	4b07      	ldr	r3, [pc, #28]	; (4016dc <Button1_Handler+0x28>)
  4016be:	781b      	ldrb	r3, [r3, #0]
  4016c0:	b933      	cbnz	r3, 4016d0 <Button1_Handler+0x1c>
		on_off = true;
  4016c2:	2201      	movs	r2, #1
  4016c4:	4b05      	ldr	r3, [pc, #20]	; (4016dc <Button1_Handler+0x28>)
  4016c6:	701a      	strb	r2, [r3, #0]
		mag_pulses = 0;
  4016c8:	2200      	movs	r2, #0
  4016ca:	4b05      	ldr	r3, [pc, #20]	; (4016e0 <Button1_Handler+0x2c>)
  4016cc:	601a      	str	r2, [r3, #0]
  4016ce:	bd08      	pop	{r3, pc}
		on_off = false;		
  4016d0:	2200      	movs	r2, #0
  4016d2:	4b02      	ldr	r3, [pc, #8]	; (4016dc <Button1_Handler+0x28>)
  4016d4:	701a      	strb	r2, [r3, #0]
  4016d6:	bd08      	pop	{r3, pc}
  4016d8:	004010c9 	.word	0x004010c9
  4016dc:	20400c88 	.word	0x20400c88
  4016e0:	20400c84 	.word	0x20400c84
  4016e4:	00000000 	.word	0x00000000

004016e8 <RTT_Handler>:
}
static float get_time_rtt(){
	uint ul_previous_time = rtt_read_timer_value(RTT);
}
void RTT_Handler(void)
{
  4016e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t ul_status;

	/* Get RTT status */
	ul_status = rtt_get_status(RTT);
  4016ec:	4832      	ldr	r0, [pc, #200]	; (4017b8 <RTT_Handler+0xd0>)
  4016ee:	4b33      	ldr	r3, [pc, #204]	; (4017bc <RTT_Handler+0xd4>)
  4016f0:	4798      	blx	r3
  4016f2:	4604      	mov	r4, r0

	/* IRQ due to Time has changed */
	if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC) {
  4016f4:	f010 0f02 	tst.w	r0, #2
  4016f8:	d049      	beq.n	40178e <RTT_Handler+0xa6>
	
		vel = 3.6*2*3.1415*raio*mag_pulses/(4);
  4016fa:	4b31      	ldr	r3, [pc, #196]	; (4017c0 <RTT_Handler+0xd8>)
  4016fc:	e9d3 0100 	ldrd	r0, r1, [r3]
  401700:	4b30      	ldr	r3, [pc, #192]	; (4017c4 <RTT_Handler+0xdc>)
  401702:	f8d3 8000 	ldr.w	r8, [r3]
  401706:	4d30      	ldr	r5, [pc, #192]	; (4017c8 <RTT_Handler+0xe0>)
  401708:	a327      	add	r3, pc, #156	; (adr r3, 4017a8 <RTT_Handler+0xc0>)
  40170a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40170e:	47a8      	blx	r5
  401710:	4606      	mov	r6, r0
  401712:	460f      	mov	r7, r1
  401714:	4640      	mov	r0, r8
  401716:	4b2d      	ldr	r3, [pc, #180]	; (4017cc <RTT_Handler+0xe4>)
  401718:	4798      	blx	r3
  40171a:	4602      	mov	r2, r0
  40171c:	460b      	mov	r3, r1
  40171e:	4630      	mov	r0, r6
  401720:	4639      	mov	r1, r7
  401722:	47a8      	blx	r5
  401724:	2200      	movs	r2, #0
  401726:	4b2a      	ldr	r3, [pc, #168]	; (4017d0 <RTT_Handler+0xe8>)
  401728:	47a8      	blx	r5
  40172a:	4b2a      	ldr	r3, [pc, #168]	; (4017d4 <RTT_Handler+0xec>)
  40172c:	4798      	blx	r3
  40172e:	4b2a      	ldr	r3, [pc, #168]	; (4017d8 <RTT_Handler+0xf0>)
  401730:	6018      	str	r0, [r3, #0]
	
		if(on_off){
  401732:	4b2a      	ldr	r3, [pc, #168]	; (4017dc <RTT_Handler+0xf4>)
  401734:	781b      	ldrb	r3, [r3, #0]
  401736:	b323      	cbz	r3, 401782 <RTT_Handler+0x9a>
			distance = 2*3.1415*raio*mag_pulses + distance;
  401738:	4b21      	ldr	r3, [pc, #132]	; (4017c0 <RTT_Handler+0xd8>)
  40173a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40173e:	4b21      	ldr	r3, [pc, #132]	; (4017c4 <RTT_Handler+0xdc>)
  401740:	f8d3 b000 	ldr.w	fp, [r3]
  401744:	4d26      	ldr	r5, [pc, #152]	; (4017e0 <RTT_Handler+0xf8>)
  401746:	682f      	ldr	r7, [r5, #0]
  401748:	f8df a07c 	ldr.w	sl, [pc, #124]	; 4017c8 <RTT_Handler+0xe0>
  40174c:	a318      	add	r3, pc, #96	; (adr r3, 4017b0 <RTT_Handler+0xc8>)
  40174e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401752:	47d0      	blx	sl
  401754:	4680      	mov	r8, r0
  401756:	4689      	mov	r9, r1
  401758:	4e1c      	ldr	r6, [pc, #112]	; (4017cc <RTT_Handler+0xe4>)
  40175a:	4658      	mov	r0, fp
  40175c:	47b0      	blx	r6
  40175e:	4602      	mov	r2, r0
  401760:	460b      	mov	r3, r1
  401762:	4640      	mov	r0, r8
  401764:	4649      	mov	r1, r9
  401766:	47d0      	blx	sl
  401768:	4680      	mov	r8, r0
  40176a:	4689      	mov	r9, r1
  40176c:	4638      	mov	r0, r7
  40176e:	47b0      	blx	r6
  401770:	4602      	mov	r2, r0
  401772:	460b      	mov	r3, r1
  401774:	4640      	mov	r0, r8
  401776:	4649      	mov	r1, r9
  401778:	4e1a      	ldr	r6, [pc, #104]	; (4017e4 <RTT_Handler+0xfc>)
  40177a:	47b0      	blx	r6
  40177c:	4b15      	ldr	r3, [pc, #84]	; (4017d4 <RTT_Handler+0xec>)
  40177e:	4798      	blx	r3
  401780:	6028      	str	r0, [r5, #0]
		}
		mag_pulses = 0;
  401782:	2200      	movs	r2, #0
  401784:	4b0f      	ldr	r3, [pc, #60]	; (4017c4 <RTT_Handler+0xdc>)
  401786:	601a      	str	r2, [r3, #0]
		flag_draw = true;
  401788:	2201      	movs	r2, #1
  40178a:	4b17      	ldr	r3, [pc, #92]	; (4017e8 <RTT_Handler+0x100>)
  40178c:	701a      	strb	r2, [r3, #0]
	}

	/* IRQ due to Alarm */
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  40178e:	f014 0f01 	tst.w	r4, #1
  401792:	d004      	beq.n	40179e <RTT_Handler+0xb6>
		   
		flag_draw = true;
  401794:	2301      	movs	r3, #1
  401796:	4a14      	ldr	r2, [pc, #80]	; (4017e8 <RTT_Handler+0x100>)
  401798:	7013      	strb	r3, [r2, #0]
		f_rtt_alarme = true;                  // flag RTT alarme
  40179a:	4a14      	ldr	r2, [pc, #80]	; (4017ec <RTT_Handler+0x104>)
  40179c:	7013      	strb	r3, [r2, #0]
  40179e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4017a2:	bf00      	nop
  4017a4:	f3af 8000 	nop.w
  4017a8:	ad42c3ca 	.word	0xad42c3ca
  4017ac:	40369e69 	.word	0x40369e69
  4017b0:	c083126f 	.word	0xc083126f
  4017b4:	401921ca 	.word	0x401921ca
  4017b8:	400e1830 	.word	0x400e1830
  4017bc:	00400395 	.word	0x00400395
  4017c0:	20400020 	.word	0x20400020
  4017c4:	20400c84 	.word	0x20400c84
  4017c8:	00401f15 	.word	0x00401f15
  4017cc:	00401e49 	.word	0x00401e49
  4017d0:	3fd00000 	.word	0x3fd00000
  4017d4:	00402339 	.word	0x00402339
  4017d8:	20400c90 	.word	0x20400c90
  4017dc:	20400c88 	.word	0x20400c88
  4017e0:	20400c7c 	.word	0x20400c7c
  4017e4:	00401bb1 	.word	0x00401bb1
  4017e8:	20400c81 	.word	0x20400c81
  4017ec:	20400c80 	.word	0x20400c80

004017f0 <RTC_Handler>:
	}
}


void RTC_Handler(void)
{
  4017f0:	b538      	push	{r3, r4, r5, lr}
	uint32_t ul_status = rtc_get_status(RTC);
  4017f2:	4816      	ldr	r0, [pc, #88]	; (40184c <RTC_Handler+0x5c>)
  4017f4:	4b16      	ldr	r3, [pc, #88]	; (401850 <RTC_Handler+0x60>)
  4017f6:	4798      	blx	r3
  4017f8:	4604      	mov	r4, r0

	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  4017fa:	f010 0f04 	tst.w	r0, #4
  4017fe:	d111      	bne.n	401824 <RTC_Handler+0x34>
		}
		flag_draw = true;
	}
	
	/* Time or date alarm */
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  401800:	f014 0f02 	tst.w	r4, #2
  401804:	d11d      	bne.n	401842 <RTC_Handler+0x52>
			rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
	
	}
	
	
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  401806:	4d11      	ldr	r5, [pc, #68]	; (40184c <RTC_Handler+0x5c>)
  401808:	2101      	movs	r1, #1
  40180a:	4628      	mov	r0, r5
  40180c:	4c11      	ldr	r4, [pc, #68]	; (401854 <RTC_Handler+0x64>)
  40180e:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  401810:	2108      	movs	r1, #8
  401812:	4628      	mov	r0, r5
  401814:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  401816:	2110      	movs	r1, #16
  401818:	4628      	mov	r0, r5
  40181a:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);
  40181c:	2120      	movs	r1, #32
  40181e:	4628      	mov	r0, r5
  401820:	47a0      	blx	r4
  401822:	bd38      	pop	{r3, r4, r5, pc}
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  401824:	2104      	movs	r1, #4
  401826:	4809      	ldr	r0, [pc, #36]	; (40184c <RTC_Handler+0x5c>)
  401828:	4b0a      	ldr	r3, [pc, #40]	; (401854 <RTC_Handler+0x64>)
  40182a:	4798      	blx	r3
		if(on_off){
  40182c:	4b0a      	ldr	r3, [pc, #40]	; (401858 <RTC_Handler+0x68>)
  40182e:	781b      	ldrb	r3, [r3, #0]
  401830:	b11b      	cbz	r3, 40183a <RTC_Handler+0x4a>
			temps = temps+1;
  401832:	4a0a      	ldr	r2, [pc, #40]	; (40185c <RTC_Handler+0x6c>)
  401834:	6813      	ldr	r3, [r2, #0]
  401836:	3301      	adds	r3, #1
  401838:	6013      	str	r3, [r2, #0]
		flag_draw = true;
  40183a:	2201      	movs	r2, #1
  40183c:	4b08      	ldr	r3, [pc, #32]	; (401860 <RTC_Handler+0x70>)
  40183e:	701a      	strb	r2, [r3, #0]
  401840:	e7de      	b.n	401800 <RTC_Handler+0x10>
			rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  401842:	2102      	movs	r1, #2
  401844:	4801      	ldr	r0, [pc, #4]	; (40184c <RTC_Handler+0x5c>)
  401846:	4b03      	ldr	r3, [pc, #12]	; (401854 <RTC_Handler+0x64>)
  401848:	4798      	blx	r3
  40184a:	e7dc      	b.n	401806 <RTC_Handler+0x16>
  40184c:	400e1860 	.word	0x400e1860
  401850:	00400311 	.word	0x00400311
  401854:	00400315 	.word	0x00400315
  401858:	20400c88 	.word	0x20400c88
  40185c:	20400c8c 	.word	0x20400c8c
  401860:	20400c81 	.word	0x20400c81

00401864 <BUT_init>:
	
	
	
}
void BUT_init(void){
  401864:	b5f0      	push	{r4, r5, r6, r7, lr}
  401866:	b083      	sub	sp, #12
	/* config. pino botao em modo de entrada */
	pmc_enable_periph_clk(BUT1_PIO_ID);
  401868:	2010      	movs	r0, #16
  40186a:	4c2a      	ldr	r4, [pc, #168]	; (401914 <BUT_init+0xb0>)
  40186c:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT2_PIO_ID);
  40186e:	200c      	movs	r0, #12
  401870:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT3_PIO_ID);
  401872:	200a      	movs	r0, #10
  401874:	47a0      	blx	r4
	pio_set_input(BUT1_PIO, BUT1_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401876:	4c28      	ldr	r4, [pc, #160]	; (401918 <BUT_init+0xb4>)
  401878:	2209      	movs	r2, #9
  40187a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40187e:	4620      	mov	r0, r4
  401880:	4f26      	ldr	r7, [pc, #152]	; (40191c <BUT_init+0xb8>)
  401882:	47b8      	blx	r7
	pio_set_input(BUT2_PIO, BUT2_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401884:	4e26      	ldr	r6, [pc, #152]	; (401920 <BUT_init+0xbc>)
  401886:	2209      	movs	r2, #9
  401888:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  40188c:	4630      	mov	r0, r6
  40188e:	47b8      	blx	r7
	pio_set_input(BUT3_PIO, BUT3_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401890:	4d24      	ldr	r5, [pc, #144]	; (401924 <BUT_init+0xc0>)
  401892:	2209      	movs	r2, #9
  401894:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  401898:	4628      	mov	r0, r5
  40189a:	47b8      	blx	r7

	/* config. interrupcao em borda de descida no botao do kit */
	/* indica funcao (but_Handler) a ser chamada quando houver uma interrup??o */
	pio_enable_interrupt(BUT1_PIO, BUT1_PIN_MASK);
  40189c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4018a0:	4620      	mov	r0, r4
  4018a2:	4f21      	ldr	r7, [pc, #132]	; (401928 <BUT_init+0xc4>)
  4018a4:	47b8      	blx	r7
	pio_enable_interrupt(BUT2_PIO, BUT2_PIN_MASK);
  4018a6:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4018aa:	4630      	mov	r0, r6
  4018ac:	47b8      	blx	r7
	pio_enable_interrupt(BUT3_PIO, BUT3_PIN_MASK);
  4018ae:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4018b2:	4628      	mov	r0, r5
  4018b4:	47b8      	blx	r7
	pio_handler_set(BUT1_PIO, BUT1_PIO_ID, BUT1_PIN_MASK, PIO_IT_FALL_EDGE, Button1_Handler);
  4018b6:	4b1d      	ldr	r3, [pc, #116]	; (40192c <BUT_init+0xc8>)
  4018b8:	9300      	str	r3, [sp, #0]
  4018ba:	2350      	movs	r3, #80	; 0x50
  4018bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4018c0:	2110      	movs	r1, #16
  4018c2:	4620      	mov	r0, r4
  4018c4:	4c1a      	ldr	r4, [pc, #104]	; (401930 <BUT_init+0xcc>)
  4018c6:	47a0      	blx	r4
	pio_handler_set(BUT2_PIO, BUT2_PIO_ID, BUT2_PIN_MASK, PIO_IT_FALL_EDGE, Button2_Handler);
  4018c8:	4b1a      	ldr	r3, [pc, #104]	; (401934 <BUT_init+0xd0>)
  4018ca:	9300      	str	r3, [sp, #0]
  4018cc:	2350      	movs	r3, #80	; 0x50
  4018ce:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4018d2:	210c      	movs	r1, #12
  4018d4:	4630      	mov	r0, r6
  4018d6:	47a0      	blx	r4
	pio_handler_set(BUT3_PIO, BUT3_PIO_ID, BUT3_PIN_MASK, PIO_IT_FALL_EDGE, Button3_Handler);
  4018d8:	4b17      	ldr	r3, [pc, #92]	; (401938 <BUT_init+0xd4>)
  4018da:	9300      	str	r3, [sp, #0]
  4018dc:	2350      	movs	r3, #80	; 0x50
  4018de:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4018e2:	210a      	movs	r1, #10
  4018e4:	4628      	mov	r0, r5
  4018e6:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4018e8:	4b14      	ldr	r3, [pc, #80]	; (40193c <BUT_init+0xd8>)
  4018ea:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  4018ee:	601a      	str	r2, [r3, #0]
  4018f0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  4018f4:	601a      	str	r2, [r3, #0]
  4018f6:	f44f 6280 	mov.w	r2, #1024	; 0x400
  4018fa:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4018fc:	2240      	movs	r2, #64	; 0x40
  4018fe:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
  401902:	2260      	movs	r2, #96	; 0x60
  401904:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  401908:	2280      	movs	r2, #128	; 0x80
  40190a:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
	NVIC_EnableIRQ(BUT3_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 2);
	NVIC_SetPriority(BUT2_PIO_ID, 3);
	NVIC_SetPriority(BUT3_PIO_ID, 4);
	
};
  40190e:	b003      	add	sp, #12
  401910:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401912:	bf00      	nop
  401914:	00401075 	.word	0x00401075
  401918:	400e1400 	.word	0x400e1400
  40191c:	00400d03 	.word	0x00400d03
  401920:	400e1200 	.word	0x400e1200
  401924:	400e0e00 	.word	0x400e0e00
  401928:	00400e23 	.word	0x00400e23
  40192c:	004016b5 	.word	0x004016b5
  401930:	00400e81 	.word	0x00400e81
  401934:	0040168d 	.word	0x0040168d
  401938:	0040167d 	.word	0x0040167d
  40193c:	e000e100 	.word	0xe000e100

00401940 <RTC_init>:
	NVIC_SetPriority(RTT_IRQn, 0);
	NVIC_EnableIRQ(RTT_IRQn);
	rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
}

void RTC_init(){
  401940:	b570      	push	{r4, r5, r6, lr}
  401942:	b082      	sub	sp, #8
	/* Configura o PMC */
	pmc_enable_periph_clk(ID_RTC);
  401944:	2002      	movs	r0, #2
  401946:	4b14      	ldr	r3, [pc, #80]	; (401998 <RTC_init+0x58>)
  401948:	4798      	blx	r3

	/* Default RTC configuration, 24-hour mode */
	rtc_set_hour_mode(RTC, 0);
  40194a:	4c14      	ldr	r4, [pc, #80]	; (40199c <RTC_init+0x5c>)
  40194c:	2100      	movs	r1, #0
  40194e:	4620      	mov	r0, r4
  401950:	4b13      	ldr	r3, [pc, #76]	; (4019a0 <RTC_init+0x60>)
  401952:	4798      	blx	r3

	/* Configura data e hora manualmente */
	rtc_set_date(RTC, YEAR, MOUNTH, DAY, WEEK);
  401954:	230c      	movs	r3, #12
  401956:	9300      	str	r3, [sp, #0]
  401958:	2313      	movs	r3, #19
  40195a:	2203      	movs	r2, #3
  40195c:	f240 71e2 	movw	r1, #2018	; 0x7e2
  401960:	4620      	mov	r0, r4
  401962:	4d10      	ldr	r5, [pc, #64]	; (4019a4 <RTC_init+0x64>)
  401964:	47a8      	blx	r5
	rtc_set_time(RTC, HOUR, MINUTE, SECOND);
  401966:	2300      	movs	r3, #0
  401968:	222d      	movs	r2, #45	; 0x2d
  40196a:	210f      	movs	r1, #15
  40196c:	4620      	mov	r0, r4
  40196e:	4d0e      	ldr	r5, [pc, #56]	; (4019a8 <RTC_init+0x68>)
  401970:	47a8      	blx	r5
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401972:	4b0e      	ldr	r3, [pc, #56]	; (4019ac <RTC_init+0x6c>)
  401974:	2504      	movs	r5, #4
  401976:	f8c3 5080 	str.w	r5, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40197a:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40197e:	2200      	movs	r2, #0
  401980:	f883 2302 	strb.w	r2, [r3, #770]	; 0x302
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401984:	601d      	str	r5, [r3, #0]
	NVIC_ClearPendingIRQ(RTC_IRQn);
	NVIC_SetPriority(RTC_IRQn, 0);
	NVIC_EnableIRQ(RTC_IRQn);

	/* Ativa interrupcao via alarme */
	rtc_enable_interrupt(RTC,  RTC_IER_ALREN);
  401986:	2102      	movs	r1, #2
  401988:	4620      	mov	r0, r4
  40198a:	4e09      	ldr	r6, [pc, #36]	; (4019b0 <RTC_init+0x70>)
  40198c:	47b0      	blx	r6
	rtc_enable_interrupt(RTC, RTC_IER_SECEN);
  40198e:	4629      	mov	r1, r5
  401990:	4620      	mov	r0, r4
  401992:	47b0      	blx	r6

}
  401994:	b002      	add	sp, #8
  401996:	bd70      	pop	{r4, r5, r6, pc}
  401998:	00401075 	.word	0x00401075
  40199c:	400e1860 	.word	0x400e1860
  4019a0:	004001ad 	.word	0x004001ad
  4019a4:	00400259 	.word	0x00400259
  4019a8:	004001c9 	.word	0x004001c9
  4019ac:	e000e100 	.word	0xe000e100
  4019b0:	004001c3 	.word	0x004001c3

004019b4 <main>:


int main (void)
{
  4019b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4019b8:	b093      	sub	sp, #76	; 0x4c
	/* Insert system clock initialization code here (sysclk_init()). */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4019ba:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4019be:	4b5b      	ldr	r3, [pc, #364]	; (401b2c <main+0x178>)
  4019c0:	605a      	str	r2, [r3, #4]
	board_init();
  4019c2:	4b5b      	ldr	r3, [pc, #364]	; (401b30 <main+0x17c>)
  4019c4:	4798      	blx	r3
	sysclk_init();
  4019c6:	4b5b      	ldr	r3, [pc, #364]	; (401b34 <main+0x180>)
  4019c8:	4798      	blx	r3
	f_rtt_alarme = true;
  4019ca:	2201      	movs	r2, #1
  4019cc:	4b5a      	ldr	r3, [pc, #360]	; (401b38 <main+0x184>)
  4019ce:	701a      	strb	r2, [r3, #0]
	RTC_init();
  4019d0:	4b5a      	ldr	r3, [pc, #360]	; (401b3c <main+0x188>)
  4019d2:	4798      	blx	r3

	delay_init();
	BUT_init();
  4019d4:	4b5a      	ldr	r3, [pc, #360]	; (401b40 <main+0x18c>)
  4019d6:	4798      	blx	r3
	gfx_mono_ssd1306_init();
  4019d8:	4b5a      	ldr	r3, [pc, #360]	; (401b44 <main+0x190>)
  4019da:	4798      	blx	r3
				int minut = (temps%360)/60;
				int seconds = (temps%60);		
				sprintf(buffer,"%02d:%02d:%02d  ",hour, minut, seconds);
				gfx_mono_draw_string(buffer,0,16,&sysfont);
			}
			flag_draw = false;
  4019dc:	f04f 0900 	mov.w	r9, #0
		}
		if (f_rtt_alarme){
  4019e0:	4f55      	ldr	r7, [pc, #340]	; (401b38 <main+0x184>)
	rtt_sel_source(RTT, false);
  4019e2:	4d59      	ldr	r5, [pc, #356]	; (401b48 <main+0x194>)
	ul_previous_time = rtt_read_timer_value(RTT);
  4019e4:	4e59      	ldr	r6, [pc, #356]	; (401b4c <main+0x198>)
  4019e6:	e09c      	b.n	401b22 <main+0x16e>
				sprintf(&buffer,"%03d km/h ",vel);
  4019e8:	4b59      	ldr	r3, [pc, #356]	; (401b50 <main+0x19c>)
  4019ea:	681a      	ldr	r2, [r3, #0]
  4019ec:	4959      	ldr	r1, [pc, #356]	; (401b54 <main+0x1a0>)
  4019ee:	a802      	add	r0, sp, #8
  4019f0:	4b59      	ldr	r3, [pc, #356]	; (401b58 <main+0x1a4>)
  4019f2:	4798      	blx	r3
				gfx_mono_draw_string("Vel  ",1,16,&sysfont);
  4019f4:	f8df b178 	ldr.w	fp, [pc, #376]	; 401b70 <main+0x1bc>
  4019f8:	465b      	mov	r3, fp
  4019fa:	2210      	movs	r2, #16
  4019fc:	2101      	movs	r1, #1
  4019fe:	4857      	ldr	r0, [pc, #348]	; (401b5c <main+0x1a8>)
  401a00:	f8df a194 	ldr.w	sl, [pc, #404]	; 401b98 <main+0x1e4>
  401a04:	47d0      	blx	sl
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  401a06:	465b      	mov	r3, fp
  401a08:	2210      	movs	r2, #16
  401a0a:	2128      	movs	r1, #40	; 0x28
  401a0c:	a802      	add	r0, sp, #8
  401a0e:	47d0      	blx	sl
			flag_draw = false;
  401a10:	f884 9000 	strb.w	r9, [r4]
		if (f_rtt_alarme){
  401a14:	783b      	ldrb	r3, [r7, #0]
  401a16:	2b00      	cmp	r3, #0
  401a18:	d15e      	bne.n	401ad8 <main+0x124>
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401a1a:	2002      	movs	r0, #2
  401a1c:	47c0      	blx	r8
		if(flag_draw){
  401a1e:	7823      	ldrb	r3, [r4, #0]
  401a20:	2b00      	cmp	r3, #0
  401a22:	d0f7      	beq.n	401a14 <main+0x60>
			if(what==0){
  401a24:	4b4e      	ldr	r3, [pc, #312]	; (401b60 <main+0x1ac>)
  401a26:	781b      	ldrb	r3, [r3, #0]
  401a28:	2b00      	cmp	r3, #0
  401a2a:	d0dd      	beq.n	4019e8 <main+0x34>
			else if(what==1){
  401a2c:	4b4c      	ldr	r3, [pc, #304]	; (401b60 <main+0x1ac>)
  401a2e:	781b      	ldrb	r3, [r3, #0]
  401a30:	b2db      	uxtb	r3, r3
  401a32:	2b01      	cmp	r3, #1
  401a34:	d03b      	beq.n	401aae <main+0xfa>
			else if(what==2){
  401a36:	4b4a      	ldr	r3, [pc, #296]	; (401b60 <main+0x1ac>)
  401a38:	781b      	ldrb	r3, [r3, #0]
  401a3a:	b2db      	uxtb	r3, r3
  401a3c:	2b02      	cmp	r3, #2
  401a3e:	d1e7      	bne.n	401a10 <main+0x5c>
				int hour = temps/360;
  401a40:	4a48      	ldr	r2, [pc, #288]	; (401b64 <main+0x1b0>)
  401a42:	6810      	ldr	r0, [r2, #0]
				int minut = (temps%360)/60;
  401a44:	6813      	ldr	r3, [r2, #0]
				int seconds = (temps%60);		
  401a46:	6811      	ldr	r1, [r2, #0]
				int minut = (temps%360)/60;
  401a48:	4a47      	ldr	r2, [pc, #284]	; (401b68 <main+0x1b4>)
  401a4a:	fb82 e203 	smull	lr, r2, r2, r3
  401a4e:	eb02 0e03 	add.w	lr, r2, r3
  401a52:	17da      	asrs	r2, r3, #31
  401a54:	ebc2 222e 	rsb	r2, r2, lr, asr #8
  401a58:	f44f 7eb4 	mov.w	lr, #360	; 0x168
  401a5c:	fb0e 3212 	mls	r2, lr, r2, r3
  401a60:	f8df a138 	ldr.w	sl, [pc, #312]	; 401b9c <main+0x1e8>
  401a64:	fb8a 3c02 	smull	r3, ip, sl, r2
  401a68:	4494      	add	ip, r2
  401a6a:	17d3      	asrs	r3, r2, #31
				int hour = temps/360;
  401a6c:	4a3e      	ldr	r2, [pc, #248]	; (401b68 <main+0x1b4>)
  401a6e:	fb82 2e00 	smull	r2, lr, r2, r0
  401a72:	4486      	add	lr, r0
  401a74:	17c2      	asrs	r2, r0, #31
				int seconds = (temps%60);		
  401a76:	fb8a 0a01 	smull	r0, sl, sl, r1
  401a7a:	448a      	add	sl, r1
  401a7c:	17c8      	asrs	r0, r1, #31
  401a7e:	ebc0 106a 	rsb	r0, r0, sl, asr #5
  401a82:	ebc0 1000 	rsb	r0, r0, r0, lsl #4
  401a86:	eba1 0180 	sub.w	r1, r1, r0, lsl #2
				sprintf(buffer,"%02d:%02d:%02d  ",hour, minut, seconds);
  401a8a:	9100      	str	r1, [sp, #0]
  401a8c:	ebc3 136c 	rsb	r3, r3, ip, asr #5
  401a90:	ebc2 222e 	rsb	r2, r2, lr, asr #8
  401a94:	4935      	ldr	r1, [pc, #212]	; (401b6c <main+0x1b8>)
  401a96:	a802      	add	r0, sp, #8
  401a98:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 401b58 <main+0x1a4>
  401a9c:	47d0      	blx	sl
				gfx_mono_draw_string(buffer,0,16,&sysfont);
  401a9e:	4b34      	ldr	r3, [pc, #208]	; (401b70 <main+0x1bc>)
  401aa0:	2210      	movs	r2, #16
  401aa2:	4649      	mov	r1, r9
  401aa4:	a802      	add	r0, sp, #8
  401aa6:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 401b98 <main+0x1e4>
  401aaa:	47d0      	blx	sl
  401aac:	e7b0      	b.n	401a10 <main+0x5c>
				sprintf(&buffer,"%04d m  ",distance);
  401aae:	4b31      	ldr	r3, [pc, #196]	; (401b74 <main+0x1c0>)
  401ab0:	681a      	ldr	r2, [r3, #0]
  401ab2:	4931      	ldr	r1, [pc, #196]	; (401b78 <main+0x1c4>)
  401ab4:	a802      	add	r0, sp, #8
  401ab6:	4b28      	ldr	r3, [pc, #160]	; (401b58 <main+0x1a4>)
  401ab8:	4798      	blx	r3
				gfx_mono_draw_string("Mts ",1,16,&sysfont);
  401aba:	f8df b0b4 	ldr.w	fp, [pc, #180]	; 401b70 <main+0x1bc>
  401abe:	465b      	mov	r3, fp
  401ac0:	2210      	movs	r2, #16
  401ac2:	2101      	movs	r1, #1
  401ac4:	482d      	ldr	r0, [pc, #180]	; (401b7c <main+0x1c8>)
  401ac6:	f8df a0d0 	ldr.w	sl, [pc, #208]	; 401b98 <main+0x1e4>
  401aca:	47d0      	blx	sl
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  401acc:	465b      	mov	r3, fp
  401ace:	2210      	movs	r2, #16
  401ad0:	2128      	movs	r1, #40	; 0x28
  401ad2:	a802      	add	r0, sp, #8
  401ad4:	47d0      	blx	sl
  401ad6:	e79b      	b.n	401a10 <main+0x5c>
	rtt_sel_source(RTT, false);
  401ad8:	4649      	mov	r1, r9
  401ada:	4628      	mov	r0, r5
  401adc:	4b28      	ldr	r3, [pc, #160]	; (401b80 <main+0x1cc>)
  401ade:	4798      	blx	r3
	rtt_init(RTT, pllPreScale);
  401ae0:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  401ae4:	4628      	mov	r0, r5
  401ae6:	4b27      	ldr	r3, [pc, #156]	; (401b84 <main+0x1d0>)
  401ae8:	4798      	blx	r3
	ul_previous_time = rtt_read_timer_value(RTT);
  401aea:	4628      	mov	r0, r5
  401aec:	47b0      	blx	r6
  401aee:	4604      	mov	r4, r0
	while (ul_previous_time == rtt_read_timer_value(RTT));
  401af0:	4628      	mov	r0, r5
  401af2:	47b0      	blx	r6
  401af4:	4284      	cmp	r4, r0
  401af6:	d0fb      	beq.n	401af0 <main+0x13c>
	rtt_write_alarm_time(RTT, IrqNPulses+ul_previous_time);
  401af8:	f104 0108 	add.w	r1, r4, #8
  401afc:	4628      	mov	r0, r5
  401afe:	4b22      	ldr	r3, [pc, #136]	; (401b88 <main+0x1d4>)
  401b00:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401b02:	4b22      	ldr	r3, [pc, #136]	; (401b8c <main+0x1d8>)
  401b04:	2208      	movs	r2, #8
  401b06:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401b0a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401b0e:	f883 9303 	strb.w	r9, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401b12:	601a      	str	r2, [r3, #0]
	rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  401b14:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  401b18:	4628      	mov	r0, r5
  401b1a:	4b1d      	ldr	r3, [pc, #116]	; (401b90 <main+0x1dc>)
  401b1c:	4798      	blx	r3
			uint16_t pllPreScale = (int) (((float) 32768) / 2.0);
			uint32_t irqRTTvalue  = 8;
			RTT_init(pllPreScale, irqRTTvalue);
			f_rtt_alarme = false;
  401b1e:	f887 9000 	strb.w	r9, [r7]
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401b22:	f8df 807c 	ldr.w	r8, [pc, #124]	; 401ba0 <main+0x1ec>
		if(flag_draw){
  401b26:	4c1b      	ldr	r4, [pc, #108]	; (401b94 <main+0x1e0>)
  401b28:	e777      	b.n	401a1a <main+0x66>
  401b2a:	bf00      	nop
  401b2c:	400e1850 	.word	0x400e1850
  401b30:	00400b31 	.word	0x00400b31
  401b34:	00400ac1 	.word	0x00400ac1
  401b38:	20400c80 	.word	0x20400c80
  401b3c:	00401941 	.word	0x00401941
  401b40:	00401865 	.word	0x00401865
  401b44:	004007a1 	.word	0x004007a1
  401b48:	400e1830 	.word	0x400e1830
  401b4c:	00400381 	.word	0x00400381
  401b50:	20400c90 	.word	0x20400c90
  401b54:	00406f18 	.word	0x00406f18
  401b58:	00402475 	.word	0x00402475
  401b5c:	00406f24 	.word	0x00406f24
  401b60:	20400c94 	.word	0x20400c94
  401b64:	20400c8c 	.word	0x20400c8c
  401b68:	b60b60b7 	.word	0xb60b60b7
  401b6c:	00406f40 	.word	0x00406f40
  401b70:	2040000c 	.word	0x2040000c
  401b74:	20400c7c 	.word	0x20400c7c
  401b78:	00406f2c 	.word	0x00406f2c
  401b7c:	00406f38 	.word	0x00406f38
  401b80:	0040032d 	.word	0x0040032d
  401b84:	00400319 	.word	0x00400319
  401b88:	00400399 	.word	0x00400399
  401b8c:	e000e100 	.word	0xe000e100
  401b90:	00400359 	.word	0x00400359
  401b94:	20400c81 	.word	0x20400c81
  401b98:	00400709 	.word	0x00400709
  401b9c:	88888889 	.word	0x88888889
  401ba0:	0040116d 	.word	0x0040116d

00401ba4 <__aeabi_drsub>:
  401ba4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401ba8:	e002      	b.n	401bb0 <__adddf3>
  401baa:	bf00      	nop

00401bac <__aeabi_dsub>:
  401bac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401bb0 <__adddf3>:
  401bb0:	b530      	push	{r4, r5, lr}
  401bb2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401bb6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401bba:	ea94 0f05 	teq	r4, r5
  401bbe:	bf08      	it	eq
  401bc0:	ea90 0f02 	teqeq	r0, r2
  401bc4:	bf1f      	itttt	ne
  401bc6:	ea54 0c00 	orrsne.w	ip, r4, r0
  401bca:	ea55 0c02 	orrsne.w	ip, r5, r2
  401bce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401bd2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401bd6:	f000 80e2 	beq.w	401d9e <__adddf3+0x1ee>
  401bda:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401bde:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401be2:	bfb8      	it	lt
  401be4:	426d      	neglt	r5, r5
  401be6:	dd0c      	ble.n	401c02 <__adddf3+0x52>
  401be8:	442c      	add	r4, r5
  401bea:	ea80 0202 	eor.w	r2, r0, r2
  401bee:	ea81 0303 	eor.w	r3, r1, r3
  401bf2:	ea82 0000 	eor.w	r0, r2, r0
  401bf6:	ea83 0101 	eor.w	r1, r3, r1
  401bfa:	ea80 0202 	eor.w	r2, r0, r2
  401bfe:	ea81 0303 	eor.w	r3, r1, r3
  401c02:	2d36      	cmp	r5, #54	; 0x36
  401c04:	bf88      	it	hi
  401c06:	bd30      	pophi	{r4, r5, pc}
  401c08:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401c0c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401c10:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401c14:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401c18:	d002      	beq.n	401c20 <__adddf3+0x70>
  401c1a:	4240      	negs	r0, r0
  401c1c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401c20:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401c24:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401c28:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401c2c:	d002      	beq.n	401c34 <__adddf3+0x84>
  401c2e:	4252      	negs	r2, r2
  401c30:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401c34:	ea94 0f05 	teq	r4, r5
  401c38:	f000 80a7 	beq.w	401d8a <__adddf3+0x1da>
  401c3c:	f1a4 0401 	sub.w	r4, r4, #1
  401c40:	f1d5 0e20 	rsbs	lr, r5, #32
  401c44:	db0d      	blt.n	401c62 <__adddf3+0xb2>
  401c46:	fa02 fc0e 	lsl.w	ip, r2, lr
  401c4a:	fa22 f205 	lsr.w	r2, r2, r5
  401c4e:	1880      	adds	r0, r0, r2
  401c50:	f141 0100 	adc.w	r1, r1, #0
  401c54:	fa03 f20e 	lsl.w	r2, r3, lr
  401c58:	1880      	adds	r0, r0, r2
  401c5a:	fa43 f305 	asr.w	r3, r3, r5
  401c5e:	4159      	adcs	r1, r3
  401c60:	e00e      	b.n	401c80 <__adddf3+0xd0>
  401c62:	f1a5 0520 	sub.w	r5, r5, #32
  401c66:	f10e 0e20 	add.w	lr, lr, #32
  401c6a:	2a01      	cmp	r2, #1
  401c6c:	fa03 fc0e 	lsl.w	ip, r3, lr
  401c70:	bf28      	it	cs
  401c72:	f04c 0c02 	orrcs.w	ip, ip, #2
  401c76:	fa43 f305 	asr.w	r3, r3, r5
  401c7a:	18c0      	adds	r0, r0, r3
  401c7c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401c80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401c84:	d507      	bpl.n	401c96 <__adddf3+0xe6>
  401c86:	f04f 0e00 	mov.w	lr, #0
  401c8a:	f1dc 0c00 	rsbs	ip, ip, #0
  401c8e:	eb7e 0000 	sbcs.w	r0, lr, r0
  401c92:	eb6e 0101 	sbc.w	r1, lr, r1
  401c96:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401c9a:	d31b      	bcc.n	401cd4 <__adddf3+0x124>
  401c9c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401ca0:	d30c      	bcc.n	401cbc <__adddf3+0x10c>
  401ca2:	0849      	lsrs	r1, r1, #1
  401ca4:	ea5f 0030 	movs.w	r0, r0, rrx
  401ca8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401cac:	f104 0401 	add.w	r4, r4, #1
  401cb0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401cb4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401cb8:	f080 809a 	bcs.w	401df0 <__adddf3+0x240>
  401cbc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401cc0:	bf08      	it	eq
  401cc2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401cc6:	f150 0000 	adcs.w	r0, r0, #0
  401cca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401cce:	ea41 0105 	orr.w	r1, r1, r5
  401cd2:	bd30      	pop	{r4, r5, pc}
  401cd4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401cd8:	4140      	adcs	r0, r0
  401cda:	eb41 0101 	adc.w	r1, r1, r1
  401cde:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ce2:	f1a4 0401 	sub.w	r4, r4, #1
  401ce6:	d1e9      	bne.n	401cbc <__adddf3+0x10c>
  401ce8:	f091 0f00 	teq	r1, #0
  401cec:	bf04      	itt	eq
  401cee:	4601      	moveq	r1, r0
  401cf0:	2000      	moveq	r0, #0
  401cf2:	fab1 f381 	clz	r3, r1
  401cf6:	bf08      	it	eq
  401cf8:	3320      	addeq	r3, #32
  401cfa:	f1a3 030b 	sub.w	r3, r3, #11
  401cfe:	f1b3 0220 	subs.w	r2, r3, #32
  401d02:	da0c      	bge.n	401d1e <__adddf3+0x16e>
  401d04:	320c      	adds	r2, #12
  401d06:	dd08      	ble.n	401d1a <__adddf3+0x16a>
  401d08:	f102 0c14 	add.w	ip, r2, #20
  401d0c:	f1c2 020c 	rsb	r2, r2, #12
  401d10:	fa01 f00c 	lsl.w	r0, r1, ip
  401d14:	fa21 f102 	lsr.w	r1, r1, r2
  401d18:	e00c      	b.n	401d34 <__adddf3+0x184>
  401d1a:	f102 0214 	add.w	r2, r2, #20
  401d1e:	bfd8      	it	le
  401d20:	f1c2 0c20 	rsble	ip, r2, #32
  401d24:	fa01 f102 	lsl.w	r1, r1, r2
  401d28:	fa20 fc0c 	lsr.w	ip, r0, ip
  401d2c:	bfdc      	itt	le
  401d2e:	ea41 010c 	orrle.w	r1, r1, ip
  401d32:	4090      	lslle	r0, r2
  401d34:	1ae4      	subs	r4, r4, r3
  401d36:	bfa2      	ittt	ge
  401d38:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401d3c:	4329      	orrge	r1, r5
  401d3e:	bd30      	popge	{r4, r5, pc}
  401d40:	ea6f 0404 	mvn.w	r4, r4
  401d44:	3c1f      	subs	r4, #31
  401d46:	da1c      	bge.n	401d82 <__adddf3+0x1d2>
  401d48:	340c      	adds	r4, #12
  401d4a:	dc0e      	bgt.n	401d6a <__adddf3+0x1ba>
  401d4c:	f104 0414 	add.w	r4, r4, #20
  401d50:	f1c4 0220 	rsb	r2, r4, #32
  401d54:	fa20 f004 	lsr.w	r0, r0, r4
  401d58:	fa01 f302 	lsl.w	r3, r1, r2
  401d5c:	ea40 0003 	orr.w	r0, r0, r3
  401d60:	fa21 f304 	lsr.w	r3, r1, r4
  401d64:	ea45 0103 	orr.w	r1, r5, r3
  401d68:	bd30      	pop	{r4, r5, pc}
  401d6a:	f1c4 040c 	rsb	r4, r4, #12
  401d6e:	f1c4 0220 	rsb	r2, r4, #32
  401d72:	fa20 f002 	lsr.w	r0, r0, r2
  401d76:	fa01 f304 	lsl.w	r3, r1, r4
  401d7a:	ea40 0003 	orr.w	r0, r0, r3
  401d7e:	4629      	mov	r1, r5
  401d80:	bd30      	pop	{r4, r5, pc}
  401d82:	fa21 f004 	lsr.w	r0, r1, r4
  401d86:	4629      	mov	r1, r5
  401d88:	bd30      	pop	{r4, r5, pc}
  401d8a:	f094 0f00 	teq	r4, #0
  401d8e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401d92:	bf06      	itte	eq
  401d94:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401d98:	3401      	addeq	r4, #1
  401d9a:	3d01      	subne	r5, #1
  401d9c:	e74e      	b.n	401c3c <__adddf3+0x8c>
  401d9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401da2:	bf18      	it	ne
  401da4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401da8:	d029      	beq.n	401dfe <__adddf3+0x24e>
  401daa:	ea94 0f05 	teq	r4, r5
  401dae:	bf08      	it	eq
  401db0:	ea90 0f02 	teqeq	r0, r2
  401db4:	d005      	beq.n	401dc2 <__adddf3+0x212>
  401db6:	ea54 0c00 	orrs.w	ip, r4, r0
  401dba:	bf04      	itt	eq
  401dbc:	4619      	moveq	r1, r3
  401dbe:	4610      	moveq	r0, r2
  401dc0:	bd30      	pop	{r4, r5, pc}
  401dc2:	ea91 0f03 	teq	r1, r3
  401dc6:	bf1e      	ittt	ne
  401dc8:	2100      	movne	r1, #0
  401dca:	2000      	movne	r0, #0
  401dcc:	bd30      	popne	{r4, r5, pc}
  401dce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401dd2:	d105      	bne.n	401de0 <__adddf3+0x230>
  401dd4:	0040      	lsls	r0, r0, #1
  401dd6:	4149      	adcs	r1, r1
  401dd8:	bf28      	it	cs
  401dda:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401dde:	bd30      	pop	{r4, r5, pc}
  401de0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401de4:	bf3c      	itt	cc
  401de6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401dea:	bd30      	popcc	{r4, r5, pc}
  401dec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401df0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401df4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401df8:	f04f 0000 	mov.w	r0, #0
  401dfc:	bd30      	pop	{r4, r5, pc}
  401dfe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401e02:	bf1a      	itte	ne
  401e04:	4619      	movne	r1, r3
  401e06:	4610      	movne	r0, r2
  401e08:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401e0c:	bf1c      	itt	ne
  401e0e:	460b      	movne	r3, r1
  401e10:	4602      	movne	r2, r0
  401e12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401e16:	bf06      	itte	eq
  401e18:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401e1c:	ea91 0f03 	teqeq	r1, r3
  401e20:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401e24:	bd30      	pop	{r4, r5, pc}
  401e26:	bf00      	nop

00401e28 <__aeabi_ui2d>:
  401e28:	f090 0f00 	teq	r0, #0
  401e2c:	bf04      	itt	eq
  401e2e:	2100      	moveq	r1, #0
  401e30:	4770      	bxeq	lr
  401e32:	b530      	push	{r4, r5, lr}
  401e34:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401e38:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401e3c:	f04f 0500 	mov.w	r5, #0
  401e40:	f04f 0100 	mov.w	r1, #0
  401e44:	e750      	b.n	401ce8 <__adddf3+0x138>
  401e46:	bf00      	nop

00401e48 <__aeabi_i2d>:
  401e48:	f090 0f00 	teq	r0, #0
  401e4c:	bf04      	itt	eq
  401e4e:	2100      	moveq	r1, #0
  401e50:	4770      	bxeq	lr
  401e52:	b530      	push	{r4, r5, lr}
  401e54:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401e58:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401e5c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401e60:	bf48      	it	mi
  401e62:	4240      	negmi	r0, r0
  401e64:	f04f 0100 	mov.w	r1, #0
  401e68:	e73e      	b.n	401ce8 <__adddf3+0x138>
  401e6a:	bf00      	nop

00401e6c <__aeabi_f2d>:
  401e6c:	0042      	lsls	r2, r0, #1
  401e6e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401e72:	ea4f 0131 	mov.w	r1, r1, rrx
  401e76:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401e7a:	bf1f      	itttt	ne
  401e7c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401e80:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401e84:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401e88:	4770      	bxne	lr
  401e8a:	f092 0f00 	teq	r2, #0
  401e8e:	bf14      	ite	ne
  401e90:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401e94:	4770      	bxeq	lr
  401e96:	b530      	push	{r4, r5, lr}
  401e98:	f44f 7460 	mov.w	r4, #896	; 0x380
  401e9c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401ea0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401ea4:	e720      	b.n	401ce8 <__adddf3+0x138>
  401ea6:	bf00      	nop

00401ea8 <__aeabi_ul2d>:
  401ea8:	ea50 0201 	orrs.w	r2, r0, r1
  401eac:	bf08      	it	eq
  401eae:	4770      	bxeq	lr
  401eb0:	b530      	push	{r4, r5, lr}
  401eb2:	f04f 0500 	mov.w	r5, #0
  401eb6:	e00a      	b.n	401ece <__aeabi_l2d+0x16>

00401eb8 <__aeabi_l2d>:
  401eb8:	ea50 0201 	orrs.w	r2, r0, r1
  401ebc:	bf08      	it	eq
  401ebe:	4770      	bxeq	lr
  401ec0:	b530      	push	{r4, r5, lr}
  401ec2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401ec6:	d502      	bpl.n	401ece <__aeabi_l2d+0x16>
  401ec8:	4240      	negs	r0, r0
  401eca:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401ece:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401ed2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401ed6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401eda:	f43f aedc 	beq.w	401c96 <__adddf3+0xe6>
  401ede:	f04f 0203 	mov.w	r2, #3
  401ee2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401ee6:	bf18      	it	ne
  401ee8:	3203      	addne	r2, #3
  401eea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401eee:	bf18      	it	ne
  401ef0:	3203      	addne	r2, #3
  401ef2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401ef6:	f1c2 0320 	rsb	r3, r2, #32
  401efa:	fa00 fc03 	lsl.w	ip, r0, r3
  401efe:	fa20 f002 	lsr.w	r0, r0, r2
  401f02:	fa01 fe03 	lsl.w	lr, r1, r3
  401f06:	ea40 000e 	orr.w	r0, r0, lr
  401f0a:	fa21 f102 	lsr.w	r1, r1, r2
  401f0e:	4414      	add	r4, r2
  401f10:	e6c1      	b.n	401c96 <__adddf3+0xe6>
  401f12:	bf00      	nop

00401f14 <__aeabi_dmul>:
  401f14:	b570      	push	{r4, r5, r6, lr}
  401f16:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401f1a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401f1e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401f22:	bf1d      	ittte	ne
  401f24:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401f28:	ea94 0f0c 	teqne	r4, ip
  401f2c:	ea95 0f0c 	teqne	r5, ip
  401f30:	f000 f8de 	bleq	4020f0 <__aeabi_dmul+0x1dc>
  401f34:	442c      	add	r4, r5
  401f36:	ea81 0603 	eor.w	r6, r1, r3
  401f3a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401f3e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401f42:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401f46:	bf18      	it	ne
  401f48:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401f4c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401f50:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401f54:	d038      	beq.n	401fc8 <__aeabi_dmul+0xb4>
  401f56:	fba0 ce02 	umull	ip, lr, r0, r2
  401f5a:	f04f 0500 	mov.w	r5, #0
  401f5e:	fbe1 e502 	umlal	lr, r5, r1, r2
  401f62:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401f66:	fbe0 e503 	umlal	lr, r5, r0, r3
  401f6a:	f04f 0600 	mov.w	r6, #0
  401f6e:	fbe1 5603 	umlal	r5, r6, r1, r3
  401f72:	f09c 0f00 	teq	ip, #0
  401f76:	bf18      	it	ne
  401f78:	f04e 0e01 	orrne.w	lr, lr, #1
  401f7c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401f80:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401f84:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401f88:	d204      	bcs.n	401f94 <__aeabi_dmul+0x80>
  401f8a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401f8e:	416d      	adcs	r5, r5
  401f90:	eb46 0606 	adc.w	r6, r6, r6
  401f94:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401f98:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401f9c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401fa0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401fa4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401fa8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401fac:	bf88      	it	hi
  401fae:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401fb2:	d81e      	bhi.n	401ff2 <__aeabi_dmul+0xde>
  401fb4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401fb8:	bf08      	it	eq
  401fba:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401fbe:	f150 0000 	adcs.w	r0, r0, #0
  401fc2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401fc6:	bd70      	pop	{r4, r5, r6, pc}
  401fc8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401fcc:	ea46 0101 	orr.w	r1, r6, r1
  401fd0:	ea40 0002 	orr.w	r0, r0, r2
  401fd4:	ea81 0103 	eor.w	r1, r1, r3
  401fd8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401fdc:	bfc2      	ittt	gt
  401fde:	ebd4 050c 	rsbsgt	r5, r4, ip
  401fe2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401fe6:	bd70      	popgt	{r4, r5, r6, pc}
  401fe8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401fec:	f04f 0e00 	mov.w	lr, #0
  401ff0:	3c01      	subs	r4, #1
  401ff2:	f300 80ab 	bgt.w	40214c <__aeabi_dmul+0x238>
  401ff6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401ffa:	bfde      	ittt	le
  401ffc:	2000      	movle	r0, #0
  401ffe:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  402002:	bd70      	pople	{r4, r5, r6, pc}
  402004:	f1c4 0400 	rsb	r4, r4, #0
  402008:	3c20      	subs	r4, #32
  40200a:	da35      	bge.n	402078 <__aeabi_dmul+0x164>
  40200c:	340c      	adds	r4, #12
  40200e:	dc1b      	bgt.n	402048 <__aeabi_dmul+0x134>
  402010:	f104 0414 	add.w	r4, r4, #20
  402014:	f1c4 0520 	rsb	r5, r4, #32
  402018:	fa00 f305 	lsl.w	r3, r0, r5
  40201c:	fa20 f004 	lsr.w	r0, r0, r4
  402020:	fa01 f205 	lsl.w	r2, r1, r5
  402024:	ea40 0002 	orr.w	r0, r0, r2
  402028:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40202c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402030:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  402034:	fa21 f604 	lsr.w	r6, r1, r4
  402038:	eb42 0106 	adc.w	r1, r2, r6
  40203c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402040:	bf08      	it	eq
  402042:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402046:	bd70      	pop	{r4, r5, r6, pc}
  402048:	f1c4 040c 	rsb	r4, r4, #12
  40204c:	f1c4 0520 	rsb	r5, r4, #32
  402050:	fa00 f304 	lsl.w	r3, r0, r4
  402054:	fa20 f005 	lsr.w	r0, r0, r5
  402058:	fa01 f204 	lsl.w	r2, r1, r4
  40205c:	ea40 0002 	orr.w	r0, r0, r2
  402060:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402064:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  402068:	f141 0100 	adc.w	r1, r1, #0
  40206c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402070:	bf08      	it	eq
  402072:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402076:	bd70      	pop	{r4, r5, r6, pc}
  402078:	f1c4 0520 	rsb	r5, r4, #32
  40207c:	fa00 f205 	lsl.w	r2, r0, r5
  402080:	ea4e 0e02 	orr.w	lr, lr, r2
  402084:	fa20 f304 	lsr.w	r3, r0, r4
  402088:	fa01 f205 	lsl.w	r2, r1, r5
  40208c:	ea43 0302 	orr.w	r3, r3, r2
  402090:	fa21 f004 	lsr.w	r0, r1, r4
  402094:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402098:	fa21 f204 	lsr.w	r2, r1, r4
  40209c:	ea20 0002 	bic.w	r0, r0, r2
  4020a0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4020a4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4020a8:	bf08      	it	eq
  4020aa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4020ae:	bd70      	pop	{r4, r5, r6, pc}
  4020b0:	f094 0f00 	teq	r4, #0
  4020b4:	d10f      	bne.n	4020d6 <__aeabi_dmul+0x1c2>
  4020b6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4020ba:	0040      	lsls	r0, r0, #1
  4020bc:	eb41 0101 	adc.w	r1, r1, r1
  4020c0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4020c4:	bf08      	it	eq
  4020c6:	3c01      	subeq	r4, #1
  4020c8:	d0f7      	beq.n	4020ba <__aeabi_dmul+0x1a6>
  4020ca:	ea41 0106 	orr.w	r1, r1, r6
  4020ce:	f095 0f00 	teq	r5, #0
  4020d2:	bf18      	it	ne
  4020d4:	4770      	bxne	lr
  4020d6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  4020da:	0052      	lsls	r2, r2, #1
  4020dc:	eb43 0303 	adc.w	r3, r3, r3
  4020e0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  4020e4:	bf08      	it	eq
  4020e6:	3d01      	subeq	r5, #1
  4020e8:	d0f7      	beq.n	4020da <__aeabi_dmul+0x1c6>
  4020ea:	ea43 0306 	orr.w	r3, r3, r6
  4020ee:	4770      	bx	lr
  4020f0:	ea94 0f0c 	teq	r4, ip
  4020f4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4020f8:	bf18      	it	ne
  4020fa:	ea95 0f0c 	teqne	r5, ip
  4020fe:	d00c      	beq.n	40211a <__aeabi_dmul+0x206>
  402100:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402104:	bf18      	it	ne
  402106:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40210a:	d1d1      	bne.n	4020b0 <__aeabi_dmul+0x19c>
  40210c:	ea81 0103 	eor.w	r1, r1, r3
  402110:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402114:	f04f 0000 	mov.w	r0, #0
  402118:	bd70      	pop	{r4, r5, r6, pc}
  40211a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40211e:	bf06      	itte	eq
  402120:	4610      	moveq	r0, r2
  402122:	4619      	moveq	r1, r3
  402124:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402128:	d019      	beq.n	40215e <__aeabi_dmul+0x24a>
  40212a:	ea94 0f0c 	teq	r4, ip
  40212e:	d102      	bne.n	402136 <__aeabi_dmul+0x222>
  402130:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  402134:	d113      	bne.n	40215e <__aeabi_dmul+0x24a>
  402136:	ea95 0f0c 	teq	r5, ip
  40213a:	d105      	bne.n	402148 <__aeabi_dmul+0x234>
  40213c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  402140:	bf1c      	itt	ne
  402142:	4610      	movne	r0, r2
  402144:	4619      	movne	r1, r3
  402146:	d10a      	bne.n	40215e <__aeabi_dmul+0x24a>
  402148:	ea81 0103 	eor.w	r1, r1, r3
  40214c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402150:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402154:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402158:	f04f 0000 	mov.w	r0, #0
  40215c:	bd70      	pop	{r4, r5, r6, pc}
  40215e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  402162:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  402166:	bd70      	pop	{r4, r5, r6, pc}

00402168 <__aeabi_ddiv>:
  402168:	b570      	push	{r4, r5, r6, lr}
  40216a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40216e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  402172:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  402176:	bf1d      	ittte	ne
  402178:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  40217c:	ea94 0f0c 	teqne	r4, ip
  402180:	ea95 0f0c 	teqne	r5, ip
  402184:	f000 f8a7 	bleq	4022d6 <__aeabi_ddiv+0x16e>
  402188:	eba4 0405 	sub.w	r4, r4, r5
  40218c:	ea81 0e03 	eor.w	lr, r1, r3
  402190:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402194:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402198:	f000 8088 	beq.w	4022ac <__aeabi_ddiv+0x144>
  40219c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4021a0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4021a4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4021a8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4021ac:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4021b0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4021b4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4021b8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4021bc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4021c0:	429d      	cmp	r5, r3
  4021c2:	bf08      	it	eq
  4021c4:	4296      	cmpeq	r6, r2
  4021c6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4021ca:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4021ce:	d202      	bcs.n	4021d6 <__aeabi_ddiv+0x6e>
  4021d0:	085b      	lsrs	r3, r3, #1
  4021d2:	ea4f 0232 	mov.w	r2, r2, rrx
  4021d6:	1ab6      	subs	r6, r6, r2
  4021d8:	eb65 0503 	sbc.w	r5, r5, r3
  4021dc:	085b      	lsrs	r3, r3, #1
  4021de:	ea4f 0232 	mov.w	r2, r2, rrx
  4021e2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  4021e6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  4021ea:	ebb6 0e02 	subs.w	lr, r6, r2
  4021ee:	eb75 0e03 	sbcs.w	lr, r5, r3
  4021f2:	bf22      	ittt	cs
  4021f4:	1ab6      	subcs	r6, r6, r2
  4021f6:	4675      	movcs	r5, lr
  4021f8:	ea40 000c 	orrcs.w	r0, r0, ip
  4021fc:	085b      	lsrs	r3, r3, #1
  4021fe:	ea4f 0232 	mov.w	r2, r2, rrx
  402202:	ebb6 0e02 	subs.w	lr, r6, r2
  402206:	eb75 0e03 	sbcs.w	lr, r5, r3
  40220a:	bf22      	ittt	cs
  40220c:	1ab6      	subcs	r6, r6, r2
  40220e:	4675      	movcs	r5, lr
  402210:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  402214:	085b      	lsrs	r3, r3, #1
  402216:	ea4f 0232 	mov.w	r2, r2, rrx
  40221a:	ebb6 0e02 	subs.w	lr, r6, r2
  40221e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402222:	bf22      	ittt	cs
  402224:	1ab6      	subcs	r6, r6, r2
  402226:	4675      	movcs	r5, lr
  402228:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40222c:	085b      	lsrs	r3, r3, #1
  40222e:	ea4f 0232 	mov.w	r2, r2, rrx
  402232:	ebb6 0e02 	subs.w	lr, r6, r2
  402236:	eb75 0e03 	sbcs.w	lr, r5, r3
  40223a:	bf22      	ittt	cs
  40223c:	1ab6      	subcs	r6, r6, r2
  40223e:	4675      	movcs	r5, lr
  402240:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  402244:	ea55 0e06 	orrs.w	lr, r5, r6
  402248:	d018      	beq.n	40227c <__aeabi_ddiv+0x114>
  40224a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40224e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  402252:	ea4f 1606 	mov.w	r6, r6, lsl #4
  402256:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40225a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40225e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  402262:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  402266:	d1c0      	bne.n	4021ea <__aeabi_ddiv+0x82>
  402268:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40226c:	d10b      	bne.n	402286 <__aeabi_ddiv+0x11e>
  40226e:	ea41 0100 	orr.w	r1, r1, r0
  402272:	f04f 0000 	mov.w	r0, #0
  402276:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  40227a:	e7b6      	b.n	4021ea <__aeabi_ddiv+0x82>
  40227c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402280:	bf04      	itt	eq
  402282:	4301      	orreq	r1, r0
  402284:	2000      	moveq	r0, #0
  402286:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40228a:	bf88      	it	hi
  40228c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402290:	f63f aeaf 	bhi.w	401ff2 <__aeabi_dmul+0xde>
  402294:	ebb5 0c03 	subs.w	ip, r5, r3
  402298:	bf04      	itt	eq
  40229a:	ebb6 0c02 	subseq.w	ip, r6, r2
  40229e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4022a2:	f150 0000 	adcs.w	r0, r0, #0
  4022a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4022aa:	bd70      	pop	{r4, r5, r6, pc}
  4022ac:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4022b0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4022b4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4022b8:	bfc2      	ittt	gt
  4022ba:	ebd4 050c 	rsbsgt	r5, r4, ip
  4022be:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4022c2:	bd70      	popgt	{r4, r5, r6, pc}
  4022c4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4022c8:	f04f 0e00 	mov.w	lr, #0
  4022cc:	3c01      	subs	r4, #1
  4022ce:	e690      	b.n	401ff2 <__aeabi_dmul+0xde>
  4022d0:	ea45 0e06 	orr.w	lr, r5, r6
  4022d4:	e68d      	b.n	401ff2 <__aeabi_dmul+0xde>
  4022d6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  4022da:	ea94 0f0c 	teq	r4, ip
  4022de:	bf08      	it	eq
  4022e0:	ea95 0f0c 	teqeq	r5, ip
  4022e4:	f43f af3b 	beq.w	40215e <__aeabi_dmul+0x24a>
  4022e8:	ea94 0f0c 	teq	r4, ip
  4022ec:	d10a      	bne.n	402304 <__aeabi_ddiv+0x19c>
  4022ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4022f2:	f47f af34 	bne.w	40215e <__aeabi_dmul+0x24a>
  4022f6:	ea95 0f0c 	teq	r5, ip
  4022fa:	f47f af25 	bne.w	402148 <__aeabi_dmul+0x234>
  4022fe:	4610      	mov	r0, r2
  402300:	4619      	mov	r1, r3
  402302:	e72c      	b.n	40215e <__aeabi_dmul+0x24a>
  402304:	ea95 0f0c 	teq	r5, ip
  402308:	d106      	bne.n	402318 <__aeabi_ddiv+0x1b0>
  40230a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40230e:	f43f aefd 	beq.w	40210c <__aeabi_dmul+0x1f8>
  402312:	4610      	mov	r0, r2
  402314:	4619      	mov	r1, r3
  402316:	e722      	b.n	40215e <__aeabi_dmul+0x24a>
  402318:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40231c:	bf18      	it	ne
  40231e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402322:	f47f aec5 	bne.w	4020b0 <__aeabi_dmul+0x19c>
  402326:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40232a:	f47f af0d 	bne.w	402148 <__aeabi_dmul+0x234>
  40232e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  402332:	f47f aeeb 	bne.w	40210c <__aeabi_dmul+0x1f8>
  402336:	e712      	b.n	40215e <__aeabi_dmul+0x24a>

00402338 <__aeabi_d2iz>:
  402338:	ea4f 0241 	mov.w	r2, r1, lsl #1
  40233c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  402340:	d215      	bcs.n	40236e <__aeabi_d2iz+0x36>
  402342:	d511      	bpl.n	402368 <__aeabi_d2iz+0x30>
  402344:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  402348:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  40234c:	d912      	bls.n	402374 <__aeabi_d2iz+0x3c>
  40234e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  402352:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  402356:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  40235a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40235e:	fa23 f002 	lsr.w	r0, r3, r2
  402362:	bf18      	it	ne
  402364:	4240      	negne	r0, r0
  402366:	4770      	bx	lr
  402368:	f04f 0000 	mov.w	r0, #0
  40236c:	4770      	bx	lr
  40236e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  402372:	d105      	bne.n	402380 <__aeabi_d2iz+0x48>
  402374:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  402378:	bf08      	it	eq
  40237a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  40237e:	4770      	bx	lr
  402380:	f04f 0000 	mov.w	r0, #0
  402384:	4770      	bx	lr
  402386:	bf00      	nop

00402388 <__libc_init_array>:
  402388:	b570      	push	{r4, r5, r6, lr}
  40238a:	4e0f      	ldr	r6, [pc, #60]	; (4023c8 <__libc_init_array+0x40>)
  40238c:	4d0f      	ldr	r5, [pc, #60]	; (4023cc <__libc_init_array+0x44>)
  40238e:	1b76      	subs	r6, r6, r5
  402390:	10b6      	asrs	r6, r6, #2
  402392:	bf18      	it	ne
  402394:	2400      	movne	r4, #0
  402396:	d005      	beq.n	4023a4 <__libc_init_array+0x1c>
  402398:	3401      	adds	r4, #1
  40239a:	f855 3b04 	ldr.w	r3, [r5], #4
  40239e:	4798      	blx	r3
  4023a0:	42a6      	cmp	r6, r4
  4023a2:	d1f9      	bne.n	402398 <__libc_init_array+0x10>
  4023a4:	4e0a      	ldr	r6, [pc, #40]	; (4023d0 <__libc_init_array+0x48>)
  4023a6:	4d0b      	ldr	r5, [pc, #44]	; (4023d4 <__libc_init_array+0x4c>)
  4023a8:	1b76      	subs	r6, r6, r5
  4023aa:	f004 ff19 	bl	4071e0 <_init>
  4023ae:	10b6      	asrs	r6, r6, #2
  4023b0:	bf18      	it	ne
  4023b2:	2400      	movne	r4, #0
  4023b4:	d006      	beq.n	4023c4 <__libc_init_array+0x3c>
  4023b6:	3401      	adds	r4, #1
  4023b8:	f855 3b04 	ldr.w	r3, [r5], #4
  4023bc:	4798      	blx	r3
  4023be:	42a6      	cmp	r6, r4
  4023c0:	d1f9      	bne.n	4023b6 <__libc_init_array+0x2e>
  4023c2:	bd70      	pop	{r4, r5, r6, pc}
  4023c4:	bd70      	pop	{r4, r5, r6, pc}
  4023c6:	bf00      	nop
  4023c8:	004071ec 	.word	0x004071ec
  4023cc:	004071ec 	.word	0x004071ec
  4023d0:	004071f4 	.word	0x004071f4
  4023d4:	004071ec 	.word	0x004071ec

004023d8 <memset>:
  4023d8:	b470      	push	{r4, r5, r6}
  4023da:	0786      	lsls	r6, r0, #30
  4023dc:	d046      	beq.n	40246c <memset+0x94>
  4023de:	1e54      	subs	r4, r2, #1
  4023e0:	2a00      	cmp	r2, #0
  4023e2:	d041      	beq.n	402468 <memset+0x90>
  4023e4:	b2ca      	uxtb	r2, r1
  4023e6:	4603      	mov	r3, r0
  4023e8:	e002      	b.n	4023f0 <memset+0x18>
  4023ea:	f114 34ff 	adds.w	r4, r4, #4294967295
  4023ee:	d33b      	bcc.n	402468 <memset+0x90>
  4023f0:	f803 2b01 	strb.w	r2, [r3], #1
  4023f4:	079d      	lsls	r5, r3, #30
  4023f6:	d1f8      	bne.n	4023ea <memset+0x12>
  4023f8:	2c03      	cmp	r4, #3
  4023fa:	d92e      	bls.n	40245a <memset+0x82>
  4023fc:	b2cd      	uxtb	r5, r1
  4023fe:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  402402:	2c0f      	cmp	r4, #15
  402404:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402408:	d919      	bls.n	40243e <memset+0x66>
  40240a:	f103 0210 	add.w	r2, r3, #16
  40240e:	4626      	mov	r6, r4
  402410:	3e10      	subs	r6, #16
  402412:	2e0f      	cmp	r6, #15
  402414:	f842 5c10 	str.w	r5, [r2, #-16]
  402418:	f842 5c0c 	str.w	r5, [r2, #-12]
  40241c:	f842 5c08 	str.w	r5, [r2, #-8]
  402420:	f842 5c04 	str.w	r5, [r2, #-4]
  402424:	f102 0210 	add.w	r2, r2, #16
  402428:	d8f2      	bhi.n	402410 <memset+0x38>
  40242a:	f1a4 0210 	sub.w	r2, r4, #16
  40242e:	f022 020f 	bic.w	r2, r2, #15
  402432:	f004 040f 	and.w	r4, r4, #15
  402436:	3210      	adds	r2, #16
  402438:	2c03      	cmp	r4, #3
  40243a:	4413      	add	r3, r2
  40243c:	d90d      	bls.n	40245a <memset+0x82>
  40243e:	461e      	mov	r6, r3
  402440:	4622      	mov	r2, r4
  402442:	3a04      	subs	r2, #4
  402444:	2a03      	cmp	r2, #3
  402446:	f846 5b04 	str.w	r5, [r6], #4
  40244a:	d8fa      	bhi.n	402442 <memset+0x6a>
  40244c:	1f22      	subs	r2, r4, #4
  40244e:	f022 0203 	bic.w	r2, r2, #3
  402452:	3204      	adds	r2, #4
  402454:	4413      	add	r3, r2
  402456:	f004 0403 	and.w	r4, r4, #3
  40245a:	b12c      	cbz	r4, 402468 <memset+0x90>
  40245c:	b2c9      	uxtb	r1, r1
  40245e:	441c      	add	r4, r3
  402460:	f803 1b01 	strb.w	r1, [r3], #1
  402464:	429c      	cmp	r4, r3
  402466:	d1fb      	bne.n	402460 <memset+0x88>
  402468:	bc70      	pop	{r4, r5, r6}
  40246a:	4770      	bx	lr
  40246c:	4614      	mov	r4, r2
  40246e:	4603      	mov	r3, r0
  402470:	e7c2      	b.n	4023f8 <memset+0x20>
  402472:	bf00      	nop

00402474 <sprintf>:
  402474:	b40e      	push	{r1, r2, r3}
  402476:	b5f0      	push	{r4, r5, r6, r7, lr}
  402478:	b09c      	sub	sp, #112	; 0x70
  40247a:	ab21      	add	r3, sp, #132	; 0x84
  40247c:	490f      	ldr	r1, [pc, #60]	; (4024bc <sprintf+0x48>)
  40247e:	f853 2b04 	ldr.w	r2, [r3], #4
  402482:	9301      	str	r3, [sp, #4]
  402484:	4605      	mov	r5, r0
  402486:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  40248a:	6808      	ldr	r0, [r1, #0]
  40248c:	9502      	str	r5, [sp, #8]
  40248e:	f44f 7702 	mov.w	r7, #520	; 0x208
  402492:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402496:	a902      	add	r1, sp, #8
  402498:	9506      	str	r5, [sp, #24]
  40249a:	f8ad 7014 	strh.w	r7, [sp, #20]
  40249e:	9404      	str	r4, [sp, #16]
  4024a0:	9407      	str	r4, [sp, #28]
  4024a2:	f8ad 6016 	strh.w	r6, [sp, #22]
  4024a6:	f000 f80b 	bl	4024c0 <_svfprintf_r>
  4024aa:	9b02      	ldr	r3, [sp, #8]
  4024ac:	2200      	movs	r2, #0
  4024ae:	701a      	strb	r2, [r3, #0]
  4024b0:	b01c      	add	sp, #112	; 0x70
  4024b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4024b6:	b003      	add	sp, #12
  4024b8:	4770      	bx	lr
  4024ba:	bf00      	nop
  4024bc:	20400028 	.word	0x20400028

004024c0 <_svfprintf_r>:
  4024c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4024c4:	b0c3      	sub	sp, #268	; 0x10c
  4024c6:	460c      	mov	r4, r1
  4024c8:	910b      	str	r1, [sp, #44]	; 0x2c
  4024ca:	4692      	mov	sl, r2
  4024cc:	930f      	str	r3, [sp, #60]	; 0x3c
  4024ce:	900c      	str	r0, [sp, #48]	; 0x30
  4024d0:	f002 fa0e 	bl	4048f0 <_localeconv_r>
  4024d4:	6803      	ldr	r3, [r0, #0]
  4024d6:	931a      	str	r3, [sp, #104]	; 0x68
  4024d8:	4618      	mov	r0, r3
  4024da:	f003 f8f1 	bl	4056c0 <strlen>
  4024de:	89a3      	ldrh	r3, [r4, #12]
  4024e0:	9019      	str	r0, [sp, #100]	; 0x64
  4024e2:	0619      	lsls	r1, r3, #24
  4024e4:	d503      	bpl.n	4024ee <_svfprintf_r+0x2e>
  4024e6:	6923      	ldr	r3, [r4, #16]
  4024e8:	2b00      	cmp	r3, #0
  4024ea:	f001 8003 	beq.w	4034f4 <_svfprintf_r+0x1034>
  4024ee:	2300      	movs	r3, #0
  4024f0:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4024f4:	9313      	str	r3, [sp, #76]	; 0x4c
  4024f6:	9315      	str	r3, [sp, #84]	; 0x54
  4024f8:	9314      	str	r3, [sp, #80]	; 0x50
  4024fa:	9327      	str	r3, [sp, #156]	; 0x9c
  4024fc:	9326      	str	r3, [sp, #152]	; 0x98
  4024fe:	9318      	str	r3, [sp, #96]	; 0x60
  402500:	931b      	str	r3, [sp, #108]	; 0x6c
  402502:	9309      	str	r3, [sp, #36]	; 0x24
  402504:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402508:	46c8      	mov	r8, r9
  40250a:	9316      	str	r3, [sp, #88]	; 0x58
  40250c:	9317      	str	r3, [sp, #92]	; 0x5c
  40250e:	f89a 3000 	ldrb.w	r3, [sl]
  402512:	4654      	mov	r4, sl
  402514:	b1e3      	cbz	r3, 402550 <_svfprintf_r+0x90>
  402516:	2b25      	cmp	r3, #37	; 0x25
  402518:	d102      	bne.n	402520 <_svfprintf_r+0x60>
  40251a:	e019      	b.n	402550 <_svfprintf_r+0x90>
  40251c:	2b25      	cmp	r3, #37	; 0x25
  40251e:	d003      	beq.n	402528 <_svfprintf_r+0x68>
  402520:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  402524:	2b00      	cmp	r3, #0
  402526:	d1f9      	bne.n	40251c <_svfprintf_r+0x5c>
  402528:	eba4 050a 	sub.w	r5, r4, sl
  40252c:	b185      	cbz	r5, 402550 <_svfprintf_r+0x90>
  40252e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402530:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402532:	f8c8 a000 	str.w	sl, [r8]
  402536:	3301      	adds	r3, #1
  402538:	442a      	add	r2, r5
  40253a:	2b07      	cmp	r3, #7
  40253c:	f8c8 5004 	str.w	r5, [r8, #4]
  402540:	9227      	str	r2, [sp, #156]	; 0x9c
  402542:	9326      	str	r3, [sp, #152]	; 0x98
  402544:	dc7f      	bgt.n	402646 <_svfprintf_r+0x186>
  402546:	f108 0808 	add.w	r8, r8, #8
  40254a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40254c:	442b      	add	r3, r5
  40254e:	9309      	str	r3, [sp, #36]	; 0x24
  402550:	7823      	ldrb	r3, [r4, #0]
  402552:	2b00      	cmp	r3, #0
  402554:	d07f      	beq.n	402656 <_svfprintf_r+0x196>
  402556:	2300      	movs	r3, #0
  402558:	461a      	mov	r2, r3
  40255a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40255e:	4619      	mov	r1, r3
  402560:	930d      	str	r3, [sp, #52]	; 0x34
  402562:	469b      	mov	fp, r3
  402564:	f04f 30ff 	mov.w	r0, #4294967295
  402568:	7863      	ldrb	r3, [r4, #1]
  40256a:	900a      	str	r0, [sp, #40]	; 0x28
  40256c:	f104 0a01 	add.w	sl, r4, #1
  402570:	f10a 0a01 	add.w	sl, sl, #1
  402574:	f1a3 0020 	sub.w	r0, r3, #32
  402578:	2858      	cmp	r0, #88	; 0x58
  40257a:	f200 83c1 	bhi.w	402d00 <_svfprintf_r+0x840>
  40257e:	e8df f010 	tbh	[pc, r0, lsl #1]
  402582:	0238      	.short	0x0238
  402584:	03bf03bf 	.word	0x03bf03bf
  402588:	03bf0240 	.word	0x03bf0240
  40258c:	03bf03bf 	.word	0x03bf03bf
  402590:	03bf03bf 	.word	0x03bf03bf
  402594:	024503bf 	.word	0x024503bf
  402598:	03bf0203 	.word	0x03bf0203
  40259c:	026b005d 	.word	0x026b005d
  4025a0:	028603bf 	.word	0x028603bf
  4025a4:	039d039d 	.word	0x039d039d
  4025a8:	039d039d 	.word	0x039d039d
  4025ac:	039d039d 	.word	0x039d039d
  4025b0:	039d039d 	.word	0x039d039d
  4025b4:	03bf039d 	.word	0x03bf039d
  4025b8:	03bf03bf 	.word	0x03bf03bf
  4025bc:	03bf03bf 	.word	0x03bf03bf
  4025c0:	03bf03bf 	.word	0x03bf03bf
  4025c4:	03bf03bf 	.word	0x03bf03bf
  4025c8:	033703bf 	.word	0x033703bf
  4025cc:	03bf0357 	.word	0x03bf0357
  4025d0:	03bf0357 	.word	0x03bf0357
  4025d4:	03bf03bf 	.word	0x03bf03bf
  4025d8:	039803bf 	.word	0x039803bf
  4025dc:	03bf03bf 	.word	0x03bf03bf
  4025e0:	03bf03ad 	.word	0x03bf03ad
  4025e4:	03bf03bf 	.word	0x03bf03bf
  4025e8:	03bf03bf 	.word	0x03bf03bf
  4025ec:	03bf0259 	.word	0x03bf0259
  4025f0:	031e03bf 	.word	0x031e03bf
  4025f4:	03bf03bf 	.word	0x03bf03bf
  4025f8:	03bf03bf 	.word	0x03bf03bf
  4025fc:	03bf03bf 	.word	0x03bf03bf
  402600:	03bf03bf 	.word	0x03bf03bf
  402604:	03bf03bf 	.word	0x03bf03bf
  402608:	02db02c6 	.word	0x02db02c6
  40260c:	03570357 	.word	0x03570357
  402610:	028b0357 	.word	0x028b0357
  402614:	03bf02db 	.word	0x03bf02db
  402618:	029003bf 	.word	0x029003bf
  40261c:	029d03bf 	.word	0x029d03bf
  402620:	02b401cc 	.word	0x02b401cc
  402624:	03bf0208 	.word	0x03bf0208
  402628:	03bf01e1 	.word	0x03bf01e1
  40262c:	03bf007e 	.word	0x03bf007e
  402630:	020d03bf 	.word	0x020d03bf
  402634:	980d      	ldr	r0, [sp, #52]	; 0x34
  402636:	930f      	str	r3, [sp, #60]	; 0x3c
  402638:	4240      	negs	r0, r0
  40263a:	900d      	str	r0, [sp, #52]	; 0x34
  40263c:	f04b 0b04 	orr.w	fp, fp, #4
  402640:	f89a 3000 	ldrb.w	r3, [sl]
  402644:	e794      	b.n	402570 <_svfprintf_r+0xb0>
  402646:	aa25      	add	r2, sp, #148	; 0x94
  402648:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40264a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40264c:	f003 f8a6 	bl	40579c <__ssprint_r>
  402650:	b940      	cbnz	r0, 402664 <_svfprintf_r+0x1a4>
  402652:	46c8      	mov	r8, r9
  402654:	e779      	b.n	40254a <_svfprintf_r+0x8a>
  402656:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402658:	b123      	cbz	r3, 402664 <_svfprintf_r+0x1a4>
  40265a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40265c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40265e:	aa25      	add	r2, sp, #148	; 0x94
  402660:	f003 f89c 	bl	40579c <__ssprint_r>
  402664:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402666:	899b      	ldrh	r3, [r3, #12]
  402668:	f013 0f40 	tst.w	r3, #64	; 0x40
  40266c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40266e:	bf18      	it	ne
  402670:	f04f 33ff 	movne.w	r3, #4294967295
  402674:	9309      	str	r3, [sp, #36]	; 0x24
  402676:	9809      	ldr	r0, [sp, #36]	; 0x24
  402678:	b043      	add	sp, #268	; 0x10c
  40267a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40267e:	f01b 0f20 	tst.w	fp, #32
  402682:	9311      	str	r3, [sp, #68]	; 0x44
  402684:	f040 81dd 	bne.w	402a42 <_svfprintf_r+0x582>
  402688:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40268a:	f01b 0f10 	tst.w	fp, #16
  40268e:	4613      	mov	r3, r2
  402690:	f040 856e 	bne.w	403170 <_svfprintf_r+0xcb0>
  402694:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402698:	f000 856a 	beq.w	403170 <_svfprintf_r+0xcb0>
  40269c:	8814      	ldrh	r4, [r2, #0]
  40269e:	3204      	adds	r2, #4
  4026a0:	2500      	movs	r5, #0
  4026a2:	2301      	movs	r3, #1
  4026a4:	920f      	str	r2, [sp, #60]	; 0x3c
  4026a6:	2700      	movs	r7, #0
  4026a8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4026ac:	990a      	ldr	r1, [sp, #40]	; 0x28
  4026ae:	1c4a      	adds	r2, r1, #1
  4026b0:	f000 8265 	beq.w	402b7e <_svfprintf_r+0x6be>
  4026b4:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  4026b8:	9207      	str	r2, [sp, #28]
  4026ba:	ea54 0205 	orrs.w	r2, r4, r5
  4026be:	f040 8264 	bne.w	402b8a <_svfprintf_r+0x6ca>
  4026c2:	2900      	cmp	r1, #0
  4026c4:	f040 843c 	bne.w	402f40 <_svfprintf_r+0xa80>
  4026c8:	2b00      	cmp	r3, #0
  4026ca:	f040 84d7 	bne.w	40307c <_svfprintf_r+0xbbc>
  4026ce:	f01b 0301 	ands.w	r3, fp, #1
  4026d2:	930e      	str	r3, [sp, #56]	; 0x38
  4026d4:	f000 8604 	beq.w	4032e0 <_svfprintf_r+0xe20>
  4026d8:	ae42      	add	r6, sp, #264	; 0x108
  4026da:	2330      	movs	r3, #48	; 0x30
  4026dc:	f806 3d41 	strb.w	r3, [r6, #-65]!
  4026e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4026e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4026e4:	4293      	cmp	r3, r2
  4026e6:	bfb8      	it	lt
  4026e8:	4613      	movlt	r3, r2
  4026ea:	9308      	str	r3, [sp, #32]
  4026ec:	2300      	movs	r3, #0
  4026ee:	9312      	str	r3, [sp, #72]	; 0x48
  4026f0:	b117      	cbz	r7, 4026f8 <_svfprintf_r+0x238>
  4026f2:	9b08      	ldr	r3, [sp, #32]
  4026f4:	3301      	adds	r3, #1
  4026f6:	9308      	str	r3, [sp, #32]
  4026f8:	9b07      	ldr	r3, [sp, #28]
  4026fa:	f013 0302 	ands.w	r3, r3, #2
  4026fe:	9310      	str	r3, [sp, #64]	; 0x40
  402700:	d002      	beq.n	402708 <_svfprintf_r+0x248>
  402702:	9b08      	ldr	r3, [sp, #32]
  402704:	3302      	adds	r3, #2
  402706:	9308      	str	r3, [sp, #32]
  402708:	9b07      	ldr	r3, [sp, #28]
  40270a:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  40270e:	f040 830e 	bne.w	402d2e <_svfprintf_r+0x86e>
  402712:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402714:	9a08      	ldr	r2, [sp, #32]
  402716:	eba3 0b02 	sub.w	fp, r3, r2
  40271a:	f1bb 0f00 	cmp.w	fp, #0
  40271e:	f340 8306 	ble.w	402d2e <_svfprintf_r+0x86e>
  402722:	f1bb 0f10 	cmp.w	fp, #16
  402726:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402728:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40272a:	dd29      	ble.n	402780 <_svfprintf_r+0x2c0>
  40272c:	4643      	mov	r3, r8
  40272e:	4621      	mov	r1, r4
  402730:	46a8      	mov	r8, r5
  402732:	2710      	movs	r7, #16
  402734:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402736:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402738:	e006      	b.n	402748 <_svfprintf_r+0x288>
  40273a:	f1ab 0b10 	sub.w	fp, fp, #16
  40273e:	f1bb 0f10 	cmp.w	fp, #16
  402742:	f103 0308 	add.w	r3, r3, #8
  402746:	dd18      	ble.n	40277a <_svfprintf_r+0x2ba>
  402748:	3201      	adds	r2, #1
  40274a:	48b7      	ldr	r0, [pc, #732]	; (402a28 <_svfprintf_r+0x568>)
  40274c:	9226      	str	r2, [sp, #152]	; 0x98
  40274e:	3110      	adds	r1, #16
  402750:	2a07      	cmp	r2, #7
  402752:	9127      	str	r1, [sp, #156]	; 0x9c
  402754:	e883 0081 	stmia.w	r3, {r0, r7}
  402758:	ddef      	ble.n	40273a <_svfprintf_r+0x27a>
  40275a:	aa25      	add	r2, sp, #148	; 0x94
  40275c:	4629      	mov	r1, r5
  40275e:	4620      	mov	r0, r4
  402760:	f003 f81c 	bl	40579c <__ssprint_r>
  402764:	2800      	cmp	r0, #0
  402766:	f47f af7d 	bne.w	402664 <_svfprintf_r+0x1a4>
  40276a:	f1ab 0b10 	sub.w	fp, fp, #16
  40276e:	f1bb 0f10 	cmp.w	fp, #16
  402772:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402774:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402776:	464b      	mov	r3, r9
  402778:	dce6      	bgt.n	402748 <_svfprintf_r+0x288>
  40277a:	4645      	mov	r5, r8
  40277c:	460c      	mov	r4, r1
  40277e:	4698      	mov	r8, r3
  402780:	3201      	adds	r2, #1
  402782:	4ba9      	ldr	r3, [pc, #676]	; (402a28 <_svfprintf_r+0x568>)
  402784:	9226      	str	r2, [sp, #152]	; 0x98
  402786:	445c      	add	r4, fp
  402788:	2a07      	cmp	r2, #7
  40278a:	9427      	str	r4, [sp, #156]	; 0x9c
  40278c:	e888 0808 	stmia.w	r8, {r3, fp}
  402790:	f300 8498 	bgt.w	4030c4 <_svfprintf_r+0xc04>
  402794:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402798:	f108 0808 	add.w	r8, r8, #8
  40279c:	b177      	cbz	r7, 4027bc <_svfprintf_r+0x2fc>
  40279e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027a0:	3301      	adds	r3, #1
  4027a2:	3401      	adds	r4, #1
  4027a4:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4027a8:	2201      	movs	r2, #1
  4027aa:	2b07      	cmp	r3, #7
  4027ac:	9427      	str	r4, [sp, #156]	; 0x9c
  4027ae:	9326      	str	r3, [sp, #152]	; 0x98
  4027b0:	e888 0006 	stmia.w	r8, {r1, r2}
  4027b4:	f300 83db 	bgt.w	402f6e <_svfprintf_r+0xaae>
  4027b8:	f108 0808 	add.w	r8, r8, #8
  4027bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4027be:	b16b      	cbz	r3, 4027dc <_svfprintf_r+0x31c>
  4027c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027c2:	3301      	adds	r3, #1
  4027c4:	3402      	adds	r4, #2
  4027c6:	a91e      	add	r1, sp, #120	; 0x78
  4027c8:	2202      	movs	r2, #2
  4027ca:	2b07      	cmp	r3, #7
  4027cc:	9427      	str	r4, [sp, #156]	; 0x9c
  4027ce:	9326      	str	r3, [sp, #152]	; 0x98
  4027d0:	e888 0006 	stmia.w	r8, {r1, r2}
  4027d4:	f300 83d6 	bgt.w	402f84 <_svfprintf_r+0xac4>
  4027d8:	f108 0808 	add.w	r8, r8, #8
  4027dc:	2d80      	cmp	r5, #128	; 0x80
  4027de:	f000 8315 	beq.w	402e0c <_svfprintf_r+0x94c>
  4027e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4027e4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4027e6:	1a9f      	subs	r7, r3, r2
  4027e8:	2f00      	cmp	r7, #0
  4027ea:	dd36      	ble.n	40285a <_svfprintf_r+0x39a>
  4027ec:	2f10      	cmp	r7, #16
  4027ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027f0:	4d8e      	ldr	r5, [pc, #568]	; (402a2c <_svfprintf_r+0x56c>)
  4027f2:	dd27      	ble.n	402844 <_svfprintf_r+0x384>
  4027f4:	4642      	mov	r2, r8
  4027f6:	4621      	mov	r1, r4
  4027f8:	46b0      	mov	r8, r6
  4027fa:	f04f 0b10 	mov.w	fp, #16
  4027fe:	462e      	mov	r6, r5
  402800:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402802:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402804:	e004      	b.n	402810 <_svfprintf_r+0x350>
  402806:	3f10      	subs	r7, #16
  402808:	2f10      	cmp	r7, #16
  40280a:	f102 0208 	add.w	r2, r2, #8
  40280e:	dd15      	ble.n	40283c <_svfprintf_r+0x37c>
  402810:	3301      	adds	r3, #1
  402812:	3110      	adds	r1, #16
  402814:	2b07      	cmp	r3, #7
  402816:	9127      	str	r1, [sp, #156]	; 0x9c
  402818:	9326      	str	r3, [sp, #152]	; 0x98
  40281a:	e882 0840 	stmia.w	r2, {r6, fp}
  40281e:	ddf2      	ble.n	402806 <_svfprintf_r+0x346>
  402820:	aa25      	add	r2, sp, #148	; 0x94
  402822:	4629      	mov	r1, r5
  402824:	4620      	mov	r0, r4
  402826:	f002 ffb9 	bl	40579c <__ssprint_r>
  40282a:	2800      	cmp	r0, #0
  40282c:	f47f af1a 	bne.w	402664 <_svfprintf_r+0x1a4>
  402830:	3f10      	subs	r7, #16
  402832:	2f10      	cmp	r7, #16
  402834:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402836:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402838:	464a      	mov	r2, r9
  40283a:	dce9      	bgt.n	402810 <_svfprintf_r+0x350>
  40283c:	4635      	mov	r5, r6
  40283e:	460c      	mov	r4, r1
  402840:	4646      	mov	r6, r8
  402842:	4690      	mov	r8, r2
  402844:	3301      	adds	r3, #1
  402846:	443c      	add	r4, r7
  402848:	2b07      	cmp	r3, #7
  40284a:	9427      	str	r4, [sp, #156]	; 0x9c
  40284c:	9326      	str	r3, [sp, #152]	; 0x98
  40284e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402852:	f300 8381 	bgt.w	402f58 <_svfprintf_r+0xa98>
  402856:	f108 0808 	add.w	r8, r8, #8
  40285a:	9b07      	ldr	r3, [sp, #28]
  40285c:	05df      	lsls	r7, r3, #23
  40285e:	f100 8268 	bmi.w	402d32 <_svfprintf_r+0x872>
  402862:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402864:	990e      	ldr	r1, [sp, #56]	; 0x38
  402866:	f8c8 6000 	str.w	r6, [r8]
  40286a:	3301      	adds	r3, #1
  40286c:	440c      	add	r4, r1
  40286e:	2b07      	cmp	r3, #7
  402870:	9427      	str	r4, [sp, #156]	; 0x9c
  402872:	f8c8 1004 	str.w	r1, [r8, #4]
  402876:	9326      	str	r3, [sp, #152]	; 0x98
  402878:	f300 834d 	bgt.w	402f16 <_svfprintf_r+0xa56>
  40287c:	f108 0808 	add.w	r8, r8, #8
  402880:	9b07      	ldr	r3, [sp, #28]
  402882:	075b      	lsls	r3, r3, #29
  402884:	d53a      	bpl.n	4028fc <_svfprintf_r+0x43c>
  402886:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402888:	9a08      	ldr	r2, [sp, #32]
  40288a:	1a9d      	subs	r5, r3, r2
  40288c:	2d00      	cmp	r5, #0
  40288e:	dd35      	ble.n	4028fc <_svfprintf_r+0x43c>
  402890:	2d10      	cmp	r5, #16
  402892:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402894:	dd20      	ble.n	4028d8 <_svfprintf_r+0x418>
  402896:	2610      	movs	r6, #16
  402898:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40289a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40289e:	e004      	b.n	4028aa <_svfprintf_r+0x3ea>
  4028a0:	3d10      	subs	r5, #16
  4028a2:	2d10      	cmp	r5, #16
  4028a4:	f108 0808 	add.w	r8, r8, #8
  4028a8:	dd16      	ble.n	4028d8 <_svfprintf_r+0x418>
  4028aa:	3301      	adds	r3, #1
  4028ac:	4a5e      	ldr	r2, [pc, #376]	; (402a28 <_svfprintf_r+0x568>)
  4028ae:	9326      	str	r3, [sp, #152]	; 0x98
  4028b0:	3410      	adds	r4, #16
  4028b2:	2b07      	cmp	r3, #7
  4028b4:	9427      	str	r4, [sp, #156]	; 0x9c
  4028b6:	e888 0044 	stmia.w	r8, {r2, r6}
  4028ba:	ddf1      	ble.n	4028a0 <_svfprintf_r+0x3e0>
  4028bc:	aa25      	add	r2, sp, #148	; 0x94
  4028be:	4659      	mov	r1, fp
  4028c0:	4638      	mov	r0, r7
  4028c2:	f002 ff6b 	bl	40579c <__ssprint_r>
  4028c6:	2800      	cmp	r0, #0
  4028c8:	f47f aecc 	bne.w	402664 <_svfprintf_r+0x1a4>
  4028cc:	3d10      	subs	r5, #16
  4028ce:	2d10      	cmp	r5, #16
  4028d0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028d4:	46c8      	mov	r8, r9
  4028d6:	dce8      	bgt.n	4028aa <_svfprintf_r+0x3ea>
  4028d8:	3301      	adds	r3, #1
  4028da:	4a53      	ldr	r2, [pc, #332]	; (402a28 <_svfprintf_r+0x568>)
  4028dc:	9326      	str	r3, [sp, #152]	; 0x98
  4028de:	442c      	add	r4, r5
  4028e0:	2b07      	cmp	r3, #7
  4028e2:	9427      	str	r4, [sp, #156]	; 0x9c
  4028e4:	e888 0024 	stmia.w	r8, {r2, r5}
  4028e8:	dd08      	ble.n	4028fc <_svfprintf_r+0x43c>
  4028ea:	aa25      	add	r2, sp, #148	; 0x94
  4028ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028ee:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028f0:	f002 ff54 	bl	40579c <__ssprint_r>
  4028f4:	2800      	cmp	r0, #0
  4028f6:	f47f aeb5 	bne.w	402664 <_svfprintf_r+0x1a4>
  4028fa:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4028fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402900:	9908      	ldr	r1, [sp, #32]
  402902:	428a      	cmp	r2, r1
  402904:	bfac      	ite	ge
  402906:	189b      	addge	r3, r3, r2
  402908:	185b      	addlt	r3, r3, r1
  40290a:	9309      	str	r3, [sp, #36]	; 0x24
  40290c:	2c00      	cmp	r4, #0
  40290e:	f040 830d 	bne.w	402f2c <_svfprintf_r+0xa6c>
  402912:	2300      	movs	r3, #0
  402914:	9326      	str	r3, [sp, #152]	; 0x98
  402916:	46c8      	mov	r8, r9
  402918:	e5f9      	b.n	40250e <_svfprintf_r+0x4e>
  40291a:	9311      	str	r3, [sp, #68]	; 0x44
  40291c:	f01b 0320 	ands.w	r3, fp, #32
  402920:	f040 81e3 	bne.w	402cea <_svfprintf_r+0x82a>
  402924:	f01b 0210 	ands.w	r2, fp, #16
  402928:	f040 842e 	bne.w	403188 <_svfprintf_r+0xcc8>
  40292c:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402930:	f000 842a 	beq.w	403188 <_svfprintf_r+0xcc8>
  402934:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402936:	4613      	mov	r3, r2
  402938:	460a      	mov	r2, r1
  40293a:	3204      	adds	r2, #4
  40293c:	880c      	ldrh	r4, [r1, #0]
  40293e:	920f      	str	r2, [sp, #60]	; 0x3c
  402940:	2500      	movs	r5, #0
  402942:	e6b0      	b.n	4026a6 <_svfprintf_r+0x1e6>
  402944:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402946:	9311      	str	r3, [sp, #68]	; 0x44
  402948:	6816      	ldr	r6, [r2, #0]
  40294a:	2400      	movs	r4, #0
  40294c:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402950:	1d15      	adds	r5, r2, #4
  402952:	2e00      	cmp	r6, #0
  402954:	f000 86a7 	beq.w	4036a6 <_svfprintf_r+0x11e6>
  402958:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40295a:	1c53      	adds	r3, r2, #1
  40295c:	f000 8609 	beq.w	403572 <_svfprintf_r+0x10b2>
  402960:	4621      	mov	r1, r4
  402962:	4630      	mov	r0, r6
  402964:	f002 fa8c 	bl	404e80 <memchr>
  402968:	2800      	cmp	r0, #0
  40296a:	f000 86e1 	beq.w	403730 <_svfprintf_r+0x1270>
  40296e:	1b83      	subs	r3, r0, r6
  402970:	930e      	str	r3, [sp, #56]	; 0x38
  402972:	940a      	str	r4, [sp, #40]	; 0x28
  402974:	950f      	str	r5, [sp, #60]	; 0x3c
  402976:	f8cd b01c 	str.w	fp, [sp, #28]
  40297a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40297e:	9308      	str	r3, [sp, #32]
  402980:	9412      	str	r4, [sp, #72]	; 0x48
  402982:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402986:	e6b3      	b.n	4026f0 <_svfprintf_r+0x230>
  402988:	f89a 3000 	ldrb.w	r3, [sl]
  40298c:	2201      	movs	r2, #1
  40298e:	212b      	movs	r1, #43	; 0x2b
  402990:	e5ee      	b.n	402570 <_svfprintf_r+0xb0>
  402992:	f04b 0b20 	orr.w	fp, fp, #32
  402996:	f89a 3000 	ldrb.w	r3, [sl]
  40299a:	e5e9      	b.n	402570 <_svfprintf_r+0xb0>
  40299c:	9311      	str	r3, [sp, #68]	; 0x44
  40299e:	2a00      	cmp	r2, #0
  4029a0:	f040 8795 	bne.w	4038ce <_svfprintf_r+0x140e>
  4029a4:	4b22      	ldr	r3, [pc, #136]	; (402a30 <_svfprintf_r+0x570>)
  4029a6:	9318      	str	r3, [sp, #96]	; 0x60
  4029a8:	f01b 0f20 	tst.w	fp, #32
  4029ac:	f040 8111 	bne.w	402bd2 <_svfprintf_r+0x712>
  4029b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4029b2:	f01b 0f10 	tst.w	fp, #16
  4029b6:	4613      	mov	r3, r2
  4029b8:	f040 83e1 	bne.w	40317e <_svfprintf_r+0xcbe>
  4029bc:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4029c0:	f000 83dd 	beq.w	40317e <_svfprintf_r+0xcbe>
  4029c4:	3304      	adds	r3, #4
  4029c6:	8814      	ldrh	r4, [r2, #0]
  4029c8:	930f      	str	r3, [sp, #60]	; 0x3c
  4029ca:	2500      	movs	r5, #0
  4029cc:	f01b 0f01 	tst.w	fp, #1
  4029d0:	f000 810c 	beq.w	402bec <_svfprintf_r+0x72c>
  4029d4:	ea54 0305 	orrs.w	r3, r4, r5
  4029d8:	f000 8108 	beq.w	402bec <_svfprintf_r+0x72c>
  4029dc:	2330      	movs	r3, #48	; 0x30
  4029de:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  4029e2:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4029e6:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4029ea:	f04b 0b02 	orr.w	fp, fp, #2
  4029ee:	2302      	movs	r3, #2
  4029f0:	e659      	b.n	4026a6 <_svfprintf_r+0x1e6>
  4029f2:	f89a 3000 	ldrb.w	r3, [sl]
  4029f6:	2900      	cmp	r1, #0
  4029f8:	f47f adba 	bne.w	402570 <_svfprintf_r+0xb0>
  4029fc:	2201      	movs	r2, #1
  4029fe:	2120      	movs	r1, #32
  402a00:	e5b6      	b.n	402570 <_svfprintf_r+0xb0>
  402a02:	f04b 0b01 	orr.w	fp, fp, #1
  402a06:	f89a 3000 	ldrb.w	r3, [sl]
  402a0a:	e5b1      	b.n	402570 <_svfprintf_r+0xb0>
  402a0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402a0e:	6823      	ldr	r3, [r4, #0]
  402a10:	930d      	str	r3, [sp, #52]	; 0x34
  402a12:	4618      	mov	r0, r3
  402a14:	2800      	cmp	r0, #0
  402a16:	4623      	mov	r3, r4
  402a18:	f103 0304 	add.w	r3, r3, #4
  402a1c:	f6ff ae0a 	blt.w	402634 <_svfprintf_r+0x174>
  402a20:	930f      	str	r3, [sp, #60]	; 0x3c
  402a22:	f89a 3000 	ldrb.w	r3, [sl]
  402a26:	e5a3      	b.n	402570 <_svfprintf_r+0xb0>
  402a28:	00406f9c 	.word	0x00406f9c
  402a2c:	00406fac 	.word	0x00406fac
  402a30:	00406f7c 	.word	0x00406f7c
  402a34:	f04b 0b10 	orr.w	fp, fp, #16
  402a38:	f01b 0f20 	tst.w	fp, #32
  402a3c:	9311      	str	r3, [sp, #68]	; 0x44
  402a3e:	f43f ae23 	beq.w	402688 <_svfprintf_r+0x1c8>
  402a42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402a44:	3507      	adds	r5, #7
  402a46:	f025 0307 	bic.w	r3, r5, #7
  402a4a:	f103 0208 	add.w	r2, r3, #8
  402a4e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402a52:	920f      	str	r2, [sp, #60]	; 0x3c
  402a54:	2301      	movs	r3, #1
  402a56:	e626      	b.n	4026a6 <_svfprintf_r+0x1e6>
  402a58:	f89a 3000 	ldrb.w	r3, [sl]
  402a5c:	2b2a      	cmp	r3, #42	; 0x2a
  402a5e:	f10a 0401 	add.w	r4, sl, #1
  402a62:	f000 8727 	beq.w	4038b4 <_svfprintf_r+0x13f4>
  402a66:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a6a:	2809      	cmp	r0, #9
  402a6c:	46a2      	mov	sl, r4
  402a6e:	f200 86ad 	bhi.w	4037cc <_svfprintf_r+0x130c>
  402a72:	2300      	movs	r3, #0
  402a74:	461c      	mov	r4, r3
  402a76:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402a7a:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402a7e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402a82:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a86:	2809      	cmp	r0, #9
  402a88:	d9f5      	bls.n	402a76 <_svfprintf_r+0x5b6>
  402a8a:	940a      	str	r4, [sp, #40]	; 0x28
  402a8c:	e572      	b.n	402574 <_svfprintf_r+0xb4>
  402a8e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  402a92:	f89a 3000 	ldrb.w	r3, [sl]
  402a96:	e56b      	b.n	402570 <_svfprintf_r+0xb0>
  402a98:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402a9c:	f89a 3000 	ldrb.w	r3, [sl]
  402aa0:	e566      	b.n	402570 <_svfprintf_r+0xb0>
  402aa2:	f89a 3000 	ldrb.w	r3, [sl]
  402aa6:	2b6c      	cmp	r3, #108	; 0x6c
  402aa8:	bf03      	ittte	eq
  402aaa:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402aae:	f04b 0b20 	orreq.w	fp, fp, #32
  402ab2:	f10a 0a01 	addeq.w	sl, sl, #1
  402ab6:	f04b 0b10 	orrne.w	fp, fp, #16
  402aba:	e559      	b.n	402570 <_svfprintf_r+0xb0>
  402abc:	2a00      	cmp	r2, #0
  402abe:	f040 8711 	bne.w	4038e4 <_svfprintf_r+0x1424>
  402ac2:	f01b 0f20 	tst.w	fp, #32
  402ac6:	f040 84f9 	bne.w	4034bc <_svfprintf_r+0xffc>
  402aca:	f01b 0f10 	tst.w	fp, #16
  402ace:	f040 84ac 	bne.w	40342a <_svfprintf_r+0xf6a>
  402ad2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402ad6:	f000 84a8 	beq.w	40342a <_svfprintf_r+0xf6a>
  402ada:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402adc:	6813      	ldr	r3, [r2, #0]
  402ade:	3204      	adds	r2, #4
  402ae0:	920f      	str	r2, [sp, #60]	; 0x3c
  402ae2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402ae6:	801a      	strh	r2, [r3, #0]
  402ae8:	e511      	b.n	40250e <_svfprintf_r+0x4e>
  402aea:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402aec:	4bb3      	ldr	r3, [pc, #716]	; (402dbc <_svfprintf_r+0x8fc>)
  402aee:	680c      	ldr	r4, [r1, #0]
  402af0:	9318      	str	r3, [sp, #96]	; 0x60
  402af2:	2230      	movs	r2, #48	; 0x30
  402af4:	2378      	movs	r3, #120	; 0x78
  402af6:	3104      	adds	r1, #4
  402af8:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402afc:	9311      	str	r3, [sp, #68]	; 0x44
  402afe:	f04b 0b02 	orr.w	fp, fp, #2
  402b02:	910f      	str	r1, [sp, #60]	; 0x3c
  402b04:	2500      	movs	r5, #0
  402b06:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402b0a:	2302      	movs	r3, #2
  402b0c:	e5cb      	b.n	4026a6 <_svfprintf_r+0x1e6>
  402b0e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402b10:	9311      	str	r3, [sp, #68]	; 0x44
  402b12:	680a      	ldr	r2, [r1, #0]
  402b14:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402b18:	2300      	movs	r3, #0
  402b1a:	460a      	mov	r2, r1
  402b1c:	461f      	mov	r7, r3
  402b1e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402b22:	3204      	adds	r2, #4
  402b24:	2301      	movs	r3, #1
  402b26:	9308      	str	r3, [sp, #32]
  402b28:	f8cd b01c 	str.w	fp, [sp, #28]
  402b2c:	970a      	str	r7, [sp, #40]	; 0x28
  402b2e:	9712      	str	r7, [sp, #72]	; 0x48
  402b30:	920f      	str	r2, [sp, #60]	; 0x3c
  402b32:	930e      	str	r3, [sp, #56]	; 0x38
  402b34:	ae28      	add	r6, sp, #160	; 0xa0
  402b36:	e5df      	b.n	4026f8 <_svfprintf_r+0x238>
  402b38:	9311      	str	r3, [sp, #68]	; 0x44
  402b3a:	2a00      	cmp	r2, #0
  402b3c:	f040 86ea 	bne.w	403914 <_svfprintf_r+0x1454>
  402b40:	f01b 0f20 	tst.w	fp, #32
  402b44:	d15d      	bne.n	402c02 <_svfprintf_r+0x742>
  402b46:	f01b 0f10 	tst.w	fp, #16
  402b4a:	f040 8308 	bne.w	40315e <_svfprintf_r+0xc9e>
  402b4e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402b52:	f000 8304 	beq.w	40315e <_svfprintf_r+0xc9e>
  402b56:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402b58:	f9b1 4000 	ldrsh.w	r4, [r1]
  402b5c:	3104      	adds	r1, #4
  402b5e:	17e5      	asrs	r5, r4, #31
  402b60:	4622      	mov	r2, r4
  402b62:	462b      	mov	r3, r5
  402b64:	910f      	str	r1, [sp, #60]	; 0x3c
  402b66:	2a00      	cmp	r2, #0
  402b68:	f173 0300 	sbcs.w	r3, r3, #0
  402b6c:	db58      	blt.n	402c20 <_svfprintf_r+0x760>
  402b6e:	990a      	ldr	r1, [sp, #40]	; 0x28
  402b70:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402b74:	1c4a      	adds	r2, r1, #1
  402b76:	f04f 0301 	mov.w	r3, #1
  402b7a:	f47f ad9b 	bne.w	4026b4 <_svfprintf_r+0x1f4>
  402b7e:	ea54 0205 	orrs.w	r2, r4, r5
  402b82:	f000 81df 	beq.w	402f44 <_svfprintf_r+0xa84>
  402b86:	f8cd b01c 	str.w	fp, [sp, #28]
  402b8a:	2b01      	cmp	r3, #1
  402b8c:	f000 827b 	beq.w	403086 <_svfprintf_r+0xbc6>
  402b90:	2b02      	cmp	r3, #2
  402b92:	f040 8206 	bne.w	402fa2 <_svfprintf_r+0xae2>
  402b96:	9818      	ldr	r0, [sp, #96]	; 0x60
  402b98:	464e      	mov	r6, r9
  402b9a:	0923      	lsrs	r3, r4, #4
  402b9c:	f004 010f 	and.w	r1, r4, #15
  402ba0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402ba4:	092a      	lsrs	r2, r5, #4
  402ba6:	461c      	mov	r4, r3
  402ba8:	4615      	mov	r5, r2
  402baa:	5c43      	ldrb	r3, [r0, r1]
  402bac:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402bb0:	ea54 0305 	orrs.w	r3, r4, r5
  402bb4:	d1f1      	bne.n	402b9a <_svfprintf_r+0x6da>
  402bb6:	eba9 0306 	sub.w	r3, r9, r6
  402bba:	930e      	str	r3, [sp, #56]	; 0x38
  402bbc:	e590      	b.n	4026e0 <_svfprintf_r+0x220>
  402bbe:	9311      	str	r3, [sp, #68]	; 0x44
  402bc0:	2a00      	cmp	r2, #0
  402bc2:	f040 86a3 	bne.w	40390c <_svfprintf_r+0x144c>
  402bc6:	4b7e      	ldr	r3, [pc, #504]	; (402dc0 <_svfprintf_r+0x900>)
  402bc8:	9318      	str	r3, [sp, #96]	; 0x60
  402bca:	f01b 0f20 	tst.w	fp, #32
  402bce:	f43f aeef 	beq.w	4029b0 <_svfprintf_r+0x4f0>
  402bd2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402bd4:	3507      	adds	r5, #7
  402bd6:	f025 0307 	bic.w	r3, r5, #7
  402bda:	f103 0208 	add.w	r2, r3, #8
  402bde:	f01b 0f01 	tst.w	fp, #1
  402be2:	920f      	str	r2, [sp, #60]	; 0x3c
  402be4:	e9d3 4500 	ldrd	r4, r5, [r3]
  402be8:	f47f aef4 	bne.w	4029d4 <_svfprintf_r+0x514>
  402bec:	2302      	movs	r3, #2
  402bee:	e55a      	b.n	4026a6 <_svfprintf_r+0x1e6>
  402bf0:	9311      	str	r3, [sp, #68]	; 0x44
  402bf2:	2a00      	cmp	r2, #0
  402bf4:	f040 8686 	bne.w	403904 <_svfprintf_r+0x1444>
  402bf8:	f04b 0b10 	orr.w	fp, fp, #16
  402bfc:	f01b 0f20 	tst.w	fp, #32
  402c00:	d0a1      	beq.n	402b46 <_svfprintf_r+0x686>
  402c02:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402c04:	3507      	adds	r5, #7
  402c06:	f025 0507 	bic.w	r5, r5, #7
  402c0a:	e9d5 2300 	ldrd	r2, r3, [r5]
  402c0e:	2a00      	cmp	r2, #0
  402c10:	f105 0108 	add.w	r1, r5, #8
  402c14:	461d      	mov	r5, r3
  402c16:	f173 0300 	sbcs.w	r3, r3, #0
  402c1a:	910f      	str	r1, [sp, #60]	; 0x3c
  402c1c:	4614      	mov	r4, r2
  402c1e:	daa6      	bge.n	402b6e <_svfprintf_r+0x6ae>
  402c20:	272d      	movs	r7, #45	; 0x2d
  402c22:	4264      	negs	r4, r4
  402c24:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402c28:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402c2c:	2301      	movs	r3, #1
  402c2e:	e53d      	b.n	4026ac <_svfprintf_r+0x1ec>
  402c30:	9311      	str	r3, [sp, #68]	; 0x44
  402c32:	2a00      	cmp	r2, #0
  402c34:	f040 8662 	bne.w	4038fc <_svfprintf_r+0x143c>
  402c38:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402c3a:	3507      	adds	r5, #7
  402c3c:	f025 0307 	bic.w	r3, r5, #7
  402c40:	f103 0208 	add.w	r2, r3, #8
  402c44:	920f      	str	r2, [sp, #60]	; 0x3c
  402c46:	681a      	ldr	r2, [r3, #0]
  402c48:	9215      	str	r2, [sp, #84]	; 0x54
  402c4a:	685b      	ldr	r3, [r3, #4]
  402c4c:	9314      	str	r3, [sp, #80]	; 0x50
  402c4e:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402c50:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402c52:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402c56:	4628      	mov	r0, r5
  402c58:	4621      	mov	r1, r4
  402c5a:	f04f 32ff 	mov.w	r2, #4294967295
  402c5e:	4b59      	ldr	r3, [pc, #356]	; (402dc4 <_svfprintf_r+0x904>)
  402c60:	f003 fa98 	bl	406194 <__aeabi_dcmpun>
  402c64:	2800      	cmp	r0, #0
  402c66:	f040 834a 	bne.w	4032fe <_svfprintf_r+0xe3e>
  402c6a:	4628      	mov	r0, r5
  402c6c:	4621      	mov	r1, r4
  402c6e:	f04f 32ff 	mov.w	r2, #4294967295
  402c72:	4b54      	ldr	r3, [pc, #336]	; (402dc4 <_svfprintf_r+0x904>)
  402c74:	f003 fa70 	bl	406158 <__aeabi_dcmple>
  402c78:	2800      	cmp	r0, #0
  402c7a:	f040 8340 	bne.w	4032fe <_svfprintf_r+0xe3e>
  402c7e:	a815      	add	r0, sp, #84	; 0x54
  402c80:	c80d      	ldmia	r0, {r0, r2, r3}
  402c82:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c84:	f003 fa5e 	bl	406144 <__aeabi_dcmplt>
  402c88:	2800      	cmp	r0, #0
  402c8a:	f040 8530 	bne.w	4036ee <_svfprintf_r+0x122e>
  402c8e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402c92:	4e4d      	ldr	r6, [pc, #308]	; (402dc8 <_svfprintf_r+0x908>)
  402c94:	4b4d      	ldr	r3, [pc, #308]	; (402dcc <_svfprintf_r+0x90c>)
  402c96:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402c9a:	9007      	str	r0, [sp, #28]
  402c9c:	9811      	ldr	r0, [sp, #68]	; 0x44
  402c9e:	2203      	movs	r2, #3
  402ca0:	2100      	movs	r1, #0
  402ca2:	9208      	str	r2, [sp, #32]
  402ca4:	910a      	str	r1, [sp, #40]	; 0x28
  402ca6:	2847      	cmp	r0, #71	; 0x47
  402ca8:	bfd8      	it	le
  402caa:	461e      	movle	r6, r3
  402cac:	920e      	str	r2, [sp, #56]	; 0x38
  402cae:	9112      	str	r1, [sp, #72]	; 0x48
  402cb0:	e51e      	b.n	4026f0 <_svfprintf_r+0x230>
  402cb2:	f04b 0b08 	orr.w	fp, fp, #8
  402cb6:	f89a 3000 	ldrb.w	r3, [sl]
  402cba:	e459      	b.n	402570 <_svfprintf_r+0xb0>
  402cbc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402cc0:	2300      	movs	r3, #0
  402cc2:	461c      	mov	r4, r3
  402cc4:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402cc8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402ccc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402cd0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402cd4:	2809      	cmp	r0, #9
  402cd6:	d9f5      	bls.n	402cc4 <_svfprintf_r+0x804>
  402cd8:	940d      	str	r4, [sp, #52]	; 0x34
  402cda:	e44b      	b.n	402574 <_svfprintf_r+0xb4>
  402cdc:	f04b 0b10 	orr.w	fp, fp, #16
  402ce0:	9311      	str	r3, [sp, #68]	; 0x44
  402ce2:	f01b 0320 	ands.w	r3, fp, #32
  402ce6:	f43f ae1d 	beq.w	402924 <_svfprintf_r+0x464>
  402cea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402cec:	3507      	adds	r5, #7
  402cee:	f025 0307 	bic.w	r3, r5, #7
  402cf2:	f103 0208 	add.w	r2, r3, #8
  402cf6:	e9d3 4500 	ldrd	r4, r5, [r3]
  402cfa:	920f      	str	r2, [sp, #60]	; 0x3c
  402cfc:	2300      	movs	r3, #0
  402cfe:	e4d2      	b.n	4026a6 <_svfprintf_r+0x1e6>
  402d00:	9311      	str	r3, [sp, #68]	; 0x44
  402d02:	2a00      	cmp	r2, #0
  402d04:	f040 85e7 	bne.w	4038d6 <_svfprintf_r+0x1416>
  402d08:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402d0a:	2a00      	cmp	r2, #0
  402d0c:	f43f aca3 	beq.w	402656 <_svfprintf_r+0x196>
  402d10:	2300      	movs	r3, #0
  402d12:	2101      	movs	r1, #1
  402d14:	461f      	mov	r7, r3
  402d16:	9108      	str	r1, [sp, #32]
  402d18:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402d1c:	f8cd b01c 	str.w	fp, [sp, #28]
  402d20:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402d24:	930a      	str	r3, [sp, #40]	; 0x28
  402d26:	9312      	str	r3, [sp, #72]	; 0x48
  402d28:	910e      	str	r1, [sp, #56]	; 0x38
  402d2a:	ae28      	add	r6, sp, #160	; 0xa0
  402d2c:	e4e4      	b.n	4026f8 <_svfprintf_r+0x238>
  402d2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d30:	e534      	b.n	40279c <_svfprintf_r+0x2dc>
  402d32:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d34:	2b65      	cmp	r3, #101	; 0x65
  402d36:	f340 80a7 	ble.w	402e88 <_svfprintf_r+0x9c8>
  402d3a:	a815      	add	r0, sp, #84	; 0x54
  402d3c:	c80d      	ldmia	r0, {r0, r2, r3}
  402d3e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402d40:	f003 f9f6 	bl	406130 <__aeabi_dcmpeq>
  402d44:	2800      	cmp	r0, #0
  402d46:	f000 8150 	beq.w	402fea <_svfprintf_r+0xb2a>
  402d4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d4c:	4a20      	ldr	r2, [pc, #128]	; (402dd0 <_svfprintf_r+0x910>)
  402d4e:	f8c8 2000 	str.w	r2, [r8]
  402d52:	3301      	adds	r3, #1
  402d54:	3401      	adds	r4, #1
  402d56:	2201      	movs	r2, #1
  402d58:	2b07      	cmp	r3, #7
  402d5a:	9427      	str	r4, [sp, #156]	; 0x9c
  402d5c:	9326      	str	r3, [sp, #152]	; 0x98
  402d5e:	f8c8 2004 	str.w	r2, [r8, #4]
  402d62:	f300 836a 	bgt.w	40343a <_svfprintf_r+0xf7a>
  402d66:	f108 0808 	add.w	r8, r8, #8
  402d6a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402d6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402d6e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d70:	4293      	cmp	r3, r2
  402d72:	db03      	blt.n	402d7c <_svfprintf_r+0x8bc>
  402d74:	9b07      	ldr	r3, [sp, #28]
  402d76:	07dd      	lsls	r5, r3, #31
  402d78:	f57f ad82 	bpl.w	402880 <_svfprintf_r+0x3c0>
  402d7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d7e:	9919      	ldr	r1, [sp, #100]	; 0x64
  402d80:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402d82:	f8c8 2000 	str.w	r2, [r8]
  402d86:	3301      	adds	r3, #1
  402d88:	440c      	add	r4, r1
  402d8a:	2b07      	cmp	r3, #7
  402d8c:	f8c8 1004 	str.w	r1, [r8, #4]
  402d90:	9427      	str	r4, [sp, #156]	; 0x9c
  402d92:	9326      	str	r3, [sp, #152]	; 0x98
  402d94:	f300 839e 	bgt.w	4034d4 <_svfprintf_r+0x1014>
  402d98:	f108 0808 	add.w	r8, r8, #8
  402d9c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d9e:	1e5e      	subs	r6, r3, #1
  402da0:	2e00      	cmp	r6, #0
  402da2:	f77f ad6d 	ble.w	402880 <_svfprintf_r+0x3c0>
  402da6:	2e10      	cmp	r6, #16
  402da8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402daa:	4d0a      	ldr	r5, [pc, #40]	; (402dd4 <_svfprintf_r+0x914>)
  402dac:	f340 81f5 	ble.w	40319a <_svfprintf_r+0xcda>
  402db0:	4622      	mov	r2, r4
  402db2:	2710      	movs	r7, #16
  402db4:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402db8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402dba:	e013      	b.n	402de4 <_svfprintf_r+0x924>
  402dbc:	00406f7c 	.word	0x00406f7c
  402dc0:	00406f68 	.word	0x00406f68
  402dc4:	7fefffff 	.word	0x7fefffff
  402dc8:	00406f5c 	.word	0x00406f5c
  402dcc:	00406f58 	.word	0x00406f58
  402dd0:	00406f98 	.word	0x00406f98
  402dd4:	00406fac 	.word	0x00406fac
  402dd8:	f108 0808 	add.w	r8, r8, #8
  402ddc:	3e10      	subs	r6, #16
  402dde:	2e10      	cmp	r6, #16
  402de0:	f340 81da 	ble.w	403198 <_svfprintf_r+0xcd8>
  402de4:	3301      	adds	r3, #1
  402de6:	3210      	adds	r2, #16
  402de8:	2b07      	cmp	r3, #7
  402dea:	9227      	str	r2, [sp, #156]	; 0x9c
  402dec:	9326      	str	r3, [sp, #152]	; 0x98
  402dee:	e888 00a0 	stmia.w	r8, {r5, r7}
  402df2:	ddf1      	ble.n	402dd8 <_svfprintf_r+0x918>
  402df4:	aa25      	add	r2, sp, #148	; 0x94
  402df6:	4621      	mov	r1, r4
  402df8:	4658      	mov	r0, fp
  402dfa:	f002 fccf 	bl	40579c <__ssprint_r>
  402dfe:	2800      	cmp	r0, #0
  402e00:	f47f ac30 	bne.w	402664 <_svfprintf_r+0x1a4>
  402e04:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402e06:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e08:	46c8      	mov	r8, r9
  402e0a:	e7e7      	b.n	402ddc <_svfprintf_r+0x91c>
  402e0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402e0e:	9a08      	ldr	r2, [sp, #32]
  402e10:	1a9f      	subs	r7, r3, r2
  402e12:	2f00      	cmp	r7, #0
  402e14:	f77f ace5 	ble.w	4027e2 <_svfprintf_r+0x322>
  402e18:	2f10      	cmp	r7, #16
  402e1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e1c:	4db6      	ldr	r5, [pc, #728]	; (4030f8 <_svfprintf_r+0xc38>)
  402e1e:	dd27      	ble.n	402e70 <_svfprintf_r+0x9b0>
  402e20:	4642      	mov	r2, r8
  402e22:	4621      	mov	r1, r4
  402e24:	46b0      	mov	r8, r6
  402e26:	f04f 0b10 	mov.w	fp, #16
  402e2a:	462e      	mov	r6, r5
  402e2c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402e2e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402e30:	e004      	b.n	402e3c <_svfprintf_r+0x97c>
  402e32:	3f10      	subs	r7, #16
  402e34:	2f10      	cmp	r7, #16
  402e36:	f102 0208 	add.w	r2, r2, #8
  402e3a:	dd15      	ble.n	402e68 <_svfprintf_r+0x9a8>
  402e3c:	3301      	adds	r3, #1
  402e3e:	3110      	adds	r1, #16
  402e40:	2b07      	cmp	r3, #7
  402e42:	9127      	str	r1, [sp, #156]	; 0x9c
  402e44:	9326      	str	r3, [sp, #152]	; 0x98
  402e46:	e882 0840 	stmia.w	r2, {r6, fp}
  402e4a:	ddf2      	ble.n	402e32 <_svfprintf_r+0x972>
  402e4c:	aa25      	add	r2, sp, #148	; 0x94
  402e4e:	4629      	mov	r1, r5
  402e50:	4620      	mov	r0, r4
  402e52:	f002 fca3 	bl	40579c <__ssprint_r>
  402e56:	2800      	cmp	r0, #0
  402e58:	f47f ac04 	bne.w	402664 <_svfprintf_r+0x1a4>
  402e5c:	3f10      	subs	r7, #16
  402e5e:	2f10      	cmp	r7, #16
  402e60:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402e62:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e64:	464a      	mov	r2, r9
  402e66:	dce9      	bgt.n	402e3c <_svfprintf_r+0x97c>
  402e68:	4635      	mov	r5, r6
  402e6a:	460c      	mov	r4, r1
  402e6c:	4646      	mov	r6, r8
  402e6e:	4690      	mov	r8, r2
  402e70:	3301      	adds	r3, #1
  402e72:	443c      	add	r4, r7
  402e74:	2b07      	cmp	r3, #7
  402e76:	9427      	str	r4, [sp, #156]	; 0x9c
  402e78:	9326      	str	r3, [sp, #152]	; 0x98
  402e7a:	e888 00a0 	stmia.w	r8, {r5, r7}
  402e7e:	f300 8232 	bgt.w	4032e6 <_svfprintf_r+0xe26>
  402e82:	f108 0808 	add.w	r8, r8, #8
  402e86:	e4ac      	b.n	4027e2 <_svfprintf_r+0x322>
  402e88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e8a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402e8c:	2b01      	cmp	r3, #1
  402e8e:	f340 81fe 	ble.w	40328e <_svfprintf_r+0xdce>
  402e92:	3701      	adds	r7, #1
  402e94:	3401      	adds	r4, #1
  402e96:	2301      	movs	r3, #1
  402e98:	2f07      	cmp	r7, #7
  402e9a:	9427      	str	r4, [sp, #156]	; 0x9c
  402e9c:	9726      	str	r7, [sp, #152]	; 0x98
  402e9e:	f8c8 6000 	str.w	r6, [r8]
  402ea2:	f8c8 3004 	str.w	r3, [r8, #4]
  402ea6:	f300 8203 	bgt.w	4032b0 <_svfprintf_r+0xdf0>
  402eaa:	f108 0808 	add.w	r8, r8, #8
  402eae:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402eb0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402eb2:	f8c8 3000 	str.w	r3, [r8]
  402eb6:	3701      	adds	r7, #1
  402eb8:	4414      	add	r4, r2
  402eba:	2f07      	cmp	r7, #7
  402ebc:	9427      	str	r4, [sp, #156]	; 0x9c
  402ebe:	9726      	str	r7, [sp, #152]	; 0x98
  402ec0:	f8c8 2004 	str.w	r2, [r8, #4]
  402ec4:	f300 8200 	bgt.w	4032c8 <_svfprintf_r+0xe08>
  402ec8:	f108 0808 	add.w	r8, r8, #8
  402ecc:	a815      	add	r0, sp, #84	; 0x54
  402ece:	c80d      	ldmia	r0, {r0, r2, r3}
  402ed0:	9914      	ldr	r1, [sp, #80]	; 0x50
  402ed2:	f003 f92d 	bl	406130 <__aeabi_dcmpeq>
  402ed6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402ed8:	2800      	cmp	r0, #0
  402eda:	f040 8101 	bne.w	4030e0 <_svfprintf_r+0xc20>
  402ede:	3b01      	subs	r3, #1
  402ee0:	3701      	adds	r7, #1
  402ee2:	3601      	adds	r6, #1
  402ee4:	441c      	add	r4, r3
  402ee6:	2f07      	cmp	r7, #7
  402ee8:	9726      	str	r7, [sp, #152]	; 0x98
  402eea:	9427      	str	r4, [sp, #156]	; 0x9c
  402eec:	f8c8 6000 	str.w	r6, [r8]
  402ef0:	f8c8 3004 	str.w	r3, [r8, #4]
  402ef4:	f300 8127 	bgt.w	403146 <_svfprintf_r+0xc86>
  402ef8:	f108 0808 	add.w	r8, r8, #8
  402efc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402efe:	f8c8 2004 	str.w	r2, [r8, #4]
  402f02:	3701      	adds	r7, #1
  402f04:	4414      	add	r4, r2
  402f06:	ab21      	add	r3, sp, #132	; 0x84
  402f08:	2f07      	cmp	r7, #7
  402f0a:	9427      	str	r4, [sp, #156]	; 0x9c
  402f0c:	9726      	str	r7, [sp, #152]	; 0x98
  402f0e:	f8c8 3000 	str.w	r3, [r8]
  402f12:	f77f acb3 	ble.w	40287c <_svfprintf_r+0x3bc>
  402f16:	aa25      	add	r2, sp, #148	; 0x94
  402f18:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f1c:	f002 fc3e 	bl	40579c <__ssprint_r>
  402f20:	2800      	cmp	r0, #0
  402f22:	f47f ab9f 	bne.w	402664 <_svfprintf_r+0x1a4>
  402f26:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f28:	46c8      	mov	r8, r9
  402f2a:	e4a9      	b.n	402880 <_svfprintf_r+0x3c0>
  402f2c:	aa25      	add	r2, sp, #148	; 0x94
  402f2e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f30:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f32:	f002 fc33 	bl	40579c <__ssprint_r>
  402f36:	2800      	cmp	r0, #0
  402f38:	f43f aceb 	beq.w	402912 <_svfprintf_r+0x452>
  402f3c:	f7ff bb92 	b.w	402664 <_svfprintf_r+0x1a4>
  402f40:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402f44:	2b01      	cmp	r3, #1
  402f46:	f000 8134 	beq.w	4031b2 <_svfprintf_r+0xcf2>
  402f4a:	2b02      	cmp	r3, #2
  402f4c:	d125      	bne.n	402f9a <_svfprintf_r+0xada>
  402f4e:	f8cd b01c 	str.w	fp, [sp, #28]
  402f52:	2400      	movs	r4, #0
  402f54:	2500      	movs	r5, #0
  402f56:	e61e      	b.n	402b96 <_svfprintf_r+0x6d6>
  402f58:	aa25      	add	r2, sp, #148	; 0x94
  402f5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f5c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f5e:	f002 fc1d 	bl	40579c <__ssprint_r>
  402f62:	2800      	cmp	r0, #0
  402f64:	f47f ab7e 	bne.w	402664 <_svfprintf_r+0x1a4>
  402f68:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f6a:	46c8      	mov	r8, r9
  402f6c:	e475      	b.n	40285a <_svfprintf_r+0x39a>
  402f6e:	aa25      	add	r2, sp, #148	; 0x94
  402f70:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f72:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f74:	f002 fc12 	bl	40579c <__ssprint_r>
  402f78:	2800      	cmp	r0, #0
  402f7a:	f47f ab73 	bne.w	402664 <_svfprintf_r+0x1a4>
  402f7e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f80:	46c8      	mov	r8, r9
  402f82:	e41b      	b.n	4027bc <_svfprintf_r+0x2fc>
  402f84:	aa25      	add	r2, sp, #148	; 0x94
  402f86:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f88:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f8a:	f002 fc07 	bl	40579c <__ssprint_r>
  402f8e:	2800      	cmp	r0, #0
  402f90:	f47f ab68 	bne.w	402664 <_svfprintf_r+0x1a4>
  402f94:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f96:	46c8      	mov	r8, r9
  402f98:	e420      	b.n	4027dc <_svfprintf_r+0x31c>
  402f9a:	f8cd b01c 	str.w	fp, [sp, #28]
  402f9e:	2400      	movs	r4, #0
  402fa0:	2500      	movs	r5, #0
  402fa2:	4649      	mov	r1, r9
  402fa4:	e000      	b.n	402fa8 <_svfprintf_r+0xae8>
  402fa6:	4631      	mov	r1, r6
  402fa8:	08e2      	lsrs	r2, r4, #3
  402faa:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402fae:	08e8      	lsrs	r0, r5, #3
  402fb0:	f004 0307 	and.w	r3, r4, #7
  402fb4:	4605      	mov	r5, r0
  402fb6:	4614      	mov	r4, r2
  402fb8:	3330      	adds	r3, #48	; 0x30
  402fba:	ea54 0205 	orrs.w	r2, r4, r5
  402fbe:	f801 3c01 	strb.w	r3, [r1, #-1]
  402fc2:	f101 36ff 	add.w	r6, r1, #4294967295
  402fc6:	d1ee      	bne.n	402fa6 <_svfprintf_r+0xae6>
  402fc8:	9a07      	ldr	r2, [sp, #28]
  402fca:	07d2      	lsls	r2, r2, #31
  402fcc:	f57f adf3 	bpl.w	402bb6 <_svfprintf_r+0x6f6>
  402fd0:	2b30      	cmp	r3, #48	; 0x30
  402fd2:	f43f adf0 	beq.w	402bb6 <_svfprintf_r+0x6f6>
  402fd6:	3902      	subs	r1, #2
  402fd8:	2330      	movs	r3, #48	; 0x30
  402fda:	f806 3c01 	strb.w	r3, [r6, #-1]
  402fde:	eba9 0301 	sub.w	r3, r9, r1
  402fe2:	930e      	str	r3, [sp, #56]	; 0x38
  402fe4:	460e      	mov	r6, r1
  402fe6:	f7ff bb7b 	b.w	4026e0 <_svfprintf_r+0x220>
  402fea:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402fec:	2900      	cmp	r1, #0
  402fee:	f340 822e 	ble.w	40344e <_svfprintf_r+0xf8e>
  402ff2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ff4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402ff6:	4293      	cmp	r3, r2
  402ff8:	bfa8      	it	ge
  402ffa:	4613      	movge	r3, r2
  402ffc:	2b00      	cmp	r3, #0
  402ffe:	461f      	mov	r7, r3
  403000:	dd0d      	ble.n	40301e <_svfprintf_r+0xb5e>
  403002:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403004:	f8c8 6000 	str.w	r6, [r8]
  403008:	3301      	adds	r3, #1
  40300a:	443c      	add	r4, r7
  40300c:	2b07      	cmp	r3, #7
  40300e:	9427      	str	r4, [sp, #156]	; 0x9c
  403010:	f8c8 7004 	str.w	r7, [r8, #4]
  403014:	9326      	str	r3, [sp, #152]	; 0x98
  403016:	f300 831f 	bgt.w	403658 <_svfprintf_r+0x1198>
  40301a:	f108 0808 	add.w	r8, r8, #8
  40301e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403020:	2f00      	cmp	r7, #0
  403022:	bfa8      	it	ge
  403024:	1bdb      	subge	r3, r3, r7
  403026:	2b00      	cmp	r3, #0
  403028:	461f      	mov	r7, r3
  40302a:	f340 80d6 	ble.w	4031da <_svfprintf_r+0xd1a>
  40302e:	2f10      	cmp	r7, #16
  403030:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403032:	4d31      	ldr	r5, [pc, #196]	; (4030f8 <_svfprintf_r+0xc38>)
  403034:	f340 81ed 	ble.w	403412 <_svfprintf_r+0xf52>
  403038:	4642      	mov	r2, r8
  40303a:	4621      	mov	r1, r4
  40303c:	46b0      	mov	r8, r6
  40303e:	f04f 0b10 	mov.w	fp, #16
  403042:	462e      	mov	r6, r5
  403044:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403046:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403048:	e004      	b.n	403054 <_svfprintf_r+0xb94>
  40304a:	3208      	adds	r2, #8
  40304c:	3f10      	subs	r7, #16
  40304e:	2f10      	cmp	r7, #16
  403050:	f340 81db 	ble.w	40340a <_svfprintf_r+0xf4a>
  403054:	3301      	adds	r3, #1
  403056:	3110      	adds	r1, #16
  403058:	2b07      	cmp	r3, #7
  40305a:	9127      	str	r1, [sp, #156]	; 0x9c
  40305c:	9326      	str	r3, [sp, #152]	; 0x98
  40305e:	e882 0840 	stmia.w	r2, {r6, fp}
  403062:	ddf2      	ble.n	40304a <_svfprintf_r+0xb8a>
  403064:	aa25      	add	r2, sp, #148	; 0x94
  403066:	4629      	mov	r1, r5
  403068:	4620      	mov	r0, r4
  40306a:	f002 fb97 	bl	40579c <__ssprint_r>
  40306e:	2800      	cmp	r0, #0
  403070:	f47f aaf8 	bne.w	402664 <_svfprintf_r+0x1a4>
  403074:	9927      	ldr	r1, [sp, #156]	; 0x9c
  403076:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403078:	464a      	mov	r2, r9
  40307a:	e7e7      	b.n	40304c <_svfprintf_r+0xb8c>
  40307c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40307e:	930e      	str	r3, [sp, #56]	; 0x38
  403080:	464e      	mov	r6, r9
  403082:	f7ff bb2d 	b.w	4026e0 <_svfprintf_r+0x220>
  403086:	2d00      	cmp	r5, #0
  403088:	bf08      	it	eq
  40308a:	2c0a      	cmpeq	r4, #10
  40308c:	f0c0 808f 	bcc.w	4031ae <_svfprintf_r+0xcee>
  403090:	464e      	mov	r6, r9
  403092:	4620      	mov	r0, r4
  403094:	4629      	mov	r1, r5
  403096:	220a      	movs	r2, #10
  403098:	2300      	movs	r3, #0
  40309a:	f003 f891 	bl	4061c0 <__aeabi_uldivmod>
  40309e:	3230      	adds	r2, #48	; 0x30
  4030a0:	f806 2d01 	strb.w	r2, [r6, #-1]!
  4030a4:	4620      	mov	r0, r4
  4030a6:	4629      	mov	r1, r5
  4030a8:	2300      	movs	r3, #0
  4030aa:	220a      	movs	r2, #10
  4030ac:	f003 f888 	bl	4061c0 <__aeabi_uldivmod>
  4030b0:	4604      	mov	r4, r0
  4030b2:	460d      	mov	r5, r1
  4030b4:	ea54 0305 	orrs.w	r3, r4, r5
  4030b8:	d1eb      	bne.n	403092 <_svfprintf_r+0xbd2>
  4030ba:	eba9 0306 	sub.w	r3, r9, r6
  4030be:	930e      	str	r3, [sp, #56]	; 0x38
  4030c0:	f7ff bb0e 	b.w	4026e0 <_svfprintf_r+0x220>
  4030c4:	aa25      	add	r2, sp, #148	; 0x94
  4030c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030c8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030ca:	f002 fb67 	bl	40579c <__ssprint_r>
  4030ce:	2800      	cmp	r0, #0
  4030d0:	f47f aac8 	bne.w	402664 <_svfprintf_r+0x1a4>
  4030d4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4030d8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030da:	46c8      	mov	r8, r9
  4030dc:	f7ff bb5e 	b.w	40279c <_svfprintf_r+0x2dc>
  4030e0:	1e5e      	subs	r6, r3, #1
  4030e2:	2e00      	cmp	r6, #0
  4030e4:	f77f af0a 	ble.w	402efc <_svfprintf_r+0xa3c>
  4030e8:	2e10      	cmp	r6, #16
  4030ea:	4d03      	ldr	r5, [pc, #12]	; (4030f8 <_svfprintf_r+0xc38>)
  4030ec:	dd22      	ble.n	403134 <_svfprintf_r+0xc74>
  4030ee:	4622      	mov	r2, r4
  4030f0:	f04f 0b10 	mov.w	fp, #16
  4030f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4030f6:	e006      	b.n	403106 <_svfprintf_r+0xc46>
  4030f8:	00406fac 	.word	0x00406fac
  4030fc:	3e10      	subs	r6, #16
  4030fe:	2e10      	cmp	r6, #16
  403100:	f108 0808 	add.w	r8, r8, #8
  403104:	dd15      	ble.n	403132 <_svfprintf_r+0xc72>
  403106:	3701      	adds	r7, #1
  403108:	3210      	adds	r2, #16
  40310a:	2f07      	cmp	r7, #7
  40310c:	9227      	str	r2, [sp, #156]	; 0x9c
  40310e:	9726      	str	r7, [sp, #152]	; 0x98
  403110:	e888 0820 	stmia.w	r8, {r5, fp}
  403114:	ddf2      	ble.n	4030fc <_svfprintf_r+0xc3c>
  403116:	aa25      	add	r2, sp, #148	; 0x94
  403118:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40311a:	4620      	mov	r0, r4
  40311c:	f002 fb3e 	bl	40579c <__ssprint_r>
  403120:	2800      	cmp	r0, #0
  403122:	f47f aa9f 	bne.w	402664 <_svfprintf_r+0x1a4>
  403126:	3e10      	subs	r6, #16
  403128:	2e10      	cmp	r6, #16
  40312a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40312c:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40312e:	46c8      	mov	r8, r9
  403130:	dce9      	bgt.n	403106 <_svfprintf_r+0xc46>
  403132:	4614      	mov	r4, r2
  403134:	3701      	adds	r7, #1
  403136:	4434      	add	r4, r6
  403138:	2f07      	cmp	r7, #7
  40313a:	9427      	str	r4, [sp, #156]	; 0x9c
  40313c:	9726      	str	r7, [sp, #152]	; 0x98
  40313e:	e888 0060 	stmia.w	r8, {r5, r6}
  403142:	f77f aed9 	ble.w	402ef8 <_svfprintf_r+0xa38>
  403146:	aa25      	add	r2, sp, #148	; 0x94
  403148:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40314a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40314c:	f002 fb26 	bl	40579c <__ssprint_r>
  403150:	2800      	cmp	r0, #0
  403152:	f47f aa87 	bne.w	402664 <_svfprintf_r+0x1a4>
  403156:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403158:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40315a:	46c8      	mov	r8, r9
  40315c:	e6ce      	b.n	402efc <_svfprintf_r+0xa3c>
  40315e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403160:	6814      	ldr	r4, [r2, #0]
  403162:	4613      	mov	r3, r2
  403164:	3304      	adds	r3, #4
  403166:	17e5      	asrs	r5, r4, #31
  403168:	930f      	str	r3, [sp, #60]	; 0x3c
  40316a:	4622      	mov	r2, r4
  40316c:	462b      	mov	r3, r5
  40316e:	e4fa      	b.n	402b66 <_svfprintf_r+0x6a6>
  403170:	3204      	adds	r2, #4
  403172:	681c      	ldr	r4, [r3, #0]
  403174:	920f      	str	r2, [sp, #60]	; 0x3c
  403176:	2301      	movs	r3, #1
  403178:	2500      	movs	r5, #0
  40317a:	f7ff ba94 	b.w	4026a6 <_svfprintf_r+0x1e6>
  40317e:	681c      	ldr	r4, [r3, #0]
  403180:	3304      	adds	r3, #4
  403182:	930f      	str	r3, [sp, #60]	; 0x3c
  403184:	2500      	movs	r5, #0
  403186:	e421      	b.n	4029cc <_svfprintf_r+0x50c>
  403188:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40318a:	460a      	mov	r2, r1
  40318c:	3204      	adds	r2, #4
  40318e:	680c      	ldr	r4, [r1, #0]
  403190:	920f      	str	r2, [sp, #60]	; 0x3c
  403192:	2500      	movs	r5, #0
  403194:	f7ff ba87 	b.w	4026a6 <_svfprintf_r+0x1e6>
  403198:	4614      	mov	r4, r2
  40319a:	3301      	adds	r3, #1
  40319c:	4434      	add	r4, r6
  40319e:	2b07      	cmp	r3, #7
  4031a0:	9427      	str	r4, [sp, #156]	; 0x9c
  4031a2:	9326      	str	r3, [sp, #152]	; 0x98
  4031a4:	e888 0060 	stmia.w	r8, {r5, r6}
  4031a8:	f77f ab68 	ble.w	40287c <_svfprintf_r+0x3bc>
  4031ac:	e6b3      	b.n	402f16 <_svfprintf_r+0xa56>
  4031ae:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4031b2:	f8cd b01c 	str.w	fp, [sp, #28]
  4031b6:	ae42      	add	r6, sp, #264	; 0x108
  4031b8:	3430      	adds	r4, #48	; 0x30
  4031ba:	2301      	movs	r3, #1
  4031bc:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4031c0:	930e      	str	r3, [sp, #56]	; 0x38
  4031c2:	f7ff ba8d 	b.w	4026e0 <_svfprintf_r+0x220>
  4031c6:	aa25      	add	r2, sp, #148	; 0x94
  4031c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031ca:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031cc:	f002 fae6 	bl	40579c <__ssprint_r>
  4031d0:	2800      	cmp	r0, #0
  4031d2:	f47f aa47 	bne.w	402664 <_svfprintf_r+0x1a4>
  4031d6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031d8:	46c8      	mov	r8, r9
  4031da:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4031dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031de:	429a      	cmp	r2, r3
  4031e0:	db44      	blt.n	40326c <_svfprintf_r+0xdac>
  4031e2:	9b07      	ldr	r3, [sp, #28]
  4031e4:	07d9      	lsls	r1, r3, #31
  4031e6:	d441      	bmi.n	40326c <_svfprintf_r+0xdac>
  4031e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4031ea:	9812      	ldr	r0, [sp, #72]	; 0x48
  4031ec:	1a9a      	subs	r2, r3, r2
  4031ee:	1a1d      	subs	r5, r3, r0
  4031f0:	4295      	cmp	r5, r2
  4031f2:	bfa8      	it	ge
  4031f4:	4615      	movge	r5, r2
  4031f6:	2d00      	cmp	r5, #0
  4031f8:	dd0e      	ble.n	403218 <_svfprintf_r+0xd58>
  4031fa:	9926      	ldr	r1, [sp, #152]	; 0x98
  4031fc:	f8c8 5004 	str.w	r5, [r8, #4]
  403200:	3101      	adds	r1, #1
  403202:	4406      	add	r6, r0
  403204:	442c      	add	r4, r5
  403206:	2907      	cmp	r1, #7
  403208:	f8c8 6000 	str.w	r6, [r8]
  40320c:	9427      	str	r4, [sp, #156]	; 0x9c
  40320e:	9126      	str	r1, [sp, #152]	; 0x98
  403210:	f300 823b 	bgt.w	40368a <_svfprintf_r+0x11ca>
  403214:	f108 0808 	add.w	r8, r8, #8
  403218:	2d00      	cmp	r5, #0
  40321a:	bfac      	ite	ge
  40321c:	1b56      	subge	r6, r2, r5
  40321e:	4616      	movlt	r6, r2
  403220:	2e00      	cmp	r6, #0
  403222:	f77f ab2d 	ble.w	402880 <_svfprintf_r+0x3c0>
  403226:	2e10      	cmp	r6, #16
  403228:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40322a:	4db0      	ldr	r5, [pc, #704]	; (4034ec <_svfprintf_r+0x102c>)
  40322c:	ddb5      	ble.n	40319a <_svfprintf_r+0xcda>
  40322e:	4622      	mov	r2, r4
  403230:	2710      	movs	r7, #16
  403232:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403236:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403238:	e004      	b.n	403244 <_svfprintf_r+0xd84>
  40323a:	f108 0808 	add.w	r8, r8, #8
  40323e:	3e10      	subs	r6, #16
  403240:	2e10      	cmp	r6, #16
  403242:	dda9      	ble.n	403198 <_svfprintf_r+0xcd8>
  403244:	3301      	adds	r3, #1
  403246:	3210      	adds	r2, #16
  403248:	2b07      	cmp	r3, #7
  40324a:	9227      	str	r2, [sp, #156]	; 0x9c
  40324c:	9326      	str	r3, [sp, #152]	; 0x98
  40324e:	e888 00a0 	stmia.w	r8, {r5, r7}
  403252:	ddf2      	ble.n	40323a <_svfprintf_r+0xd7a>
  403254:	aa25      	add	r2, sp, #148	; 0x94
  403256:	4621      	mov	r1, r4
  403258:	4658      	mov	r0, fp
  40325a:	f002 fa9f 	bl	40579c <__ssprint_r>
  40325e:	2800      	cmp	r0, #0
  403260:	f47f aa00 	bne.w	402664 <_svfprintf_r+0x1a4>
  403264:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403266:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403268:	46c8      	mov	r8, r9
  40326a:	e7e8      	b.n	40323e <_svfprintf_r+0xd7e>
  40326c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40326e:	9819      	ldr	r0, [sp, #100]	; 0x64
  403270:	991a      	ldr	r1, [sp, #104]	; 0x68
  403272:	f8c8 1000 	str.w	r1, [r8]
  403276:	3301      	adds	r3, #1
  403278:	4404      	add	r4, r0
  40327a:	2b07      	cmp	r3, #7
  40327c:	9427      	str	r4, [sp, #156]	; 0x9c
  40327e:	f8c8 0004 	str.w	r0, [r8, #4]
  403282:	9326      	str	r3, [sp, #152]	; 0x98
  403284:	f300 81f5 	bgt.w	403672 <_svfprintf_r+0x11b2>
  403288:	f108 0808 	add.w	r8, r8, #8
  40328c:	e7ac      	b.n	4031e8 <_svfprintf_r+0xd28>
  40328e:	9b07      	ldr	r3, [sp, #28]
  403290:	07da      	lsls	r2, r3, #31
  403292:	f53f adfe 	bmi.w	402e92 <_svfprintf_r+0x9d2>
  403296:	3701      	adds	r7, #1
  403298:	3401      	adds	r4, #1
  40329a:	2301      	movs	r3, #1
  40329c:	2f07      	cmp	r7, #7
  40329e:	9427      	str	r4, [sp, #156]	; 0x9c
  4032a0:	9726      	str	r7, [sp, #152]	; 0x98
  4032a2:	f8c8 6000 	str.w	r6, [r8]
  4032a6:	f8c8 3004 	str.w	r3, [r8, #4]
  4032aa:	f77f ae25 	ble.w	402ef8 <_svfprintf_r+0xa38>
  4032ae:	e74a      	b.n	403146 <_svfprintf_r+0xc86>
  4032b0:	aa25      	add	r2, sp, #148	; 0x94
  4032b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032b4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032b6:	f002 fa71 	bl	40579c <__ssprint_r>
  4032ba:	2800      	cmp	r0, #0
  4032bc:	f47f a9d2 	bne.w	402664 <_svfprintf_r+0x1a4>
  4032c0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032c2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4032c4:	46c8      	mov	r8, r9
  4032c6:	e5f2      	b.n	402eae <_svfprintf_r+0x9ee>
  4032c8:	aa25      	add	r2, sp, #148	; 0x94
  4032ca:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032cc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032ce:	f002 fa65 	bl	40579c <__ssprint_r>
  4032d2:	2800      	cmp	r0, #0
  4032d4:	f47f a9c6 	bne.w	402664 <_svfprintf_r+0x1a4>
  4032d8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032da:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4032dc:	46c8      	mov	r8, r9
  4032de:	e5f5      	b.n	402ecc <_svfprintf_r+0xa0c>
  4032e0:	464e      	mov	r6, r9
  4032e2:	f7ff b9fd 	b.w	4026e0 <_svfprintf_r+0x220>
  4032e6:	aa25      	add	r2, sp, #148	; 0x94
  4032e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4032ea:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032ec:	f002 fa56 	bl	40579c <__ssprint_r>
  4032f0:	2800      	cmp	r0, #0
  4032f2:	f47f a9b7 	bne.w	402664 <_svfprintf_r+0x1a4>
  4032f6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032f8:	46c8      	mov	r8, r9
  4032fa:	f7ff ba72 	b.w	4027e2 <_svfprintf_r+0x322>
  4032fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
  403300:	4622      	mov	r2, r4
  403302:	4620      	mov	r0, r4
  403304:	9c14      	ldr	r4, [sp, #80]	; 0x50
  403306:	4623      	mov	r3, r4
  403308:	4621      	mov	r1, r4
  40330a:	f002 ff43 	bl	406194 <__aeabi_dcmpun>
  40330e:	2800      	cmp	r0, #0
  403310:	f040 8286 	bne.w	403820 <_svfprintf_r+0x1360>
  403314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403316:	3301      	adds	r3, #1
  403318:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40331a:	f023 0320 	bic.w	r3, r3, #32
  40331e:	930e      	str	r3, [sp, #56]	; 0x38
  403320:	f000 81e2 	beq.w	4036e8 <_svfprintf_r+0x1228>
  403324:	2b47      	cmp	r3, #71	; 0x47
  403326:	f000 811e 	beq.w	403566 <_svfprintf_r+0x10a6>
  40332a:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  40332e:	9307      	str	r3, [sp, #28]
  403330:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403332:	1e1f      	subs	r7, r3, #0
  403334:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403336:	9308      	str	r3, [sp, #32]
  403338:	bfbb      	ittet	lt
  40333a:	463b      	movlt	r3, r7
  40333c:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403340:	2300      	movge	r3, #0
  403342:	232d      	movlt	r3, #45	; 0x2d
  403344:	9310      	str	r3, [sp, #64]	; 0x40
  403346:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403348:	2b66      	cmp	r3, #102	; 0x66
  40334a:	f000 81bb 	beq.w	4036c4 <_svfprintf_r+0x1204>
  40334e:	2b46      	cmp	r3, #70	; 0x46
  403350:	f000 80df 	beq.w	403512 <_svfprintf_r+0x1052>
  403354:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403356:	9a08      	ldr	r2, [sp, #32]
  403358:	2b45      	cmp	r3, #69	; 0x45
  40335a:	bf0c      	ite	eq
  40335c:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  40335e:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403360:	a823      	add	r0, sp, #140	; 0x8c
  403362:	a920      	add	r1, sp, #128	; 0x80
  403364:	bf08      	it	eq
  403366:	1c5d      	addeq	r5, r3, #1
  403368:	9004      	str	r0, [sp, #16]
  40336a:	9103      	str	r1, [sp, #12]
  40336c:	a81f      	add	r0, sp, #124	; 0x7c
  40336e:	2102      	movs	r1, #2
  403370:	463b      	mov	r3, r7
  403372:	9002      	str	r0, [sp, #8]
  403374:	9501      	str	r5, [sp, #4]
  403376:	9100      	str	r1, [sp, #0]
  403378:	980c      	ldr	r0, [sp, #48]	; 0x30
  40337a:	f000 fb75 	bl	403a68 <_dtoa_r>
  40337e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403380:	2b67      	cmp	r3, #103	; 0x67
  403382:	4606      	mov	r6, r0
  403384:	f040 81e0 	bne.w	403748 <_svfprintf_r+0x1288>
  403388:	f01b 0f01 	tst.w	fp, #1
  40338c:	f000 8246 	beq.w	40381c <_svfprintf_r+0x135c>
  403390:	1974      	adds	r4, r6, r5
  403392:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403394:	9808      	ldr	r0, [sp, #32]
  403396:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403398:	4639      	mov	r1, r7
  40339a:	f002 fec9 	bl	406130 <__aeabi_dcmpeq>
  40339e:	2800      	cmp	r0, #0
  4033a0:	f040 8165 	bne.w	40366e <_svfprintf_r+0x11ae>
  4033a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4033a6:	42a3      	cmp	r3, r4
  4033a8:	d206      	bcs.n	4033b8 <_svfprintf_r+0xef8>
  4033aa:	2130      	movs	r1, #48	; 0x30
  4033ac:	1c5a      	adds	r2, r3, #1
  4033ae:	9223      	str	r2, [sp, #140]	; 0x8c
  4033b0:	7019      	strb	r1, [r3, #0]
  4033b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4033b4:	429c      	cmp	r4, r3
  4033b6:	d8f9      	bhi.n	4033ac <_svfprintf_r+0xeec>
  4033b8:	1b9b      	subs	r3, r3, r6
  4033ba:	9313      	str	r3, [sp, #76]	; 0x4c
  4033bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4033be:	2b47      	cmp	r3, #71	; 0x47
  4033c0:	f000 80e9 	beq.w	403596 <_svfprintf_r+0x10d6>
  4033c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4033c6:	2b65      	cmp	r3, #101	; 0x65
  4033c8:	f340 81cd 	ble.w	403766 <_svfprintf_r+0x12a6>
  4033cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4033ce:	2b66      	cmp	r3, #102	; 0x66
  4033d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4033d2:	9312      	str	r3, [sp, #72]	; 0x48
  4033d4:	f000 819e 	beq.w	403714 <_svfprintf_r+0x1254>
  4033d8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4033da:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4033dc:	4619      	mov	r1, r3
  4033de:	4291      	cmp	r1, r2
  4033e0:	f300 818a 	bgt.w	4036f8 <_svfprintf_r+0x1238>
  4033e4:	f01b 0f01 	tst.w	fp, #1
  4033e8:	f040 8213 	bne.w	403812 <_svfprintf_r+0x1352>
  4033ec:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4033f0:	9308      	str	r3, [sp, #32]
  4033f2:	2367      	movs	r3, #103	; 0x67
  4033f4:	920e      	str	r2, [sp, #56]	; 0x38
  4033f6:	9311      	str	r3, [sp, #68]	; 0x44
  4033f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4033fa:	2b00      	cmp	r3, #0
  4033fc:	f040 80c4 	bne.w	403588 <_svfprintf_r+0x10c8>
  403400:	930a      	str	r3, [sp, #40]	; 0x28
  403402:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403406:	f7ff b973 	b.w	4026f0 <_svfprintf_r+0x230>
  40340a:	4635      	mov	r5, r6
  40340c:	460c      	mov	r4, r1
  40340e:	4646      	mov	r6, r8
  403410:	4690      	mov	r8, r2
  403412:	3301      	adds	r3, #1
  403414:	443c      	add	r4, r7
  403416:	2b07      	cmp	r3, #7
  403418:	9427      	str	r4, [sp, #156]	; 0x9c
  40341a:	9326      	str	r3, [sp, #152]	; 0x98
  40341c:	e888 00a0 	stmia.w	r8, {r5, r7}
  403420:	f73f aed1 	bgt.w	4031c6 <_svfprintf_r+0xd06>
  403424:	f108 0808 	add.w	r8, r8, #8
  403428:	e6d7      	b.n	4031da <_svfprintf_r+0xd1a>
  40342a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40342c:	6813      	ldr	r3, [r2, #0]
  40342e:	3204      	adds	r2, #4
  403430:	920f      	str	r2, [sp, #60]	; 0x3c
  403432:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403434:	601a      	str	r2, [r3, #0]
  403436:	f7ff b86a 	b.w	40250e <_svfprintf_r+0x4e>
  40343a:	aa25      	add	r2, sp, #148	; 0x94
  40343c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40343e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403440:	f002 f9ac 	bl	40579c <__ssprint_r>
  403444:	2800      	cmp	r0, #0
  403446:	f47f a90d 	bne.w	402664 <_svfprintf_r+0x1a4>
  40344a:	46c8      	mov	r8, r9
  40344c:	e48d      	b.n	402d6a <_svfprintf_r+0x8aa>
  40344e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403450:	4a27      	ldr	r2, [pc, #156]	; (4034f0 <_svfprintf_r+0x1030>)
  403452:	f8c8 2000 	str.w	r2, [r8]
  403456:	3301      	adds	r3, #1
  403458:	3401      	adds	r4, #1
  40345a:	2201      	movs	r2, #1
  40345c:	2b07      	cmp	r3, #7
  40345e:	9427      	str	r4, [sp, #156]	; 0x9c
  403460:	9326      	str	r3, [sp, #152]	; 0x98
  403462:	f8c8 2004 	str.w	r2, [r8, #4]
  403466:	dc72      	bgt.n	40354e <_svfprintf_r+0x108e>
  403468:	f108 0808 	add.w	r8, r8, #8
  40346c:	b929      	cbnz	r1, 40347a <_svfprintf_r+0xfba>
  40346e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403470:	b91b      	cbnz	r3, 40347a <_svfprintf_r+0xfba>
  403472:	9b07      	ldr	r3, [sp, #28]
  403474:	07d8      	lsls	r0, r3, #31
  403476:	f57f aa03 	bpl.w	402880 <_svfprintf_r+0x3c0>
  40347a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40347c:	9819      	ldr	r0, [sp, #100]	; 0x64
  40347e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  403480:	f8c8 2000 	str.w	r2, [r8]
  403484:	3301      	adds	r3, #1
  403486:	4602      	mov	r2, r0
  403488:	4422      	add	r2, r4
  40348a:	2b07      	cmp	r3, #7
  40348c:	9227      	str	r2, [sp, #156]	; 0x9c
  40348e:	f8c8 0004 	str.w	r0, [r8, #4]
  403492:	9326      	str	r3, [sp, #152]	; 0x98
  403494:	f300 818d 	bgt.w	4037b2 <_svfprintf_r+0x12f2>
  403498:	f108 0808 	add.w	r8, r8, #8
  40349c:	2900      	cmp	r1, #0
  40349e:	f2c0 8165 	blt.w	40376c <_svfprintf_r+0x12ac>
  4034a2:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4034a4:	f8c8 6000 	str.w	r6, [r8]
  4034a8:	3301      	adds	r3, #1
  4034aa:	188c      	adds	r4, r1, r2
  4034ac:	2b07      	cmp	r3, #7
  4034ae:	9427      	str	r4, [sp, #156]	; 0x9c
  4034b0:	9326      	str	r3, [sp, #152]	; 0x98
  4034b2:	f8c8 1004 	str.w	r1, [r8, #4]
  4034b6:	f77f a9e1 	ble.w	40287c <_svfprintf_r+0x3bc>
  4034ba:	e52c      	b.n	402f16 <_svfprintf_r+0xa56>
  4034bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4034be:	9909      	ldr	r1, [sp, #36]	; 0x24
  4034c0:	6813      	ldr	r3, [r2, #0]
  4034c2:	17cd      	asrs	r5, r1, #31
  4034c4:	4608      	mov	r0, r1
  4034c6:	3204      	adds	r2, #4
  4034c8:	4629      	mov	r1, r5
  4034ca:	920f      	str	r2, [sp, #60]	; 0x3c
  4034cc:	e9c3 0100 	strd	r0, r1, [r3]
  4034d0:	f7ff b81d 	b.w	40250e <_svfprintf_r+0x4e>
  4034d4:	aa25      	add	r2, sp, #148	; 0x94
  4034d6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4034d8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034da:	f002 f95f 	bl	40579c <__ssprint_r>
  4034de:	2800      	cmp	r0, #0
  4034e0:	f47f a8c0 	bne.w	402664 <_svfprintf_r+0x1a4>
  4034e4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4034e6:	46c8      	mov	r8, r9
  4034e8:	e458      	b.n	402d9c <_svfprintf_r+0x8dc>
  4034ea:	bf00      	nop
  4034ec:	00406fac 	.word	0x00406fac
  4034f0:	00406f98 	.word	0x00406f98
  4034f4:	2140      	movs	r1, #64	; 0x40
  4034f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4034f8:	f001 fa0c 	bl	404914 <_malloc_r>
  4034fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4034fe:	6010      	str	r0, [r2, #0]
  403500:	6110      	str	r0, [r2, #16]
  403502:	2800      	cmp	r0, #0
  403504:	f000 81f2 	beq.w	4038ec <_svfprintf_r+0x142c>
  403508:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40350a:	2340      	movs	r3, #64	; 0x40
  40350c:	6153      	str	r3, [r2, #20]
  40350e:	f7fe bfee 	b.w	4024ee <_svfprintf_r+0x2e>
  403512:	a823      	add	r0, sp, #140	; 0x8c
  403514:	a920      	add	r1, sp, #128	; 0x80
  403516:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403518:	9004      	str	r0, [sp, #16]
  40351a:	9103      	str	r1, [sp, #12]
  40351c:	a81f      	add	r0, sp, #124	; 0x7c
  40351e:	2103      	movs	r1, #3
  403520:	9002      	str	r0, [sp, #8]
  403522:	9a08      	ldr	r2, [sp, #32]
  403524:	9401      	str	r4, [sp, #4]
  403526:	463b      	mov	r3, r7
  403528:	9100      	str	r1, [sp, #0]
  40352a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40352c:	f000 fa9c 	bl	403a68 <_dtoa_r>
  403530:	4625      	mov	r5, r4
  403532:	4606      	mov	r6, r0
  403534:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403536:	2b46      	cmp	r3, #70	; 0x46
  403538:	eb06 0405 	add.w	r4, r6, r5
  40353c:	f47f af29 	bne.w	403392 <_svfprintf_r+0xed2>
  403540:	7833      	ldrb	r3, [r6, #0]
  403542:	2b30      	cmp	r3, #48	; 0x30
  403544:	f000 8178 	beq.w	403838 <_svfprintf_r+0x1378>
  403548:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  40354a:	442c      	add	r4, r5
  40354c:	e721      	b.n	403392 <_svfprintf_r+0xed2>
  40354e:	aa25      	add	r2, sp, #148	; 0x94
  403550:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403552:	980c      	ldr	r0, [sp, #48]	; 0x30
  403554:	f002 f922 	bl	40579c <__ssprint_r>
  403558:	2800      	cmp	r0, #0
  40355a:	f47f a883 	bne.w	402664 <_svfprintf_r+0x1a4>
  40355e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403560:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403562:	46c8      	mov	r8, r9
  403564:	e782      	b.n	40346c <_svfprintf_r+0xfac>
  403566:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403568:	2b00      	cmp	r3, #0
  40356a:	bf08      	it	eq
  40356c:	2301      	moveq	r3, #1
  40356e:	930a      	str	r3, [sp, #40]	; 0x28
  403570:	e6db      	b.n	40332a <_svfprintf_r+0xe6a>
  403572:	4630      	mov	r0, r6
  403574:	940a      	str	r4, [sp, #40]	; 0x28
  403576:	f002 f8a3 	bl	4056c0 <strlen>
  40357a:	950f      	str	r5, [sp, #60]	; 0x3c
  40357c:	900e      	str	r0, [sp, #56]	; 0x38
  40357e:	f8cd b01c 	str.w	fp, [sp, #28]
  403582:	4603      	mov	r3, r0
  403584:	f7ff b9f9 	b.w	40297a <_svfprintf_r+0x4ba>
  403588:	272d      	movs	r7, #45	; 0x2d
  40358a:	2300      	movs	r3, #0
  40358c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  403590:	930a      	str	r3, [sp, #40]	; 0x28
  403592:	f7ff b8ae 	b.w	4026f2 <_svfprintf_r+0x232>
  403596:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403598:	9312      	str	r3, [sp, #72]	; 0x48
  40359a:	461a      	mov	r2, r3
  40359c:	3303      	adds	r3, #3
  40359e:	db04      	blt.n	4035aa <_svfprintf_r+0x10ea>
  4035a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4035a2:	4619      	mov	r1, r3
  4035a4:	4291      	cmp	r1, r2
  4035a6:	f6bf af17 	bge.w	4033d8 <_svfprintf_r+0xf18>
  4035aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4035ac:	3b02      	subs	r3, #2
  4035ae:	9311      	str	r3, [sp, #68]	; 0x44
  4035b0:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4035b4:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  4035b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4035ba:	3b01      	subs	r3, #1
  4035bc:	2b00      	cmp	r3, #0
  4035be:	931f      	str	r3, [sp, #124]	; 0x7c
  4035c0:	bfbd      	ittte	lt
  4035c2:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4035c4:	f1c3 0301 	rsblt	r3, r3, #1
  4035c8:	222d      	movlt	r2, #45	; 0x2d
  4035ca:	222b      	movge	r2, #43	; 0x2b
  4035cc:	2b09      	cmp	r3, #9
  4035ce:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4035d2:	f340 8116 	ble.w	403802 <_svfprintf_r+0x1342>
  4035d6:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  4035da:	4620      	mov	r0, r4
  4035dc:	4dab      	ldr	r5, [pc, #684]	; (40388c <_svfprintf_r+0x13cc>)
  4035de:	e000      	b.n	4035e2 <_svfprintf_r+0x1122>
  4035e0:	4610      	mov	r0, r2
  4035e2:	fb85 1203 	smull	r1, r2, r5, r3
  4035e6:	17d9      	asrs	r1, r3, #31
  4035e8:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4035ec:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4035f0:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4035f4:	3230      	adds	r2, #48	; 0x30
  4035f6:	2909      	cmp	r1, #9
  4035f8:	f800 2c01 	strb.w	r2, [r0, #-1]
  4035fc:	460b      	mov	r3, r1
  4035fe:	f100 32ff 	add.w	r2, r0, #4294967295
  403602:	dced      	bgt.n	4035e0 <_svfprintf_r+0x1120>
  403604:	3330      	adds	r3, #48	; 0x30
  403606:	3802      	subs	r0, #2
  403608:	b2d9      	uxtb	r1, r3
  40360a:	4284      	cmp	r4, r0
  40360c:	f802 1c01 	strb.w	r1, [r2, #-1]
  403610:	f240 8165 	bls.w	4038de <_svfprintf_r+0x141e>
  403614:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403618:	4613      	mov	r3, r2
  40361a:	e001      	b.n	403620 <_svfprintf_r+0x1160>
  40361c:	f813 1b01 	ldrb.w	r1, [r3], #1
  403620:	f800 1b01 	strb.w	r1, [r0], #1
  403624:	42a3      	cmp	r3, r4
  403626:	d1f9      	bne.n	40361c <_svfprintf_r+0x115c>
  403628:	3301      	adds	r3, #1
  40362a:	1a9b      	subs	r3, r3, r2
  40362c:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403630:	4413      	add	r3, r2
  403632:	aa21      	add	r2, sp, #132	; 0x84
  403634:	1a9b      	subs	r3, r3, r2
  403636:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403638:	931b      	str	r3, [sp, #108]	; 0x6c
  40363a:	2a01      	cmp	r2, #1
  40363c:	4413      	add	r3, r2
  40363e:	930e      	str	r3, [sp, #56]	; 0x38
  403640:	f340 8119 	ble.w	403876 <_svfprintf_r+0x13b6>
  403644:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403646:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403648:	4413      	add	r3, r2
  40364a:	930e      	str	r3, [sp, #56]	; 0x38
  40364c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403650:	9308      	str	r3, [sp, #32]
  403652:	2300      	movs	r3, #0
  403654:	9312      	str	r3, [sp, #72]	; 0x48
  403656:	e6cf      	b.n	4033f8 <_svfprintf_r+0xf38>
  403658:	aa25      	add	r2, sp, #148	; 0x94
  40365a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40365c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40365e:	f002 f89d 	bl	40579c <__ssprint_r>
  403662:	2800      	cmp	r0, #0
  403664:	f47e affe 	bne.w	402664 <_svfprintf_r+0x1a4>
  403668:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40366a:	46c8      	mov	r8, r9
  40366c:	e4d7      	b.n	40301e <_svfprintf_r+0xb5e>
  40366e:	4623      	mov	r3, r4
  403670:	e6a2      	b.n	4033b8 <_svfprintf_r+0xef8>
  403672:	aa25      	add	r2, sp, #148	; 0x94
  403674:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403676:	980c      	ldr	r0, [sp, #48]	; 0x30
  403678:	f002 f890 	bl	40579c <__ssprint_r>
  40367c:	2800      	cmp	r0, #0
  40367e:	f47e aff1 	bne.w	402664 <_svfprintf_r+0x1a4>
  403682:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403684:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403686:	46c8      	mov	r8, r9
  403688:	e5ae      	b.n	4031e8 <_svfprintf_r+0xd28>
  40368a:	aa25      	add	r2, sp, #148	; 0x94
  40368c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40368e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403690:	f002 f884 	bl	40579c <__ssprint_r>
  403694:	2800      	cmp	r0, #0
  403696:	f47e afe5 	bne.w	402664 <_svfprintf_r+0x1a4>
  40369a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  40369c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40369e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4036a0:	1a9a      	subs	r2, r3, r2
  4036a2:	46c8      	mov	r8, r9
  4036a4:	e5b8      	b.n	403218 <_svfprintf_r+0xd58>
  4036a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4036a8:	9612      	str	r6, [sp, #72]	; 0x48
  4036aa:	2b06      	cmp	r3, #6
  4036ac:	bf28      	it	cs
  4036ae:	2306      	movcs	r3, #6
  4036b0:	960a      	str	r6, [sp, #40]	; 0x28
  4036b2:	4637      	mov	r7, r6
  4036b4:	9308      	str	r3, [sp, #32]
  4036b6:	950f      	str	r5, [sp, #60]	; 0x3c
  4036b8:	f8cd b01c 	str.w	fp, [sp, #28]
  4036bc:	930e      	str	r3, [sp, #56]	; 0x38
  4036be:	4e74      	ldr	r6, [pc, #464]	; (403890 <_svfprintf_r+0x13d0>)
  4036c0:	f7ff b816 	b.w	4026f0 <_svfprintf_r+0x230>
  4036c4:	a823      	add	r0, sp, #140	; 0x8c
  4036c6:	a920      	add	r1, sp, #128	; 0x80
  4036c8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4036ca:	9004      	str	r0, [sp, #16]
  4036cc:	9103      	str	r1, [sp, #12]
  4036ce:	a81f      	add	r0, sp, #124	; 0x7c
  4036d0:	2103      	movs	r1, #3
  4036d2:	9002      	str	r0, [sp, #8]
  4036d4:	9a08      	ldr	r2, [sp, #32]
  4036d6:	9501      	str	r5, [sp, #4]
  4036d8:	463b      	mov	r3, r7
  4036da:	9100      	str	r1, [sp, #0]
  4036dc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036de:	f000 f9c3 	bl	403a68 <_dtoa_r>
  4036e2:	4606      	mov	r6, r0
  4036e4:	1944      	adds	r4, r0, r5
  4036e6:	e72b      	b.n	403540 <_svfprintf_r+0x1080>
  4036e8:	2306      	movs	r3, #6
  4036ea:	930a      	str	r3, [sp, #40]	; 0x28
  4036ec:	e61d      	b.n	40332a <_svfprintf_r+0xe6a>
  4036ee:	272d      	movs	r7, #45	; 0x2d
  4036f0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4036f4:	f7ff bacd 	b.w	402c92 <_svfprintf_r+0x7d2>
  4036f8:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4036fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4036fc:	4413      	add	r3, r2
  4036fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403700:	930e      	str	r3, [sp, #56]	; 0x38
  403702:	2a00      	cmp	r2, #0
  403704:	f340 80b0 	ble.w	403868 <_svfprintf_r+0x13a8>
  403708:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40370c:	9308      	str	r3, [sp, #32]
  40370e:	2367      	movs	r3, #103	; 0x67
  403710:	9311      	str	r3, [sp, #68]	; 0x44
  403712:	e671      	b.n	4033f8 <_svfprintf_r+0xf38>
  403714:	2b00      	cmp	r3, #0
  403716:	f340 80c3 	ble.w	4038a0 <_svfprintf_r+0x13e0>
  40371a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40371c:	2a00      	cmp	r2, #0
  40371e:	f040 8099 	bne.w	403854 <_svfprintf_r+0x1394>
  403722:	f01b 0f01 	tst.w	fp, #1
  403726:	f040 8095 	bne.w	403854 <_svfprintf_r+0x1394>
  40372a:	9308      	str	r3, [sp, #32]
  40372c:	930e      	str	r3, [sp, #56]	; 0x38
  40372e:	e663      	b.n	4033f8 <_svfprintf_r+0xf38>
  403730:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403732:	9308      	str	r3, [sp, #32]
  403734:	930e      	str	r3, [sp, #56]	; 0x38
  403736:	900a      	str	r0, [sp, #40]	; 0x28
  403738:	950f      	str	r5, [sp, #60]	; 0x3c
  40373a:	f8cd b01c 	str.w	fp, [sp, #28]
  40373e:	9012      	str	r0, [sp, #72]	; 0x48
  403740:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403744:	f7fe bfd4 	b.w	4026f0 <_svfprintf_r+0x230>
  403748:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40374a:	2b47      	cmp	r3, #71	; 0x47
  40374c:	f47f ae20 	bne.w	403390 <_svfprintf_r+0xed0>
  403750:	f01b 0f01 	tst.w	fp, #1
  403754:	f47f aeee 	bne.w	403534 <_svfprintf_r+0x1074>
  403758:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40375a:	1b9b      	subs	r3, r3, r6
  40375c:	9313      	str	r3, [sp, #76]	; 0x4c
  40375e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403760:	2b47      	cmp	r3, #71	; 0x47
  403762:	f43f af18 	beq.w	403596 <_svfprintf_r+0x10d6>
  403766:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403768:	9312      	str	r3, [sp, #72]	; 0x48
  40376a:	e721      	b.n	4035b0 <_svfprintf_r+0x10f0>
  40376c:	424f      	negs	r7, r1
  40376e:	3110      	adds	r1, #16
  403770:	4d48      	ldr	r5, [pc, #288]	; (403894 <_svfprintf_r+0x13d4>)
  403772:	da2f      	bge.n	4037d4 <_svfprintf_r+0x1314>
  403774:	2410      	movs	r4, #16
  403776:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40377a:	e004      	b.n	403786 <_svfprintf_r+0x12c6>
  40377c:	f108 0808 	add.w	r8, r8, #8
  403780:	3f10      	subs	r7, #16
  403782:	2f10      	cmp	r7, #16
  403784:	dd26      	ble.n	4037d4 <_svfprintf_r+0x1314>
  403786:	3301      	adds	r3, #1
  403788:	3210      	adds	r2, #16
  40378a:	2b07      	cmp	r3, #7
  40378c:	9227      	str	r2, [sp, #156]	; 0x9c
  40378e:	9326      	str	r3, [sp, #152]	; 0x98
  403790:	f8c8 5000 	str.w	r5, [r8]
  403794:	f8c8 4004 	str.w	r4, [r8, #4]
  403798:	ddf0      	ble.n	40377c <_svfprintf_r+0x12bc>
  40379a:	aa25      	add	r2, sp, #148	; 0x94
  40379c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40379e:	4658      	mov	r0, fp
  4037a0:	f001 fffc 	bl	40579c <__ssprint_r>
  4037a4:	2800      	cmp	r0, #0
  4037a6:	f47e af5d 	bne.w	402664 <_svfprintf_r+0x1a4>
  4037aa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4037ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4037ae:	46c8      	mov	r8, r9
  4037b0:	e7e6      	b.n	403780 <_svfprintf_r+0x12c0>
  4037b2:	aa25      	add	r2, sp, #148	; 0x94
  4037b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037b8:	f001 fff0 	bl	40579c <__ssprint_r>
  4037bc:	2800      	cmp	r0, #0
  4037be:	f47e af51 	bne.w	402664 <_svfprintf_r+0x1a4>
  4037c2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4037c4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4037c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4037c8:	46c8      	mov	r8, r9
  4037ca:	e667      	b.n	40349c <_svfprintf_r+0xfdc>
  4037cc:	2000      	movs	r0, #0
  4037ce:	900a      	str	r0, [sp, #40]	; 0x28
  4037d0:	f7fe bed0 	b.w	402574 <_svfprintf_r+0xb4>
  4037d4:	3301      	adds	r3, #1
  4037d6:	443a      	add	r2, r7
  4037d8:	2b07      	cmp	r3, #7
  4037da:	e888 00a0 	stmia.w	r8, {r5, r7}
  4037de:	9227      	str	r2, [sp, #156]	; 0x9c
  4037e0:	9326      	str	r3, [sp, #152]	; 0x98
  4037e2:	f108 0808 	add.w	r8, r8, #8
  4037e6:	f77f ae5c 	ble.w	4034a2 <_svfprintf_r+0xfe2>
  4037ea:	aa25      	add	r2, sp, #148	; 0x94
  4037ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4037ee:	980c      	ldr	r0, [sp, #48]	; 0x30
  4037f0:	f001 ffd4 	bl	40579c <__ssprint_r>
  4037f4:	2800      	cmp	r0, #0
  4037f6:	f47e af35 	bne.w	402664 <_svfprintf_r+0x1a4>
  4037fa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4037fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4037fe:	46c8      	mov	r8, r9
  403800:	e64f      	b.n	4034a2 <_svfprintf_r+0xfe2>
  403802:	3330      	adds	r3, #48	; 0x30
  403804:	2230      	movs	r2, #48	; 0x30
  403806:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  40380a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  40380e:	ab22      	add	r3, sp, #136	; 0x88
  403810:	e70f      	b.n	403632 <_svfprintf_r+0x1172>
  403812:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403814:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403816:	4413      	add	r3, r2
  403818:	930e      	str	r3, [sp, #56]	; 0x38
  40381a:	e775      	b.n	403708 <_svfprintf_r+0x1248>
  40381c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40381e:	e5cb      	b.n	4033b8 <_svfprintf_r+0xef8>
  403820:	9b14      	ldr	r3, [sp, #80]	; 0x50
  403822:	4e1d      	ldr	r6, [pc, #116]	; (403898 <_svfprintf_r+0x13d8>)
  403824:	2b00      	cmp	r3, #0
  403826:	bfb6      	itet	lt
  403828:	272d      	movlt	r7, #45	; 0x2d
  40382a:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  40382e:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  403832:	4b1a      	ldr	r3, [pc, #104]	; (40389c <_svfprintf_r+0x13dc>)
  403834:	f7ff ba2f 	b.w	402c96 <_svfprintf_r+0x7d6>
  403838:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40383a:	9808      	ldr	r0, [sp, #32]
  40383c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  40383e:	4639      	mov	r1, r7
  403840:	f002 fc76 	bl	406130 <__aeabi_dcmpeq>
  403844:	2800      	cmp	r0, #0
  403846:	f47f ae7f 	bne.w	403548 <_svfprintf_r+0x1088>
  40384a:	f1c5 0501 	rsb	r5, r5, #1
  40384e:	951f      	str	r5, [sp, #124]	; 0x7c
  403850:	442c      	add	r4, r5
  403852:	e59e      	b.n	403392 <_svfprintf_r+0xed2>
  403854:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403856:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403858:	4413      	add	r3, r2
  40385a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40385c:	441a      	add	r2, r3
  40385e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403862:	920e      	str	r2, [sp, #56]	; 0x38
  403864:	9308      	str	r3, [sp, #32]
  403866:	e5c7      	b.n	4033f8 <_svfprintf_r+0xf38>
  403868:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40386a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40386c:	f1c3 0301 	rsb	r3, r3, #1
  403870:	441a      	add	r2, r3
  403872:	4613      	mov	r3, r2
  403874:	e7d0      	b.n	403818 <_svfprintf_r+0x1358>
  403876:	f01b 0301 	ands.w	r3, fp, #1
  40387a:	9312      	str	r3, [sp, #72]	; 0x48
  40387c:	f47f aee2 	bne.w	403644 <_svfprintf_r+0x1184>
  403880:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403882:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403886:	9308      	str	r3, [sp, #32]
  403888:	e5b6      	b.n	4033f8 <_svfprintf_r+0xf38>
  40388a:	bf00      	nop
  40388c:	66666667 	.word	0x66666667
  403890:	00406f90 	.word	0x00406f90
  403894:	00406fac 	.word	0x00406fac
  403898:	00406f64 	.word	0x00406f64
  40389c:	00406f60 	.word	0x00406f60
  4038a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038a2:	b913      	cbnz	r3, 4038aa <_svfprintf_r+0x13ea>
  4038a4:	f01b 0f01 	tst.w	fp, #1
  4038a8:	d002      	beq.n	4038b0 <_svfprintf_r+0x13f0>
  4038aa:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4038ac:	3301      	adds	r3, #1
  4038ae:	e7d4      	b.n	40385a <_svfprintf_r+0x139a>
  4038b0:	2301      	movs	r3, #1
  4038b2:	e73a      	b.n	40372a <_svfprintf_r+0x126a>
  4038b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4038b6:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4038ba:	6828      	ldr	r0, [r5, #0]
  4038bc:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4038c0:	900a      	str	r0, [sp, #40]	; 0x28
  4038c2:	4628      	mov	r0, r5
  4038c4:	3004      	adds	r0, #4
  4038c6:	46a2      	mov	sl, r4
  4038c8:	900f      	str	r0, [sp, #60]	; 0x3c
  4038ca:	f7fe be51 	b.w	402570 <_svfprintf_r+0xb0>
  4038ce:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038d2:	f7ff b867 	b.w	4029a4 <_svfprintf_r+0x4e4>
  4038d6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038da:	f7ff ba15 	b.w	402d08 <_svfprintf_r+0x848>
  4038de:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  4038e2:	e6a6      	b.n	403632 <_svfprintf_r+0x1172>
  4038e4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4038e8:	f7ff b8eb 	b.w	402ac2 <_svfprintf_r+0x602>
  4038ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4038ee:	230c      	movs	r3, #12
  4038f0:	6013      	str	r3, [r2, #0]
  4038f2:	f04f 33ff 	mov.w	r3, #4294967295
  4038f6:	9309      	str	r3, [sp, #36]	; 0x24
  4038f8:	f7fe bebd 	b.w	402676 <_svfprintf_r+0x1b6>
  4038fc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403900:	f7ff b99a 	b.w	402c38 <_svfprintf_r+0x778>
  403904:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403908:	f7ff b976 	b.w	402bf8 <_svfprintf_r+0x738>
  40390c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403910:	f7ff b959 	b.w	402bc6 <_svfprintf_r+0x706>
  403914:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403918:	f7ff b912 	b.w	402b40 <_svfprintf_r+0x680>

0040391c <register_fini>:
  40391c:	4b02      	ldr	r3, [pc, #8]	; (403928 <register_fini+0xc>)
  40391e:	b113      	cbz	r3, 403926 <register_fini+0xa>
  403920:	4802      	ldr	r0, [pc, #8]	; (40392c <register_fini+0x10>)
  403922:	f000 b805 	b.w	403930 <atexit>
  403926:	4770      	bx	lr
  403928:	00000000 	.word	0x00000000
  40392c:	004048bd 	.word	0x004048bd

00403930 <atexit>:
  403930:	2300      	movs	r3, #0
  403932:	4601      	mov	r1, r0
  403934:	461a      	mov	r2, r3
  403936:	4618      	mov	r0, r3
  403938:	f001 bfae 	b.w	405898 <__register_exitproc>

0040393c <quorem>:
  40393c:	6902      	ldr	r2, [r0, #16]
  40393e:	690b      	ldr	r3, [r1, #16]
  403940:	4293      	cmp	r3, r2
  403942:	f300 808d 	bgt.w	403a60 <quorem+0x124>
  403946:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40394a:	f103 38ff 	add.w	r8, r3, #4294967295
  40394e:	f101 0714 	add.w	r7, r1, #20
  403952:	f100 0b14 	add.w	fp, r0, #20
  403956:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  40395a:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40395e:	ea4f 0488 	mov.w	r4, r8, lsl #2
  403962:	b083      	sub	sp, #12
  403964:	3201      	adds	r2, #1
  403966:	fbb3 f9f2 	udiv	r9, r3, r2
  40396a:	eb0b 0304 	add.w	r3, fp, r4
  40396e:	9400      	str	r4, [sp, #0]
  403970:	eb07 0a04 	add.w	sl, r7, r4
  403974:	9301      	str	r3, [sp, #4]
  403976:	f1b9 0f00 	cmp.w	r9, #0
  40397a:	d039      	beq.n	4039f0 <quorem+0xb4>
  40397c:	2500      	movs	r5, #0
  40397e:	462e      	mov	r6, r5
  403980:	46bc      	mov	ip, r7
  403982:	46de      	mov	lr, fp
  403984:	f85c 4b04 	ldr.w	r4, [ip], #4
  403988:	f8de 3000 	ldr.w	r3, [lr]
  40398c:	b2a2      	uxth	r2, r4
  40398e:	fb09 5502 	mla	r5, r9, r2, r5
  403992:	0c22      	lsrs	r2, r4, #16
  403994:	0c2c      	lsrs	r4, r5, #16
  403996:	fb09 4202 	mla	r2, r9, r2, r4
  40399a:	b2ad      	uxth	r5, r5
  40399c:	1b75      	subs	r5, r6, r5
  40399e:	b296      	uxth	r6, r2
  4039a0:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4039a4:	fa15 f383 	uxtah	r3, r5, r3
  4039a8:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4039ac:	b29b      	uxth	r3, r3
  4039ae:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4039b2:	45e2      	cmp	sl, ip
  4039b4:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4039b8:	f84e 3b04 	str.w	r3, [lr], #4
  4039bc:	ea4f 4626 	mov.w	r6, r6, asr #16
  4039c0:	d2e0      	bcs.n	403984 <quorem+0x48>
  4039c2:	9b00      	ldr	r3, [sp, #0]
  4039c4:	f85b 3003 	ldr.w	r3, [fp, r3]
  4039c8:	b993      	cbnz	r3, 4039f0 <quorem+0xb4>
  4039ca:	9c01      	ldr	r4, [sp, #4]
  4039cc:	1f23      	subs	r3, r4, #4
  4039ce:	459b      	cmp	fp, r3
  4039d0:	d20c      	bcs.n	4039ec <quorem+0xb0>
  4039d2:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4039d6:	b94b      	cbnz	r3, 4039ec <quorem+0xb0>
  4039d8:	f1a4 0308 	sub.w	r3, r4, #8
  4039dc:	e002      	b.n	4039e4 <quorem+0xa8>
  4039de:	681a      	ldr	r2, [r3, #0]
  4039e0:	3b04      	subs	r3, #4
  4039e2:	b91a      	cbnz	r2, 4039ec <quorem+0xb0>
  4039e4:	459b      	cmp	fp, r3
  4039e6:	f108 38ff 	add.w	r8, r8, #4294967295
  4039ea:	d3f8      	bcc.n	4039de <quorem+0xa2>
  4039ec:	f8c0 8010 	str.w	r8, [r0, #16]
  4039f0:	4604      	mov	r4, r0
  4039f2:	f001 fd39 	bl	405468 <__mcmp>
  4039f6:	2800      	cmp	r0, #0
  4039f8:	db2e      	blt.n	403a58 <quorem+0x11c>
  4039fa:	f109 0901 	add.w	r9, r9, #1
  4039fe:	465d      	mov	r5, fp
  403a00:	2300      	movs	r3, #0
  403a02:	f857 1b04 	ldr.w	r1, [r7], #4
  403a06:	6828      	ldr	r0, [r5, #0]
  403a08:	b28a      	uxth	r2, r1
  403a0a:	1a9a      	subs	r2, r3, r2
  403a0c:	0c0b      	lsrs	r3, r1, #16
  403a0e:	fa12 f280 	uxtah	r2, r2, r0
  403a12:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  403a16:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403a1a:	b292      	uxth	r2, r2
  403a1c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403a20:	45ba      	cmp	sl, r7
  403a22:	f845 2b04 	str.w	r2, [r5], #4
  403a26:	ea4f 4323 	mov.w	r3, r3, asr #16
  403a2a:	d2ea      	bcs.n	403a02 <quorem+0xc6>
  403a2c:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403a30:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403a34:	b982      	cbnz	r2, 403a58 <quorem+0x11c>
  403a36:	1f1a      	subs	r2, r3, #4
  403a38:	4593      	cmp	fp, r2
  403a3a:	d20b      	bcs.n	403a54 <quorem+0x118>
  403a3c:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403a40:	b942      	cbnz	r2, 403a54 <quorem+0x118>
  403a42:	3b08      	subs	r3, #8
  403a44:	e002      	b.n	403a4c <quorem+0x110>
  403a46:	681a      	ldr	r2, [r3, #0]
  403a48:	3b04      	subs	r3, #4
  403a4a:	b91a      	cbnz	r2, 403a54 <quorem+0x118>
  403a4c:	459b      	cmp	fp, r3
  403a4e:	f108 38ff 	add.w	r8, r8, #4294967295
  403a52:	d3f8      	bcc.n	403a46 <quorem+0x10a>
  403a54:	f8c4 8010 	str.w	r8, [r4, #16]
  403a58:	4648      	mov	r0, r9
  403a5a:	b003      	add	sp, #12
  403a5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a60:	2000      	movs	r0, #0
  403a62:	4770      	bx	lr
  403a64:	0000      	movs	r0, r0
	...

00403a68 <_dtoa_r>:
  403a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a6c:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403a6e:	b09b      	sub	sp, #108	; 0x6c
  403a70:	4604      	mov	r4, r0
  403a72:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  403a74:	4692      	mov	sl, r2
  403a76:	469b      	mov	fp, r3
  403a78:	b141      	cbz	r1, 403a8c <_dtoa_r+0x24>
  403a7a:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403a7c:	604a      	str	r2, [r1, #4]
  403a7e:	2301      	movs	r3, #1
  403a80:	4093      	lsls	r3, r2
  403a82:	608b      	str	r3, [r1, #8]
  403a84:	f001 fb18 	bl	4050b8 <_Bfree>
  403a88:	2300      	movs	r3, #0
  403a8a:	6423      	str	r3, [r4, #64]	; 0x40
  403a8c:	f1bb 0f00 	cmp.w	fp, #0
  403a90:	465d      	mov	r5, fp
  403a92:	db35      	blt.n	403b00 <_dtoa_r+0x98>
  403a94:	2300      	movs	r3, #0
  403a96:	6033      	str	r3, [r6, #0]
  403a98:	4b9d      	ldr	r3, [pc, #628]	; (403d10 <_dtoa_r+0x2a8>)
  403a9a:	43ab      	bics	r3, r5
  403a9c:	d015      	beq.n	403aca <_dtoa_r+0x62>
  403a9e:	4650      	mov	r0, sl
  403aa0:	4659      	mov	r1, fp
  403aa2:	2200      	movs	r2, #0
  403aa4:	2300      	movs	r3, #0
  403aa6:	f002 fb43 	bl	406130 <__aeabi_dcmpeq>
  403aaa:	4680      	mov	r8, r0
  403aac:	2800      	cmp	r0, #0
  403aae:	d02d      	beq.n	403b0c <_dtoa_r+0xa4>
  403ab0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403ab2:	2301      	movs	r3, #1
  403ab4:	6013      	str	r3, [r2, #0]
  403ab6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403ab8:	2b00      	cmp	r3, #0
  403aba:	f000 80bd 	beq.w	403c38 <_dtoa_r+0x1d0>
  403abe:	4895      	ldr	r0, [pc, #596]	; (403d14 <_dtoa_r+0x2ac>)
  403ac0:	6018      	str	r0, [r3, #0]
  403ac2:	3801      	subs	r0, #1
  403ac4:	b01b      	add	sp, #108	; 0x6c
  403ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403aca:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403acc:	f242 730f 	movw	r3, #9999	; 0x270f
  403ad0:	6013      	str	r3, [r2, #0]
  403ad2:	f1ba 0f00 	cmp.w	sl, #0
  403ad6:	d10d      	bne.n	403af4 <_dtoa_r+0x8c>
  403ad8:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403adc:	b955      	cbnz	r5, 403af4 <_dtoa_r+0x8c>
  403ade:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403ae0:	488d      	ldr	r0, [pc, #564]	; (403d18 <_dtoa_r+0x2b0>)
  403ae2:	2b00      	cmp	r3, #0
  403ae4:	d0ee      	beq.n	403ac4 <_dtoa_r+0x5c>
  403ae6:	f100 0308 	add.w	r3, r0, #8
  403aea:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403aec:	6013      	str	r3, [r2, #0]
  403aee:	b01b      	add	sp, #108	; 0x6c
  403af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403af4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403af6:	4889      	ldr	r0, [pc, #548]	; (403d1c <_dtoa_r+0x2b4>)
  403af8:	2b00      	cmp	r3, #0
  403afa:	d0e3      	beq.n	403ac4 <_dtoa_r+0x5c>
  403afc:	1cc3      	adds	r3, r0, #3
  403afe:	e7f4      	b.n	403aea <_dtoa_r+0x82>
  403b00:	2301      	movs	r3, #1
  403b02:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403b06:	6033      	str	r3, [r6, #0]
  403b08:	46ab      	mov	fp, r5
  403b0a:	e7c5      	b.n	403a98 <_dtoa_r+0x30>
  403b0c:	aa18      	add	r2, sp, #96	; 0x60
  403b0e:	ab19      	add	r3, sp, #100	; 0x64
  403b10:	9201      	str	r2, [sp, #4]
  403b12:	9300      	str	r3, [sp, #0]
  403b14:	4652      	mov	r2, sl
  403b16:	465b      	mov	r3, fp
  403b18:	4620      	mov	r0, r4
  403b1a:	f001 fd45 	bl	4055a8 <__d2b>
  403b1e:	0d2b      	lsrs	r3, r5, #20
  403b20:	4681      	mov	r9, r0
  403b22:	d071      	beq.n	403c08 <_dtoa_r+0x1a0>
  403b24:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403b28:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403b2c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403b2e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403b32:	4650      	mov	r0, sl
  403b34:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403b38:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403b3c:	2200      	movs	r2, #0
  403b3e:	4b78      	ldr	r3, [pc, #480]	; (403d20 <_dtoa_r+0x2b8>)
  403b40:	f7fe f834 	bl	401bac <__aeabi_dsub>
  403b44:	a36c      	add	r3, pc, #432	; (adr r3, 403cf8 <_dtoa_r+0x290>)
  403b46:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b4a:	f7fe f9e3 	bl	401f14 <__aeabi_dmul>
  403b4e:	a36c      	add	r3, pc, #432	; (adr r3, 403d00 <_dtoa_r+0x298>)
  403b50:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b54:	f7fe f82c 	bl	401bb0 <__adddf3>
  403b58:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403b5c:	4630      	mov	r0, r6
  403b5e:	f7fe f973 	bl	401e48 <__aeabi_i2d>
  403b62:	a369      	add	r3, pc, #420	; (adr r3, 403d08 <_dtoa_r+0x2a0>)
  403b64:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b68:	f7fe f9d4 	bl	401f14 <__aeabi_dmul>
  403b6c:	4602      	mov	r2, r0
  403b6e:	460b      	mov	r3, r1
  403b70:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403b74:	f7fe f81c 	bl	401bb0 <__adddf3>
  403b78:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403b7c:	f7fe fbdc 	bl	402338 <__aeabi_d2iz>
  403b80:	2200      	movs	r2, #0
  403b82:	9002      	str	r0, [sp, #8]
  403b84:	2300      	movs	r3, #0
  403b86:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403b8a:	f002 fadb 	bl	406144 <__aeabi_dcmplt>
  403b8e:	2800      	cmp	r0, #0
  403b90:	f040 8173 	bne.w	403e7a <_dtoa_r+0x412>
  403b94:	9d02      	ldr	r5, [sp, #8]
  403b96:	2d16      	cmp	r5, #22
  403b98:	f200 815d 	bhi.w	403e56 <_dtoa_r+0x3ee>
  403b9c:	4b61      	ldr	r3, [pc, #388]	; (403d24 <_dtoa_r+0x2bc>)
  403b9e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403ba2:	e9d3 0100 	ldrd	r0, r1, [r3]
  403ba6:	4652      	mov	r2, sl
  403ba8:	465b      	mov	r3, fp
  403baa:	f002 fae9 	bl	406180 <__aeabi_dcmpgt>
  403bae:	2800      	cmp	r0, #0
  403bb0:	f000 81c5 	beq.w	403f3e <_dtoa_r+0x4d6>
  403bb4:	1e6b      	subs	r3, r5, #1
  403bb6:	9302      	str	r3, [sp, #8]
  403bb8:	2300      	movs	r3, #0
  403bba:	930e      	str	r3, [sp, #56]	; 0x38
  403bbc:	1bbf      	subs	r7, r7, r6
  403bbe:	1e7b      	subs	r3, r7, #1
  403bc0:	9306      	str	r3, [sp, #24]
  403bc2:	f100 8154 	bmi.w	403e6e <_dtoa_r+0x406>
  403bc6:	2300      	movs	r3, #0
  403bc8:	9308      	str	r3, [sp, #32]
  403bca:	9b02      	ldr	r3, [sp, #8]
  403bcc:	2b00      	cmp	r3, #0
  403bce:	f2c0 8145 	blt.w	403e5c <_dtoa_r+0x3f4>
  403bd2:	9a06      	ldr	r2, [sp, #24]
  403bd4:	930d      	str	r3, [sp, #52]	; 0x34
  403bd6:	4611      	mov	r1, r2
  403bd8:	4419      	add	r1, r3
  403bda:	2300      	movs	r3, #0
  403bdc:	9106      	str	r1, [sp, #24]
  403bde:	930c      	str	r3, [sp, #48]	; 0x30
  403be0:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403be2:	2b09      	cmp	r3, #9
  403be4:	d82a      	bhi.n	403c3c <_dtoa_r+0x1d4>
  403be6:	2b05      	cmp	r3, #5
  403be8:	f340 865b 	ble.w	4048a2 <_dtoa_r+0xe3a>
  403bec:	3b04      	subs	r3, #4
  403bee:	9324      	str	r3, [sp, #144]	; 0x90
  403bf0:	2500      	movs	r5, #0
  403bf2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403bf4:	3b02      	subs	r3, #2
  403bf6:	2b03      	cmp	r3, #3
  403bf8:	f200 8642 	bhi.w	404880 <_dtoa_r+0xe18>
  403bfc:	e8df f013 	tbh	[pc, r3, lsl #1]
  403c00:	02c903d4 	.word	0x02c903d4
  403c04:	046103df 	.word	0x046103df
  403c08:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403c0a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403c0c:	443e      	add	r6, r7
  403c0e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403c12:	2b20      	cmp	r3, #32
  403c14:	f340 818e 	ble.w	403f34 <_dtoa_r+0x4cc>
  403c18:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403c1c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403c20:	409d      	lsls	r5, r3
  403c22:	fa2a f000 	lsr.w	r0, sl, r0
  403c26:	4328      	orrs	r0, r5
  403c28:	f7fe f8fe 	bl	401e28 <__aeabi_ui2d>
  403c2c:	2301      	movs	r3, #1
  403c2e:	3e01      	subs	r6, #1
  403c30:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403c34:	9314      	str	r3, [sp, #80]	; 0x50
  403c36:	e781      	b.n	403b3c <_dtoa_r+0xd4>
  403c38:	483b      	ldr	r0, [pc, #236]	; (403d28 <_dtoa_r+0x2c0>)
  403c3a:	e743      	b.n	403ac4 <_dtoa_r+0x5c>
  403c3c:	2100      	movs	r1, #0
  403c3e:	6461      	str	r1, [r4, #68]	; 0x44
  403c40:	4620      	mov	r0, r4
  403c42:	9125      	str	r1, [sp, #148]	; 0x94
  403c44:	f001 fa12 	bl	40506c <_Balloc>
  403c48:	f04f 33ff 	mov.w	r3, #4294967295
  403c4c:	930a      	str	r3, [sp, #40]	; 0x28
  403c4e:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403c50:	930f      	str	r3, [sp, #60]	; 0x3c
  403c52:	2301      	movs	r3, #1
  403c54:	9004      	str	r0, [sp, #16]
  403c56:	6420      	str	r0, [r4, #64]	; 0x40
  403c58:	9224      	str	r2, [sp, #144]	; 0x90
  403c5a:	930b      	str	r3, [sp, #44]	; 0x2c
  403c5c:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403c5e:	2b00      	cmp	r3, #0
  403c60:	f2c0 80d9 	blt.w	403e16 <_dtoa_r+0x3ae>
  403c64:	9a02      	ldr	r2, [sp, #8]
  403c66:	2a0e      	cmp	r2, #14
  403c68:	f300 80d5 	bgt.w	403e16 <_dtoa_r+0x3ae>
  403c6c:	4b2d      	ldr	r3, [pc, #180]	; (403d24 <_dtoa_r+0x2bc>)
  403c6e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403c72:	e9d3 2300 	ldrd	r2, r3, [r3]
  403c76:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403c7a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403c7c:	2b00      	cmp	r3, #0
  403c7e:	f2c0 83ba 	blt.w	4043f6 <_dtoa_r+0x98e>
  403c82:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403c86:	4650      	mov	r0, sl
  403c88:	462a      	mov	r2, r5
  403c8a:	4633      	mov	r3, r6
  403c8c:	4659      	mov	r1, fp
  403c8e:	f7fe fa6b 	bl	402168 <__aeabi_ddiv>
  403c92:	f7fe fb51 	bl	402338 <__aeabi_d2iz>
  403c96:	4680      	mov	r8, r0
  403c98:	f7fe f8d6 	bl	401e48 <__aeabi_i2d>
  403c9c:	462a      	mov	r2, r5
  403c9e:	4633      	mov	r3, r6
  403ca0:	f7fe f938 	bl	401f14 <__aeabi_dmul>
  403ca4:	460b      	mov	r3, r1
  403ca6:	4602      	mov	r2, r0
  403ca8:	4659      	mov	r1, fp
  403caa:	4650      	mov	r0, sl
  403cac:	f7fd ff7e 	bl	401bac <__aeabi_dsub>
  403cb0:	9d04      	ldr	r5, [sp, #16]
  403cb2:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403cb6:	702b      	strb	r3, [r5, #0]
  403cb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403cba:	2b01      	cmp	r3, #1
  403cbc:	4606      	mov	r6, r0
  403cbe:	460f      	mov	r7, r1
  403cc0:	f105 0501 	add.w	r5, r5, #1
  403cc4:	d068      	beq.n	403d98 <_dtoa_r+0x330>
  403cc6:	2200      	movs	r2, #0
  403cc8:	4b18      	ldr	r3, [pc, #96]	; (403d2c <_dtoa_r+0x2c4>)
  403cca:	f7fe f923 	bl	401f14 <__aeabi_dmul>
  403cce:	2200      	movs	r2, #0
  403cd0:	2300      	movs	r3, #0
  403cd2:	4606      	mov	r6, r0
  403cd4:	460f      	mov	r7, r1
  403cd6:	f002 fa2b 	bl	406130 <__aeabi_dcmpeq>
  403cda:	2800      	cmp	r0, #0
  403cdc:	f040 8088 	bne.w	403df0 <_dtoa_r+0x388>
  403ce0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403ce4:	f04f 0a00 	mov.w	sl, #0
  403ce8:	f8df b040 	ldr.w	fp, [pc, #64]	; 403d2c <_dtoa_r+0x2c4>
  403cec:	940c      	str	r4, [sp, #48]	; 0x30
  403cee:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403cf2:	e028      	b.n	403d46 <_dtoa_r+0x2de>
  403cf4:	f3af 8000 	nop.w
  403cf8:	636f4361 	.word	0x636f4361
  403cfc:	3fd287a7 	.word	0x3fd287a7
  403d00:	8b60c8b3 	.word	0x8b60c8b3
  403d04:	3fc68a28 	.word	0x3fc68a28
  403d08:	509f79fb 	.word	0x509f79fb
  403d0c:	3fd34413 	.word	0x3fd34413
  403d10:	7ff00000 	.word	0x7ff00000
  403d14:	00406f99 	.word	0x00406f99
  403d18:	00406fbc 	.word	0x00406fbc
  403d1c:	00406fc8 	.word	0x00406fc8
  403d20:	3ff80000 	.word	0x3ff80000
  403d24:	00406ff8 	.word	0x00406ff8
  403d28:	00406f98 	.word	0x00406f98
  403d2c:	40240000 	.word	0x40240000
  403d30:	f7fe f8f0 	bl	401f14 <__aeabi_dmul>
  403d34:	2200      	movs	r2, #0
  403d36:	2300      	movs	r3, #0
  403d38:	4606      	mov	r6, r0
  403d3a:	460f      	mov	r7, r1
  403d3c:	f002 f9f8 	bl	406130 <__aeabi_dcmpeq>
  403d40:	2800      	cmp	r0, #0
  403d42:	f040 83c1 	bne.w	4044c8 <_dtoa_r+0xa60>
  403d46:	4642      	mov	r2, r8
  403d48:	464b      	mov	r3, r9
  403d4a:	4630      	mov	r0, r6
  403d4c:	4639      	mov	r1, r7
  403d4e:	f7fe fa0b 	bl	402168 <__aeabi_ddiv>
  403d52:	f7fe faf1 	bl	402338 <__aeabi_d2iz>
  403d56:	4604      	mov	r4, r0
  403d58:	f7fe f876 	bl	401e48 <__aeabi_i2d>
  403d5c:	4642      	mov	r2, r8
  403d5e:	464b      	mov	r3, r9
  403d60:	f7fe f8d8 	bl	401f14 <__aeabi_dmul>
  403d64:	4602      	mov	r2, r0
  403d66:	460b      	mov	r3, r1
  403d68:	4630      	mov	r0, r6
  403d6a:	4639      	mov	r1, r7
  403d6c:	f7fd ff1e 	bl	401bac <__aeabi_dsub>
  403d70:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403d74:	9e04      	ldr	r6, [sp, #16]
  403d76:	f805 eb01 	strb.w	lr, [r5], #1
  403d7a:	eba5 0e06 	sub.w	lr, r5, r6
  403d7e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403d80:	45b6      	cmp	lr, r6
  403d82:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403d86:	4652      	mov	r2, sl
  403d88:	465b      	mov	r3, fp
  403d8a:	d1d1      	bne.n	403d30 <_dtoa_r+0x2c8>
  403d8c:	46a0      	mov	r8, r4
  403d8e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403d92:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403d94:	4606      	mov	r6, r0
  403d96:	460f      	mov	r7, r1
  403d98:	4632      	mov	r2, r6
  403d9a:	463b      	mov	r3, r7
  403d9c:	4630      	mov	r0, r6
  403d9e:	4639      	mov	r1, r7
  403da0:	f7fd ff06 	bl	401bb0 <__adddf3>
  403da4:	4606      	mov	r6, r0
  403da6:	460f      	mov	r7, r1
  403da8:	4602      	mov	r2, r0
  403daa:	460b      	mov	r3, r1
  403dac:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403db0:	f002 f9c8 	bl	406144 <__aeabi_dcmplt>
  403db4:	b948      	cbnz	r0, 403dca <_dtoa_r+0x362>
  403db6:	4632      	mov	r2, r6
  403db8:	463b      	mov	r3, r7
  403dba:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403dbe:	f002 f9b7 	bl	406130 <__aeabi_dcmpeq>
  403dc2:	b1a8      	cbz	r0, 403df0 <_dtoa_r+0x388>
  403dc4:	f018 0f01 	tst.w	r8, #1
  403dc8:	d012      	beq.n	403df0 <_dtoa_r+0x388>
  403dca:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403dce:	9a04      	ldr	r2, [sp, #16]
  403dd0:	1e6b      	subs	r3, r5, #1
  403dd2:	e004      	b.n	403dde <_dtoa_r+0x376>
  403dd4:	429a      	cmp	r2, r3
  403dd6:	f000 8401 	beq.w	4045dc <_dtoa_r+0xb74>
  403dda:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403dde:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403de2:	f103 0501 	add.w	r5, r3, #1
  403de6:	d0f5      	beq.n	403dd4 <_dtoa_r+0x36c>
  403de8:	f108 0801 	add.w	r8, r8, #1
  403dec:	f883 8000 	strb.w	r8, [r3]
  403df0:	4649      	mov	r1, r9
  403df2:	4620      	mov	r0, r4
  403df4:	f001 f960 	bl	4050b8 <_Bfree>
  403df8:	2200      	movs	r2, #0
  403dfa:	9b02      	ldr	r3, [sp, #8]
  403dfc:	702a      	strb	r2, [r5, #0]
  403dfe:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403e00:	3301      	adds	r3, #1
  403e02:	6013      	str	r3, [r2, #0]
  403e04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403e06:	2b00      	cmp	r3, #0
  403e08:	f000 839e 	beq.w	404548 <_dtoa_r+0xae0>
  403e0c:	9804      	ldr	r0, [sp, #16]
  403e0e:	601d      	str	r5, [r3, #0]
  403e10:	b01b      	add	sp, #108	; 0x6c
  403e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403e16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403e18:	2a00      	cmp	r2, #0
  403e1a:	d03e      	beq.n	403e9a <_dtoa_r+0x432>
  403e1c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403e1e:	2a01      	cmp	r2, #1
  403e20:	f340 8311 	ble.w	404446 <_dtoa_r+0x9de>
  403e24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403e28:	1e5f      	subs	r7, r3, #1
  403e2a:	42ba      	cmp	r2, r7
  403e2c:	f2c0 838f 	blt.w	40454e <_dtoa_r+0xae6>
  403e30:	1bd7      	subs	r7, r2, r7
  403e32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e34:	2b00      	cmp	r3, #0
  403e36:	f2c0 848b 	blt.w	404750 <_dtoa_r+0xce8>
  403e3a:	9d08      	ldr	r5, [sp, #32]
  403e3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403e3e:	9a08      	ldr	r2, [sp, #32]
  403e40:	441a      	add	r2, r3
  403e42:	9208      	str	r2, [sp, #32]
  403e44:	9a06      	ldr	r2, [sp, #24]
  403e46:	2101      	movs	r1, #1
  403e48:	441a      	add	r2, r3
  403e4a:	4620      	mov	r0, r4
  403e4c:	9206      	str	r2, [sp, #24]
  403e4e:	f001 f9cd 	bl	4051ec <__i2b>
  403e52:	4606      	mov	r6, r0
  403e54:	e024      	b.n	403ea0 <_dtoa_r+0x438>
  403e56:	2301      	movs	r3, #1
  403e58:	930e      	str	r3, [sp, #56]	; 0x38
  403e5a:	e6af      	b.n	403bbc <_dtoa_r+0x154>
  403e5c:	9a08      	ldr	r2, [sp, #32]
  403e5e:	9b02      	ldr	r3, [sp, #8]
  403e60:	1ad2      	subs	r2, r2, r3
  403e62:	425b      	negs	r3, r3
  403e64:	930c      	str	r3, [sp, #48]	; 0x30
  403e66:	2300      	movs	r3, #0
  403e68:	9208      	str	r2, [sp, #32]
  403e6a:	930d      	str	r3, [sp, #52]	; 0x34
  403e6c:	e6b8      	b.n	403be0 <_dtoa_r+0x178>
  403e6e:	f1c7 0301 	rsb	r3, r7, #1
  403e72:	9308      	str	r3, [sp, #32]
  403e74:	2300      	movs	r3, #0
  403e76:	9306      	str	r3, [sp, #24]
  403e78:	e6a7      	b.n	403bca <_dtoa_r+0x162>
  403e7a:	9d02      	ldr	r5, [sp, #8]
  403e7c:	4628      	mov	r0, r5
  403e7e:	f7fd ffe3 	bl	401e48 <__aeabi_i2d>
  403e82:	4602      	mov	r2, r0
  403e84:	460b      	mov	r3, r1
  403e86:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403e8a:	f002 f951 	bl	406130 <__aeabi_dcmpeq>
  403e8e:	2800      	cmp	r0, #0
  403e90:	f47f ae80 	bne.w	403b94 <_dtoa_r+0x12c>
  403e94:	1e6b      	subs	r3, r5, #1
  403e96:	9302      	str	r3, [sp, #8]
  403e98:	e67c      	b.n	403b94 <_dtoa_r+0x12c>
  403e9a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403e9c:	9d08      	ldr	r5, [sp, #32]
  403e9e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403ea0:	2d00      	cmp	r5, #0
  403ea2:	dd0c      	ble.n	403ebe <_dtoa_r+0x456>
  403ea4:	9906      	ldr	r1, [sp, #24]
  403ea6:	2900      	cmp	r1, #0
  403ea8:	460b      	mov	r3, r1
  403eaa:	dd08      	ble.n	403ebe <_dtoa_r+0x456>
  403eac:	42a9      	cmp	r1, r5
  403eae:	9a08      	ldr	r2, [sp, #32]
  403eb0:	bfa8      	it	ge
  403eb2:	462b      	movge	r3, r5
  403eb4:	1ad2      	subs	r2, r2, r3
  403eb6:	1aed      	subs	r5, r5, r3
  403eb8:	1acb      	subs	r3, r1, r3
  403eba:	9208      	str	r2, [sp, #32]
  403ebc:	9306      	str	r3, [sp, #24]
  403ebe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ec0:	b1d3      	cbz	r3, 403ef8 <_dtoa_r+0x490>
  403ec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403ec4:	2b00      	cmp	r3, #0
  403ec6:	f000 82b7 	beq.w	404438 <_dtoa_r+0x9d0>
  403eca:	2f00      	cmp	r7, #0
  403ecc:	dd10      	ble.n	403ef0 <_dtoa_r+0x488>
  403ece:	4631      	mov	r1, r6
  403ed0:	463a      	mov	r2, r7
  403ed2:	4620      	mov	r0, r4
  403ed4:	f001 fa26 	bl	405324 <__pow5mult>
  403ed8:	464a      	mov	r2, r9
  403eda:	4601      	mov	r1, r0
  403edc:	4606      	mov	r6, r0
  403ede:	4620      	mov	r0, r4
  403ee0:	f001 f98e 	bl	405200 <__multiply>
  403ee4:	4649      	mov	r1, r9
  403ee6:	4680      	mov	r8, r0
  403ee8:	4620      	mov	r0, r4
  403eea:	f001 f8e5 	bl	4050b8 <_Bfree>
  403eee:	46c1      	mov	r9, r8
  403ef0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ef2:	1bda      	subs	r2, r3, r7
  403ef4:	f040 82a1 	bne.w	40443a <_dtoa_r+0x9d2>
  403ef8:	2101      	movs	r1, #1
  403efa:	4620      	mov	r0, r4
  403efc:	f001 f976 	bl	4051ec <__i2b>
  403f00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403f02:	2b00      	cmp	r3, #0
  403f04:	4680      	mov	r8, r0
  403f06:	dd1c      	ble.n	403f42 <_dtoa_r+0x4da>
  403f08:	4601      	mov	r1, r0
  403f0a:	461a      	mov	r2, r3
  403f0c:	4620      	mov	r0, r4
  403f0e:	f001 fa09 	bl	405324 <__pow5mult>
  403f12:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f14:	2b01      	cmp	r3, #1
  403f16:	4680      	mov	r8, r0
  403f18:	f340 8254 	ble.w	4043c4 <_dtoa_r+0x95c>
  403f1c:	2300      	movs	r3, #0
  403f1e:	930c      	str	r3, [sp, #48]	; 0x30
  403f20:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403f24:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403f28:	6918      	ldr	r0, [r3, #16]
  403f2a:	f001 f90f 	bl	40514c <__hi0bits>
  403f2e:	f1c0 0020 	rsb	r0, r0, #32
  403f32:	e010      	b.n	403f56 <_dtoa_r+0x4ee>
  403f34:	f1c3 0520 	rsb	r5, r3, #32
  403f38:	fa0a f005 	lsl.w	r0, sl, r5
  403f3c:	e674      	b.n	403c28 <_dtoa_r+0x1c0>
  403f3e:	900e      	str	r0, [sp, #56]	; 0x38
  403f40:	e63c      	b.n	403bbc <_dtoa_r+0x154>
  403f42:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403f44:	2b01      	cmp	r3, #1
  403f46:	f340 8287 	ble.w	404458 <_dtoa_r+0x9f0>
  403f4a:	2300      	movs	r3, #0
  403f4c:	930c      	str	r3, [sp, #48]	; 0x30
  403f4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403f50:	2001      	movs	r0, #1
  403f52:	2b00      	cmp	r3, #0
  403f54:	d1e4      	bne.n	403f20 <_dtoa_r+0x4b8>
  403f56:	9a06      	ldr	r2, [sp, #24]
  403f58:	4410      	add	r0, r2
  403f5a:	f010 001f 	ands.w	r0, r0, #31
  403f5e:	f000 80a1 	beq.w	4040a4 <_dtoa_r+0x63c>
  403f62:	f1c0 0320 	rsb	r3, r0, #32
  403f66:	2b04      	cmp	r3, #4
  403f68:	f340 849e 	ble.w	4048a8 <_dtoa_r+0xe40>
  403f6c:	9b08      	ldr	r3, [sp, #32]
  403f6e:	f1c0 001c 	rsb	r0, r0, #28
  403f72:	4403      	add	r3, r0
  403f74:	9308      	str	r3, [sp, #32]
  403f76:	4613      	mov	r3, r2
  403f78:	4403      	add	r3, r0
  403f7a:	4405      	add	r5, r0
  403f7c:	9306      	str	r3, [sp, #24]
  403f7e:	9b08      	ldr	r3, [sp, #32]
  403f80:	2b00      	cmp	r3, #0
  403f82:	dd05      	ble.n	403f90 <_dtoa_r+0x528>
  403f84:	4649      	mov	r1, r9
  403f86:	461a      	mov	r2, r3
  403f88:	4620      	mov	r0, r4
  403f8a:	f001 fa1b 	bl	4053c4 <__lshift>
  403f8e:	4681      	mov	r9, r0
  403f90:	9b06      	ldr	r3, [sp, #24]
  403f92:	2b00      	cmp	r3, #0
  403f94:	dd05      	ble.n	403fa2 <_dtoa_r+0x53a>
  403f96:	4641      	mov	r1, r8
  403f98:	461a      	mov	r2, r3
  403f9a:	4620      	mov	r0, r4
  403f9c:	f001 fa12 	bl	4053c4 <__lshift>
  403fa0:	4680      	mov	r8, r0
  403fa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403fa4:	2b00      	cmp	r3, #0
  403fa6:	f040 8086 	bne.w	4040b6 <_dtoa_r+0x64e>
  403faa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403fac:	2b00      	cmp	r3, #0
  403fae:	f340 8266 	ble.w	40447e <_dtoa_r+0xa16>
  403fb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403fb4:	2b00      	cmp	r3, #0
  403fb6:	f000 8098 	beq.w	4040ea <_dtoa_r+0x682>
  403fba:	2d00      	cmp	r5, #0
  403fbc:	dd05      	ble.n	403fca <_dtoa_r+0x562>
  403fbe:	4631      	mov	r1, r6
  403fc0:	462a      	mov	r2, r5
  403fc2:	4620      	mov	r0, r4
  403fc4:	f001 f9fe 	bl	4053c4 <__lshift>
  403fc8:	4606      	mov	r6, r0
  403fca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403fcc:	2b00      	cmp	r3, #0
  403fce:	f040 8337 	bne.w	404640 <_dtoa_r+0xbd8>
  403fd2:	9606      	str	r6, [sp, #24]
  403fd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403fd6:	9a04      	ldr	r2, [sp, #16]
  403fd8:	f8dd b018 	ldr.w	fp, [sp, #24]
  403fdc:	3b01      	subs	r3, #1
  403fde:	18d3      	adds	r3, r2, r3
  403fe0:	930b      	str	r3, [sp, #44]	; 0x2c
  403fe2:	f00a 0301 	and.w	r3, sl, #1
  403fe6:	930c      	str	r3, [sp, #48]	; 0x30
  403fe8:	4617      	mov	r7, r2
  403fea:	46c2      	mov	sl, r8
  403fec:	4651      	mov	r1, sl
  403fee:	4648      	mov	r0, r9
  403ff0:	f7ff fca4 	bl	40393c <quorem>
  403ff4:	4631      	mov	r1, r6
  403ff6:	4605      	mov	r5, r0
  403ff8:	4648      	mov	r0, r9
  403ffa:	f001 fa35 	bl	405468 <__mcmp>
  403ffe:	465a      	mov	r2, fp
  404000:	900a      	str	r0, [sp, #40]	; 0x28
  404002:	4651      	mov	r1, sl
  404004:	4620      	mov	r0, r4
  404006:	f001 fa4b 	bl	4054a0 <__mdiff>
  40400a:	68c2      	ldr	r2, [r0, #12]
  40400c:	4680      	mov	r8, r0
  40400e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  404012:	2a00      	cmp	r2, #0
  404014:	f040 822b 	bne.w	40446e <_dtoa_r+0xa06>
  404018:	4601      	mov	r1, r0
  40401a:	4648      	mov	r0, r9
  40401c:	9308      	str	r3, [sp, #32]
  40401e:	f001 fa23 	bl	405468 <__mcmp>
  404022:	4641      	mov	r1, r8
  404024:	9006      	str	r0, [sp, #24]
  404026:	4620      	mov	r0, r4
  404028:	f001 f846 	bl	4050b8 <_Bfree>
  40402c:	9a06      	ldr	r2, [sp, #24]
  40402e:	9b08      	ldr	r3, [sp, #32]
  404030:	b932      	cbnz	r2, 404040 <_dtoa_r+0x5d8>
  404032:	9924      	ldr	r1, [sp, #144]	; 0x90
  404034:	b921      	cbnz	r1, 404040 <_dtoa_r+0x5d8>
  404036:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404038:	2a00      	cmp	r2, #0
  40403a:	f000 83ef 	beq.w	40481c <_dtoa_r+0xdb4>
  40403e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  404040:	990a      	ldr	r1, [sp, #40]	; 0x28
  404042:	2900      	cmp	r1, #0
  404044:	f2c0 829f 	blt.w	404586 <_dtoa_r+0xb1e>
  404048:	d105      	bne.n	404056 <_dtoa_r+0x5ee>
  40404a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40404c:	b919      	cbnz	r1, 404056 <_dtoa_r+0x5ee>
  40404e:	990c      	ldr	r1, [sp, #48]	; 0x30
  404050:	2900      	cmp	r1, #0
  404052:	f000 8298 	beq.w	404586 <_dtoa_r+0xb1e>
  404056:	2a00      	cmp	r2, #0
  404058:	f300 8306 	bgt.w	404668 <_dtoa_r+0xc00>
  40405c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40405e:	703b      	strb	r3, [r7, #0]
  404060:	f107 0801 	add.w	r8, r7, #1
  404064:	4297      	cmp	r7, r2
  404066:	4645      	mov	r5, r8
  404068:	f000 830c 	beq.w	404684 <_dtoa_r+0xc1c>
  40406c:	4649      	mov	r1, r9
  40406e:	2300      	movs	r3, #0
  404070:	220a      	movs	r2, #10
  404072:	4620      	mov	r0, r4
  404074:	f001 f82a 	bl	4050cc <__multadd>
  404078:	455e      	cmp	r6, fp
  40407a:	4681      	mov	r9, r0
  40407c:	4631      	mov	r1, r6
  40407e:	f04f 0300 	mov.w	r3, #0
  404082:	f04f 020a 	mov.w	r2, #10
  404086:	4620      	mov	r0, r4
  404088:	f000 81eb 	beq.w	404462 <_dtoa_r+0x9fa>
  40408c:	f001 f81e 	bl	4050cc <__multadd>
  404090:	4659      	mov	r1, fp
  404092:	4606      	mov	r6, r0
  404094:	2300      	movs	r3, #0
  404096:	220a      	movs	r2, #10
  404098:	4620      	mov	r0, r4
  40409a:	f001 f817 	bl	4050cc <__multadd>
  40409e:	4647      	mov	r7, r8
  4040a0:	4683      	mov	fp, r0
  4040a2:	e7a3      	b.n	403fec <_dtoa_r+0x584>
  4040a4:	201c      	movs	r0, #28
  4040a6:	9b08      	ldr	r3, [sp, #32]
  4040a8:	4403      	add	r3, r0
  4040aa:	9308      	str	r3, [sp, #32]
  4040ac:	9b06      	ldr	r3, [sp, #24]
  4040ae:	4403      	add	r3, r0
  4040b0:	4405      	add	r5, r0
  4040b2:	9306      	str	r3, [sp, #24]
  4040b4:	e763      	b.n	403f7e <_dtoa_r+0x516>
  4040b6:	4641      	mov	r1, r8
  4040b8:	4648      	mov	r0, r9
  4040ba:	f001 f9d5 	bl	405468 <__mcmp>
  4040be:	2800      	cmp	r0, #0
  4040c0:	f6bf af73 	bge.w	403faa <_dtoa_r+0x542>
  4040c4:	9f02      	ldr	r7, [sp, #8]
  4040c6:	4649      	mov	r1, r9
  4040c8:	2300      	movs	r3, #0
  4040ca:	220a      	movs	r2, #10
  4040cc:	4620      	mov	r0, r4
  4040ce:	3f01      	subs	r7, #1
  4040d0:	9702      	str	r7, [sp, #8]
  4040d2:	f000 fffb 	bl	4050cc <__multadd>
  4040d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4040d8:	4681      	mov	r9, r0
  4040da:	2b00      	cmp	r3, #0
  4040dc:	f040 83b6 	bne.w	40484c <_dtoa_r+0xde4>
  4040e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4040e2:	2b00      	cmp	r3, #0
  4040e4:	f340 83bf 	ble.w	404866 <_dtoa_r+0xdfe>
  4040e8:	930a      	str	r3, [sp, #40]	; 0x28
  4040ea:	f8dd b010 	ldr.w	fp, [sp, #16]
  4040ee:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4040f0:	465d      	mov	r5, fp
  4040f2:	e002      	b.n	4040fa <_dtoa_r+0x692>
  4040f4:	f000 ffea 	bl	4050cc <__multadd>
  4040f8:	4681      	mov	r9, r0
  4040fa:	4641      	mov	r1, r8
  4040fc:	4648      	mov	r0, r9
  4040fe:	f7ff fc1d 	bl	40393c <quorem>
  404102:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  404106:	f805 ab01 	strb.w	sl, [r5], #1
  40410a:	eba5 030b 	sub.w	r3, r5, fp
  40410e:	42bb      	cmp	r3, r7
  404110:	f04f 020a 	mov.w	r2, #10
  404114:	f04f 0300 	mov.w	r3, #0
  404118:	4649      	mov	r1, r9
  40411a:	4620      	mov	r0, r4
  40411c:	dbea      	blt.n	4040f4 <_dtoa_r+0x68c>
  40411e:	9b04      	ldr	r3, [sp, #16]
  404120:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404122:	2a01      	cmp	r2, #1
  404124:	bfac      	ite	ge
  404126:	189b      	addge	r3, r3, r2
  404128:	3301      	addlt	r3, #1
  40412a:	461d      	mov	r5, r3
  40412c:	f04f 0b00 	mov.w	fp, #0
  404130:	4649      	mov	r1, r9
  404132:	2201      	movs	r2, #1
  404134:	4620      	mov	r0, r4
  404136:	f001 f945 	bl	4053c4 <__lshift>
  40413a:	4641      	mov	r1, r8
  40413c:	4681      	mov	r9, r0
  40413e:	f001 f993 	bl	405468 <__mcmp>
  404142:	2800      	cmp	r0, #0
  404144:	f340 823d 	ble.w	4045c2 <_dtoa_r+0xb5a>
  404148:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  40414c:	9904      	ldr	r1, [sp, #16]
  40414e:	1e6b      	subs	r3, r5, #1
  404150:	e004      	b.n	40415c <_dtoa_r+0x6f4>
  404152:	428b      	cmp	r3, r1
  404154:	f000 81ae 	beq.w	4044b4 <_dtoa_r+0xa4c>
  404158:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  40415c:	2a39      	cmp	r2, #57	; 0x39
  40415e:	f103 0501 	add.w	r5, r3, #1
  404162:	d0f6      	beq.n	404152 <_dtoa_r+0x6ea>
  404164:	3201      	adds	r2, #1
  404166:	701a      	strb	r2, [r3, #0]
  404168:	4641      	mov	r1, r8
  40416a:	4620      	mov	r0, r4
  40416c:	f000 ffa4 	bl	4050b8 <_Bfree>
  404170:	2e00      	cmp	r6, #0
  404172:	f43f ae3d 	beq.w	403df0 <_dtoa_r+0x388>
  404176:	f1bb 0f00 	cmp.w	fp, #0
  40417a:	d005      	beq.n	404188 <_dtoa_r+0x720>
  40417c:	45b3      	cmp	fp, r6
  40417e:	d003      	beq.n	404188 <_dtoa_r+0x720>
  404180:	4659      	mov	r1, fp
  404182:	4620      	mov	r0, r4
  404184:	f000 ff98 	bl	4050b8 <_Bfree>
  404188:	4631      	mov	r1, r6
  40418a:	4620      	mov	r0, r4
  40418c:	f000 ff94 	bl	4050b8 <_Bfree>
  404190:	e62e      	b.n	403df0 <_dtoa_r+0x388>
  404192:	2300      	movs	r3, #0
  404194:	930b      	str	r3, [sp, #44]	; 0x2c
  404196:	9b02      	ldr	r3, [sp, #8]
  404198:	9a25      	ldr	r2, [sp, #148]	; 0x94
  40419a:	4413      	add	r3, r2
  40419c:	930f      	str	r3, [sp, #60]	; 0x3c
  40419e:	3301      	adds	r3, #1
  4041a0:	2b01      	cmp	r3, #1
  4041a2:	461f      	mov	r7, r3
  4041a4:	461e      	mov	r6, r3
  4041a6:	930a      	str	r3, [sp, #40]	; 0x28
  4041a8:	bfb8      	it	lt
  4041aa:	2701      	movlt	r7, #1
  4041ac:	2100      	movs	r1, #0
  4041ae:	2f17      	cmp	r7, #23
  4041b0:	6461      	str	r1, [r4, #68]	; 0x44
  4041b2:	d90a      	bls.n	4041ca <_dtoa_r+0x762>
  4041b4:	2201      	movs	r2, #1
  4041b6:	2304      	movs	r3, #4
  4041b8:	005b      	lsls	r3, r3, #1
  4041ba:	f103 0014 	add.w	r0, r3, #20
  4041be:	4287      	cmp	r7, r0
  4041c0:	4611      	mov	r1, r2
  4041c2:	f102 0201 	add.w	r2, r2, #1
  4041c6:	d2f7      	bcs.n	4041b8 <_dtoa_r+0x750>
  4041c8:	6461      	str	r1, [r4, #68]	; 0x44
  4041ca:	4620      	mov	r0, r4
  4041cc:	f000 ff4e 	bl	40506c <_Balloc>
  4041d0:	2e0e      	cmp	r6, #14
  4041d2:	9004      	str	r0, [sp, #16]
  4041d4:	6420      	str	r0, [r4, #64]	; 0x40
  4041d6:	f63f ad41 	bhi.w	403c5c <_dtoa_r+0x1f4>
  4041da:	2d00      	cmp	r5, #0
  4041dc:	f43f ad3e 	beq.w	403c5c <_dtoa_r+0x1f4>
  4041e0:	9902      	ldr	r1, [sp, #8]
  4041e2:	2900      	cmp	r1, #0
  4041e4:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4041e8:	f340 8202 	ble.w	4045f0 <_dtoa_r+0xb88>
  4041ec:	4bb8      	ldr	r3, [pc, #736]	; (4044d0 <_dtoa_r+0xa68>)
  4041ee:	f001 020f 	and.w	r2, r1, #15
  4041f2:	110d      	asrs	r5, r1, #4
  4041f4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4041f8:	06e9      	lsls	r1, r5, #27
  4041fa:	e9d3 6700 	ldrd	r6, r7, [r3]
  4041fe:	f140 81ae 	bpl.w	40455e <_dtoa_r+0xaf6>
  404202:	4bb4      	ldr	r3, [pc, #720]	; (4044d4 <_dtoa_r+0xa6c>)
  404204:	4650      	mov	r0, sl
  404206:	4659      	mov	r1, fp
  404208:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  40420c:	f7fd ffac 	bl	402168 <__aeabi_ddiv>
  404210:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  404214:	f005 050f 	and.w	r5, r5, #15
  404218:	f04f 0a03 	mov.w	sl, #3
  40421c:	b18d      	cbz	r5, 404242 <_dtoa_r+0x7da>
  40421e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4044d4 <_dtoa_r+0xa6c>
  404222:	07ea      	lsls	r2, r5, #31
  404224:	d509      	bpl.n	40423a <_dtoa_r+0x7d2>
  404226:	4630      	mov	r0, r6
  404228:	4639      	mov	r1, r7
  40422a:	e9d8 2300 	ldrd	r2, r3, [r8]
  40422e:	f7fd fe71 	bl	401f14 <__aeabi_dmul>
  404232:	f10a 0a01 	add.w	sl, sl, #1
  404236:	4606      	mov	r6, r0
  404238:	460f      	mov	r7, r1
  40423a:	106d      	asrs	r5, r5, #1
  40423c:	f108 0808 	add.w	r8, r8, #8
  404240:	d1ef      	bne.n	404222 <_dtoa_r+0x7ba>
  404242:	463b      	mov	r3, r7
  404244:	4632      	mov	r2, r6
  404246:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  40424a:	f7fd ff8d 	bl	402168 <__aeabi_ddiv>
  40424e:	4607      	mov	r7, r0
  404250:	4688      	mov	r8, r1
  404252:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  404254:	b143      	cbz	r3, 404268 <_dtoa_r+0x800>
  404256:	2200      	movs	r2, #0
  404258:	4b9f      	ldr	r3, [pc, #636]	; (4044d8 <_dtoa_r+0xa70>)
  40425a:	4638      	mov	r0, r7
  40425c:	4641      	mov	r1, r8
  40425e:	f001 ff71 	bl	406144 <__aeabi_dcmplt>
  404262:	2800      	cmp	r0, #0
  404264:	f040 8286 	bne.w	404774 <_dtoa_r+0xd0c>
  404268:	4650      	mov	r0, sl
  40426a:	f7fd fded 	bl	401e48 <__aeabi_i2d>
  40426e:	463a      	mov	r2, r7
  404270:	4643      	mov	r3, r8
  404272:	f7fd fe4f 	bl	401f14 <__aeabi_dmul>
  404276:	4b99      	ldr	r3, [pc, #612]	; (4044dc <_dtoa_r+0xa74>)
  404278:	2200      	movs	r2, #0
  40427a:	f7fd fc99 	bl	401bb0 <__adddf3>
  40427e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404280:	4605      	mov	r5, r0
  404282:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404286:	2b00      	cmp	r3, #0
  404288:	f000 813e 	beq.w	404508 <_dtoa_r+0xaa0>
  40428c:	9b02      	ldr	r3, [sp, #8]
  40428e:	9315      	str	r3, [sp, #84]	; 0x54
  404290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404292:	9312      	str	r3, [sp, #72]	; 0x48
  404294:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404296:	2b00      	cmp	r3, #0
  404298:	f000 81fa 	beq.w	404690 <_dtoa_r+0xc28>
  40429c:	9a12      	ldr	r2, [sp, #72]	; 0x48
  40429e:	4b8c      	ldr	r3, [pc, #560]	; (4044d0 <_dtoa_r+0xa68>)
  4042a0:	498f      	ldr	r1, [pc, #572]	; (4044e0 <_dtoa_r+0xa78>)
  4042a2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4042a6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4042aa:	2000      	movs	r0, #0
  4042ac:	f7fd ff5c 	bl	402168 <__aeabi_ddiv>
  4042b0:	462a      	mov	r2, r5
  4042b2:	4633      	mov	r3, r6
  4042b4:	f7fd fc7a 	bl	401bac <__aeabi_dsub>
  4042b8:	4682      	mov	sl, r0
  4042ba:	468b      	mov	fp, r1
  4042bc:	4638      	mov	r0, r7
  4042be:	4641      	mov	r1, r8
  4042c0:	f7fe f83a 	bl	402338 <__aeabi_d2iz>
  4042c4:	4605      	mov	r5, r0
  4042c6:	f7fd fdbf 	bl	401e48 <__aeabi_i2d>
  4042ca:	4602      	mov	r2, r0
  4042cc:	460b      	mov	r3, r1
  4042ce:	4638      	mov	r0, r7
  4042d0:	4641      	mov	r1, r8
  4042d2:	f7fd fc6b 	bl	401bac <__aeabi_dsub>
  4042d6:	3530      	adds	r5, #48	; 0x30
  4042d8:	fa5f f885 	uxtb.w	r8, r5
  4042dc:	9d04      	ldr	r5, [sp, #16]
  4042de:	4606      	mov	r6, r0
  4042e0:	460f      	mov	r7, r1
  4042e2:	f885 8000 	strb.w	r8, [r5]
  4042e6:	4602      	mov	r2, r0
  4042e8:	460b      	mov	r3, r1
  4042ea:	4650      	mov	r0, sl
  4042ec:	4659      	mov	r1, fp
  4042ee:	3501      	adds	r5, #1
  4042f0:	f001 ff46 	bl	406180 <__aeabi_dcmpgt>
  4042f4:	2800      	cmp	r0, #0
  4042f6:	d154      	bne.n	4043a2 <_dtoa_r+0x93a>
  4042f8:	4632      	mov	r2, r6
  4042fa:	463b      	mov	r3, r7
  4042fc:	2000      	movs	r0, #0
  4042fe:	4976      	ldr	r1, [pc, #472]	; (4044d8 <_dtoa_r+0xa70>)
  404300:	f7fd fc54 	bl	401bac <__aeabi_dsub>
  404304:	4602      	mov	r2, r0
  404306:	460b      	mov	r3, r1
  404308:	4650      	mov	r0, sl
  40430a:	4659      	mov	r1, fp
  40430c:	f001 ff38 	bl	406180 <__aeabi_dcmpgt>
  404310:	2800      	cmp	r0, #0
  404312:	f040 8270 	bne.w	4047f6 <_dtoa_r+0xd8e>
  404316:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404318:	2a01      	cmp	r2, #1
  40431a:	f000 8111 	beq.w	404540 <_dtoa_r+0xad8>
  40431e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404320:	9a04      	ldr	r2, [sp, #16]
  404322:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  404326:	4413      	add	r3, r2
  404328:	4699      	mov	r9, r3
  40432a:	e00d      	b.n	404348 <_dtoa_r+0x8e0>
  40432c:	2000      	movs	r0, #0
  40432e:	496a      	ldr	r1, [pc, #424]	; (4044d8 <_dtoa_r+0xa70>)
  404330:	f7fd fc3c 	bl	401bac <__aeabi_dsub>
  404334:	4652      	mov	r2, sl
  404336:	465b      	mov	r3, fp
  404338:	f001 ff04 	bl	406144 <__aeabi_dcmplt>
  40433c:	2800      	cmp	r0, #0
  40433e:	f040 8258 	bne.w	4047f2 <_dtoa_r+0xd8a>
  404342:	454d      	cmp	r5, r9
  404344:	f000 80fa 	beq.w	40453c <_dtoa_r+0xad4>
  404348:	4650      	mov	r0, sl
  40434a:	4659      	mov	r1, fp
  40434c:	2200      	movs	r2, #0
  40434e:	4b65      	ldr	r3, [pc, #404]	; (4044e4 <_dtoa_r+0xa7c>)
  404350:	f7fd fde0 	bl	401f14 <__aeabi_dmul>
  404354:	2200      	movs	r2, #0
  404356:	4b63      	ldr	r3, [pc, #396]	; (4044e4 <_dtoa_r+0xa7c>)
  404358:	4682      	mov	sl, r0
  40435a:	468b      	mov	fp, r1
  40435c:	4630      	mov	r0, r6
  40435e:	4639      	mov	r1, r7
  404360:	f7fd fdd8 	bl	401f14 <__aeabi_dmul>
  404364:	460f      	mov	r7, r1
  404366:	4606      	mov	r6, r0
  404368:	f7fd ffe6 	bl	402338 <__aeabi_d2iz>
  40436c:	4680      	mov	r8, r0
  40436e:	f7fd fd6b 	bl	401e48 <__aeabi_i2d>
  404372:	4602      	mov	r2, r0
  404374:	460b      	mov	r3, r1
  404376:	4630      	mov	r0, r6
  404378:	4639      	mov	r1, r7
  40437a:	f7fd fc17 	bl	401bac <__aeabi_dsub>
  40437e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404382:	fa5f f888 	uxtb.w	r8, r8
  404386:	4652      	mov	r2, sl
  404388:	465b      	mov	r3, fp
  40438a:	f805 8b01 	strb.w	r8, [r5], #1
  40438e:	4606      	mov	r6, r0
  404390:	460f      	mov	r7, r1
  404392:	f001 fed7 	bl	406144 <__aeabi_dcmplt>
  404396:	4632      	mov	r2, r6
  404398:	463b      	mov	r3, r7
  40439a:	2800      	cmp	r0, #0
  40439c:	d0c6      	beq.n	40432c <_dtoa_r+0x8c4>
  40439e:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4043a2:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4043a4:	9302      	str	r3, [sp, #8]
  4043a6:	e523      	b.n	403df0 <_dtoa_r+0x388>
  4043a8:	2300      	movs	r3, #0
  4043aa:	930b      	str	r3, [sp, #44]	; 0x2c
  4043ac:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4043ae:	2b00      	cmp	r3, #0
  4043b0:	f340 80dc 	ble.w	40456c <_dtoa_r+0xb04>
  4043b4:	461f      	mov	r7, r3
  4043b6:	461e      	mov	r6, r3
  4043b8:	930f      	str	r3, [sp, #60]	; 0x3c
  4043ba:	930a      	str	r3, [sp, #40]	; 0x28
  4043bc:	e6f6      	b.n	4041ac <_dtoa_r+0x744>
  4043be:	2301      	movs	r3, #1
  4043c0:	930b      	str	r3, [sp, #44]	; 0x2c
  4043c2:	e7f3      	b.n	4043ac <_dtoa_r+0x944>
  4043c4:	f1ba 0f00 	cmp.w	sl, #0
  4043c8:	f47f ada8 	bne.w	403f1c <_dtoa_r+0x4b4>
  4043cc:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4043d0:	2b00      	cmp	r3, #0
  4043d2:	f47f adba 	bne.w	403f4a <_dtoa_r+0x4e2>
  4043d6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  4043da:	0d3f      	lsrs	r7, r7, #20
  4043dc:	053f      	lsls	r7, r7, #20
  4043de:	2f00      	cmp	r7, #0
  4043e0:	f000 820d 	beq.w	4047fe <_dtoa_r+0xd96>
  4043e4:	9b08      	ldr	r3, [sp, #32]
  4043e6:	3301      	adds	r3, #1
  4043e8:	9308      	str	r3, [sp, #32]
  4043ea:	9b06      	ldr	r3, [sp, #24]
  4043ec:	3301      	adds	r3, #1
  4043ee:	9306      	str	r3, [sp, #24]
  4043f0:	2301      	movs	r3, #1
  4043f2:	930c      	str	r3, [sp, #48]	; 0x30
  4043f4:	e5ab      	b.n	403f4e <_dtoa_r+0x4e6>
  4043f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043f8:	2b00      	cmp	r3, #0
  4043fa:	f73f ac42 	bgt.w	403c82 <_dtoa_r+0x21a>
  4043fe:	f040 8221 	bne.w	404844 <_dtoa_r+0xddc>
  404402:	2200      	movs	r2, #0
  404404:	4b38      	ldr	r3, [pc, #224]	; (4044e8 <_dtoa_r+0xa80>)
  404406:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40440a:	f7fd fd83 	bl	401f14 <__aeabi_dmul>
  40440e:	4652      	mov	r2, sl
  404410:	465b      	mov	r3, fp
  404412:	f001 feab 	bl	40616c <__aeabi_dcmpge>
  404416:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  40441a:	4646      	mov	r6, r8
  40441c:	2800      	cmp	r0, #0
  40441e:	d041      	beq.n	4044a4 <_dtoa_r+0xa3c>
  404420:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404422:	9d04      	ldr	r5, [sp, #16]
  404424:	43db      	mvns	r3, r3
  404426:	9302      	str	r3, [sp, #8]
  404428:	4641      	mov	r1, r8
  40442a:	4620      	mov	r0, r4
  40442c:	f000 fe44 	bl	4050b8 <_Bfree>
  404430:	2e00      	cmp	r6, #0
  404432:	f43f acdd 	beq.w	403df0 <_dtoa_r+0x388>
  404436:	e6a7      	b.n	404188 <_dtoa_r+0x720>
  404438:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  40443a:	4649      	mov	r1, r9
  40443c:	4620      	mov	r0, r4
  40443e:	f000 ff71 	bl	405324 <__pow5mult>
  404442:	4681      	mov	r9, r0
  404444:	e558      	b.n	403ef8 <_dtoa_r+0x490>
  404446:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404448:	2a00      	cmp	r2, #0
  40444a:	f000 8187 	beq.w	40475c <_dtoa_r+0xcf4>
  40444e:	f203 4333 	addw	r3, r3, #1075	; 0x433
  404452:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404454:	9d08      	ldr	r5, [sp, #32]
  404456:	e4f2      	b.n	403e3e <_dtoa_r+0x3d6>
  404458:	f1ba 0f00 	cmp.w	sl, #0
  40445c:	f47f ad75 	bne.w	403f4a <_dtoa_r+0x4e2>
  404460:	e7b4      	b.n	4043cc <_dtoa_r+0x964>
  404462:	f000 fe33 	bl	4050cc <__multadd>
  404466:	4647      	mov	r7, r8
  404468:	4606      	mov	r6, r0
  40446a:	4683      	mov	fp, r0
  40446c:	e5be      	b.n	403fec <_dtoa_r+0x584>
  40446e:	4601      	mov	r1, r0
  404470:	4620      	mov	r0, r4
  404472:	9306      	str	r3, [sp, #24]
  404474:	f000 fe20 	bl	4050b8 <_Bfree>
  404478:	2201      	movs	r2, #1
  40447a:	9b06      	ldr	r3, [sp, #24]
  40447c:	e5e0      	b.n	404040 <_dtoa_r+0x5d8>
  40447e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404480:	2b02      	cmp	r3, #2
  404482:	f77f ad96 	ble.w	403fb2 <_dtoa_r+0x54a>
  404486:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404488:	2b00      	cmp	r3, #0
  40448a:	d1c9      	bne.n	404420 <_dtoa_r+0x9b8>
  40448c:	4641      	mov	r1, r8
  40448e:	2205      	movs	r2, #5
  404490:	4620      	mov	r0, r4
  404492:	f000 fe1b 	bl	4050cc <__multadd>
  404496:	4601      	mov	r1, r0
  404498:	4680      	mov	r8, r0
  40449a:	4648      	mov	r0, r9
  40449c:	f000 ffe4 	bl	405468 <__mcmp>
  4044a0:	2800      	cmp	r0, #0
  4044a2:	ddbd      	ble.n	404420 <_dtoa_r+0x9b8>
  4044a4:	9a02      	ldr	r2, [sp, #8]
  4044a6:	9904      	ldr	r1, [sp, #16]
  4044a8:	2331      	movs	r3, #49	; 0x31
  4044aa:	3201      	adds	r2, #1
  4044ac:	9202      	str	r2, [sp, #8]
  4044ae:	700b      	strb	r3, [r1, #0]
  4044b0:	1c4d      	adds	r5, r1, #1
  4044b2:	e7b9      	b.n	404428 <_dtoa_r+0x9c0>
  4044b4:	9a02      	ldr	r2, [sp, #8]
  4044b6:	3201      	adds	r2, #1
  4044b8:	9202      	str	r2, [sp, #8]
  4044ba:	9a04      	ldr	r2, [sp, #16]
  4044bc:	2331      	movs	r3, #49	; 0x31
  4044be:	7013      	strb	r3, [r2, #0]
  4044c0:	e652      	b.n	404168 <_dtoa_r+0x700>
  4044c2:	2301      	movs	r3, #1
  4044c4:	930b      	str	r3, [sp, #44]	; 0x2c
  4044c6:	e666      	b.n	404196 <_dtoa_r+0x72e>
  4044c8:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4044cc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4044ce:	e48f      	b.n	403df0 <_dtoa_r+0x388>
  4044d0:	00406ff8 	.word	0x00406ff8
  4044d4:	00406fd0 	.word	0x00406fd0
  4044d8:	3ff00000 	.word	0x3ff00000
  4044dc:	401c0000 	.word	0x401c0000
  4044e0:	3fe00000 	.word	0x3fe00000
  4044e4:	40240000 	.word	0x40240000
  4044e8:	40140000 	.word	0x40140000
  4044ec:	4650      	mov	r0, sl
  4044ee:	f7fd fcab 	bl	401e48 <__aeabi_i2d>
  4044f2:	463a      	mov	r2, r7
  4044f4:	4643      	mov	r3, r8
  4044f6:	f7fd fd0d 	bl	401f14 <__aeabi_dmul>
  4044fa:	2200      	movs	r2, #0
  4044fc:	4bc1      	ldr	r3, [pc, #772]	; (404804 <_dtoa_r+0xd9c>)
  4044fe:	f7fd fb57 	bl	401bb0 <__adddf3>
  404502:	4605      	mov	r5, r0
  404504:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404508:	4641      	mov	r1, r8
  40450a:	2200      	movs	r2, #0
  40450c:	4bbe      	ldr	r3, [pc, #760]	; (404808 <_dtoa_r+0xda0>)
  40450e:	4638      	mov	r0, r7
  404510:	f7fd fb4c 	bl	401bac <__aeabi_dsub>
  404514:	462a      	mov	r2, r5
  404516:	4633      	mov	r3, r6
  404518:	4682      	mov	sl, r0
  40451a:	468b      	mov	fp, r1
  40451c:	f001 fe30 	bl	406180 <__aeabi_dcmpgt>
  404520:	4680      	mov	r8, r0
  404522:	2800      	cmp	r0, #0
  404524:	f040 8110 	bne.w	404748 <_dtoa_r+0xce0>
  404528:	462a      	mov	r2, r5
  40452a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  40452e:	4650      	mov	r0, sl
  404530:	4659      	mov	r1, fp
  404532:	f001 fe07 	bl	406144 <__aeabi_dcmplt>
  404536:	b118      	cbz	r0, 404540 <_dtoa_r+0xad8>
  404538:	4646      	mov	r6, r8
  40453a:	e771      	b.n	404420 <_dtoa_r+0x9b8>
  40453c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404540:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  404544:	f7ff bb8a 	b.w	403c5c <_dtoa_r+0x1f4>
  404548:	9804      	ldr	r0, [sp, #16]
  40454a:	f7ff babb 	b.w	403ac4 <_dtoa_r+0x5c>
  40454e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404550:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  404552:	970c      	str	r7, [sp, #48]	; 0x30
  404554:	1afb      	subs	r3, r7, r3
  404556:	441a      	add	r2, r3
  404558:	920d      	str	r2, [sp, #52]	; 0x34
  40455a:	2700      	movs	r7, #0
  40455c:	e469      	b.n	403e32 <_dtoa_r+0x3ca>
  40455e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  404562:	f04f 0a02 	mov.w	sl, #2
  404566:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  40456a:	e657      	b.n	40421c <_dtoa_r+0x7b4>
  40456c:	2100      	movs	r1, #0
  40456e:	2301      	movs	r3, #1
  404570:	6461      	str	r1, [r4, #68]	; 0x44
  404572:	4620      	mov	r0, r4
  404574:	9325      	str	r3, [sp, #148]	; 0x94
  404576:	f000 fd79 	bl	40506c <_Balloc>
  40457a:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40457c:	9004      	str	r0, [sp, #16]
  40457e:	6420      	str	r0, [r4, #64]	; 0x40
  404580:	930a      	str	r3, [sp, #40]	; 0x28
  404582:	930f      	str	r3, [sp, #60]	; 0x3c
  404584:	e629      	b.n	4041da <_dtoa_r+0x772>
  404586:	2a00      	cmp	r2, #0
  404588:	46d0      	mov	r8, sl
  40458a:	f8cd b018 	str.w	fp, [sp, #24]
  40458e:	469a      	mov	sl, r3
  404590:	dd11      	ble.n	4045b6 <_dtoa_r+0xb4e>
  404592:	4649      	mov	r1, r9
  404594:	2201      	movs	r2, #1
  404596:	4620      	mov	r0, r4
  404598:	f000 ff14 	bl	4053c4 <__lshift>
  40459c:	4641      	mov	r1, r8
  40459e:	4681      	mov	r9, r0
  4045a0:	f000 ff62 	bl	405468 <__mcmp>
  4045a4:	2800      	cmp	r0, #0
  4045a6:	f340 8146 	ble.w	404836 <_dtoa_r+0xdce>
  4045aa:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4045ae:	f000 8106 	beq.w	4047be <_dtoa_r+0xd56>
  4045b2:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4045b6:	46b3      	mov	fp, r6
  4045b8:	f887 a000 	strb.w	sl, [r7]
  4045bc:	1c7d      	adds	r5, r7, #1
  4045be:	9e06      	ldr	r6, [sp, #24]
  4045c0:	e5d2      	b.n	404168 <_dtoa_r+0x700>
  4045c2:	d104      	bne.n	4045ce <_dtoa_r+0xb66>
  4045c4:	f01a 0f01 	tst.w	sl, #1
  4045c8:	d001      	beq.n	4045ce <_dtoa_r+0xb66>
  4045ca:	e5bd      	b.n	404148 <_dtoa_r+0x6e0>
  4045cc:	4615      	mov	r5, r2
  4045ce:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4045d2:	2b30      	cmp	r3, #48	; 0x30
  4045d4:	f105 32ff 	add.w	r2, r5, #4294967295
  4045d8:	d0f8      	beq.n	4045cc <_dtoa_r+0xb64>
  4045da:	e5c5      	b.n	404168 <_dtoa_r+0x700>
  4045dc:	9904      	ldr	r1, [sp, #16]
  4045de:	2230      	movs	r2, #48	; 0x30
  4045e0:	700a      	strb	r2, [r1, #0]
  4045e2:	9a02      	ldr	r2, [sp, #8]
  4045e4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4045e8:	3201      	adds	r2, #1
  4045ea:	9202      	str	r2, [sp, #8]
  4045ec:	f7ff bbfc 	b.w	403de8 <_dtoa_r+0x380>
  4045f0:	f000 80bb 	beq.w	40476a <_dtoa_r+0xd02>
  4045f4:	9b02      	ldr	r3, [sp, #8]
  4045f6:	425d      	negs	r5, r3
  4045f8:	4b84      	ldr	r3, [pc, #528]	; (40480c <_dtoa_r+0xda4>)
  4045fa:	f005 020f 	and.w	r2, r5, #15
  4045fe:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404602:	e9d3 2300 	ldrd	r2, r3, [r3]
  404606:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  40460a:	f7fd fc83 	bl	401f14 <__aeabi_dmul>
  40460e:	112d      	asrs	r5, r5, #4
  404610:	4607      	mov	r7, r0
  404612:	4688      	mov	r8, r1
  404614:	f000 812c 	beq.w	404870 <_dtoa_r+0xe08>
  404618:	4e7d      	ldr	r6, [pc, #500]	; (404810 <_dtoa_r+0xda8>)
  40461a:	f04f 0a02 	mov.w	sl, #2
  40461e:	07eb      	lsls	r3, r5, #31
  404620:	d509      	bpl.n	404636 <_dtoa_r+0xbce>
  404622:	4638      	mov	r0, r7
  404624:	4641      	mov	r1, r8
  404626:	e9d6 2300 	ldrd	r2, r3, [r6]
  40462a:	f7fd fc73 	bl	401f14 <__aeabi_dmul>
  40462e:	f10a 0a01 	add.w	sl, sl, #1
  404632:	4607      	mov	r7, r0
  404634:	4688      	mov	r8, r1
  404636:	106d      	asrs	r5, r5, #1
  404638:	f106 0608 	add.w	r6, r6, #8
  40463c:	d1ef      	bne.n	40461e <_dtoa_r+0xbb6>
  40463e:	e608      	b.n	404252 <_dtoa_r+0x7ea>
  404640:	6871      	ldr	r1, [r6, #4]
  404642:	4620      	mov	r0, r4
  404644:	f000 fd12 	bl	40506c <_Balloc>
  404648:	6933      	ldr	r3, [r6, #16]
  40464a:	3302      	adds	r3, #2
  40464c:	009a      	lsls	r2, r3, #2
  40464e:	4605      	mov	r5, r0
  404650:	f106 010c 	add.w	r1, r6, #12
  404654:	300c      	adds	r0, #12
  404656:	f000 fc63 	bl	404f20 <memcpy>
  40465a:	4629      	mov	r1, r5
  40465c:	2201      	movs	r2, #1
  40465e:	4620      	mov	r0, r4
  404660:	f000 feb0 	bl	4053c4 <__lshift>
  404664:	9006      	str	r0, [sp, #24]
  404666:	e4b5      	b.n	403fd4 <_dtoa_r+0x56c>
  404668:	2b39      	cmp	r3, #57	; 0x39
  40466a:	f8cd b018 	str.w	fp, [sp, #24]
  40466e:	46d0      	mov	r8, sl
  404670:	f000 80a5 	beq.w	4047be <_dtoa_r+0xd56>
  404674:	f103 0a01 	add.w	sl, r3, #1
  404678:	46b3      	mov	fp, r6
  40467a:	f887 a000 	strb.w	sl, [r7]
  40467e:	1c7d      	adds	r5, r7, #1
  404680:	9e06      	ldr	r6, [sp, #24]
  404682:	e571      	b.n	404168 <_dtoa_r+0x700>
  404684:	465a      	mov	r2, fp
  404686:	46d0      	mov	r8, sl
  404688:	46b3      	mov	fp, r6
  40468a:	469a      	mov	sl, r3
  40468c:	4616      	mov	r6, r2
  40468e:	e54f      	b.n	404130 <_dtoa_r+0x6c8>
  404690:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404692:	495e      	ldr	r1, [pc, #376]	; (40480c <_dtoa_r+0xda4>)
  404694:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404698:	462a      	mov	r2, r5
  40469a:	4633      	mov	r3, r6
  40469c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  4046a0:	f7fd fc38 	bl	401f14 <__aeabi_dmul>
  4046a4:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  4046a8:	4638      	mov	r0, r7
  4046aa:	4641      	mov	r1, r8
  4046ac:	f7fd fe44 	bl	402338 <__aeabi_d2iz>
  4046b0:	4605      	mov	r5, r0
  4046b2:	f7fd fbc9 	bl	401e48 <__aeabi_i2d>
  4046b6:	460b      	mov	r3, r1
  4046b8:	4602      	mov	r2, r0
  4046ba:	4641      	mov	r1, r8
  4046bc:	4638      	mov	r0, r7
  4046be:	f7fd fa75 	bl	401bac <__aeabi_dsub>
  4046c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4046c4:	460f      	mov	r7, r1
  4046c6:	9904      	ldr	r1, [sp, #16]
  4046c8:	3530      	adds	r5, #48	; 0x30
  4046ca:	2b01      	cmp	r3, #1
  4046cc:	700d      	strb	r5, [r1, #0]
  4046ce:	4606      	mov	r6, r0
  4046d0:	f101 0501 	add.w	r5, r1, #1
  4046d4:	d026      	beq.n	404724 <_dtoa_r+0xcbc>
  4046d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4046d8:	9a04      	ldr	r2, [sp, #16]
  4046da:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404818 <_dtoa_r+0xdb0>
  4046de:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4046e2:	4413      	add	r3, r2
  4046e4:	f04f 0a00 	mov.w	sl, #0
  4046e8:	4699      	mov	r9, r3
  4046ea:	4652      	mov	r2, sl
  4046ec:	465b      	mov	r3, fp
  4046ee:	4630      	mov	r0, r6
  4046f0:	4639      	mov	r1, r7
  4046f2:	f7fd fc0f 	bl	401f14 <__aeabi_dmul>
  4046f6:	460f      	mov	r7, r1
  4046f8:	4606      	mov	r6, r0
  4046fa:	f7fd fe1d 	bl	402338 <__aeabi_d2iz>
  4046fe:	4680      	mov	r8, r0
  404700:	f7fd fba2 	bl	401e48 <__aeabi_i2d>
  404704:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404708:	4602      	mov	r2, r0
  40470a:	460b      	mov	r3, r1
  40470c:	4630      	mov	r0, r6
  40470e:	4639      	mov	r1, r7
  404710:	f7fd fa4c 	bl	401bac <__aeabi_dsub>
  404714:	f805 8b01 	strb.w	r8, [r5], #1
  404718:	454d      	cmp	r5, r9
  40471a:	4606      	mov	r6, r0
  40471c:	460f      	mov	r7, r1
  40471e:	d1e4      	bne.n	4046ea <_dtoa_r+0xc82>
  404720:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404724:	4b3b      	ldr	r3, [pc, #236]	; (404814 <_dtoa_r+0xdac>)
  404726:	2200      	movs	r2, #0
  404728:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  40472c:	f7fd fa40 	bl	401bb0 <__adddf3>
  404730:	4632      	mov	r2, r6
  404732:	463b      	mov	r3, r7
  404734:	f001 fd06 	bl	406144 <__aeabi_dcmplt>
  404738:	2800      	cmp	r0, #0
  40473a:	d046      	beq.n	4047ca <_dtoa_r+0xd62>
  40473c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40473e:	9302      	str	r3, [sp, #8]
  404740:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404744:	f7ff bb43 	b.w	403dce <_dtoa_r+0x366>
  404748:	f04f 0800 	mov.w	r8, #0
  40474c:	4646      	mov	r6, r8
  40474e:	e6a9      	b.n	4044a4 <_dtoa_r+0xa3c>
  404750:	9b08      	ldr	r3, [sp, #32]
  404752:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  404754:	1a9d      	subs	r5, r3, r2
  404756:	2300      	movs	r3, #0
  404758:	f7ff bb71 	b.w	403e3e <_dtoa_r+0x3d6>
  40475c:	9b18      	ldr	r3, [sp, #96]	; 0x60
  40475e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404760:	9d08      	ldr	r5, [sp, #32]
  404762:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404766:	f7ff bb6a 	b.w	403e3e <_dtoa_r+0x3d6>
  40476a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  40476e:	f04f 0a02 	mov.w	sl, #2
  404772:	e56e      	b.n	404252 <_dtoa_r+0x7ea>
  404774:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404776:	2b00      	cmp	r3, #0
  404778:	f43f aeb8 	beq.w	4044ec <_dtoa_r+0xa84>
  40477c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40477e:	2b00      	cmp	r3, #0
  404780:	f77f aede 	ble.w	404540 <_dtoa_r+0xad8>
  404784:	2200      	movs	r2, #0
  404786:	4b24      	ldr	r3, [pc, #144]	; (404818 <_dtoa_r+0xdb0>)
  404788:	4638      	mov	r0, r7
  40478a:	4641      	mov	r1, r8
  40478c:	f7fd fbc2 	bl	401f14 <__aeabi_dmul>
  404790:	4607      	mov	r7, r0
  404792:	4688      	mov	r8, r1
  404794:	f10a 0001 	add.w	r0, sl, #1
  404798:	f7fd fb56 	bl	401e48 <__aeabi_i2d>
  40479c:	463a      	mov	r2, r7
  40479e:	4643      	mov	r3, r8
  4047a0:	f7fd fbb8 	bl	401f14 <__aeabi_dmul>
  4047a4:	2200      	movs	r2, #0
  4047a6:	4b17      	ldr	r3, [pc, #92]	; (404804 <_dtoa_r+0xd9c>)
  4047a8:	f7fd fa02 	bl	401bb0 <__adddf3>
  4047ac:	9a02      	ldr	r2, [sp, #8]
  4047ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047b0:	9312      	str	r3, [sp, #72]	; 0x48
  4047b2:	3a01      	subs	r2, #1
  4047b4:	4605      	mov	r5, r0
  4047b6:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4047ba:	9215      	str	r2, [sp, #84]	; 0x54
  4047bc:	e56a      	b.n	404294 <_dtoa_r+0x82c>
  4047be:	2239      	movs	r2, #57	; 0x39
  4047c0:	46b3      	mov	fp, r6
  4047c2:	703a      	strb	r2, [r7, #0]
  4047c4:	9e06      	ldr	r6, [sp, #24]
  4047c6:	1c7d      	adds	r5, r7, #1
  4047c8:	e4c0      	b.n	40414c <_dtoa_r+0x6e4>
  4047ca:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4047ce:	2000      	movs	r0, #0
  4047d0:	4910      	ldr	r1, [pc, #64]	; (404814 <_dtoa_r+0xdac>)
  4047d2:	f7fd f9eb 	bl	401bac <__aeabi_dsub>
  4047d6:	4632      	mov	r2, r6
  4047d8:	463b      	mov	r3, r7
  4047da:	f001 fcd1 	bl	406180 <__aeabi_dcmpgt>
  4047de:	b908      	cbnz	r0, 4047e4 <_dtoa_r+0xd7c>
  4047e0:	e6ae      	b.n	404540 <_dtoa_r+0xad8>
  4047e2:	4615      	mov	r5, r2
  4047e4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4047e8:	2b30      	cmp	r3, #48	; 0x30
  4047ea:	f105 32ff 	add.w	r2, r5, #4294967295
  4047ee:	d0f8      	beq.n	4047e2 <_dtoa_r+0xd7a>
  4047f0:	e5d7      	b.n	4043a2 <_dtoa_r+0x93a>
  4047f2:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4047f6:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4047f8:	9302      	str	r3, [sp, #8]
  4047fa:	f7ff bae8 	b.w	403dce <_dtoa_r+0x366>
  4047fe:	970c      	str	r7, [sp, #48]	; 0x30
  404800:	f7ff bba5 	b.w	403f4e <_dtoa_r+0x4e6>
  404804:	401c0000 	.word	0x401c0000
  404808:	40140000 	.word	0x40140000
  40480c:	00406ff8 	.word	0x00406ff8
  404810:	00406fd0 	.word	0x00406fd0
  404814:	3fe00000 	.word	0x3fe00000
  404818:	40240000 	.word	0x40240000
  40481c:	2b39      	cmp	r3, #57	; 0x39
  40481e:	f8cd b018 	str.w	fp, [sp, #24]
  404822:	46d0      	mov	r8, sl
  404824:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404828:	469a      	mov	sl, r3
  40482a:	d0c8      	beq.n	4047be <_dtoa_r+0xd56>
  40482c:	f1bb 0f00 	cmp.w	fp, #0
  404830:	f73f aebf 	bgt.w	4045b2 <_dtoa_r+0xb4a>
  404834:	e6bf      	b.n	4045b6 <_dtoa_r+0xb4e>
  404836:	f47f aebe 	bne.w	4045b6 <_dtoa_r+0xb4e>
  40483a:	f01a 0f01 	tst.w	sl, #1
  40483e:	f43f aeba 	beq.w	4045b6 <_dtoa_r+0xb4e>
  404842:	e6b2      	b.n	4045aa <_dtoa_r+0xb42>
  404844:	f04f 0800 	mov.w	r8, #0
  404848:	4646      	mov	r6, r8
  40484a:	e5e9      	b.n	404420 <_dtoa_r+0x9b8>
  40484c:	4631      	mov	r1, r6
  40484e:	2300      	movs	r3, #0
  404850:	220a      	movs	r2, #10
  404852:	4620      	mov	r0, r4
  404854:	f000 fc3a 	bl	4050cc <__multadd>
  404858:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40485a:	2b00      	cmp	r3, #0
  40485c:	4606      	mov	r6, r0
  40485e:	dd0a      	ble.n	404876 <_dtoa_r+0xe0e>
  404860:	930a      	str	r3, [sp, #40]	; 0x28
  404862:	f7ff bbaa 	b.w	403fba <_dtoa_r+0x552>
  404866:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404868:	2b02      	cmp	r3, #2
  40486a:	dc23      	bgt.n	4048b4 <_dtoa_r+0xe4c>
  40486c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40486e:	e43b      	b.n	4040e8 <_dtoa_r+0x680>
  404870:	f04f 0a02 	mov.w	sl, #2
  404874:	e4ed      	b.n	404252 <_dtoa_r+0x7ea>
  404876:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404878:	2b02      	cmp	r3, #2
  40487a:	dc1b      	bgt.n	4048b4 <_dtoa_r+0xe4c>
  40487c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40487e:	e7ef      	b.n	404860 <_dtoa_r+0xdf8>
  404880:	2500      	movs	r5, #0
  404882:	6465      	str	r5, [r4, #68]	; 0x44
  404884:	4629      	mov	r1, r5
  404886:	4620      	mov	r0, r4
  404888:	f000 fbf0 	bl	40506c <_Balloc>
  40488c:	f04f 33ff 	mov.w	r3, #4294967295
  404890:	930a      	str	r3, [sp, #40]	; 0x28
  404892:	930f      	str	r3, [sp, #60]	; 0x3c
  404894:	2301      	movs	r3, #1
  404896:	9004      	str	r0, [sp, #16]
  404898:	9525      	str	r5, [sp, #148]	; 0x94
  40489a:	6420      	str	r0, [r4, #64]	; 0x40
  40489c:	930b      	str	r3, [sp, #44]	; 0x2c
  40489e:	f7ff b9dd 	b.w	403c5c <_dtoa_r+0x1f4>
  4048a2:	2501      	movs	r5, #1
  4048a4:	f7ff b9a5 	b.w	403bf2 <_dtoa_r+0x18a>
  4048a8:	f43f ab69 	beq.w	403f7e <_dtoa_r+0x516>
  4048ac:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4048b0:	f7ff bbf9 	b.w	4040a6 <_dtoa_r+0x63e>
  4048b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4048b6:	930a      	str	r3, [sp, #40]	; 0x28
  4048b8:	e5e5      	b.n	404486 <_dtoa_r+0xa1e>
  4048ba:	bf00      	nop

004048bc <__libc_fini_array>:
  4048bc:	b538      	push	{r3, r4, r5, lr}
  4048be:	4c0a      	ldr	r4, [pc, #40]	; (4048e8 <__libc_fini_array+0x2c>)
  4048c0:	4d0a      	ldr	r5, [pc, #40]	; (4048ec <__libc_fini_array+0x30>)
  4048c2:	1b64      	subs	r4, r4, r5
  4048c4:	10a4      	asrs	r4, r4, #2
  4048c6:	d00a      	beq.n	4048de <__libc_fini_array+0x22>
  4048c8:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4048cc:	3b01      	subs	r3, #1
  4048ce:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4048d2:	3c01      	subs	r4, #1
  4048d4:	f855 3904 	ldr.w	r3, [r5], #-4
  4048d8:	4798      	blx	r3
  4048da:	2c00      	cmp	r4, #0
  4048dc:	d1f9      	bne.n	4048d2 <__libc_fini_array+0x16>
  4048de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4048e2:	f002 bc87 	b.w	4071f4 <_fini>
  4048e6:	bf00      	nop
  4048e8:	00407204 	.word	0x00407204
  4048ec:	00407200 	.word	0x00407200

004048f0 <_localeconv_r>:
  4048f0:	4a04      	ldr	r2, [pc, #16]	; (404904 <_localeconv_r+0x14>)
  4048f2:	4b05      	ldr	r3, [pc, #20]	; (404908 <_localeconv_r+0x18>)
  4048f4:	6812      	ldr	r2, [r2, #0]
  4048f6:	6b50      	ldr	r0, [r2, #52]	; 0x34
  4048f8:	2800      	cmp	r0, #0
  4048fa:	bf08      	it	eq
  4048fc:	4618      	moveq	r0, r3
  4048fe:	30f0      	adds	r0, #240	; 0xf0
  404900:	4770      	bx	lr
  404902:	bf00      	nop
  404904:	20400028 	.word	0x20400028
  404908:	2040086c 	.word	0x2040086c

0040490c <__retarget_lock_acquire_recursive>:
  40490c:	4770      	bx	lr
  40490e:	bf00      	nop

00404910 <__retarget_lock_release_recursive>:
  404910:	4770      	bx	lr
  404912:	bf00      	nop

00404914 <_malloc_r>:
  404914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404918:	f101 060b 	add.w	r6, r1, #11
  40491c:	2e16      	cmp	r6, #22
  40491e:	b083      	sub	sp, #12
  404920:	4605      	mov	r5, r0
  404922:	f240 809e 	bls.w	404a62 <_malloc_r+0x14e>
  404926:	f036 0607 	bics.w	r6, r6, #7
  40492a:	f100 80bd 	bmi.w	404aa8 <_malloc_r+0x194>
  40492e:	42b1      	cmp	r1, r6
  404930:	f200 80ba 	bhi.w	404aa8 <_malloc_r+0x194>
  404934:	f000 fb8e 	bl	405054 <__malloc_lock>
  404938:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40493c:	f0c0 8293 	bcc.w	404e66 <_malloc_r+0x552>
  404940:	0a73      	lsrs	r3, r6, #9
  404942:	f000 80b8 	beq.w	404ab6 <_malloc_r+0x1a2>
  404946:	2b04      	cmp	r3, #4
  404948:	f200 8179 	bhi.w	404c3e <_malloc_r+0x32a>
  40494c:	09b3      	lsrs	r3, r6, #6
  40494e:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404952:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404956:	00c3      	lsls	r3, r0, #3
  404958:	4fbf      	ldr	r7, [pc, #764]	; (404c58 <_malloc_r+0x344>)
  40495a:	443b      	add	r3, r7
  40495c:	f1a3 0108 	sub.w	r1, r3, #8
  404960:	685c      	ldr	r4, [r3, #4]
  404962:	42a1      	cmp	r1, r4
  404964:	d106      	bne.n	404974 <_malloc_r+0x60>
  404966:	e00c      	b.n	404982 <_malloc_r+0x6e>
  404968:	2a00      	cmp	r2, #0
  40496a:	f280 80aa 	bge.w	404ac2 <_malloc_r+0x1ae>
  40496e:	68e4      	ldr	r4, [r4, #12]
  404970:	42a1      	cmp	r1, r4
  404972:	d006      	beq.n	404982 <_malloc_r+0x6e>
  404974:	6863      	ldr	r3, [r4, #4]
  404976:	f023 0303 	bic.w	r3, r3, #3
  40497a:	1b9a      	subs	r2, r3, r6
  40497c:	2a0f      	cmp	r2, #15
  40497e:	ddf3      	ble.n	404968 <_malloc_r+0x54>
  404980:	4670      	mov	r0, lr
  404982:	693c      	ldr	r4, [r7, #16]
  404984:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404c6c <_malloc_r+0x358>
  404988:	4574      	cmp	r4, lr
  40498a:	f000 81ab 	beq.w	404ce4 <_malloc_r+0x3d0>
  40498e:	6863      	ldr	r3, [r4, #4]
  404990:	f023 0303 	bic.w	r3, r3, #3
  404994:	1b9a      	subs	r2, r3, r6
  404996:	2a0f      	cmp	r2, #15
  404998:	f300 8190 	bgt.w	404cbc <_malloc_r+0x3a8>
  40499c:	2a00      	cmp	r2, #0
  40499e:	f8c7 e014 	str.w	lr, [r7, #20]
  4049a2:	f8c7 e010 	str.w	lr, [r7, #16]
  4049a6:	f280 809d 	bge.w	404ae4 <_malloc_r+0x1d0>
  4049aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4049ae:	f080 8161 	bcs.w	404c74 <_malloc_r+0x360>
  4049b2:	08db      	lsrs	r3, r3, #3
  4049b4:	f103 0c01 	add.w	ip, r3, #1
  4049b8:	1099      	asrs	r1, r3, #2
  4049ba:	687a      	ldr	r2, [r7, #4]
  4049bc:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4049c0:	f8c4 8008 	str.w	r8, [r4, #8]
  4049c4:	2301      	movs	r3, #1
  4049c6:	408b      	lsls	r3, r1
  4049c8:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4049cc:	4313      	orrs	r3, r2
  4049ce:	3908      	subs	r1, #8
  4049d0:	60e1      	str	r1, [r4, #12]
  4049d2:	607b      	str	r3, [r7, #4]
  4049d4:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  4049d8:	f8c8 400c 	str.w	r4, [r8, #12]
  4049dc:	1082      	asrs	r2, r0, #2
  4049de:	2401      	movs	r4, #1
  4049e0:	4094      	lsls	r4, r2
  4049e2:	429c      	cmp	r4, r3
  4049e4:	f200 808b 	bhi.w	404afe <_malloc_r+0x1ea>
  4049e8:	421c      	tst	r4, r3
  4049ea:	d106      	bne.n	4049fa <_malloc_r+0xe6>
  4049ec:	f020 0003 	bic.w	r0, r0, #3
  4049f0:	0064      	lsls	r4, r4, #1
  4049f2:	421c      	tst	r4, r3
  4049f4:	f100 0004 	add.w	r0, r0, #4
  4049f8:	d0fa      	beq.n	4049f0 <_malloc_r+0xdc>
  4049fa:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  4049fe:	46cc      	mov	ip, r9
  404a00:	4680      	mov	r8, r0
  404a02:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404a06:	459c      	cmp	ip, r3
  404a08:	d107      	bne.n	404a1a <_malloc_r+0x106>
  404a0a:	e16d      	b.n	404ce8 <_malloc_r+0x3d4>
  404a0c:	2a00      	cmp	r2, #0
  404a0e:	f280 817b 	bge.w	404d08 <_malloc_r+0x3f4>
  404a12:	68db      	ldr	r3, [r3, #12]
  404a14:	459c      	cmp	ip, r3
  404a16:	f000 8167 	beq.w	404ce8 <_malloc_r+0x3d4>
  404a1a:	6859      	ldr	r1, [r3, #4]
  404a1c:	f021 0103 	bic.w	r1, r1, #3
  404a20:	1b8a      	subs	r2, r1, r6
  404a22:	2a0f      	cmp	r2, #15
  404a24:	ddf2      	ble.n	404a0c <_malloc_r+0xf8>
  404a26:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404a2a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404a2e:	9300      	str	r3, [sp, #0]
  404a30:	199c      	adds	r4, r3, r6
  404a32:	4628      	mov	r0, r5
  404a34:	f046 0601 	orr.w	r6, r6, #1
  404a38:	f042 0501 	orr.w	r5, r2, #1
  404a3c:	605e      	str	r6, [r3, #4]
  404a3e:	f8c8 c00c 	str.w	ip, [r8, #12]
  404a42:	f8cc 8008 	str.w	r8, [ip, #8]
  404a46:	617c      	str	r4, [r7, #20]
  404a48:	613c      	str	r4, [r7, #16]
  404a4a:	f8c4 e00c 	str.w	lr, [r4, #12]
  404a4e:	f8c4 e008 	str.w	lr, [r4, #8]
  404a52:	6065      	str	r5, [r4, #4]
  404a54:	505a      	str	r2, [r3, r1]
  404a56:	f000 fb03 	bl	405060 <__malloc_unlock>
  404a5a:	9b00      	ldr	r3, [sp, #0]
  404a5c:	f103 0408 	add.w	r4, r3, #8
  404a60:	e01e      	b.n	404aa0 <_malloc_r+0x18c>
  404a62:	2910      	cmp	r1, #16
  404a64:	d820      	bhi.n	404aa8 <_malloc_r+0x194>
  404a66:	f000 faf5 	bl	405054 <__malloc_lock>
  404a6a:	2610      	movs	r6, #16
  404a6c:	2318      	movs	r3, #24
  404a6e:	2002      	movs	r0, #2
  404a70:	4f79      	ldr	r7, [pc, #484]	; (404c58 <_malloc_r+0x344>)
  404a72:	443b      	add	r3, r7
  404a74:	f1a3 0208 	sub.w	r2, r3, #8
  404a78:	685c      	ldr	r4, [r3, #4]
  404a7a:	4294      	cmp	r4, r2
  404a7c:	f000 813d 	beq.w	404cfa <_malloc_r+0x3e6>
  404a80:	6863      	ldr	r3, [r4, #4]
  404a82:	68e1      	ldr	r1, [r4, #12]
  404a84:	68a6      	ldr	r6, [r4, #8]
  404a86:	f023 0303 	bic.w	r3, r3, #3
  404a8a:	4423      	add	r3, r4
  404a8c:	4628      	mov	r0, r5
  404a8e:	685a      	ldr	r2, [r3, #4]
  404a90:	60f1      	str	r1, [r6, #12]
  404a92:	f042 0201 	orr.w	r2, r2, #1
  404a96:	608e      	str	r6, [r1, #8]
  404a98:	605a      	str	r2, [r3, #4]
  404a9a:	f000 fae1 	bl	405060 <__malloc_unlock>
  404a9e:	3408      	adds	r4, #8
  404aa0:	4620      	mov	r0, r4
  404aa2:	b003      	add	sp, #12
  404aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404aa8:	2400      	movs	r4, #0
  404aaa:	230c      	movs	r3, #12
  404aac:	4620      	mov	r0, r4
  404aae:	602b      	str	r3, [r5, #0]
  404ab0:	b003      	add	sp, #12
  404ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ab6:	2040      	movs	r0, #64	; 0x40
  404ab8:	f44f 7300 	mov.w	r3, #512	; 0x200
  404abc:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404ac0:	e74a      	b.n	404958 <_malloc_r+0x44>
  404ac2:	4423      	add	r3, r4
  404ac4:	68e1      	ldr	r1, [r4, #12]
  404ac6:	685a      	ldr	r2, [r3, #4]
  404ac8:	68a6      	ldr	r6, [r4, #8]
  404aca:	f042 0201 	orr.w	r2, r2, #1
  404ace:	60f1      	str	r1, [r6, #12]
  404ad0:	4628      	mov	r0, r5
  404ad2:	608e      	str	r6, [r1, #8]
  404ad4:	605a      	str	r2, [r3, #4]
  404ad6:	f000 fac3 	bl	405060 <__malloc_unlock>
  404ada:	3408      	adds	r4, #8
  404adc:	4620      	mov	r0, r4
  404ade:	b003      	add	sp, #12
  404ae0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ae4:	4423      	add	r3, r4
  404ae6:	4628      	mov	r0, r5
  404ae8:	685a      	ldr	r2, [r3, #4]
  404aea:	f042 0201 	orr.w	r2, r2, #1
  404aee:	605a      	str	r2, [r3, #4]
  404af0:	f000 fab6 	bl	405060 <__malloc_unlock>
  404af4:	3408      	adds	r4, #8
  404af6:	4620      	mov	r0, r4
  404af8:	b003      	add	sp, #12
  404afa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404afe:	68bc      	ldr	r4, [r7, #8]
  404b00:	6863      	ldr	r3, [r4, #4]
  404b02:	f023 0803 	bic.w	r8, r3, #3
  404b06:	45b0      	cmp	r8, r6
  404b08:	d304      	bcc.n	404b14 <_malloc_r+0x200>
  404b0a:	eba8 0306 	sub.w	r3, r8, r6
  404b0e:	2b0f      	cmp	r3, #15
  404b10:	f300 8085 	bgt.w	404c1e <_malloc_r+0x30a>
  404b14:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404c70 <_malloc_r+0x35c>
  404b18:	4b50      	ldr	r3, [pc, #320]	; (404c5c <_malloc_r+0x348>)
  404b1a:	f8d9 2000 	ldr.w	r2, [r9]
  404b1e:	681b      	ldr	r3, [r3, #0]
  404b20:	3201      	adds	r2, #1
  404b22:	4433      	add	r3, r6
  404b24:	eb04 0a08 	add.w	sl, r4, r8
  404b28:	f000 8155 	beq.w	404dd6 <_malloc_r+0x4c2>
  404b2c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404b30:	330f      	adds	r3, #15
  404b32:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404b36:	f02b 0b0f 	bic.w	fp, fp, #15
  404b3a:	4659      	mov	r1, fp
  404b3c:	4628      	mov	r0, r5
  404b3e:	f000 fd8f 	bl	405660 <_sbrk_r>
  404b42:	1c41      	adds	r1, r0, #1
  404b44:	4602      	mov	r2, r0
  404b46:	f000 80fc 	beq.w	404d42 <_malloc_r+0x42e>
  404b4a:	4582      	cmp	sl, r0
  404b4c:	f200 80f7 	bhi.w	404d3e <_malloc_r+0x42a>
  404b50:	4b43      	ldr	r3, [pc, #268]	; (404c60 <_malloc_r+0x34c>)
  404b52:	6819      	ldr	r1, [r3, #0]
  404b54:	4459      	add	r1, fp
  404b56:	6019      	str	r1, [r3, #0]
  404b58:	f000 814d 	beq.w	404df6 <_malloc_r+0x4e2>
  404b5c:	f8d9 0000 	ldr.w	r0, [r9]
  404b60:	3001      	adds	r0, #1
  404b62:	bf1b      	ittet	ne
  404b64:	eba2 0a0a 	subne.w	sl, r2, sl
  404b68:	4451      	addne	r1, sl
  404b6a:	f8c9 2000 	streq.w	r2, [r9]
  404b6e:	6019      	strne	r1, [r3, #0]
  404b70:	f012 0107 	ands.w	r1, r2, #7
  404b74:	f000 8115 	beq.w	404da2 <_malloc_r+0x48e>
  404b78:	f1c1 0008 	rsb	r0, r1, #8
  404b7c:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404b80:	4402      	add	r2, r0
  404b82:	3108      	adds	r1, #8
  404b84:	eb02 090b 	add.w	r9, r2, fp
  404b88:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404b8c:	eba1 0909 	sub.w	r9, r1, r9
  404b90:	4649      	mov	r1, r9
  404b92:	4628      	mov	r0, r5
  404b94:	9301      	str	r3, [sp, #4]
  404b96:	9200      	str	r2, [sp, #0]
  404b98:	f000 fd62 	bl	405660 <_sbrk_r>
  404b9c:	1c43      	adds	r3, r0, #1
  404b9e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404ba2:	f000 8143 	beq.w	404e2c <_malloc_r+0x518>
  404ba6:	1a80      	subs	r0, r0, r2
  404ba8:	4448      	add	r0, r9
  404baa:	f040 0001 	orr.w	r0, r0, #1
  404bae:	6819      	ldr	r1, [r3, #0]
  404bb0:	60ba      	str	r2, [r7, #8]
  404bb2:	4449      	add	r1, r9
  404bb4:	42bc      	cmp	r4, r7
  404bb6:	6050      	str	r0, [r2, #4]
  404bb8:	6019      	str	r1, [r3, #0]
  404bba:	d017      	beq.n	404bec <_malloc_r+0x2d8>
  404bbc:	f1b8 0f0f 	cmp.w	r8, #15
  404bc0:	f240 80fb 	bls.w	404dba <_malloc_r+0x4a6>
  404bc4:	6860      	ldr	r0, [r4, #4]
  404bc6:	f1a8 020c 	sub.w	r2, r8, #12
  404bca:	f022 0207 	bic.w	r2, r2, #7
  404bce:	eb04 0e02 	add.w	lr, r4, r2
  404bd2:	f000 0001 	and.w	r0, r0, #1
  404bd6:	f04f 0c05 	mov.w	ip, #5
  404bda:	4310      	orrs	r0, r2
  404bdc:	2a0f      	cmp	r2, #15
  404bde:	6060      	str	r0, [r4, #4]
  404be0:	f8ce c004 	str.w	ip, [lr, #4]
  404be4:	f8ce c008 	str.w	ip, [lr, #8]
  404be8:	f200 8117 	bhi.w	404e1a <_malloc_r+0x506>
  404bec:	4b1d      	ldr	r3, [pc, #116]	; (404c64 <_malloc_r+0x350>)
  404bee:	68bc      	ldr	r4, [r7, #8]
  404bf0:	681a      	ldr	r2, [r3, #0]
  404bf2:	4291      	cmp	r1, r2
  404bf4:	bf88      	it	hi
  404bf6:	6019      	strhi	r1, [r3, #0]
  404bf8:	4b1b      	ldr	r3, [pc, #108]	; (404c68 <_malloc_r+0x354>)
  404bfa:	681a      	ldr	r2, [r3, #0]
  404bfc:	4291      	cmp	r1, r2
  404bfe:	6862      	ldr	r2, [r4, #4]
  404c00:	bf88      	it	hi
  404c02:	6019      	strhi	r1, [r3, #0]
  404c04:	f022 0203 	bic.w	r2, r2, #3
  404c08:	4296      	cmp	r6, r2
  404c0a:	eba2 0306 	sub.w	r3, r2, r6
  404c0e:	d801      	bhi.n	404c14 <_malloc_r+0x300>
  404c10:	2b0f      	cmp	r3, #15
  404c12:	dc04      	bgt.n	404c1e <_malloc_r+0x30a>
  404c14:	4628      	mov	r0, r5
  404c16:	f000 fa23 	bl	405060 <__malloc_unlock>
  404c1a:	2400      	movs	r4, #0
  404c1c:	e740      	b.n	404aa0 <_malloc_r+0x18c>
  404c1e:	19a2      	adds	r2, r4, r6
  404c20:	f043 0301 	orr.w	r3, r3, #1
  404c24:	f046 0601 	orr.w	r6, r6, #1
  404c28:	6066      	str	r6, [r4, #4]
  404c2a:	4628      	mov	r0, r5
  404c2c:	60ba      	str	r2, [r7, #8]
  404c2e:	6053      	str	r3, [r2, #4]
  404c30:	f000 fa16 	bl	405060 <__malloc_unlock>
  404c34:	3408      	adds	r4, #8
  404c36:	4620      	mov	r0, r4
  404c38:	b003      	add	sp, #12
  404c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404c3e:	2b14      	cmp	r3, #20
  404c40:	d971      	bls.n	404d26 <_malloc_r+0x412>
  404c42:	2b54      	cmp	r3, #84	; 0x54
  404c44:	f200 80a3 	bhi.w	404d8e <_malloc_r+0x47a>
  404c48:	0b33      	lsrs	r3, r6, #12
  404c4a:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404c4e:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404c52:	00c3      	lsls	r3, r0, #3
  404c54:	e680      	b.n	404958 <_malloc_r+0x44>
  404c56:	bf00      	nop
  404c58:	2040045c 	.word	0x2040045c
  404c5c:	20400cc8 	.word	0x20400cc8
  404c60:	20400c98 	.word	0x20400c98
  404c64:	20400cc0 	.word	0x20400cc0
  404c68:	20400cc4 	.word	0x20400cc4
  404c6c:	20400464 	.word	0x20400464
  404c70:	20400864 	.word	0x20400864
  404c74:	0a5a      	lsrs	r2, r3, #9
  404c76:	2a04      	cmp	r2, #4
  404c78:	d95b      	bls.n	404d32 <_malloc_r+0x41e>
  404c7a:	2a14      	cmp	r2, #20
  404c7c:	f200 80ae 	bhi.w	404ddc <_malloc_r+0x4c8>
  404c80:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404c84:	00c9      	lsls	r1, r1, #3
  404c86:	325b      	adds	r2, #91	; 0x5b
  404c88:	eb07 0c01 	add.w	ip, r7, r1
  404c8c:	5879      	ldr	r1, [r7, r1]
  404c8e:	f1ac 0c08 	sub.w	ip, ip, #8
  404c92:	458c      	cmp	ip, r1
  404c94:	f000 8088 	beq.w	404da8 <_malloc_r+0x494>
  404c98:	684a      	ldr	r2, [r1, #4]
  404c9a:	f022 0203 	bic.w	r2, r2, #3
  404c9e:	4293      	cmp	r3, r2
  404ca0:	d273      	bcs.n	404d8a <_malloc_r+0x476>
  404ca2:	6889      	ldr	r1, [r1, #8]
  404ca4:	458c      	cmp	ip, r1
  404ca6:	d1f7      	bne.n	404c98 <_malloc_r+0x384>
  404ca8:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404cac:	687b      	ldr	r3, [r7, #4]
  404cae:	60e2      	str	r2, [r4, #12]
  404cb0:	f8c4 c008 	str.w	ip, [r4, #8]
  404cb4:	6094      	str	r4, [r2, #8]
  404cb6:	f8cc 400c 	str.w	r4, [ip, #12]
  404cba:	e68f      	b.n	4049dc <_malloc_r+0xc8>
  404cbc:	19a1      	adds	r1, r4, r6
  404cbe:	f046 0c01 	orr.w	ip, r6, #1
  404cc2:	f042 0601 	orr.w	r6, r2, #1
  404cc6:	f8c4 c004 	str.w	ip, [r4, #4]
  404cca:	4628      	mov	r0, r5
  404ccc:	6179      	str	r1, [r7, #20]
  404cce:	6139      	str	r1, [r7, #16]
  404cd0:	f8c1 e00c 	str.w	lr, [r1, #12]
  404cd4:	f8c1 e008 	str.w	lr, [r1, #8]
  404cd8:	604e      	str	r6, [r1, #4]
  404cda:	50e2      	str	r2, [r4, r3]
  404cdc:	f000 f9c0 	bl	405060 <__malloc_unlock>
  404ce0:	3408      	adds	r4, #8
  404ce2:	e6dd      	b.n	404aa0 <_malloc_r+0x18c>
  404ce4:	687b      	ldr	r3, [r7, #4]
  404ce6:	e679      	b.n	4049dc <_malloc_r+0xc8>
  404ce8:	f108 0801 	add.w	r8, r8, #1
  404cec:	f018 0f03 	tst.w	r8, #3
  404cf0:	f10c 0c08 	add.w	ip, ip, #8
  404cf4:	f47f ae85 	bne.w	404a02 <_malloc_r+0xee>
  404cf8:	e02d      	b.n	404d56 <_malloc_r+0x442>
  404cfa:	68dc      	ldr	r4, [r3, #12]
  404cfc:	42a3      	cmp	r3, r4
  404cfe:	bf08      	it	eq
  404d00:	3002      	addeq	r0, #2
  404d02:	f43f ae3e 	beq.w	404982 <_malloc_r+0x6e>
  404d06:	e6bb      	b.n	404a80 <_malloc_r+0x16c>
  404d08:	4419      	add	r1, r3
  404d0a:	461c      	mov	r4, r3
  404d0c:	684a      	ldr	r2, [r1, #4]
  404d0e:	68db      	ldr	r3, [r3, #12]
  404d10:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404d14:	f042 0201 	orr.w	r2, r2, #1
  404d18:	604a      	str	r2, [r1, #4]
  404d1a:	4628      	mov	r0, r5
  404d1c:	60f3      	str	r3, [r6, #12]
  404d1e:	609e      	str	r6, [r3, #8]
  404d20:	f000 f99e 	bl	405060 <__malloc_unlock>
  404d24:	e6bc      	b.n	404aa0 <_malloc_r+0x18c>
  404d26:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404d2a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404d2e:	00c3      	lsls	r3, r0, #3
  404d30:	e612      	b.n	404958 <_malloc_r+0x44>
  404d32:	099a      	lsrs	r2, r3, #6
  404d34:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404d38:	00c9      	lsls	r1, r1, #3
  404d3a:	3238      	adds	r2, #56	; 0x38
  404d3c:	e7a4      	b.n	404c88 <_malloc_r+0x374>
  404d3e:	42bc      	cmp	r4, r7
  404d40:	d054      	beq.n	404dec <_malloc_r+0x4d8>
  404d42:	68bc      	ldr	r4, [r7, #8]
  404d44:	6862      	ldr	r2, [r4, #4]
  404d46:	f022 0203 	bic.w	r2, r2, #3
  404d4a:	e75d      	b.n	404c08 <_malloc_r+0x2f4>
  404d4c:	f859 3908 	ldr.w	r3, [r9], #-8
  404d50:	4599      	cmp	r9, r3
  404d52:	f040 8086 	bne.w	404e62 <_malloc_r+0x54e>
  404d56:	f010 0f03 	tst.w	r0, #3
  404d5a:	f100 30ff 	add.w	r0, r0, #4294967295
  404d5e:	d1f5      	bne.n	404d4c <_malloc_r+0x438>
  404d60:	687b      	ldr	r3, [r7, #4]
  404d62:	ea23 0304 	bic.w	r3, r3, r4
  404d66:	607b      	str	r3, [r7, #4]
  404d68:	0064      	lsls	r4, r4, #1
  404d6a:	429c      	cmp	r4, r3
  404d6c:	f63f aec7 	bhi.w	404afe <_malloc_r+0x1ea>
  404d70:	2c00      	cmp	r4, #0
  404d72:	f43f aec4 	beq.w	404afe <_malloc_r+0x1ea>
  404d76:	421c      	tst	r4, r3
  404d78:	4640      	mov	r0, r8
  404d7a:	f47f ae3e 	bne.w	4049fa <_malloc_r+0xe6>
  404d7e:	0064      	lsls	r4, r4, #1
  404d80:	421c      	tst	r4, r3
  404d82:	f100 0004 	add.w	r0, r0, #4
  404d86:	d0fa      	beq.n	404d7e <_malloc_r+0x46a>
  404d88:	e637      	b.n	4049fa <_malloc_r+0xe6>
  404d8a:	468c      	mov	ip, r1
  404d8c:	e78c      	b.n	404ca8 <_malloc_r+0x394>
  404d8e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404d92:	d815      	bhi.n	404dc0 <_malloc_r+0x4ac>
  404d94:	0bf3      	lsrs	r3, r6, #15
  404d96:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404d9a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404d9e:	00c3      	lsls	r3, r0, #3
  404da0:	e5da      	b.n	404958 <_malloc_r+0x44>
  404da2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404da6:	e6ed      	b.n	404b84 <_malloc_r+0x270>
  404da8:	687b      	ldr	r3, [r7, #4]
  404daa:	1092      	asrs	r2, r2, #2
  404dac:	2101      	movs	r1, #1
  404dae:	fa01 f202 	lsl.w	r2, r1, r2
  404db2:	4313      	orrs	r3, r2
  404db4:	607b      	str	r3, [r7, #4]
  404db6:	4662      	mov	r2, ip
  404db8:	e779      	b.n	404cae <_malloc_r+0x39a>
  404dba:	2301      	movs	r3, #1
  404dbc:	6053      	str	r3, [r2, #4]
  404dbe:	e729      	b.n	404c14 <_malloc_r+0x300>
  404dc0:	f240 5254 	movw	r2, #1364	; 0x554
  404dc4:	4293      	cmp	r3, r2
  404dc6:	d822      	bhi.n	404e0e <_malloc_r+0x4fa>
  404dc8:	0cb3      	lsrs	r3, r6, #18
  404dca:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404dce:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404dd2:	00c3      	lsls	r3, r0, #3
  404dd4:	e5c0      	b.n	404958 <_malloc_r+0x44>
  404dd6:	f103 0b10 	add.w	fp, r3, #16
  404dda:	e6ae      	b.n	404b3a <_malloc_r+0x226>
  404ddc:	2a54      	cmp	r2, #84	; 0x54
  404dde:	d829      	bhi.n	404e34 <_malloc_r+0x520>
  404de0:	0b1a      	lsrs	r2, r3, #12
  404de2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404de6:	00c9      	lsls	r1, r1, #3
  404de8:	326e      	adds	r2, #110	; 0x6e
  404dea:	e74d      	b.n	404c88 <_malloc_r+0x374>
  404dec:	4b20      	ldr	r3, [pc, #128]	; (404e70 <_malloc_r+0x55c>)
  404dee:	6819      	ldr	r1, [r3, #0]
  404df0:	4459      	add	r1, fp
  404df2:	6019      	str	r1, [r3, #0]
  404df4:	e6b2      	b.n	404b5c <_malloc_r+0x248>
  404df6:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404dfa:	2800      	cmp	r0, #0
  404dfc:	f47f aeae 	bne.w	404b5c <_malloc_r+0x248>
  404e00:	eb08 030b 	add.w	r3, r8, fp
  404e04:	68ba      	ldr	r2, [r7, #8]
  404e06:	f043 0301 	orr.w	r3, r3, #1
  404e0a:	6053      	str	r3, [r2, #4]
  404e0c:	e6ee      	b.n	404bec <_malloc_r+0x2d8>
  404e0e:	207f      	movs	r0, #127	; 0x7f
  404e10:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404e14:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404e18:	e59e      	b.n	404958 <_malloc_r+0x44>
  404e1a:	f104 0108 	add.w	r1, r4, #8
  404e1e:	4628      	mov	r0, r5
  404e20:	9300      	str	r3, [sp, #0]
  404e22:	f000 fe1b 	bl	405a5c <_free_r>
  404e26:	9b00      	ldr	r3, [sp, #0]
  404e28:	6819      	ldr	r1, [r3, #0]
  404e2a:	e6df      	b.n	404bec <_malloc_r+0x2d8>
  404e2c:	2001      	movs	r0, #1
  404e2e:	f04f 0900 	mov.w	r9, #0
  404e32:	e6bc      	b.n	404bae <_malloc_r+0x29a>
  404e34:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404e38:	d805      	bhi.n	404e46 <_malloc_r+0x532>
  404e3a:	0bda      	lsrs	r2, r3, #15
  404e3c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404e40:	00c9      	lsls	r1, r1, #3
  404e42:	3277      	adds	r2, #119	; 0x77
  404e44:	e720      	b.n	404c88 <_malloc_r+0x374>
  404e46:	f240 5154 	movw	r1, #1364	; 0x554
  404e4a:	428a      	cmp	r2, r1
  404e4c:	d805      	bhi.n	404e5a <_malloc_r+0x546>
  404e4e:	0c9a      	lsrs	r2, r3, #18
  404e50:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404e54:	00c9      	lsls	r1, r1, #3
  404e56:	327c      	adds	r2, #124	; 0x7c
  404e58:	e716      	b.n	404c88 <_malloc_r+0x374>
  404e5a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404e5e:	227e      	movs	r2, #126	; 0x7e
  404e60:	e712      	b.n	404c88 <_malloc_r+0x374>
  404e62:	687b      	ldr	r3, [r7, #4]
  404e64:	e780      	b.n	404d68 <_malloc_r+0x454>
  404e66:	08f0      	lsrs	r0, r6, #3
  404e68:	f106 0308 	add.w	r3, r6, #8
  404e6c:	e600      	b.n	404a70 <_malloc_r+0x15c>
  404e6e:	bf00      	nop
  404e70:	20400c98 	.word	0x20400c98
	...

00404e80 <memchr>:
  404e80:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404e84:	2a10      	cmp	r2, #16
  404e86:	db2b      	blt.n	404ee0 <memchr+0x60>
  404e88:	f010 0f07 	tst.w	r0, #7
  404e8c:	d008      	beq.n	404ea0 <memchr+0x20>
  404e8e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404e92:	3a01      	subs	r2, #1
  404e94:	428b      	cmp	r3, r1
  404e96:	d02d      	beq.n	404ef4 <memchr+0x74>
  404e98:	f010 0f07 	tst.w	r0, #7
  404e9c:	b342      	cbz	r2, 404ef0 <memchr+0x70>
  404e9e:	d1f6      	bne.n	404e8e <memchr+0xe>
  404ea0:	b4f0      	push	{r4, r5, r6, r7}
  404ea2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404ea6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404eaa:	f022 0407 	bic.w	r4, r2, #7
  404eae:	f07f 0700 	mvns.w	r7, #0
  404eb2:	2300      	movs	r3, #0
  404eb4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404eb8:	3c08      	subs	r4, #8
  404eba:	ea85 0501 	eor.w	r5, r5, r1
  404ebe:	ea86 0601 	eor.w	r6, r6, r1
  404ec2:	fa85 f547 	uadd8	r5, r5, r7
  404ec6:	faa3 f587 	sel	r5, r3, r7
  404eca:	fa86 f647 	uadd8	r6, r6, r7
  404ece:	faa5 f687 	sel	r6, r5, r7
  404ed2:	b98e      	cbnz	r6, 404ef8 <memchr+0x78>
  404ed4:	d1ee      	bne.n	404eb4 <memchr+0x34>
  404ed6:	bcf0      	pop	{r4, r5, r6, r7}
  404ed8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404edc:	f002 0207 	and.w	r2, r2, #7
  404ee0:	b132      	cbz	r2, 404ef0 <memchr+0x70>
  404ee2:	f810 3b01 	ldrb.w	r3, [r0], #1
  404ee6:	3a01      	subs	r2, #1
  404ee8:	ea83 0301 	eor.w	r3, r3, r1
  404eec:	b113      	cbz	r3, 404ef4 <memchr+0x74>
  404eee:	d1f8      	bne.n	404ee2 <memchr+0x62>
  404ef0:	2000      	movs	r0, #0
  404ef2:	4770      	bx	lr
  404ef4:	3801      	subs	r0, #1
  404ef6:	4770      	bx	lr
  404ef8:	2d00      	cmp	r5, #0
  404efa:	bf06      	itte	eq
  404efc:	4635      	moveq	r5, r6
  404efe:	3803      	subeq	r0, #3
  404f00:	3807      	subne	r0, #7
  404f02:	f015 0f01 	tst.w	r5, #1
  404f06:	d107      	bne.n	404f18 <memchr+0x98>
  404f08:	3001      	adds	r0, #1
  404f0a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404f0e:	bf02      	ittt	eq
  404f10:	3001      	addeq	r0, #1
  404f12:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404f16:	3001      	addeq	r0, #1
  404f18:	bcf0      	pop	{r4, r5, r6, r7}
  404f1a:	3801      	subs	r0, #1
  404f1c:	4770      	bx	lr
  404f1e:	bf00      	nop

00404f20 <memcpy>:
  404f20:	4684      	mov	ip, r0
  404f22:	ea41 0300 	orr.w	r3, r1, r0
  404f26:	f013 0303 	ands.w	r3, r3, #3
  404f2a:	d16d      	bne.n	405008 <memcpy+0xe8>
  404f2c:	3a40      	subs	r2, #64	; 0x40
  404f2e:	d341      	bcc.n	404fb4 <memcpy+0x94>
  404f30:	f851 3b04 	ldr.w	r3, [r1], #4
  404f34:	f840 3b04 	str.w	r3, [r0], #4
  404f38:	f851 3b04 	ldr.w	r3, [r1], #4
  404f3c:	f840 3b04 	str.w	r3, [r0], #4
  404f40:	f851 3b04 	ldr.w	r3, [r1], #4
  404f44:	f840 3b04 	str.w	r3, [r0], #4
  404f48:	f851 3b04 	ldr.w	r3, [r1], #4
  404f4c:	f840 3b04 	str.w	r3, [r0], #4
  404f50:	f851 3b04 	ldr.w	r3, [r1], #4
  404f54:	f840 3b04 	str.w	r3, [r0], #4
  404f58:	f851 3b04 	ldr.w	r3, [r1], #4
  404f5c:	f840 3b04 	str.w	r3, [r0], #4
  404f60:	f851 3b04 	ldr.w	r3, [r1], #4
  404f64:	f840 3b04 	str.w	r3, [r0], #4
  404f68:	f851 3b04 	ldr.w	r3, [r1], #4
  404f6c:	f840 3b04 	str.w	r3, [r0], #4
  404f70:	f851 3b04 	ldr.w	r3, [r1], #4
  404f74:	f840 3b04 	str.w	r3, [r0], #4
  404f78:	f851 3b04 	ldr.w	r3, [r1], #4
  404f7c:	f840 3b04 	str.w	r3, [r0], #4
  404f80:	f851 3b04 	ldr.w	r3, [r1], #4
  404f84:	f840 3b04 	str.w	r3, [r0], #4
  404f88:	f851 3b04 	ldr.w	r3, [r1], #4
  404f8c:	f840 3b04 	str.w	r3, [r0], #4
  404f90:	f851 3b04 	ldr.w	r3, [r1], #4
  404f94:	f840 3b04 	str.w	r3, [r0], #4
  404f98:	f851 3b04 	ldr.w	r3, [r1], #4
  404f9c:	f840 3b04 	str.w	r3, [r0], #4
  404fa0:	f851 3b04 	ldr.w	r3, [r1], #4
  404fa4:	f840 3b04 	str.w	r3, [r0], #4
  404fa8:	f851 3b04 	ldr.w	r3, [r1], #4
  404fac:	f840 3b04 	str.w	r3, [r0], #4
  404fb0:	3a40      	subs	r2, #64	; 0x40
  404fb2:	d2bd      	bcs.n	404f30 <memcpy+0x10>
  404fb4:	3230      	adds	r2, #48	; 0x30
  404fb6:	d311      	bcc.n	404fdc <memcpy+0xbc>
  404fb8:	f851 3b04 	ldr.w	r3, [r1], #4
  404fbc:	f840 3b04 	str.w	r3, [r0], #4
  404fc0:	f851 3b04 	ldr.w	r3, [r1], #4
  404fc4:	f840 3b04 	str.w	r3, [r0], #4
  404fc8:	f851 3b04 	ldr.w	r3, [r1], #4
  404fcc:	f840 3b04 	str.w	r3, [r0], #4
  404fd0:	f851 3b04 	ldr.w	r3, [r1], #4
  404fd4:	f840 3b04 	str.w	r3, [r0], #4
  404fd8:	3a10      	subs	r2, #16
  404fda:	d2ed      	bcs.n	404fb8 <memcpy+0x98>
  404fdc:	320c      	adds	r2, #12
  404fde:	d305      	bcc.n	404fec <memcpy+0xcc>
  404fe0:	f851 3b04 	ldr.w	r3, [r1], #4
  404fe4:	f840 3b04 	str.w	r3, [r0], #4
  404fe8:	3a04      	subs	r2, #4
  404fea:	d2f9      	bcs.n	404fe0 <memcpy+0xc0>
  404fec:	3204      	adds	r2, #4
  404fee:	d008      	beq.n	405002 <memcpy+0xe2>
  404ff0:	07d2      	lsls	r2, r2, #31
  404ff2:	bf1c      	itt	ne
  404ff4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404ff8:	f800 3b01 	strbne.w	r3, [r0], #1
  404ffc:	d301      	bcc.n	405002 <memcpy+0xe2>
  404ffe:	880b      	ldrh	r3, [r1, #0]
  405000:	8003      	strh	r3, [r0, #0]
  405002:	4660      	mov	r0, ip
  405004:	4770      	bx	lr
  405006:	bf00      	nop
  405008:	2a08      	cmp	r2, #8
  40500a:	d313      	bcc.n	405034 <memcpy+0x114>
  40500c:	078b      	lsls	r3, r1, #30
  40500e:	d08d      	beq.n	404f2c <memcpy+0xc>
  405010:	f010 0303 	ands.w	r3, r0, #3
  405014:	d08a      	beq.n	404f2c <memcpy+0xc>
  405016:	f1c3 0304 	rsb	r3, r3, #4
  40501a:	1ad2      	subs	r2, r2, r3
  40501c:	07db      	lsls	r3, r3, #31
  40501e:	bf1c      	itt	ne
  405020:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405024:	f800 3b01 	strbne.w	r3, [r0], #1
  405028:	d380      	bcc.n	404f2c <memcpy+0xc>
  40502a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40502e:	f820 3b02 	strh.w	r3, [r0], #2
  405032:	e77b      	b.n	404f2c <memcpy+0xc>
  405034:	3a04      	subs	r2, #4
  405036:	d3d9      	bcc.n	404fec <memcpy+0xcc>
  405038:	3a01      	subs	r2, #1
  40503a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40503e:	f800 3b01 	strb.w	r3, [r0], #1
  405042:	d2f9      	bcs.n	405038 <memcpy+0x118>
  405044:	780b      	ldrb	r3, [r1, #0]
  405046:	7003      	strb	r3, [r0, #0]
  405048:	784b      	ldrb	r3, [r1, #1]
  40504a:	7043      	strb	r3, [r0, #1]
  40504c:	788b      	ldrb	r3, [r1, #2]
  40504e:	7083      	strb	r3, [r0, #2]
  405050:	4660      	mov	r0, ip
  405052:	4770      	bx	lr

00405054 <__malloc_lock>:
  405054:	4801      	ldr	r0, [pc, #4]	; (40505c <__malloc_lock+0x8>)
  405056:	f7ff bc59 	b.w	40490c <__retarget_lock_acquire_recursive>
  40505a:	bf00      	nop
  40505c:	20400cdc 	.word	0x20400cdc

00405060 <__malloc_unlock>:
  405060:	4801      	ldr	r0, [pc, #4]	; (405068 <__malloc_unlock+0x8>)
  405062:	f7ff bc55 	b.w	404910 <__retarget_lock_release_recursive>
  405066:	bf00      	nop
  405068:	20400cdc 	.word	0x20400cdc

0040506c <_Balloc>:
  40506c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40506e:	b570      	push	{r4, r5, r6, lr}
  405070:	4605      	mov	r5, r0
  405072:	460c      	mov	r4, r1
  405074:	b14b      	cbz	r3, 40508a <_Balloc+0x1e>
  405076:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40507a:	b180      	cbz	r0, 40509e <_Balloc+0x32>
  40507c:	6802      	ldr	r2, [r0, #0]
  40507e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  405082:	2300      	movs	r3, #0
  405084:	6103      	str	r3, [r0, #16]
  405086:	60c3      	str	r3, [r0, #12]
  405088:	bd70      	pop	{r4, r5, r6, pc}
  40508a:	2221      	movs	r2, #33	; 0x21
  40508c:	2104      	movs	r1, #4
  40508e:	f000 fc65 	bl	40595c <_calloc_r>
  405092:	64e8      	str	r0, [r5, #76]	; 0x4c
  405094:	4603      	mov	r3, r0
  405096:	2800      	cmp	r0, #0
  405098:	d1ed      	bne.n	405076 <_Balloc+0xa>
  40509a:	2000      	movs	r0, #0
  40509c:	bd70      	pop	{r4, r5, r6, pc}
  40509e:	2101      	movs	r1, #1
  4050a0:	fa01 f604 	lsl.w	r6, r1, r4
  4050a4:	1d72      	adds	r2, r6, #5
  4050a6:	4628      	mov	r0, r5
  4050a8:	0092      	lsls	r2, r2, #2
  4050aa:	f000 fc57 	bl	40595c <_calloc_r>
  4050ae:	2800      	cmp	r0, #0
  4050b0:	d0f3      	beq.n	40509a <_Balloc+0x2e>
  4050b2:	6044      	str	r4, [r0, #4]
  4050b4:	6086      	str	r6, [r0, #8]
  4050b6:	e7e4      	b.n	405082 <_Balloc+0x16>

004050b8 <_Bfree>:
  4050b8:	b131      	cbz	r1, 4050c8 <_Bfree+0x10>
  4050ba:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4050bc:	684a      	ldr	r2, [r1, #4]
  4050be:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4050c2:	6008      	str	r0, [r1, #0]
  4050c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4050c8:	4770      	bx	lr
  4050ca:	bf00      	nop

004050cc <__multadd>:
  4050cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4050ce:	690c      	ldr	r4, [r1, #16]
  4050d0:	b083      	sub	sp, #12
  4050d2:	460d      	mov	r5, r1
  4050d4:	4606      	mov	r6, r0
  4050d6:	f101 0e14 	add.w	lr, r1, #20
  4050da:	2700      	movs	r7, #0
  4050dc:	f8de 0000 	ldr.w	r0, [lr]
  4050e0:	b281      	uxth	r1, r0
  4050e2:	fb02 3301 	mla	r3, r2, r1, r3
  4050e6:	0c01      	lsrs	r1, r0, #16
  4050e8:	0c18      	lsrs	r0, r3, #16
  4050ea:	fb02 0101 	mla	r1, r2, r1, r0
  4050ee:	b29b      	uxth	r3, r3
  4050f0:	3701      	adds	r7, #1
  4050f2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4050f6:	42bc      	cmp	r4, r7
  4050f8:	f84e 3b04 	str.w	r3, [lr], #4
  4050fc:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405100:	dcec      	bgt.n	4050dc <__multadd+0x10>
  405102:	b13b      	cbz	r3, 405114 <__multadd+0x48>
  405104:	68aa      	ldr	r2, [r5, #8]
  405106:	4294      	cmp	r4, r2
  405108:	da07      	bge.n	40511a <__multadd+0x4e>
  40510a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40510e:	3401      	adds	r4, #1
  405110:	6153      	str	r3, [r2, #20]
  405112:	612c      	str	r4, [r5, #16]
  405114:	4628      	mov	r0, r5
  405116:	b003      	add	sp, #12
  405118:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40511a:	6869      	ldr	r1, [r5, #4]
  40511c:	9301      	str	r3, [sp, #4]
  40511e:	3101      	adds	r1, #1
  405120:	4630      	mov	r0, r6
  405122:	f7ff ffa3 	bl	40506c <_Balloc>
  405126:	692a      	ldr	r2, [r5, #16]
  405128:	3202      	adds	r2, #2
  40512a:	f105 010c 	add.w	r1, r5, #12
  40512e:	4607      	mov	r7, r0
  405130:	0092      	lsls	r2, r2, #2
  405132:	300c      	adds	r0, #12
  405134:	f7ff fef4 	bl	404f20 <memcpy>
  405138:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40513a:	6869      	ldr	r1, [r5, #4]
  40513c:	9b01      	ldr	r3, [sp, #4]
  40513e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405142:	6028      	str	r0, [r5, #0]
  405144:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405148:	463d      	mov	r5, r7
  40514a:	e7de      	b.n	40510a <__multadd+0x3e>

0040514c <__hi0bits>:
  40514c:	0c02      	lsrs	r2, r0, #16
  40514e:	0412      	lsls	r2, r2, #16
  405150:	4603      	mov	r3, r0
  405152:	b9b2      	cbnz	r2, 405182 <__hi0bits+0x36>
  405154:	0403      	lsls	r3, r0, #16
  405156:	2010      	movs	r0, #16
  405158:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40515c:	bf04      	itt	eq
  40515e:	021b      	lsleq	r3, r3, #8
  405160:	3008      	addeq	r0, #8
  405162:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405166:	bf04      	itt	eq
  405168:	011b      	lsleq	r3, r3, #4
  40516a:	3004      	addeq	r0, #4
  40516c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405170:	bf04      	itt	eq
  405172:	009b      	lsleq	r3, r3, #2
  405174:	3002      	addeq	r0, #2
  405176:	2b00      	cmp	r3, #0
  405178:	db02      	blt.n	405180 <__hi0bits+0x34>
  40517a:	005b      	lsls	r3, r3, #1
  40517c:	d403      	bmi.n	405186 <__hi0bits+0x3a>
  40517e:	2020      	movs	r0, #32
  405180:	4770      	bx	lr
  405182:	2000      	movs	r0, #0
  405184:	e7e8      	b.n	405158 <__hi0bits+0xc>
  405186:	3001      	adds	r0, #1
  405188:	4770      	bx	lr
  40518a:	bf00      	nop

0040518c <__lo0bits>:
  40518c:	6803      	ldr	r3, [r0, #0]
  40518e:	f013 0207 	ands.w	r2, r3, #7
  405192:	4601      	mov	r1, r0
  405194:	d007      	beq.n	4051a6 <__lo0bits+0x1a>
  405196:	07da      	lsls	r2, r3, #31
  405198:	d421      	bmi.n	4051de <__lo0bits+0x52>
  40519a:	0798      	lsls	r0, r3, #30
  40519c:	d421      	bmi.n	4051e2 <__lo0bits+0x56>
  40519e:	089b      	lsrs	r3, r3, #2
  4051a0:	600b      	str	r3, [r1, #0]
  4051a2:	2002      	movs	r0, #2
  4051a4:	4770      	bx	lr
  4051a6:	b298      	uxth	r0, r3
  4051a8:	b198      	cbz	r0, 4051d2 <__lo0bits+0x46>
  4051aa:	4610      	mov	r0, r2
  4051ac:	f013 0fff 	tst.w	r3, #255	; 0xff
  4051b0:	bf04      	itt	eq
  4051b2:	0a1b      	lsreq	r3, r3, #8
  4051b4:	3008      	addeq	r0, #8
  4051b6:	071a      	lsls	r2, r3, #28
  4051b8:	bf04      	itt	eq
  4051ba:	091b      	lsreq	r3, r3, #4
  4051bc:	3004      	addeq	r0, #4
  4051be:	079a      	lsls	r2, r3, #30
  4051c0:	bf04      	itt	eq
  4051c2:	089b      	lsreq	r3, r3, #2
  4051c4:	3002      	addeq	r0, #2
  4051c6:	07da      	lsls	r2, r3, #31
  4051c8:	d407      	bmi.n	4051da <__lo0bits+0x4e>
  4051ca:	085b      	lsrs	r3, r3, #1
  4051cc:	d104      	bne.n	4051d8 <__lo0bits+0x4c>
  4051ce:	2020      	movs	r0, #32
  4051d0:	4770      	bx	lr
  4051d2:	0c1b      	lsrs	r3, r3, #16
  4051d4:	2010      	movs	r0, #16
  4051d6:	e7e9      	b.n	4051ac <__lo0bits+0x20>
  4051d8:	3001      	adds	r0, #1
  4051da:	600b      	str	r3, [r1, #0]
  4051dc:	4770      	bx	lr
  4051de:	2000      	movs	r0, #0
  4051e0:	4770      	bx	lr
  4051e2:	085b      	lsrs	r3, r3, #1
  4051e4:	600b      	str	r3, [r1, #0]
  4051e6:	2001      	movs	r0, #1
  4051e8:	4770      	bx	lr
  4051ea:	bf00      	nop

004051ec <__i2b>:
  4051ec:	b510      	push	{r4, lr}
  4051ee:	460c      	mov	r4, r1
  4051f0:	2101      	movs	r1, #1
  4051f2:	f7ff ff3b 	bl	40506c <_Balloc>
  4051f6:	2201      	movs	r2, #1
  4051f8:	6144      	str	r4, [r0, #20]
  4051fa:	6102      	str	r2, [r0, #16]
  4051fc:	bd10      	pop	{r4, pc}
  4051fe:	bf00      	nop

00405200 <__multiply>:
  405200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405204:	690c      	ldr	r4, [r1, #16]
  405206:	6915      	ldr	r5, [r2, #16]
  405208:	42ac      	cmp	r4, r5
  40520a:	b083      	sub	sp, #12
  40520c:	468b      	mov	fp, r1
  40520e:	4616      	mov	r6, r2
  405210:	da04      	bge.n	40521c <__multiply+0x1c>
  405212:	4622      	mov	r2, r4
  405214:	46b3      	mov	fp, r6
  405216:	462c      	mov	r4, r5
  405218:	460e      	mov	r6, r1
  40521a:	4615      	mov	r5, r2
  40521c:	f8db 3008 	ldr.w	r3, [fp, #8]
  405220:	f8db 1004 	ldr.w	r1, [fp, #4]
  405224:	eb04 0805 	add.w	r8, r4, r5
  405228:	4598      	cmp	r8, r3
  40522a:	bfc8      	it	gt
  40522c:	3101      	addgt	r1, #1
  40522e:	f7ff ff1d 	bl	40506c <_Balloc>
  405232:	f100 0914 	add.w	r9, r0, #20
  405236:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40523a:	45d1      	cmp	r9, sl
  40523c:	9000      	str	r0, [sp, #0]
  40523e:	d205      	bcs.n	40524c <__multiply+0x4c>
  405240:	464b      	mov	r3, r9
  405242:	2100      	movs	r1, #0
  405244:	f843 1b04 	str.w	r1, [r3], #4
  405248:	459a      	cmp	sl, r3
  40524a:	d8fb      	bhi.n	405244 <__multiply+0x44>
  40524c:	f106 0c14 	add.w	ip, r6, #20
  405250:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405254:	f10b 0b14 	add.w	fp, fp, #20
  405258:	459c      	cmp	ip, r3
  40525a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40525e:	d24c      	bcs.n	4052fa <__multiply+0xfa>
  405260:	f8cd a004 	str.w	sl, [sp, #4]
  405264:	469a      	mov	sl, r3
  405266:	f8dc 5000 	ldr.w	r5, [ip]
  40526a:	b2af      	uxth	r7, r5
  40526c:	b1ef      	cbz	r7, 4052aa <__multiply+0xaa>
  40526e:	2100      	movs	r1, #0
  405270:	464d      	mov	r5, r9
  405272:	465e      	mov	r6, fp
  405274:	460c      	mov	r4, r1
  405276:	f856 2b04 	ldr.w	r2, [r6], #4
  40527a:	6828      	ldr	r0, [r5, #0]
  40527c:	b293      	uxth	r3, r2
  40527e:	b281      	uxth	r1, r0
  405280:	fb07 1303 	mla	r3, r7, r3, r1
  405284:	0c12      	lsrs	r2, r2, #16
  405286:	0c01      	lsrs	r1, r0, #16
  405288:	4423      	add	r3, r4
  40528a:	fb07 1102 	mla	r1, r7, r2, r1
  40528e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  405292:	b29b      	uxth	r3, r3
  405294:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  405298:	45b6      	cmp	lr, r6
  40529a:	f845 3b04 	str.w	r3, [r5], #4
  40529e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4052a2:	d8e8      	bhi.n	405276 <__multiply+0x76>
  4052a4:	602c      	str	r4, [r5, #0]
  4052a6:	f8dc 5000 	ldr.w	r5, [ip]
  4052aa:	0c2d      	lsrs	r5, r5, #16
  4052ac:	d01d      	beq.n	4052ea <__multiply+0xea>
  4052ae:	f8d9 3000 	ldr.w	r3, [r9]
  4052b2:	4648      	mov	r0, r9
  4052b4:	461c      	mov	r4, r3
  4052b6:	4659      	mov	r1, fp
  4052b8:	2200      	movs	r2, #0
  4052ba:	880e      	ldrh	r6, [r1, #0]
  4052bc:	0c24      	lsrs	r4, r4, #16
  4052be:	fb05 4406 	mla	r4, r5, r6, r4
  4052c2:	4422      	add	r2, r4
  4052c4:	b29b      	uxth	r3, r3
  4052c6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4052ca:	f840 3b04 	str.w	r3, [r0], #4
  4052ce:	f851 3b04 	ldr.w	r3, [r1], #4
  4052d2:	6804      	ldr	r4, [r0, #0]
  4052d4:	0c1b      	lsrs	r3, r3, #16
  4052d6:	b2a6      	uxth	r6, r4
  4052d8:	fb05 6303 	mla	r3, r5, r3, r6
  4052dc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  4052e0:	458e      	cmp	lr, r1
  4052e2:	ea4f 4213 	mov.w	r2, r3, lsr #16
  4052e6:	d8e8      	bhi.n	4052ba <__multiply+0xba>
  4052e8:	6003      	str	r3, [r0, #0]
  4052ea:	f10c 0c04 	add.w	ip, ip, #4
  4052ee:	45e2      	cmp	sl, ip
  4052f0:	f109 0904 	add.w	r9, r9, #4
  4052f4:	d8b7      	bhi.n	405266 <__multiply+0x66>
  4052f6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4052fa:	f1b8 0f00 	cmp.w	r8, #0
  4052fe:	dd0b      	ble.n	405318 <__multiply+0x118>
  405300:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405304:	f1aa 0a04 	sub.w	sl, sl, #4
  405308:	b11b      	cbz	r3, 405312 <__multiply+0x112>
  40530a:	e005      	b.n	405318 <__multiply+0x118>
  40530c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405310:	b913      	cbnz	r3, 405318 <__multiply+0x118>
  405312:	f1b8 0801 	subs.w	r8, r8, #1
  405316:	d1f9      	bne.n	40530c <__multiply+0x10c>
  405318:	9800      	ldr	r0, [sp, #0]
  40531a:	f8c0 8010 	str.w	r8, [r0, #16]
  40531e:	b003      	add	sp, #12
  405320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405324 <__pow5mult>:
  405324:	f012 0303 	ands.w	r3, r2, #3
  405328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40532c:	4614      	mov	r4, r2
  40532e:	4607      	mov	r7, r0
  405330:	d12e      	bne.n	405390 <__pow5mult+0x6c>
  405332:	460d      	mov	r5, r1
  405334:	10a4      	asrs	r4, r4, #2
  405336:	d01c      	beq.n	405372 <__pow5mult+0x4e>
  405338:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40533a:	b396      	cbz	r6, 4053a2 <__pow5mult+0x7e>
  40533c:	07e3      	lsls	r3, r4, #31
  40533e:	f04f 0800 	mov.w	r8, #0
  405342:	d406      	bmi.n	405352 <__pow5mult+0x2e>
  405344:	1064      	asrs	r4, r4, #1
  405346:	d014      	beq.n	405372 <__pow5mult+0x4e>
  405348:	6830      	ldr	r0, [r6, #0]
  40534a:	b1a8      	cbz	r0, 405378 <__pow5mult+0x54>
  40534c:	4606      	mov	r6, r0
  40534e:	07e3      	lsls	r3, r4, #31
  405350:	d5f8      	bpl.n	405344 <__pow5mult+0x20>
  405352:	4632      	mov	r2, r6
  405354:	4629      	mov	r1, r5
  405356:	4638      	mov	r0, r7
  405358:	f7ff ff52 	bl	405200 <__multiply>
  40535c:	b1b5      	cbz	r5, 40538c <__pow5mult+0x68>
  40535e:	686a      	ldr	r2, [r5, #4]
  405360:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405362:	1064      	asrs	r4, r4, #1
  405364:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405368:	6029      	str	r1, [r5, #0]
  40536a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40536e:	4605      	mov	r5, r0
  405370:	d1ea      	bne.n	405348 <__pow5mult+0x24>
  405372:	4628      	mov	r0, r5
  405374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405378:	4632      	mov	r2, r6
  40537a:	4631      	mov	r1, r6
  40537c:	4638      	mov	r0, r7
  40537e:	f7ff ff3f 	bl	405200 <__multiply>
  405382:	6030      	str	r0, [r6, #0]
  405384:	f8c0 8000 	str.w	r8, [r0]
  405388:	4606      	mov	r6, r0
  40538a:	e7e0      	b.n	40534e <__pow5mult+0x2a>
  40538c:	4605      	mov	r5, r0
  40538e:	e7d9      	b.n	405344 <__pow5mult+0x20>
  405390:	1e5a      	subs	r2, r3, #1
  405392:	4d0b      	ldr	r5, [pc, #44]	; (4053c0 <__pow5mult+0x9c>)
  405394:	2300      	movs	r3, #0
  405396:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40539a:	f7ff fe97 	bl	4050cc <__multadd>
  40539e:	4605      	mov	r5, r0
  4053a0:	e7c8      	b.n	405334 <__pow5mult+0x10>
  4053a2:	2101      	movs	r1, #1
  4053a4:	4638      	mov	r0, r7
  4053a6:	f7ff fe61 	bl	40506c <_Balloc>
  4053aa:	f240 2171 	movw	r1, #625	; 0x271
  4053ae:	2201      	movs	r2, #1
  4053b0:	2300      	movs	r3, #0
  4053b2:	6141      	str	r1, [r0, #20]
  4053b4:	6102      	str	r2, [r0, #16]
  4053b6:	4606      	mov	r6, r0
  4053b8:	64b8      	str	r0, [r7, #72]	; 0x48
  4053ba:	6003      	str	r3, [r0, #0]
  4053bc:	e7be      	b.n	40533c <__pow5mult+0x18>
  4053be:	bf00      	nop
  4053c0:	004070c0 	.word	0x004070c0

004053c4 <__lshift>:
  4053c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4053c8:	4691      	mov	r9, r2
  4053ca:	690a      	ldr	r2, [r1, #16]
  4053cc:	688b      	ldr	r3, [r1, #8]
  4053ce:	ea4f 1469 	mov.w	r4, r9, asr #5
  4053d2:	eb04 0802 	add.w	r8, r4, r2
  4053d6:	f108 0501 	add.w	r5, r8, #1
  4053da:	429d      	cmp	r5, r3
  4053dc:	460e      	mov	r6, r1
  4053de:	4607      	mov	r7, r0
  4053e0:	6849      	ldr	r1, [r1, #4]
  4053e2:	dd04      	ble.n	4053ee <__lshift+0x2a>
  4053e4:	005b      	lsls	r3, r3, #1
  4053e6:	429d      	cmp	r5, r3
  4053e8:	f101 0101 	add.w	r1, r1, #1
  4053ec:	dcfa      	bgt.n	4053e4 <__lshift+0x20>
  4053ee:	4638      	mov	r0, r7
  4053f0:	f7ff fe3c 	bl	40506c <_Balloc>
  4053f4:	2c00      	cmp	r4, #0
  4053f6:	f100 0314 	add.w	r3, r0, #20
  4053fa:	dd06      	ble.n	40540a <__lshift+0x46>
  4053fc:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405400:	2100      	movs	r1, #0
  405402:	f843 1b04 	str.w	r1, [r3], #4
  405406:	429a      	cmp	r2, r3
  405408:	d1fb      	bne.n	405402 <__lshift+0x3e>
  40540a:	6934      	ldr	r4, [r6, #16]
  40540c:	f106 0114 	add.w	r1, r6, #20
  405410:	f019 091f 	ands.w	r9, r9, #31
  405414:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405418:	d01d      	beq.n	405456 <__lshift+0x92>
  40541a:	f1c9 0c20 	rsb	ip, r9, #32
  40541e:	2200      	movs	r2, #0
  405420:	680c      	ldr	r4, [r1, #0]
  405422:	fa04 f409 	lsl.w	r4, r4, r9
  405426:	4314      	orrs	r4, r2
  405428:	f843 4b04 	str.w	r4, [r3], #4
  40542c:	f851 2b04 	ldr.w	r2, [r1], #4
  405430:	458e      	cmp	lr, r1
  405432:	fa22 f20c 	lsr.w	r2, r2, ip
  405436:	d8f3      	bhi.n	405420 <__lshift+0x5c>
  405438:	601a      	str	r2, [r3, #0]
  40543a:	b10a      	cbz	r2, 405440 <__lshift+0x7c>
  40543c:	f108 0502 	add.w	r5, r8, #2
  405440:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405442:	6872      	ldr	r2, [r6, #4]
  405444:	3d01      	subs	r5, #1
  405446:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40544a:	6105      	str	r5, [r0, #16]
  40544c:	6031      	str	r1, [r6, #0]
  40544e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405452:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405456:	3b04      	subs	r3, #4
  405458:	f851 2b04 	ldr.w	r2, [r1], #4
  40545c:	f843 2f04 	str.w	r2, [r3, #4]!
  405460:	458e      	cmp	lr, r1
  405462:	d8f9      	bhi.n	405458 <__lshift+0x94>
  405464:	e7ec      	b.n	405440 <__lshift+0x7c>
  405466:	bf00      	nop

00405468 <__mcmp>:
  405468:	b430      	push	{r4, r5}
  40546a:	690b      	ldr	r3, [r1, #16]
  40546c:	4605      	mov	r5, r0
  40546e:	6900      	ldr	r0, [r0, #16]
  405470:	1ac0      	subs	r0, r0, r3
  405472:	d10f      	bne.n	405494 <__mcmp+0x2c>
  405474:	009b      	lsls	r3, r3, #2
  405476:	3514      	adds	r5, #20
  405478:	3114      	adds	r1, #20
  40547a:	4419      	add	r1, r3
  40547c:	442b      	add	r3, r5
  40547e:	e001      	b.n	405484 <__mcmp+0x1c>
  405480:	429d      	cmp	r5, r3
  405482:	d207      	bcs.n	405494 <__mcmp+0x2c>
  405484:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  405488:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40548c:	4294      	cmp	r4, r2
  40548e:	d0f7      	beq.n	405480 <__mcmp+0x18>
  405490:	d302      	bcc.n	405498 <__mcmp+0x30>
  405492:	2001      	movs	r0, #1
  405494:	bc30      	pop	{r4, r5}
  405496:	4770      	bx	lr
  405498:	f04f 30ff 	mov.w	r0, #4294967295
  40549c:	e7fa      	b.n	405494 <__mcmp+0x2c>
  40549e:	bf00      	nop

004054a0 <__mdiff>:
  4054a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4054a4:	690f      	ldr	r7, [r1, #16]
  4054a6:	460e      	mov	r6, r1
  4054a8:	6911      	ldr	r1, [r2, #16]
  4054aa:	1a7f      	subs	r7, r7, r1
  4054ac:	2f00      	cmp	r7, #0
  4054ae:	4690      	mov	r8, r2
  4054b0:	d117      	bne.n	4054e2 <__mdiff+0x42>
  4054b2:	0089      	lsls	r1, r1, #2
  4054b4:	f106 0514 	add.w	r5, r6, #20
  4054b8:	f102 0e14 	add.w	lr, r2, #20
  4054bc:	186b      	adds	r3, r5, r1
  4054be:	4471      	add	r1, lr
  4054c0:	e001      	b.n	4054c6 <__mdiff+0x26>
  4054c2:	429d      	cmp	r5, r3
  4054c4:	d25c      	bcs.n	405580 <__mdiff+0xe0>
  4054c6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4054ca:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4054ce:	42a2      	cmp	r2, r4
  4054d0:	d0f7      	beq.n	4054c2 <__mdiff+0x22>
  4054d2:	d25e      	bcs.n	405592 <__mdiff+0xf2>
  4054d4:	4633      	mov	r3, r6
  4054d6:	462c      	mov	r4, r5
  4054d8:	4646      	mov	r6, r8
  4054da:	4675      	mov	r5, lr
  4054dc:	4698      	mov	r8, r3
  4054de:	2701      	movs	r7, #1
  4054e0:	e005      	b.n	4054ee <__mdiff+0x4e>
  4054e2:	db58      	blt.n	405596 <__mdiff+0xf6>
  4054e4:	f106 0514 	add.w	r5, r6, #20
  4054e8:	f108 0414 	add.w	r4, r8, #20
  4054ec:	2700      	movs	r7, #0
  4054ee:	6871      	ldr	r1, [r6, #4]
  4054f0:	f7ff fdbc 	bl	40506c <_Balloc>
  4054f4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4054f8:	6936      	ldr	r6, [r6, #16]
  4054fa:	60c7      	str	r7, [r0, #12]
  4054fc:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405500:	46a6      	mov	lr, r4
  405502:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405506:	f100 0414 	add.w	r4, r0, #20
  40550a:	2300      	movs	r3, #0
  40550c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405510:	f855 8b04 	ldr.w	r8, [r5], #4
  405514:	b28a      	uxth	r2, r1
  405516:	fa13 f388 	uxtah	r3, r3, r8
  40551a:	0c09      	lsrs	r1, r1, #16
  40551c:	1a9a      	subs	r2, r3, r2
  40551e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405522:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405526:	b292      	uxth	r2, r2
  405528:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40552c:	45f4      	cmp	ip, lr
  40552e:	f844 2b04 	str.w	r2, [r4], #4
  405532:	ea4f 4323 	mov.w	r3, r3, asr #16
  405536:	d8e9      	bhi.n	40550c <__mdiff+0x6c>
  405538:	42af      	cmp	r7, r5
  40553a:	d917      	bls.n	40556c <__mdiff+0xcc>
  40553c:	46a4      	mov	ip, r4
  40553e:	46ae      	mov	lr, r5
  405540:	f85e 2b04 	ldr.w	r2, [lr], #4
  405544:	fa13 f382 	uxtah	r3, r3, r2
  405548:	1419      	asrs	r1, r3, #16
  40554a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40554e:	b29b      	uxth	r3, r3
  405550:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405554:	4577      	cmp	r7, lr
  405556:	f84c 2b04 	str.w	r2, [ip], #4
  40555a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40555e:	d8ef      	bhi.n	405540 <__mdiff+0xa0>
  405560:	43ed      	mvns	r5, r5
  405562:	442f      	add	r7, r5
  405564:	f027 0703 	bic.w	r7, r7, #3
  405568:	3704      	adds	r7, #4
  40556a:	443c      	add	r4, r7
  40556c:	3c04      	subs	r4, #4
  40556e:	b922      	cbnz	r2, 40557a <__mdiff+0xda>
  405570:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405574:	3e01      	subs	r6, #1
  405576:	2b00      	cmp	r3, #0
  405578:	d0fa      	beq.n	405570 <__mdiff+0xd0>
  40557a:	6106      	str	r6, [r0, #16]
  40557c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405580:	2100      	movs	r1, #0
  405582:	f7ff fd73 	bl	40506c <_Balloc>
  405586:	2201      	movs	r2, #1
  405588:	2300      	movs	r3, #0
  40558a:	6102      	str	r2, [r0, #16]
  40558c:	6143      	str	r3, [r0, #20]
  40558e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405592:	4674      	mov	r4, lr
  405594:	e7ab      	b.n	4054ee <__mdiff+0x4e>
  405596:	4633      	mov	r3, r6
  405598:	f106 0414 	add.w	r4, r6, #20
  40559c:	f102 0514 	add.w	r5, r2, #20
  4055a0:	4616      	mov	r6, r2
  4055a2:	2701      	movs	r7, #1
  4055a4:	4698      	mov	r8, r3
  4055a6:	e7a2      	b.n	4054ee <__mdiff+0x4e>

004055a8 <__d2b>:
  4055a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4055ac:	b082      	sub	sp, #8
  4055ae:	2101      	movs	r1, #1
  4055b0:	461c      	mov	r4, r3
  4055b2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4055b6:	4615      	mov	r5, r2
  4055b8:	9e08      	ldr	r6, [sp, #32]
  4055ba:	f7ff fd57 	bl	40506c <_Balloc>
  4055be:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4055c2:	4680      	mov	r8, r0
  4055c4:	b10f      	cbz	r7, 4055ca <__d2b+0x22>
  4055c6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4055ca:	9401      	str	r4, [sp, #4]
  4055cc:	b31d      	cbz	r5, 405616 <__d2b+0x6e>
  4055ce:	a802      	add	r0, sp, #8
  4055d0:	f840 5d08 	str.w	r5, [r0, #-8]!
  4055d4:	f7ff fdda 	bl	40518c <__lo0bits>
  4055d8:	2800      	cmp	r0, #0
  4055da:	d134      	bne.n	405646 <__d2b+0x9e>
  4055dc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4055e0:	f8c8 2014 	str.w	r2, [r8, #20]
  4055e4:	2b00      	cmp	r3, #0
  4055e6:	bf0c      	ite	eq
  4055e8:	2101      	moveq	r1, #1
  4055ea:	2102      	movne	r1, #2
  4055ec:	f8c8 3018 	str.w	r3, [r8, #24]
  4055f0:	f8c8 1010 	str.w	r1, [r8, #16]
  4055f4:	b9df      	cbnz	r7, 40562e <__d2b+0x86>
  4055f6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  4055fa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  4055fe:	6030      	str	r0, [r6, #0]
  405600:	6918      	ldr	r0, [r3, #16]
  405602:	f7ff fda3 	bl	40514c <__hi0bits>
  405606:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405608:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40560c:	6018      	str	r0, [r3, #0]
  40560e:	4640      	mov	r0, r8
  405610:	b002      	add	sp, #8
  405612:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405616:	a801      	add	r0, sp, #4
  405618:	f7ff fdb8 	bl	40518c <__lo0bits>
  40561c:	9b01      	ldr	r3, [sp, #4]
  40561e:	f8c8 3014 	str.w	r3, [r8, #20]
  405622:	2101      	movs	r1, #1
  405624:	3020      	adds	r0, #32
  405626:	f8c8 1010 	str.w	r1, [r8, #16]
  40562a:	2f00      	cmp	r7, #0
  40562c:	d0e3      	beq.n	4055f6 <__d2b+0x4e>
  40562e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405630:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405634:	4407      	add	r7, r0
  405636:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40563a:	6037      	str	r7, [r6, #0]
  40563c:	6018      	str	r0, [r3, #0]
  40563e:	4640      	mov	r0, r8
  405640:	b002      	add	sp, #8
  405642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405646:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40564a:	f1c0 0220 	rsb	r2, r0, #32
  40564e:	fa03 f202 	lsl.w	r2, r3, r2
  405652:	430a      	orrs	r2, r1
  405654:	40c3      	lsrs	r3, r0
  405656:	9301      	str	r3, [sp, #4]
  405658:	f8c8 2014 	str.w	r2, [r8, #20]
  40565c:	e7c2      	b.n	4055e4 <__d2b+0x3c>
  40565e:	bf00      	nop

00405660 <_sbrk_r>:
  405660:	b538      	push	{r3, r4, r5, lr}
  405662:	4c07      	ldr	r4, [pc, #28]	; (405680 <_sbrk_r+0x20>)
  405664:	2300      	movs	r3, #0
  405666:	4605      	mov	r5, r0
  405668:	4608      	mov	r0, r1
  40566a:	6023      	str	r3, [r4, #0]
  40566c:	f7fb ffea 	bl	401644 <_sbrk>
  405670:	1c43      	adds	r3, r0, #1
  405672:	d000      	beq.n	405676 <_sbrk_r+0x16>
  405674:	bd38      	pop	{r3, r4, r5, pc}
  405676:	6823      	ldr	r3, [r4, #0]
  405678:	2b00      	cmp	r3, #0
  40567a:	d0fb      	beq.n	405674 <_sbrk_r+0x14>
  40567c:	602b      	str	r3, [r5, #0]
  40567e:	bd38      	pop	{r3, r4, r5, pc}
  405680:	20400cf0 	.word	0x20400cf0
	...

004056c0 <strlen>:
  4056c0:	f890 f000 	pld	[r0]
  4056c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4056c8:	f020 0107 	bic.w	r1, r0, #7
  4056cc:	f06f 0c00 	mvn.w	ip, #0
  4056d0:	f010 0407 	ands.w	r4, r0, #7
  4056d4:	f891 f020 	pld	[r1, #32]
  4056d8:	f040 8049 	bne.w	40576e <strlen+0xae>
  4056dc:	f04f 0400 	mov.w	r4, #0
  4056e0:	f06f 0007 	mvn.w	r0, #7
  4056e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4056e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4056ec:	f100 0008 	add.w	r0, r0, #8
  4056f0:	fa82 f24c 	uadd8	r2, r2, ip
  4056f4:	faa4 f28c 	sel	r2, r4, ip
  4056f8:	fa83 f34c 	uadd8	r3, r3, ip
  4056fc:	faa2 f38c 	sel	r3, r2, ip
  405700:	bb4b      	cbnz	r3, 405756 <strlen+0x96>
  405702:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405706:	fa82 f24c 	uadd8	r2, r2, ip
  40570a:	f100 0008 	add.w	r0, r0, #8
  40570e:	faa4 f28c 	sel	r2, r4, ip
  405712:	fa83 f34c 	uadd8	r3, r3, ip
  405716:	faa2 f38c 	sel	r3, r2, ip
  40571a:	b9e3      	cbnz	r3, 405756 <strlen+0x96>
  40571c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405720:	fa82 f24c 	uadd8	r2, r2, ip
  405724:	f100 0008 	add.w	r0, r0, #8
  405728:	faa4 f28c 	sel	r2, r4, ip
  40572c:	fa83 f34c 	uadd8	r3, r3, ip
  405730:	faa2 f38c 	sel	r3, r2, ip
  405734:	b97b      	cbnz	r3, 405756 <strlen+0x96>
  405736:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40573a:	f101 0120 	add.w	r1, r1, #32
  40573e:	fa82 f24c 	uadd8	r2, r2, ip
  405742:	f100 0008 	add.w	r0, r0, #8
  405746:	faa4 f28c 	sel	r2, r4, ip
  40574a:	fa83 f34c 	uadd8	r3, r3, ip
  40574e:	faa2 f38c 	sel	r3, r2, ip
  405752:	2b00      	cmp	r3, #0
  405754:	d0c6      	beq.n	4056e4 <strlen+0x24>
  405756:	2a00      	cmp	r2, #0
  405758:	bf04      	itt	eq
  40575a:	3004      	addeq	r0, #4
  40575c:	461a      	moveq	r2, r3
  40575e:	ba12      	rev	r2, r2
  405760:	fab2 f282 	clz	r2, r2
  405764:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405768:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40576c:	4770      	bx	lr
  40576e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405772:	f004 0503 	and.w	r5, r4, #3
  405776:	f1c4 0000 	rsb	r0, r4, #0
  40577a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40577e:	f014 0f04 	tst.w	r4, #4
  405782:	f891 f040 	pld	[r1, #64]	; 0x40
  405786:	fa0c f505 	lsl.w	r5, ip, r5
  40578a:	ea62 0205 	orn	r2, r2, r5
  40578e:	bf1c      	itt	ne
  405790:	ea63 0305 	ornne	r3, r3, r5
  405794:	4662      	movne	r2, ip
  405796:	f04f 0400 	mov.w	r4, #0
  40579a:	e7a9      	b.n	4056f0 <strlen+0x30>

0040579c <__ssprint_r>:
  40579c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4057a0:	6893      	ldr	r3, [r2, #8]
  4057a2:	b083      	sub	sp, #12
  4057a4:	4690      	mov	r8, r2
  4057a6:	2b00      	cmp	r3, #0
  4057a8:	d070      	beq.n	40588c <__ssprint_r+0xf0>
  4057aa:	4682      	mov	sl, r0
  4057ac:	460c      	mov	r4, r1
  4057ae:	6817      	ldr	r7, [r2, #0]
  4057b0:	688d      	ldr	r5, [r1, #8]
  4057b2:	6808      	ldr	r0, [r1, #0]
  4057b4:	e042      	b.n	40583c <__ssprint_r+0xa0>
  4057b6:	89a3      	ldrh	r3, [r4, #12]
  4057b8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4057bc:	d02e      	beq.n	40581c <__ssprint_r+0x80>
  4057be:	6965      	ldr	r5, [r4, #20]
  4057c0:	6921      	ldr	r1, [r4, #16]
  4057c2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  4057c6:	eba0 0b01 	sub.w	fp, r0, r1
  4057ca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  4057ce:	f10b 0001 	add.w	r0, fp, #1
  4057d2:	106d      	asrs	r5, r5, #1
  4057d4:	4430      	add	r0, r6
  4057d6:	42a8      	cmp	r0, r5
  4057d8:	462a      	mov	r2, r5
  4057da:	bf84      	itt	hi
  4057dc:	4605      	movhi	r5, r0
  4057de:	462a      	movhi	r2, r5
  4057e0:	055b      	lsls	r3, r3, #21
  4057e2:	d538      	bpl.n	405856 <__ssprint_r+0xba>
  4057e4:	4611      	mov	r1, r2
  4057e6:	4650      	mov	r0, sl
  4057e8:	f7ff f894 	bl	404914 <_malloc_r>
  4057ec:	2800      	cmp	r0, #0
  4057ee:	d03c      	beq.n	40586a <__ssprint_r+0xce>
  4057f0:	465a      	mov	r2, fp
  4057f2:	6921      	ldr	r1, [r4, #16]
  4057f4:	9001      	str	r0, [sp, #4]
  4057f6:	f7ff fb93 	bl	404f20 <memcpy>
  4057fa:	89a2      	ldrh	r2, [r4, #12]
  4057fc:	9b01      	ldr	r3, [sp, #4]
  4057fe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405802:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405806:	81a2      	strh	r2, [r4, #12]
  405808:	eba5 020b 	sub.w	r2, r5, fp
  40580c:	eb03 000b 	add.w	r0, r3, fp
  405810:	6165      	str	r5, [r4, #20]
  405812:	6123      	str	r3, [r4, #16]
  405814:	6020      	str	r0, [r4, #0]
  405816:	60a2      	str	r2, [r4, #8]
  405818:	4635      	mov	r5, r6
  40581a:	46b3      	mov	fp, r6
  40581c:	465a      	mov	r2, fp
  40581e:	4649      	mov	r1, r9
  405820:	f000 fa18 	bl	405c54 <memmove>
  405824:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405828:	68a2      	ldr	r2, [r4, #8]
  40582a:	6820      	ldr	r0, [r4, #0]
  40582c:	1b55      	subs	r5, r2, r5
  40582e:	4458      	add	r0, fp
  405830:	1b9e      	subs	r6, r3, r6
  405832:	60a5      	str	r5, [r4, #8]
  405834:	6020      	str	r0, [r4, #0]
  405836:	f8c8 6008 	str.w	r6, [r8, #8]
  40583a:	b33e      	cbz	r6, 40588c <__ssprint_r+0xf0>
  40583c:	687e      	ldr	r6, [r7, #4]
  40583e:	463b      	mov	r3, r7
  405840:	3708      	adds	r7, #8
  405842:	2e00      	cmp	r6, #0
  405844:	d0fa      	beq.n	40583c <__ssprint_r+0xa0>
  405846:	42ae      	cmp	r6, r5
  405848:	f8d3 9000 	ldr.w	r9, [r3]
  40584c:	46ab      	mov	fp, r5
  40584e:	d2b2      	bcs.n	4057b6 <__ssprint_r+0x1a>
  405850:	4635      	mov	r5, r6
  405852:	46b3      	mov	fp, r6
  405854:	e7e2      	b.n	40581c <__ssprint_r+0x80>
  405856:	4650      	mov	r0, sl
  405858:	f000 fa60 	bl	405d1c <_realloc_r>
  40585c:	4603      	mov	r3, r0
  40585e:	2800      	cmp	r0, #0
  405860:	d1d2      	bne.n	405808 <__ssprint_r+0x6c>
  405862:	6921      	ldr	r1, [r4, #16]
  405864:	4650      	mov	r0, sl
  405866:	f000 f8f9 	bl	405a5c <_free_r>
  40586a:	230c      	movs	r3, #12
  40586c:	f8ca 3000 	str.w	r3, [sl]
  405870:	89a3      	ldrh	r3, [r4, #12]
  405872:	2200      	movs	r2, #0
  405874:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405878:	f04f 30ff 	mov.w	r0, #4294967295
  40587c:	81a3      	strh	r3, [r4, #12]
  40587e:	f8c8 2008 	str.w	r2, [r8, #8]
  405882:	f8c8 2004 	str.w	r2, [r8, #4]
  405886:	b003      	add	sp, #12
  405888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40588c:	2000      	movs	r0, #0
  40588e:	f8c8 0004 	str.w	r0, [r8, #4]
  405892:	b003      	add	sp, #12
  405894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405898 <__register_exitproc>:
  405898:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40589c:	4d2c      	ldr	r5, [pc, #176]	; (405950 <__register_exitproc+0xb8>)
  40589e:	4606      	mov	r6, r0
  4058a0:	6828      	ldr	r0, [r5, #0]
  4058a2:	4698      	mov	r8, r3
  4058a4:	460f      	mov	r7, r1
  4058a6:	4691      	mov	r9, r2
  4058a8:	f7ff f830 	bl	40490c <__retarget_lock_acquire_recursive>
  4058ac:	4b29      	ldr	r3, [pc, #164]	; (405954 <__register_exitproc+0xbc>)
  4058ae:	681c      	ldr	r4, [r3, #0]
  4058b0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4058b4:	2b00      	cmp	r3, #0
  4058b6:	d03e      	beq.n	405936 <__register_exitproc+0x9e>
  4058b8:	685a      	ldr	r2, [r3, #4]
  4058ba:	2a1f      	cmp	r2, #31
  4058bc:	dc1c      	bgt.n	4058f8 <__register_exitproc+0x60>
  4058be:	f102 0e01 	add.w	lr, r2, #1
  4058c2:	b176      	cbz	r6, 4058e2 <__register_exitproc+0x4a>
  4058c4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4058c8:	2401      	movs	r4, #1
  4058ca:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4058ce:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4058d2:	4094      	lsls	r4, r2
  4058d4:	4320      	orrs	r0, r4
  4058d6:	2e02      	cmp	r6, #2
  4058d8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4058dc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4058e0:	d023      	beq.n	40592a <__register_exitproc+0x92>
  4058e2:	3202      	adds	r2, #2
  4058e4:	f8c3 e004 	str.w	lr, [r3, #4]
  4058e8:	6828      	ldr	r0, [r5, #0]
  4058ea:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4058ee:	f7ff f80f 	bl	404910 <__retarget_lock_release_recursive>
  4058f2:	2000      	movs	r0, #0
  4058f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4058f8:	4b17      	ldr	r3, [pc, #92]	; (405958 <__register_exitproc+0xc0>)
  4058fa:	b30b      	cbz	r3, 405940 <__register_exitproc+0xa8>
  4058fc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405900:	f3af 8000 	nop.w
  405904:	4603      	mov	r3, r0
  405906:	b1d8      	cbz	r0, 405940 <__register_exitproc+0xa8>
  405908:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40590c:	6002      	str	r2, [r0, #0]
  40590e:	2100      	movs	r1, #0
  405910:	6041      	str	r1, [r0, #4]
  405912:	460a      	mov	r2, r1
  405914:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405918:	f04f 0e01 	mov.w	lr, #1
  40591c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405920:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405924:	2e00      	cmp	r6, #0
  405926:	d0dc      	beq.n	4058e2 <__register_exitproc+0x4a>
  405928:	e7cc      	b.n	4058c4 <__register_exitproc+0x2c>
  40592a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40592e:	430c      	orrs	r4, r1
  405930:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405934:	e7d5      	b.n	4058e2 <__register_exitproc+0x4a>
  405936:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40593a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40593e:	e7bb      	b.n	4058b8 <__register_exitproc+0x20>
  405940:	6828      	ldr	r0, [r5, #0]
  405942:	f7fe ffe5 	bl	404910 <__retarget_lock_release_recursive>
  405946:	f04f 30ff 	mov.w	r0, #4294967295
  40594a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40594e:	bf00      	nop
  405950:	20400458 	.word	0x20400458
  405954:	00406f54 	.word	0x00406f54
  405958:	00000000 	.word	0x00000000

0040595c <_calloc_r>:
  40595c:	b510      	push	{r4, lr}
  40595e:	fb02 f101 	mul.w	r1, r2, r1
  405962:	f7fe ffd7 	bl	404914 <_malloc_r>
  405966:	4604      	mov	r4, r0
  405968:	b1d8      	cbz	r0, 4059a2 <_calloc_r+0x46>
  40596a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40596e:	f022 0203 	bic.w	r2, r2, #3
  405972:	3a04      	subs	r2, #4
  405974:	2a24      	cmp	r2, #36	; 0x24
  405976:	d818      	bhi.n	4059aa <_calloc_r+0x4e>
  405978:	2a13      	cmp	r2, #19
  40597a:	d914      	bls.n	4059a6 <_calloc_r+0x4a>
  40597c:	2300      	movs	r3, #0
  40597e:	2a1b      	cmp	r2, #27
  405980:	6003      	str	r3, [r0, #0]
  405982:	6043      	str	r3, [r0, #4]
  405984:	d916      	bls.n	4059b4 <_calloc_r+0x58>
  405986:	2a24      	cmp	r2, #36	; 0x24
  405988:	6083      	str	r3, [r0, #8]
  40598a:	60c3      	str	r3, [r0, #12]
  40598c:	bf11      	iteee	ne
  40598e:	f100 0210 	addne.w	r2, r0, #16
  405992:	6103      	streq	r3, [r0, #16]
  405994:	6143      	streq	r3, [r0, #20]
  405996:	f100 0218 	addeq.w	r2, r0, #24
  40599a:	2300      	movs	r3, #0
  40599c:	6013      	str	r3, [r2, #0]
  40599e:	6053      	str	r3, [r2, #4]
  4059a0:	6093      	str	r3, [r2, #8]
  4059a2:	4620      	mov	r0, r4
  4059a4:	bd10      	pop	{r4, pc}
  4059a6:	4602      	mov	r2, r0
  4059a8:	e7f7      	b.n	40599a <_calloc_r+0x3e>
  4059aa:	2100      	movs	r1, #0
  4059ac:	f7fc fd14 	bl	4023d8 <memset>
  4059b0:	4620      	mov	r0, r4
  4059b2:	bd10      	pop	{r4, pc}
  4059b4:	f100 0208 	add.w	r2, r0, #8
  4059b8:	e7ef      	b.n	40599a <_calloc_r+0x3e>
  4059ba:	bf00      	nop

004059bc <_malloc_trim_r>:
  4059bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4059be:	4f24      	ldr	r7, [pc, #144]	; (405a50 <_malloc_trim_r+0x94>)
  4059c0:	460c      	mov	r4, r1
  4059c2:	4606      	mov	r6, r0
  4059c4:	f7ff fb46 	bl	405054 <__malloc_lock>
  4059c8:	68bb      	ldr	r3, [r7, #8]
  4059ca:	685d      	ldr	r5, [r3, #4]
  4059cc:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4059d0:	310f      	adds	r1, #15
  4059d2:	f025 0503 	bic.w	r5, r5, #3
  4059d6:	4429      	add	r1, r5
  4059d8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4059dc:	f021 010f 	bic.w	r1, r1, #15
  4059e0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4059e4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4059e8:	db07      	blt.n	4059fa <_malloc_trim_r+0x3e>
  4059ea:	2100      	movs	r1, #0
  4059ec:	4630      	mov	r0, r6
  4059ee:	f7ff fe37 	bl	405660 <_sbrk_r>
  4059f2:	68bb      	ldr	r3, [r7, #8]
  4059f4:	442b      	add	r3, r5
  4059f6:	4298      	cmp	r0, r3
  4059f8:	d004      	beq.n	405a04 <_malloc_trim_r+0x48>
  4059fa:	4630      	mov	r0, r6
  4059fc:	f7ff fb30 	bl	405060 <__malloc_unlock>
  405a00:	2000      	movs	r0, #0
  405a02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405a04:	4261      	negs	r1, r4
  405a06:	4630      	mov	r0, r6
  405a08:	f7ff fe2a 	bl	405660 <_sbrk_r>
  405a0c:	3001      	adds	r0, #1
  405a0e:	d00d      	beq.n	405a2c <_malloc_trim_r+0x70>
  405a10:	4b10      	ldr	r3, [pc, #64]	; (405a54 <_malloc_trim_r+0x98>)
  405a12:	68ba      	ldr	r2, [r7, #8]
  405a14:	6819      	ldr	r1, [r3, #0]
  405a16:	1b2d      	subs	r5, r5, r4
  405a18:	f045 0501 	orr.w	r5, r5, #1
  405a1c:	4630      	mov	r0, r6
  405a1e:	1b09      	subs	r1, r1, r4
  405a20:	6055      	str	r5, [r2, #4]
  405a22:	6019      	str	r1, [r3, #0]
  405a24:	f7ff fb1c 	bl	405060 <__malloc_unlock>
  405a28:	2001      	movs	r0, #1
  405a2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405a2c:	2100      	movs	r1, #0
  405a2e:	4630      	mov	r0, r6
  405a30:	f7ff fe16 	bl	405660 <_sbrk_r>
  405a34:	68ba      	ldr	r2, [r7, #8]
  405a36:	1a83      	subs	r3, r0, r2
  405a38:	2b0f      	cmp	r3, #15
  405a3a:	ddde      	ble.n	4059fa <_malloc_trim_r+0x3e>
  405a3c:	4c06      	ldr	r4, [pc, #24]	; (405a58 <_malloc_trim_r+0x9c>)
  405a3e:	4905      	ldr	r1, [pc, #20]	; (405a54 <_malloc_trim_r+0x98>)
  405a40:	6824      	ldr	r4, [r4, #0]
  405a42:	f043 0301 	orr.w	r3, r3, #1
  405a46:	1b00      	subs	r0, r0, r4
  405a48:	6053      	str	r3, [r2, #4]
  405a4a:	6008      	str	r0, [r1, #0]
  405a4c:	e7d5      	b.n	4059fa <_malloc_trim_r+0x3e>
  405a4e:	bf00      	nop
  405a50:	2040045c 	.word	0x2040045c
  405a54:	20400c98 	.word	0x20400c98
  405a58:	20400864 	.word	0x20400864

00405a5c <_free_r>:
  405a5c:	2900      	cmp	r1, #0
  405a5e:	d044      	beq.n	405aea <_free_r+0x8e>
  405a60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405a64:	460d      	mov	r5, r1
  405a66:	4680      	mov	r8, r0
  405a68:	f7ff faf4 	bl	405054 <__malloc_lock>
  405a6c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405a70:	4969      	ldr	r1, [pc, #420]	; (405c18 <_free_r+0x1bc>)
  405a72:	f027 0301 	bic.w	r3, r7, #1
  405a76:	f1a5 0408 	sub.w	r4, r5, #8
  405a7a:	18e2      	adds	r2, r4, r3
  405a7c:	688e      	ldr	r6, [r1, #8]
  405a7e:	6850      	ldr	r0, [r2, #4]
  405a80:	42b2      	cmp	r2, r6
  405a82:	f020 0003 	bic.w	r0, r0, #3
  405a86:	d05e      	beq.n	405b46 <_free_r+0xea>
  405a88:	07fe      	lsls	r6, r7, #31
  405a8a:	6050      	str	r0, [r2, #4]
  405a8c:	d40b      	bmi.n	405aa6 <_free_r+0x4a>
  405a8e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405a92:	1be4      	subs	r4, r4, r7
  405a94:	f101 0e08 	add.w	lr, r1, #8
  405a98:	68a5      	ldr	r5, [r4, #8]
  405a9a:	4575      	cmp	r5, lr
  405a9c:	443b      	add	r3, r7
  405a9e:	d06d      	beq.n	405b7c <_free_r+0x120>
  405aa0:	68e7      	ldr	r7, [r4, #12]
  405aa2:	60ef      	str	r7, [r5, #12]
  405aa4:	60bd      	str	r5, [r7, #8]
  405aa6:	1815      	adds	r5, r2, r0
  405aa8:	686d      	ldr	r5, [r5, #4]
  405aaa:	07ed      	lsls	r5, r5, #31
  405aac:	d53e      	bpl.n	405b2c <_free_r+0xd0>
  405aae:	f043 0201 	orr.w	r2, r3, #1
  405ab2:	6062      	str	r2, [r4, #4]
  405ab4:	50e3      	str	r3, [r4, r3]
  405ab6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405aba:	d217      	bcs.n	405aec <_free_r+0x90>
  405abc:	08db      	lsrs	r3, r3, #3
  405abe:	1c58      	adds	r0, r3, #1
  405ac0:	109a      	asrs	r2, r3, #2
  405ac2:	684d      	ldr	r5, [r1, #4]
  405ac4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405ac8:	60a7      	str	r7, [r4, #8]
  405aca:	2301      	movs	r3, #1
  405acc:	4093      	lsls	r3, r2
  405ace:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405ad2:	432b      	orrs	r3, r5
  405ad4:	3a08      	subs	r2, #8
  405ad6:	60e2      	str	r2, [r4, #12]
  405ad8:	604b      	str	r3, [r1, #4]
  405ada:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  405ade:	60fc      	str	r4, [r7, #12]
  405ae0:	4640      	mov	r0, r8
  405ae2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405ae6:	f7ff babb 	b.w	405060 <__malloc_unlock>
  405aea:	4770      	bx	lr
  405aec:	0a5a      	lsrs	r2, r3, #9
  405aee:	2a04      	cmp	r2, #4
  405af0:	d852      	bhi.n	405b98 <_free_r+0x13c>
  405af2:	099a      	lsrs	r2, r3, #6
  405af4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405af8:	00ff      	lsls	r7, r7, #3
  405afa:	f102 0538 	add.w	r5, r2, #56	; 0x38
  405afe:	19c8      	adds	r0, r1, r7
  405b00:	59ca      	ldr	r2, [r1, r7]
  405b02:	3808      	subs	r0, #8
  405b04:	4290      	cmp	r0, r2
  405b06:	d04f      	beq.n	405ba8 <_free_r+0x14c>
  405b08:	6851      	ldr	r1, [r2, #4]
  405b0a:	f021 0103 	bic.w	r1, r1, #3
  405b0e:	428b      	cmp	r3, r1
  405b10:	d232      	bcs.n	405b78 <_free_r+0x11c>
  405b12:	6892      	ldr	r2, [r2, #8]
  405b14:	4290      	cmp	r0, r2
  405b16:	d1f7      	bne.n	405b08 <_free_r+0xac>
  405b18:	68c3      	ldr	r3, [r0, #12]
  405b1a:	60a0      	str	r0, [r4, #8]
  405b1c:	60e3      	str	r3, [r4, #12]
  405b1e:	609c      	str	r4, [r3, #8]
  405b20:	60c4      	str	r4, [r0, #12]
  405b22:	4640      	mov	r0, r8
  405b24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405b28:	f7ff ba9a 	b.w	405060 <__malloc_unlock>
  405b2c:	6895      	ldr	r5, [r2, #8]
  405b2e:	4f3b      	ldr	r7, [pc, #236]	; (405c1c <_free_r+0x1c0>)
  405b30:	42bd      	cmp	r5, r7
  405b32:	4403      	add	r3, r0
  405b34:	d040      	beq.n	405bb8 <_free_r+0x15c>
  405b36:	68d0      	ldr	r0, [r2, #12]
  405b38:	60e8      	str	r0, [r5, #12]
  405b3a:	f043 0201 	orr.w	r2, r3, #1
  405b3e:	6085      	str	r5, [r0, #8]
  405b40:	6062      	str	r2, [r4, #4]
  405b42:	50e3      	str	r3, [r4, r3]
  405b44:	e7b7      	b.n	405ab6 <_free_r+0x5a>
  405b46:	07ff      	lsls	r7, r7, #31
  405b48:	4403      	add	r3, r0
  405b4a:	d407      	bmi.n	405b5c <_free_r+0x100>
  405b4c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405b50:	1aa4      	subs	r4, r4, r2
  405b52:	4413      	add	r3, r2
  405b54:	68a0      	ldr	r0, [r4, #8]
  405b56:	68e2      	ldr	r2, [r4, #12]
  405b58:	60c2      	str	r2, [r0, #12]
  405b5a:	6090      	str	r0, [r2, #8]
  405b5c:	4a30      	ldr	r2, [pc, #192]	; (405c20 <_free_r+0x1c4>)
  405b5e:	6812      	ldr	r2, [r2, #0]
  405b60:	f043 0001 	orr.w	r0, r3, #1
  405b64:	4293      	cmp	r3, r2
  405b66:	6060      	str	r0, [r4, #4]
  405b68:	608c      	str	r4, [r1, #8]
  405b6a:	d3b9      	bcc.n	405ae0 <_free_r+0x84>
  405b6c:	4b2d      	ldr	r3, [pc, #180]	; (405c24 <_free_r+0x1c8>)
  405b6e:	4640      	mov	r0, r8
  405b70:	6819      	ldr	r1, [r3, #0]
  405b72:	f7ff ff23 	bl	4059bc <_malloc_trim_r>
  405b76:	e7b3      	b.n	405ae0 <_free_r+0x84>
  405b78:	4610      	mov	r0, r2
  405b7a:	e7cd      	b.n	405b18 <_free_r+0xbc>
  405b7c:	1811      	adds	r1, r2, r0
  405b7e:	6849      	ldr	r1, [r1, #4]
  405b80:	07c9      	lsls	r1, r1, #31
  405b82:	d444      	bmi.n	405c0e <_free_r+0x1b2>
  405b84:	6891      	ldr	r1, [r2, #8]
  405b86:	68d2      	ldr	r2, [r2, #12]
  405b88:	60ca      	str	r2, [r1, #12]
  405b8a:	4403      	add	r3, r0
  405b8c:	f043 0001 	orr.w	r0, r3, #1
  405b90:	6091      	str	r1, [r2, #8]
  405b92:	6060      	str	r0, [r4, #4]
  405b94:	50e3      	str	r3, [r4, r3]
  405b96:	e7a3      	b.n	405ae0 <_free_r+0x84>
  405b98:	2a14      	cmp	r2, #20
  405b9a:	d816      	bhi.n	405bca <_free_r+0x16e>
  405b9c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405ba0:	00ff      	lsls	r7, r7, #3
  405ba2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405ba6:	e7aa      	b.n	405afe <_free_r+0xa2>
  405ba8:	10aa      	asrs	r2, r5, #2
  405baa:	2301      	movs	r3, #1
  405bac:	684d      	ldr	r5, [r1, #4]
  405bae:	4093      	lsls	r3, r2
  405bb0:	432b      	orrs	r3, r5
  405bb2:	604b      	str	r3, [r1, #4]
  405bb4:	4603      	mov	r3, r0
  405bb6:	e7b0      	b.n	405b1a <_free_r+0xbe>
  405bb8:	f043 0201 	orr.w	r2, r3, #1
  405bbc:	614c      	str	r4, [r1, #20]
  405bbe:	610c      	str	r4, [r1, #16]
  405bc0:	60e5      	str	r5, [r4, #12]
  405bc2:	60a5      	str	r5, [r4, #8]
  405bc4:	6062      	str	r2, [r4, #4]
  405bc6:	50e3      	str	r3, [r4, r3]
  405bc8:	e78a      	b.n	405ae0 <_free_r+0x84>
  405bca:	2a54      	cmp	r2, #84	; 0x54
  405bcc:	d806      	bhi.n	405bdc <_free_r+0x180>
  405bce:	0b1a      	lsrs	r2, r3, #12
  405bd0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405bd4:	00ff      	lsls	r7, r7, #3
  405bd6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405bda:	e790      	b.n	405afe <_free_r+0xa2>
  405bdc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405be0:	d806      	bhi.n	405bf0 <_free_r+0x194>
  405be2:	0bda      	lsrs	r2, r3, #15
  405be4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405be8:	00ff      	lsls	r7, r7, #3
  405bea:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405bee:	e786      	b.n	405afe <_free_r+0xa2>
  405bf0:	f240 5054 	movw	r0, #1364	; 0x554
  405bf4:	4282      	cmp	r2, r0
  405bf6:	d806      	bhi.n	405c06 <_free_r+0x1aa>
  405bf8:	0c9a      	lsrs	r2, r3, #18
  405bfa:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405bfe:	00ff      	lsls	r7, r7, #3
  405c00:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405c04:	e77b      	b.n	405afe <_free_r+0xa2>
  405c06:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405c0a:	257e      	movs	r5, #126	; 0x7e
  405c0c:	e777      	b.n	405afe <_free_r+0xa2>
  405c0e:	f043 0101 	orr.w	r1, r3, #1
  405c12:	6061      	str	r1, [r4, #4]
  405c14:	6013      	str	r3, [r2, #0]
  405c16:	e763      	b.n	405ae0 <_free_r+0x84>
  405c18:	2040045c 	.word	0x2040045c
  405c1c:	20400464 	.word	0x20400464
  405c20:	20400868 	.word	0x20400868
  405c24:	20400cc8 	.word	0x20400cc8

00405c28 <__ascii_mbtowc>:
  405c28:	b082      	sub	sp, #8
  405c2a:	b149      	cbz	r1, 405c40 <__ascii_mbtowc+0x18>
  405c2c:	b15a      	cbz	r2, 405c46 <__ascii_mbtowc+0x1e>
  405c2e:	b16b      	cbz	r3, 405c4c <__ascii_mbtowc+0x24>
  405c30:	7813      	ldrb	r3, [r2, #0]
  405c32:	600b      	str	r3, [r1, #0]
  405c34:	7812      	ldrb	r2, [r2, #0]
  405c36:	1c10      	adds	r0, r2, #0
  405c38:	bf18      	it	ne
  405c3a:	2001      	movne	r0, #1
  405c3c:	b002      	add	sp, #8
  405c3e:	4770      	bx	lr
  405c40:	a901      	add	r1, sp, #4
  405c42:	2a00      	cmp	r2, #0
  405c44:	d1f3      	bne.n	405c2e <__ascii_mbtowc+0x6>
  405c46:	4610      	mov	r0, r2
  405c48:	b002      	add	sp, #8
  405c4a:	4770      	bx	lr
  405c4c:	f06f 0001 	mvn.w	r0, #1
  405c50:	e7f4      	b.n	405c3c <__ascii_mbtowc+0x14>
  405c52:	bf00      	nop

00405c54 <memmove>:
  405c54:	4288      	cmp	r0, r1
  405c56:	b5f0      	push	{r4, r5, r6, r7, lr}
  405c58:	d90d      	bls.n	405c76 <memmove+0x22>
  405c5a:	188b      	adds	r3, r1, r2
  405c5c:	4298      	cmp	r0, r3
  405c5e:	d20a      	bcs.n	405c76 <memmove+0x22>
  405c60:	1884      	adds	r4, r0, r2
  405c62:	2a00      	cmp	r2, #0
  405c64:	d051      	beq.n	405d0a <memmove+0xb6>
  405c66:	4622      	mov	r2, r4
  405c68:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405c6c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405c70:	4299      	cmp	r1, r3
  405c72:	d1f9      	bne.n	405c68 <memmove+0x14>
  405c74:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c76:	2a0f      	cmp	r2, #15
  405c78:	d948      	bls.n	405d0c <memmove+0xb8>
  405c7a:	ea41 0300 	orr.w	r3, r1, r0
  405c7e:	079b      	lsls	r3, r3, #30
  405c80:	d146      	bne.n	405d10 <memmove+0xbc>
  405c82:	f100 0410 	add.w	r4, r0, #16
  405c86:	f101 0310 	add.w	r3, r1, #16
  405c8a:	4615      	mov	r5, r2
  405c8c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405c90:	f844 6c10 	str.w	r6, [r4, #-16]
  405c94:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405c98:	f844 6c0c 	str.w	r6, [r4, #-12]
  405c9c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405ca0:	f844 6c08 	str.w	r6, [r4, #-8]
  405ca4:	3d10      	subs	r5, #16
  405ca6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405caa:	f844 6c04 	str.w	r6, [r4, #-4]
  405cae:	2d0f      	cmp	r5, #15
  405cb0:	f103 0310 	add.w	r3, r3, #16
  405cb4:	f104 0410 	add.w	r4, r4, #16
  405cb8:	d8e8      	bhi.n	405c8c <memmove+0x38>
  405cba:	f1a2 0310 	sub.w	r3, r2, #16
  405cbe:	f023 030f 	bic.w	r3, r3, #15
  405cc2:	f002 0e0f 	and.w	lr, r2, #15
  405cc6:	3310      	adds	r3, #16
  405cc8:	f1be 0f03 	cmp.w	lr, #3
  405ccc:	4419      	add	r1, r3
  405cce:	4403      	add	r3, r0
  405cd0:	d921      	bls.n	405d16 <memmove+0xc2>
  405cd2:	1f1e      	subs	r6, r3, #4
  405cd4:	460d      	mov	r5, r1
  405cd6:	4674      	mov	r4, lr
  405cd8:	3c04      	subs	r4, #4
  405cda:	f855 7b04 	ldr.w	r7, [r5], #4
  405cde:	f846 7f04 	str.w	r7, [r6, #4]!
  405ce2:	2c03      	cmp	r4, #3
  405ce4:	d8f8      	bhi.n	405cd8 <memmove+0x84>
  405ce6:	f1ae 0404 	sub.w	r4, lr, #4
  405cea:	f024 0403 	bic.w	r4, r4, #3
  405cee:	3404      	adds	r4, #4
  405cf0:	4421      	add	r1, r4
  405cf2:	4423      	add	r3, r4
  405cf4:	f002 0203 	and.w	r2, r2, #3
  405cf8:	b162      	cbz	r2, 405d14 <memmove+0xc0>
  405cfa:	3b01      	subs	r3, #1
  405cfc:	440a      	add	r2, r1
  405cfe:	f811 4b01 	ldrb.w	r4, [r1], #1
  405d02:	f803 4f01 	strb.w	r4, [r3, #1]!
  405d06:	428a      	cmp	r2, r1
  405d08:	d1f9      	bne.n	405cfe <memmove+0xaa>
  405d0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405d0c:	4603      	mov	r3, r0
  405d0e:	e7f3      	b.n	405cf8 <memmove+0xa4>
  405d10:	4603      	mov	r3, r0
  405d12:	e7f2      	b.n	405cfa <memmove+0xa6>
  405d14:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405d16:	4672      	mov	r2, lr
  405d18:	e7ee      	b.n	405cf8 <memmove+0xa4>
  405d1a:	bf00      	nop

00405d1c <_realloc_r>:
  405d1c:	2900      	cmp	r1, #0
  405d1e:	f000 8095 	beq.w	405e4c <_realloc_r+0x130>
  405d22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405d26:	460d      	mov	r5, r1
  405d28:	4616      	mov	r6, r2
  405d2a:	b083      	sub	sp, #12
  405d2c:	4680      	mov	r8, r0
  405d2e:	f106 070b 	add.w	r7, r6, #11
  405d32:	f7ff f98f 	bl	405054 <__malloc_lock>
  405d36:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405d3a:	2f16      	cmp	r7, #22
  405d3c:	f02e 0403 	bic.w	r4, lr, #3
  405d40:	f1a5 0908 	sub.w	r9, r5, #8
  405d44:	d83c      	bhi.n	405dc0 <_realloc_r+0xa4>
  405d46:	2210      	movs	r2, #16
  405d48:	4617      	mov	r7, r2
  405d4a:	42be      	cmp	r6, r7
  405d4c:	d83d      	bhi.n	405dca <_realloc_r+0xae>
  405d4e:	4294      	cmp	r4, r2
  405d50:	da43      	bge.n	405dda <_realloc_r+0xbe>
  405d52:	4bc4      	ldr	r3, [pc, #784]	; (406064 <_realloc_r+0x348>)
  405d54:	6899      	ldr	r1, [r3, #8]
  405d56:	eb09 0004 	add.w	r0, r9, r4
  405d5a:	4288      	cmp	r0, r1
  405d5c:	f000 80b4 	beq.w	405ec8 <_realloc_r+0x1ac>
  405d60:	6843      	ldr	r3, [r0, #4]
  405d62:	f023 0101 	bic.w	r1, r3, #1
  405d66:	4401      	add	r1, r0
  405d68:	6849      	ldr	r1, [r1, #4]
  405d6a:	07c9      	lsls	r1, r1, #31
  405d6c:	d54c      	bpl.n	405e08 <_realloc_r+0xec>
  405d6e:	f01e 0f01 	tst.w	lr, #1
  405d72:	f000 809b 	beq.w	405eac <_realloc_r+0x190>
  405d76:	4631      	mov	r1, r6
  405d78:	4640      	mov	r0, r8
  405d7a:	f7fe fdcb 	bl	404914 <_malloc_r>
  405d7e:	4606      	mov	r6, r0
  405d80:	2800      	cmp	r0, #0
  405d82:	d03a      	beq.n	405dfa <_realloc_r+0xde>
  405d84:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405d88:	f023 0301 	bic.w	r3, r3, #1
  405d8c:	444b      	add	r3, r9
  405d8e:	f1a0 0208 	sub.w	r2, r0, #8
  405d92:	429a      	cmp	r2, r3
  405d94:	f000 8121 	beq.w	405fda <_realloc_r+0x2be>
  405d98:	1f22      	subs	r2, r4, #4
  405d9a:	2a24      	cmp	r2, #36	; 0x24
  405d9c:	f200 8107 	bhi.w	405fae <_realloc_r+0x292>
  405da0:	2a13      	cmp	r2, #19
  405da2:	f200 80db 	bhi.w	405f5c <_realloc_r+0x240>
  405da6:	4603      	mov	r3, r0
  405da8:	462a      	mov	r2, r5
  405daa:	6811      	ldr	r1, [r2, #0]
  405dac:	6019      	str	r1, [r3, #0]
  405dae:	6851      	ldr	r1, [r2, #4]
  405db0:	6059      	str	r1, [r3, #4]
  405db2:	6892      	ldr	r2, [r2, #8]
  405db4:	609a      	str	r2, [r3, #8]
  405db6:	4629      	mov	r1, r5
  405db8:	4640      	mov	r0, r8
  405dba:	f7ff fe4f 	bl	405a5c <_free_r>
  405dbe:	e01c      	b.n	405dfa <_realloc_r+0xde>
  405dc0:	f027 0707 	bic.w	r7, r7, #7
  405dc4:	2f00      	cmp	r7, #0
  405dc6:	463a      	mov	r2, r7
  405dc8:	dabf      	bge.n	405d4a <_realloc_r+0x2e>
  405dca:	2600      	movs	r6, #0
  405dcc:	230c      	movs	r3, #12
  405dce:	4630      	mov	r0, r6
  405dd0:	f8c8 3000 	str.w	r3, [r8]
  405dd4:	b003      	add	sp, #12
  405dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405dda:	462e      	mov	r6, r5
  405ddc:	1be3      	subs	r3, r4, r7
  405dde:	2b0f      	cmp	r3, #15
  405de0:	d81e      	bhi.n	405e20 <_realloc_r+0x104>
  405de2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405de6:	f003 0301 	and.w	r3, r3, #1
  405dea:	4323      	orrs	r3, r4
  405dec:	444c      	add	r4, r9
  405dee:	f8c9 3004 	str.w	r3, [r9, #4]
  405df2:	6863      	ldr	r3, [r4, #4]
  405df4:	f043 0301 	orr.w	r3, r3, #1
  405df8:	6063      	str	r3, [r4, #4]
  405dfa:	4640      	mov	r0, r8
  405dfc:	f7ff f930 	bl	405060 <__malloc_unlock>
  405e00:	4630      	mov	r0, r6
  405e02:	b003      	add	sp, #12
  405e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405e08:	f023 0303 	bic.w	r3, r3, #3
  405e0c:	18e1      	adds	r1, r4, r3
  405e0e:	4291      	cmp	r1, r2
  405e10:	db1f      	blt.n	405e52 <_realloc_r+0x136>
  405e12:	68c3      	ldr	r3, [r0, #12]
  405e14:	6882      	ldr	r2, [r0, #8]
  405e16:	462e      	mov	r6, r5
  405e18:	60d3      	str	r3, [r2, #12]
  405e1a:	460c      	mov	r4, r1
  405e1c:	609a      	str	r2, [r3, #8]
  405e1e:	e7dd      	b.n	405ddc <_realloc_r+0xc0>
  405e20:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405e24:	eb09 0107 	add.w	r1, r9, r7
  405e28:	f002 0201 	and.w	r2, r2, #1
  405e2c:	444c      	add	r4, r9
  405e2e:	f043 0301 	orr.w	r3, r3, #1
  405e32:	4317      	orrs	r7, r2
  405e34:	f8c9 7004 	str.w	r7, [r9, #4]
  405e38:	604b      	str	r3, [r1, #4]
  405e3a:	6863      	ldr	r3, [r4, #4]
  405e3c:	f043 0301 	orr.w	r3, r3, #1
  405e40:	3108      	adds	r1, #8
  405e42:	6063      	str	r3, [r4, #4]
  405e44:	4640      	mov	r0, r8
  405e46:	f7ff fe09 	bl	405a5c <_free_r>
  405e4a:	e7d6      	b.n	405dfa <_realloc_r+0xde>
  405e4c:	4611      	mov	r1, r2
  405e4e:	f7fe bd61 	b.w	404914 <_malloc_r>
  405e52:	f01e 0f01 	tst.w	lr, #1
  405e56:	d18e      	bne.n	405d76 <_realloc_r+0x5a>
  405e58:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405e5c:	eba9 0a01 	sub.w	sl, r9, r1
  405e60:	f8da 1004 	ldr.w	r1, [sl, #4]
  405e64:	f021 0103 	bic.w	r1, r1, #3
  405e68:	440b      	add	r3, r1
  405e6a:	4423      	add	r3, r4
  405e6c:	4293      	cmp	r3, r2
  405e6e:	db25      	blt.n	405ebc <_realloc_r+0x1a0>
  405e70:	68c2      	ldr	r2, [r0, #12]
  405e72:	6881      	ldr	r1, [r0, #8]
  405e74:	4656      	mov	r6, sl
  405e76:	60ca      	str	r2, [r1, #12]
  405e78:	6091      	str	r1, [r2, #8]
  405e7a:	f8da 100c 	ldr.w	r1, [sl, #12]
  405e7e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405e82:	1f22      	subs	r2, r4, #4
  405e84:	2a24      	cmp	r2, #36	; 0x24
  405e86:	60c1      	str	r1, [r0, #12]
  405e88:	6088      	str	r0, [r1, #8]
  405e8a:	f200 8094 	bhi.w	405fb6 <_realloc_r+0x29a>
  405e8e:	2a13      	cmp	r2, #19
  405e90:	d96f      	bls.n	405f72 <_realloc_r+0x256>
  405e92:	6829      	ldr	r1, [r5, #0]
  405e94:	f8ca 1008 	str.w	r1, [sl, #8]
  405e98:	6869      	ldr	r1, [r5, #4]
  405e9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405e9e:	2a1b      	cmp	r2, #27
  405ea0:	f200 80a2 	bhi.w	405fe8 <_realloc_r+0x2cc>
  405ea4:	3508      	adds	r5, #8
  405ea6:	f10a 0210 	add.w	r2, sl, #16
  405eaa:	e063      	b.n	405f74 <_realloc_r+0x258>
  405eac:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405eb0:	eba9 0a03 	sub.w	sl, r9, r3
  405eb4:	f8da 1004 	ldr.w	r1, [sl, #4]
  405eb8:	f021 0103 	bic.w	r1, r1, #3
  405ebc:	1863      	adds	r3, r4, r1
  405ebe:	4293      	cmp	r3, r2
  405ec0:	f6ff af59 	blt.w	405d76 <_realloc_r+0x5a>
  405ec4:	4656      	mov	r6, sl
  405ec6:	e7d8      	b.n	405e7a <_realloc_r+0x15e>
  405ec8:	6841      	ldr	r1, [r0, #4]
  405eca:	f021 0b03 	bic.w	fp, r1, #3
  405ece:	44a3      	add	fp, r4
  405ed0:	f107 0010 	add.w	r0, r7, #16
  405ed4:	4583      	cmp	fp, r0
  405ed6:	da56      	bge.n	405f86 <_realloc_r+0x26a>
  405ed8:	f01e 0f01 	tst.w	lr, #1
  405edc:	f47f af4b 	bne.w	405d76 <_realloc_r+0x5a>
  405ee0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405ee4:	eba9 0a01 	sub.w	sl, r9, r1
  405ee8:	f8da 1004 	ldr.w	r1, [sl, #4]
  405eec:	f021 0103 	bic.w	r1, r1, #3
  405ef0:	448b      	add	fp, r1
  405ef2:	4558      	cmp	r0, fp
  405ef4:	dce2      	bgt.n	405ebc <_realloc_r+0x1a0>
  405ef6:	4656      	mov	r6, sl
  405ef8:	f8da 100c 	ldr.w	r1, [sl, #12]
  405efc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405f00:	1f22      	subs	r2, r4, #4
  405f02:	2a24      	cmp	r2, #36	; 0x24
  405f04:	60c1      	str	r1, [r0, #12]
  405f06:	6088      	str	r0, [r1, #8]
  405f08:	f200 808f 	bhi.w	40602a <_realloc_r+0x30e>
  405f0c:	2a13      	cmp	r2, #19
  405f0e:	f240 808a 	bls.w	406026 <_realloc_r+0x30a>
  405f12:	6829      	ldr	r1, [r5, #0]
  405f14:	f8ca 1008 	str.w	r1, [sl, #8]
  405f18:	6869      	ldr	r1, [r5, #4]
  405f1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405f1e:	2a1b      	cmp	r2, #27
  405f20:	f200 808a 	bhi.w	406038 <_realloc_r+0x31c>
  405f24:	3508      	adds	r5, #8
  405f26:	f10a 0210 	add.w	r2, sl, #16
  405f2a:	6829      	ldr	r1, [r5, #0]
  405f2c:	6011      	str	r1, [r2, #0]
  405f2e:	6869      	ldr	r1, [r5, #4]
  405f30:	6051      	str	r1, [r2, #4]
  405f32:	68a9      	ldr	r1, [r5, #8]
  405f34:	6091      	str	r1, [r2, #8]
  405f36:	eb0a 0107 	add.w	r1, sl, r7
  405f3a:	ebab 0207 	sub.w	r2, fp, r7
  405f3e:	f042 0201 	orr.w	r2, r2, #1
  405f42:	6099      	str	r1, [r3, #8]
  405f44:	604a      	str	r2, [r1, #4]
  405f46:	f8da 3004 	ldr.w	r3, [sl, #4]
  405f4a:	f003 0301 	and.w	r3, r3, #1
  405f4e:	431f      	orrs	r7, r3
  405f50:	4640      	mov	r0, r8
  405f52:	f8ca 7004 	str.w	r7, [sl, #4]
  405f56:	f7ff f883 	bl	405060 <__malloc_unlock>
  405f5a:	e751      	b.n	405e00 <_realloc_r+0xe4>
  405f5c:	682b      	ldr	r3, [r5, #0]
  405f5e:	6003      	str	r3, [r0, #0]
  405f60:	686b      	ldr	r3, [r5, #4]
  405f62:	6043      	str	r3, [r0, #4]
  405f64:	2a1b      	cmp	r2, #27
  405f66:	d82d      	bhi.n	405fc4 <_realloc_r+0x2a8>
  405f68:	f100 0308 	add.w	r3, r0, #8
  405f6c:	f105 0208 	add.w	r2, r5, #8
  405f70:	e71b      	b.n	405daa <_realloc_r+0x8e>
  405f72:	4632      	mov	r2, r6
  405f74:	6829      	ldr	r1, [r5, #0]
  405f76:	6011      	str	r1, [r2, #0]
  405f78:	6869      	ldr	r1, [r5, #4]
  405f7a:	6051      	str	r1, [r2, #4]
  405f7c:	68a9      	ldr	r1, [r5, #8]
  405f7e:	6091      	str	r1, [r2, #8]
  405f80:	461c      	mov	r4, r3
  405f82:	46d1      	mov	r9, sl
  405f84:	e72a      	b.n	405ddc <_realloc_r+0xc0>
  405f86:	eb09 0107 	add.w	r1, r9, r7
  405f8a:	ebab 0b07 	sub.w	fp, fp, r7
  405f8e:	f04b 0201 	orr.w	r2, fp, #1
  405f92:	6099      	str	r1, [r3, #8]
  405f94:	604a      	str	r2, [r1, #4]
  405f96:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405f9a:	f003 0301 	and.w	r3, r3, #1
  405f9e:	431f      	orrs	r7, r3
  405fa0:	4640      	mov	r0, r8
  405fa2:	f845 7c04 	str.w	r7, [r5, #-4]
  405fa6:	f7ff f85b 	bl	405060 <__malloc_unlock>
  405faa:	462e      	mov	r6, r5
  405fac:	e728      	b.n	405e00 <_realloc_r+0xe4>
  405fae:	4629      	mov	r1, r5
  405fb0:	f7ff fe50 	bl	405c54 <memmove>
  405fb4:	e6ff      	b.n	405db6 <_realloc_r+0x9a>
  405fb6:	4629      	mov	r1, r5
  405fb8:	4630      	mov	r0, r6
  405fba:	461c      	mov	r4, r3
  405fbc:	46d1      	mov	r9, sl
  405fbe:	f7ff fe49 	bl	405c54 <memmove>
  405fc2:	e70b      	b.n	405ddc <_realloc_r+0xc0>
  405fc4:	68ab      	ldr	r3, [r5, #8]
  405fc6:	6083      	str	r3, [r0, #8]
  405fc8:	68eb      	ldr	r3, [r5, #12]
  405fca:	60c3      	str	r3, [r0, #12]
  405fcc:	2a24      	cmp	r2, #36	; 0x24
  405fce:	d017      	beq.n	406000 <_realloc_r+0x2e4>
  405fd0:	f100 0310 	add.w	r3, r0, #16
  405fd4:	f105 0210 	add.w	r2, r5, #16
  405fd8:	e6e7      	b.n	405daa <_realloc_r+0x8e>
  405fda:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405fde:	f023 0303 	bic.w	r3, r3, #3
  405fe2:	441c      	add	r4, r3
  405fe4:	462e      	mov	r6, r5
  405fe6:	e6f9      	b.n	405ddc <_realloc_r+0xc0>
  405fe8:	68a9      	ldr	r1, [r5, #8]
  405fea:	f8ca 1010 	str.w	r1, [sl, #16]
  405fee:	68e9      	ldr	r1, [r5, #12]
  405ff0:	f8ca 1014 	str.w	r1, [sl, #20]
  405ff4:	2a24      	cmp	r2, #36	; 0x24
  405ff6:	d00c      	beq.n	406012 <_realloc_r+0x2f6>
  405ff8:	3510      	adds	r5, #16
  405ffa:	f10a 0218 	add.w	r2, sl, #24
  405ffe:	e7b9      	b.n	405f74 <_realloc_r+0x258>
  406000:	692b      	ldr	r3, [r5, #16]
  406002:	6103      	str	r3, [r0, #16]
  406004:	696b      	ldr	r3, [r5, #20]
  406006:	6143      	str	r3, [r0, #20]
  406008:	f105 0218 	add.w	r2, r5, #24
  40600c:	f100 0318 	add.w	r3, r0, #24
  406010:	e6cb      	b.n	405daa <_realloc_r+0x8e>
  406012:	692a      	ldr	r2, [r5, #16]
  406014:	f8ca 2018 	str.w	r2, [sl, #24]
  406018:	696a      	ldr	r2, [r5, #20]
  40601a:	f8ca 201c 	str.w	r2, [sl, #28]
  40601e:	3518      	adds	r5, #24
  406020:	f10a 0220 	add.w	r2, sl, #32
  406024:	e7a6      	b.n	405f74 <_realloc_r+0x258>
  406026:	4632      	mov	r2, r6
  406028:	e77f      	b.n	405f2a <_realloc_r+0x20e>
  40602a:	4629      	mov	r1, r5
  40602c:	4630      	mov	r0, r6
  40602e:	9301      	str	r3, [sp, #4]
  406030:	f7ff fe10 	bl	405c54 <memmove>
  406034:	9b01      	ldr	r3, [sp, #4]
  406036:	e77e      	b.n	405f36 <_realloc_r+0x21a>
  406038:	68a9      	ldr	r1, [r5, #8]
  40603a:	f8ca 1010 	str.w	r1, [sl, #16]
  40603e:	68e9      	ldr	r1, [r5, #12]
  406040:	f8ca 1014 	str.w	r1, [sl, #20]
  406044:	2a24      	cmp	r2, #36	; 0x24
  406046:	d003      	beq.n	406050 <_realloc_r+0x334>
  406048:	3510      	adds	r5, #16
  40604a:	f10a 0218 	add.w	r2, sl, #24
  40604e:	e76c      	b.n	405f2a <_realloc_r+0x20e>
  406050:	692a      	ldr	r2, [r5, #16]
  406052:	f8ca 2018 	str.w	r2, [sl, #24]
  406056:	696a      	ldr	r2, [r5, #20]
  406058:	f8ca 201c 	str.w	r2, [sl, #28]
  40605c:	3518      	adds	r5, #24
  40605e:	f10a 0220 	add.w	r2, sl, #32
  406062:	e762      	b.n	405f2a <_realloc_r+0x20e>
  406064:	2040045c 	.word	0x2040045c

00406068 <__ascii_wctomb>:
  406068:	b121      	cbz	r1, 406074 <__ascii_wctomb+0xc>
  40606a:	2aff      	cmp	r2, #255	; 0xff
  40606c:	d804      	bhi.n	406078 <__ascii_wctomb+0x10>
  40606e:	700a      	strb	r2, [r1, #0]
  406070:	2001      	movs	r0, #1
  406072:	4770      	bx	lr
  406074:	4608      	mov	r0, r1
  406076:	4770      	bx	lr
  406078:	238a      	movs	r3, #138	; 0x8a
  40607a:	6003      	str	r3, [r0, #0]
  40607c:	f04f 30ff 	mov.w	r0, #4294967295
  406080:	4770      	bx	lr
  406082:	bf00      	nop

00406084 <__gedf2>:
  406084:	f04f 3cff 	mov.w	ip, #4294967295
  406088:	e006      	b.n	406098 <__cmpdf2+0x4>
  40608a:	bf00      	nop

0040608c <__ledf2>:
  40608c:	f04f 0c01 	mov.w	ip, #1
  406090:	e002      	b.n	406098 <__cmpdf2+0x4>
  406092:	bf00      	nop

00406094 <__cmpdf2>:
  406094:	f04f 0c01 	mov.w	ip, #1
  406098:	f84d cd04 	str.w	ip, [sp, #-4]!
  40609c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4060a0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060a4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4060a8:	bf18      	it	ne
  4060aa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4060ae:	d01b      	beq.n	4060e8 <__cmpdf2+0x54>
  4060b0:	b001      	add	sp, #4
  4060b2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4060b6:	bf0c      	ite	eq
  4060b8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4060bc:	ea91 0f03 	teqne	r1, r3
  4060c0:	bf02      	ittt	eq
  4060c2:	ea90 0f02 	teqeq	r0, r2
  4060c6:	2000      	moveq	r0, #0
  4060c8:	4770      	bxeq	lr
  4060ca:	f110 0f00 	cmn.w	r0, #0
  4060ce:	ea91 0f03 	teq	r1, r3
  4060d2:	bf58      	it	pl
  4060d4:	4299      	cmppl	r1, r3
  4060d6:	bf08      	it	eq
  4060d8:	4290      	cmpeq	r0, r2
  4060da:	bf2c      	ite	cs
  4060dc:	17d8      	asrcs	r0, r3, #31
  4060de:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4060e2:	f040 0001 	orr.w	r0, r0, #1
  4060e6:	4770      	bx	lr
  4060e8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4060ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060f0:	d102      	bne.n	4060f8 <__cmpdf2+0x64>
  4060f2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4060f6:	d107      	bne.n	406108 <__cmpdf2+0x74>
  4060f8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4060fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406100:	d1d6      	bne.n	4060b0 <__cmpdf2+0x1c>
  406102:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406106:	d0d3      	beq.n	4060b0 <__cmpdf2+0x1c>
  406108:	f85d 0b04 	ldr.w	r0, [sp], #4
  40610c:	4770      	bx	lr
  40610e:	bf00      	nop

00406110 <__aeabi_cdrcmple>:
  406110:	4684      	mov	ip, r0
  406112:	4610      	mov	r0, r2
  406114:	4662      	mov	r2, ip
  406116:	468c      	mov	ip, r1
  406118:	4619      	mov	r1, r3
  40611a:	4663      	mov	r3, ip
  40611c:	e000      	b.n	406120 <__aeabi_cdcmpeq>
  40611e:	bf00      	nop

00406120 <__aeabi_cdcmpeq>:
  406120:	b501      	push	{r0, lr}
  406122:	f7ff ffb7 	bl	406094 <__cmpdf2>
  406126:	2800      	cmp	r0, #0
  406128:	bf48      	it	mi
  40612a:	f110 0f00 	cmnmi.w	r0, #0
  40612e:	bd01      	pop	{r0, pc}

00406130 <__aeabi_dcmpeq>:
  406130:	f84d ed08 	str.w	lr, [sp, #-8]!
  406134:	f7ff fff4 	bl	406120 <__aeabi_cdcmpeq>
  406138:	bf0c      	ite	eq
  40613a:	2001      	moveq	r0, #1
  40613c:	2000      	movne	r0, #0
  40613e:	f85d fb08 	ldr.w	pc, [sp], #8
  406142:	bf00      	nop

00406144 <__aeabi_dcmplt>:
  406144:	f84d ed08 	str.w	lr, [sp, #-8]!
  406148:	f7ff ffea 	bl	406120 <__aeabi_cdcmpeq>
  40614c:	bf34      	ite	cc
  40614e:	2001      	movcc	r0, #1
  406150:	2000      	movcs	r0, #0
  406152:	f85d fb08 	ldr.w	pc, [sp], #8
  406156:	bf00      	nop

00406158 <__aeabi_dcmple>:
  406158:	f84d ed08 	str.w	lr, [sp, #-8]!
  40615c:	f7ff ffe0 	bl	406120 <__aeabi_cdcmpeq>
  406160:	bf94      	ite	ls
  406162:	2001      	movls	r0, #1
  406164:	2000      	movhi	r0, #0
  406166:	f85d fb08 	ldr.w	pc, [sp], #8
  40616a:	bf00      	nop

0040616c <__aeabi_dcmpge>:
  40616c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406170:	f7ff ffce 	bl	406110 <__aeabi_cdrcmple>
  406174:	bf94      	ite	ls
  406176:	2001      	movls	r0, #1
  406178:	2000      	movhi	r0, #0
  40617a:	f85d fb08 	ldr.w	pc, [sp], #8
  40617e:	bf00      	nop

00406180 <__aeabi_dcmpgt>:
  406180:	f84d ed08 	str.w	lr, [sp, #-8]!
  406184:	f7ff ffc4 	bl	406110 <__aeabi_cdrcmple>
  406188:	bf34      	ite	cc
  40618a:	2001      	movcc	r0, #1
  40618c:	2000      	movcs	r0, #0
  40618e:	f85d fb08 	ldr.w	pc, [sp], #8
  406192:	bf00      	nop

00406194 <__aeabi_dcmpun>:
  406194:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406198:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40619c:	d102      	bne.n	4061a4 <__aeabi_dcmpun+0x10>
  40619e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4061a2:	d10a      	bne.n	4061ba <__aeabi_dcmpun+0x26>
  4061a4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4061a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4061ac:	d102      	bne.n	4061b4 <__aeabi_dcmpun+0x20>
  4061ae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4061b2:	d102      	bne.n	4061ba <__aeabi_dcmpun+0x26>
  4061b4:	f04f 0000 	mov.w	r0, #0
  4061b8:	4770      	bx	lr
  4061ba:	f04f 0001 	mov.w	r0, #1
  4061be:	4770      	bx	lr

004061c0 <__aeabi_uldivmod>:
  4061c0:	b953      	cbnz	r3, 4061d8 <__aeabi_uldivmod+0x18>
  4061c2:	b94a      	cbnz	r2, 4061d8 <__aeabi_uldivmod+0x18>
  4061c4:	2900      	cmp	r1, #0
  4061c6:	bf08      	it	eq
  4061c8:	2800      	cmpeq	r0, #0
  4061ca:	bf1c      	itt	ne
  4061cc:	f04f 31ff 	movne.w	r1, #4294967295
  4061d0:	f04f 30ff 	movne.w	r0, #4294967295
  4061d4:	f000 b97a 	b.w	4064cc <__aeabi_idiv0>
  4061d8:	f1ad 0c08 	sub.w	ip, sp, #8
  4061dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4061e0:	f000 f806 	bl	4061f0 <__udivmoddi4>
  4061e4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4061e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4061ec:	b004      	add	sp, #16
  4061ee:	4770      	bx	lr

004061f0 <__udivmoddi4>:
  4061f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4061f4:	468c      	mov	ip, r1
  4061f6:	460d      	mov	r5, r1
  4061f8:	4604      	mov	r4, r0
  4061fa:	9e08      	ldr	r6, [sp, #32]
  4061fc:	2b00      	cmp	r3, #0
  4061fe:	d151      	bne.n	4062a4 <__udivmoddi4+0xb4>
  406200:	428a      	cmp	r2, r1
  406202:	4617      	mov	r7, r2
  406204:	d96d      	bls.n	4062e2 <__udivmoddi4+0xf2>
  406206:	fab2 fe82 	clz	lr, r2
  40620a:	f1be 0f00 	cmp.w	lr, #0
  40620e:	d00b      	beq.n	406228 <__udivmoddi4+0x38>
  406210:	f1ce 0c20 	rsb	ip, lr, #32
  406214:	fa01 f50e 	lsl.w	r5, r1, lr
  406218:	fa20 fc0c 	lsr.w	ip, r0, ip
  40621c:	fa02 f70e 	lsl.w	r7, r2, lr
  406220:	ea4c 0c05 	orr.w	ip, ip, r5
  406224:	fa00 f40e 	lsl.w	r4, r0, lr
  406228:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40622c:	0c25      	lsrs	r5, r4, #16
  40622e:	fbbc f8fa 	udiv	r8, ip, sl
  406232:	fa1f f987 	uxth.w	r9, r7
  406236:	fb0a cc18 	mls	ip, sl, r8, ip
  40623a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40623e:	fb08 f309 	mul.w	r3, r8, r9
  406242:	42ab      	cmp	r3, r5
  406244:	d90a      	bls.n	40625c <__udivmoddi4+0x6c>
  406246:	19ed      	adds	r5, r5, r7
  406248:	f108 32ff 	add.w	r2, r8, #4294967295
  40624c:	f080 8123 	bcs.w	406496 <__udivmoddi4+0x2a6>
  406250:	42ab      	cmp	r3, r5
  406252:	f240 8120 	bls.w	406496 <__udivmoddi4+0x2a6>
  406256:	f1a8 0802 	sub.w	r8, r8, #2
  40625a:	443d      	add	r5, r7
  40625c:	1aed      	subs	r5, r5, r3
  40625e:	b2a4      	uxth	r4, r4
  406260:	fbb5 f0fa 	udiv	r0, r5, sl
  406264:	fb0a 5510 	mls	r5, sl, r0, r5
  406268:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40626c:	fb00 f909 	mul.w	r9, r0, r9
  406270:	45a1      	cmp	r9, r4
  406272:	d909      	bls.n	406288 <__udivmoddi4+0x98>
  406274:	19e4      	adds	r4, r4, r7
  406276:	f100 33ff 	add.w	r3, r0, #4294967295
  40627a:	f080 810a 	bcs.w	406492 <__udivmoddi4+0x2a2>
  40627e:	45a1      	cmp	r9, r4
  406280:	f240 8107 	bls.w	406492 <__udivmoddi4+0x2a2>
  406284:	3802      	subs	r0, #2
  406286:	443c      	add	r4, r7
  406288:	eba4 0409 	sub.w	r4, r4, r9
  40628c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406290:	2100      	movs	r1, #0
  406292:	2e00      	cmp	r6, #0
  406294:	d061      	beq.n	40635a <__udivmoddi4+0x16a>
  406296:	fa24 f40e 	lsr.w	r4, r4, lr
  40629a:	2300      	movs	r3, #0
  40629c:	6034      	str	r4, [r6, #0]
  40629e:	6073      	str	r3, [r6, #4]
  4062a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062a4:	428b      	cmp	r3, r1
  4062a6:	d907      	bls.n	4062b8 <__udivmoddi4+0xc8>
  4062a8:	2e00      	cmp	r6, #0
  4062aa:	d054      	beq.n	406356 <__udivmoddi4+0x166>
  4062ac:	2100      	movs	r1, #0
  4062ae:	e886 0021 	stmia.w	r6, {r0, r5}
  4062b2:	4608      	mov	r0, r1
  4062b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062b8:	fab3 f183 	clz	r1, r3
  4062bc:	2900      	cmp	r1, #0
  4062be:	f040 808e 	bne.w	4063de <__udivmoddi4+0x1ee>
  4062c2:	42ab      	cmp	r3, r5
  4062c4:	d302      	bcc.n	4062cc <__udivmoddi4+0xdc>
  4062c6:	4282      	cmp	r2, r0
  4062c8:	f200 80fa 	bhi.w	4064c0 <__udivmoddi4+0x2d0>
  4062cc:	1a84      	subs	r4, r0, r2
  4062ce:	eb65 0503 	sbc.w	r5, r5, r3
  4062d2:	2001      	movs	r0, #1
  4062d4:	46ac      	mov	ip, r5
  4062d6:	2e00      	cmp	r6, #0
  4062d8:	d03f      	beq.n	40635a <__udivmoddi4+0x16a>
  4062da:	e886 1010 	stmia.w	r6, {r4, ip}
  4062de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062e2:	b912      	cbnz	r2, 4062ea <__udivmoddi4+0xfa>
  4062e4:	2701      	movs	r7, #1
  4062e6:	fbb7 f7f2 	udiv	r7, r7, r2
  4062ea:	fab7 fe87 	clz	lr, r7
  4062ee:	f1be 0f00 	cmp.w	lr, #0
  4062f2:	d134      	bne.n	40635e <__udivmoddi4+0x16e>
  4062f4:	1beb      	subs	r3, r5, r7
  4062f6:	0c3a      	lsrs	r2, r7, #16
  4062f8:	fa1f fc87 	uxth.w	ip, r7
  4062fc:	2101      	movs	r1, #1
  4062fe:	fbb3 f8f2 	udiv	r8, r3, r2
  406302:	0c25      	lsrs	r5, r4, #16
  406304:	fb02 3318 	mls	r3, r2, r8, r3
  406308:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40630c:	fb0c f308 	mul.w	r3, ip, r8
  406310:	42ab      	cmp	r3, r5
  406312:	d907      	bls.n	406324 <__udivmoddi4+0x134>
  406314:	19ed      	adds	r5, r5, r7
  406316:	f108 30ff 	add.w	r0, r8, #4294967295
  40631a:	d202      	bcs.n	406322 <__udivmoddi4+0x132>
  40631c:	42ab      	cmp	r3, r5
  40631e:	f200 80d1 	bhi.w	4064c4 <__udivmoddi4+0x2d4>
  406322:	4680      	mov	r8, r0
  406324:	1aed      	subs	r5, r5, r3
  406326:	b2a3      	uxth	r3, r4
  406328:	fbb5 f0f2 	udiv	r0, r5, r2
  40632c:	fb02 5510 	mls	r5, r2, r0, r5
  406330:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406334:	fb0c fc00 	mul.w	ip, ip, r0
  406338:	45a4      	cmp	ip, r4
  40633a:	d907      	bls.n	40634c <__udivmoddi4+0x15c>
  40633c:	19e4      	adds	r4, r4, r7
  40633e:	f100 33ff 	add.w	r3, r0, #4294967295
  406342:	d202      	bcs.n	40634a <__udivmoddi4+0x15a>
  406344:	45a4      	cmp	ip, r4
  406346:	f200 80b8 	bhi.w	4064ba <__udivmoddi4+0x2ca>
  40634a:	4618      	mov	r0, r3
  40634c:	eba4 040c 	sub.w	r4, r4, ip
  406350:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406354:	e79d      	b.n	406292 <__udivmoddi4+0xa2>
  406356:	4631      	mov	r1, r6
  406358:	4630      	mov	r0, r6
  40635a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40635e:	f1ce 0420 	rsb	r4, lr, #32
  406362:	fa05 f30e 	lsl.w	r3, r5, lr
  406366:	fa07 f70e 	lsl.w	r7, r7, lr
  40636a:	fa20 f804 	lsr.w	r8, r0, r4
  40636e:	0c3a      	lsrs	r2, r7, #16
  406370:	fa25 f404 	lsr.w	r4, r5, r4
  406374:	ea48 0803 	orr.w	r8, r8, r3
  406378:	fbb4 f1f2 	udiv	r1, r4, r2
  40637c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406380:	fb02 4411 	mls	r4, r2, r1, r4
  406384:	fa1f fc87 	uxth.w	ip, r7
  406388:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40638c:	fb01 f30c 	mul.w	r3, r1, ip
  406390:	42ab      	cmp	r3, r5
  406392:	fa00 f40e 	lsl.w	r4, r0, lr
  406396:	d909      	bls.n	4063ac <__udivmoddi4+0x1bc>
  406398:	19ed      	adds	r5, r5, r7
  40639a:	f101 30ff 	add.w	r0, r1, #4294967295
  40639e:	f080 808a 	bcs.w	4064b6 <__udivmoddi4+0x2c6>
  4063a2:	42ab      	cmp	r3, r5
  4063a4:	f240 8087 	bls.w	4064b6 <__udivmoddi4+0x2c6>
  4063a8:	3902      	subs	r1, #2
  4063aa:	443d      	add	r5, r7
  4063ac:	1aeb      	subs	r3, r5, r3
  4063ae:	fa1f f588 	uxth.w	r5, r8
  4063b2:	fbb3 f0f2 	udiv	r0, r3, r2
  4063b6:	fb02 3310 	mls	r3, r2, r0, r3
  4063ba:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4063be:	fb00 f30c 	mul.w	r3, r0, ip
  4063c2:	42ab      	cmp	r3, r5
  4063c4:	d907      	bls.n	4063d6 <__udivmoddi4+0x1e6>
  4063c6:	19ed      	adds	r5, r5, r7
  4063c8:	f100 38ff 	add.w	r8, r0, #4294967295
  4063cc:	d26f      	bcs.n	4064ae <__udivmoddi4+0x2be>
  4063ce:	42ab      	cmp	r3, r5
  4063d0:	d96d      	bls.n	4064ae <__udivmoddi4+0x2be>
  4063d2:	3802      	subs	r0, #2
  4063d4:	443d      	add	r5, r7
  4063d6:	1aeb      	subs	r3, r5, r3
  4063d8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4063dc:	e78f      	b.n	4062fe <__udivmoddi4+0x10e>
  4063de:	f1c1 0720 	rsb	r7, r1, #32
  4063e2:	fa22 f807 	lsr.w	r8, r2, r7
  4063e6:	408b      	lsls	r3, r1
  4063e8:	fa05 f401 	lsl.w	r4, r5, r1
  4063ec:	ea48 0303 	orr.w	r3, r8, r3
  4063f0:	fa20 fe07 	lsr.w	lr, r0, r7
  4063f4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4063f8:	40fd      	lsrs	r5, r7
  4063fa:	ea4e 0e04 	orr.w	lr, lr, r4
  4063fe:	fbb5 f9fc 	udiv	r9, r5, ip
  406402:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406406:	fb0c 5519 	mls	r5, ip, r9, r5
  40640a:	fa1f f883 	uxth.w	r8, r3
  40640e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406412:	fb09 f408 	mul.w	r4, r9, r8
  406416:	42ac      	cmp	r4, r5
  406418:	fa02 f201 	lsl.w	r2, r2, r1
  40641c:	fa00 fa01 	lsl.w	sl, r0, r1
  406420:	d908      	bls.n	406434 <__udivmoddi4+0x244>
  406422:	18ed      	adds	r5, r5, r3
  406424:	f109 30ff 	add.w	r0, r9, #4294967295
  406428:	d243      	bcs.n	4064b2 <__udivmoddi4+0x2c2>
  40642a:	42ac      	cmp	r4, r5
  40642c:	d941      	bls.n	4064b2 <__udivmoddi4+0x2c2>
  40642e:	f1a9 0902 	sub.w	r9, r9, #2
  406432:	441d      	add	r5, r3
  406434:	1b2d      	subs	r5, r5, r4
  406436:	fa1f fe8e 	uxth.w	lr, lr
  40643a:	fbb5 f0fc 	udiv	r0, r5, ip
  40643e:	fb0c 5510 	mls	r5, ip, r0, r5
  406442:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406446:	fb00 f808 	mul.w	r8, r0, r8
  40644a:	45a0      	cmp	r8, r4
  40644c:	d907      	bls.n	40645e <__udivmoddi4+0x26e>
  40644e:	18e4      	adds	r4, r4, r3
  406450:	f100 35ff 	add.w	r5, r0, #4294967295
  406454:	d229      	bcs.n	4064aa <__udivmoddi4+0x2ba>
  406456:	45a0      	cmp	r8, r4
  406458:	d927      	bls.n	4064aa <__udivmoddi4+0x2ba>
  40645a:	3802      	subs	r0, #2
  40645c:	441c      	add	r4, r3
  40645e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406462:	eba4 0408 	sub.w	r4, r4, r8
  406466:	fba0 8902 	umull	r8, r9, r0, r2
  40646a:	454c      	cmp	r4, r9
  40646c:	46c6      	mov	lr, r8
  40646e:	464d      	mov	r5, r9
  406470:	d315      	bcc.n	40649e <__udivmoddi4+0x2ae>
  406472:	d012      	beq.n	40649a <__udivmoddi4+0x2aa>
  406474:	b156      	cbz	r6, 40648c <__udivmoddi4+0x29c>
  406476:	ebba 030e 	subs.w	r3, sl, lr
  40647a:	eb64 0405 	sbc.w	r4, r4, r5
  40647e:	fa04 f707 	lsl.w	r7, r4, r7
  406482:	40cb      	lsrs	r3, r1
  406484:	431f      	orrs	r7, r3
  406486:	40cc      	lsrs	r4, r1
  406488:	6037      	str	r7, [r6, #0]
  40648a:	6074      	str	r4, [r6, #4]
  40648c:	2100      	movs	r1, #0
  40648e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406492:	4618      	mov	r0, r3
  406494:	e6f8      	b.n	406288 <__udivmoddi4+0x98>
  406496:	4690      	mov	r8, r2
  406498:	e6e0      	b.n	40625c <__udivmoddi4+0x6c>
  40649a:	45c2      	cmp	sl, r8
  40649c:	d2ea      	bcs.n	406474 <__udivmoddi4+0x284>
  40649e:	ebb8 0e02 	subs.w	lr, r8, r2
  4064a2:	eb69 0503 	sbc.w	r5, r9, r3
  4064a6:	3801      	subs	r0, #1
  4064a8:	e7e4      	b.n	406474 <__udivmoddi4+0x284>
  4064aa:	4628      	mov	r0, r5
  4064ac:	e7d7      	b.n	40645e <__udivmoddi4+0x26e>
  4064ae:	4640      	mov	r0, r8
  4064b0:	e791      	b.n	4063d6 <__udivmoddi4+0x1e6>
  4064b2:	4681      	mov	r9, r0
  4064b4:	e7be      	b.n	406434 <__udivmoddi4+0x244>
  4064b6:	4601      	mov	r1, r0
  4064b8:	e778      	b.n	4063ac <__udivmoddi4+0x1bc>
  4064ba:	3802      	subs	r0, #2
  4064bc:	443c      	add	r4, r7
  4064be:	e745      	b.n	40634c <__udivmoddi4+0x15c>
  4064c0:	4608      	mov	r0, r1
  4064c2:	e708      	b.n	4062d6 <__udivmoddi4+0xe6>
  4064c4:	f1a8 0802 	sub.w	r8, r8, #2
  4064c8:	443d      	add	r5, r7
  4064ca:	e72b      	b.n	406324 <__udivmoddi4+0x134>

004064cc <__aeabi_idiv0>:
  4064cc:	4770      	bx	lr
  4064ce:	bf00      	nop

004064d0 <sysfont_glyphs>:
	...
  4064f0:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406500:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406510:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406528:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406538:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406548:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406560:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406570:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406580:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  406598:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4065b4:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4065c4:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4065d4:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4065e4:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  40660c:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406634:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406644:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406668:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406678:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406688:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  406698:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4066b0:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4066c0:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4066d0:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4066e8:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4066f8:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  406708:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406720:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406730:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406740:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406758:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406768:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406778:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406790:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4067a0:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4067b0:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4067cc:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4067dc:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4067ec:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406808:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406820:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406838:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406848:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406858:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406870:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406880:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406890:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4068a8:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4068b8:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4068c8:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4068e0:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  4068f0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406900:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406918:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406928:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406938:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406950:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406960:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406970:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406988:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  406998:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4069a8:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4069c0:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4069d0:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4069e0:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  4069f8:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406a08:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406a18:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406a30:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406a40:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406a50:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406a68:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406a78:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406a88:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406aa0:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406ab0:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406ac0:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  406ad8:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  406ae8:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406af8:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406b10:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406b20:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406b30:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406b48:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406b58:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406b68:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406b80:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406b90:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406ba0:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406bc8:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406bd8:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406bf4:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406c0c:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406c1c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406c2c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406c44:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406c54:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406c64:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406c7c:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406c8c:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406c9c:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406cac:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406cbc:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406ccc:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406cdc:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406cec:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406cfc:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406d0c:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406d24:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406d34:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406d44:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406d60:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406d7c:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406d98:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406da8:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406db8:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406dd0:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406dec:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406e08:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406e24:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406e40:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406e5c:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406e78:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406e94:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406ea4:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406eb4:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406ec4:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406ed4:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406ee4:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406ef4:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406f04:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406f14:	0000 0000 3025 6433 6b20 2f6d 2068 0000     ....%03d km/h ..
  406f24:	6556 206c 0020 0000 3025 6434 6d20 2020     Vel  ...%04d m  
  406f34:	0000 0000 744d 2073 0000 0000 3025 6432     ....Mts ....%02d
  406f44:	253a 3230 3a64 3025 6432 2020 0000 0000     :%02d:%02d  ....

00406f54 <_global_impure_ptr>:
  406f54:	0030 2040 4e49 0046 6e69 0066 414e 004e     0.@ INF.inf.NAN.
  406f64:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406f74:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406f84:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406f94:	296c 0000 0030 0000                         l)..0...

00406f9c <blanks.7223>:
  406f9c:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406fac <zeroes.7224>:
  406fac:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406fbc:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406fcc:	0000 0000                                   ....

00406fd0 <__mprec_bigtens>:
  406fd0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406fe0:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406ff0:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406ff8 <__mprec_tens>:
  406ff8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  407008:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  407018:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  407028:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  407038:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  407048:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407058:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407068:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407078:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407088:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407098:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  4070a8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  4070b8:	9db4 79d9 7843 44ea                         ...yCx.D

004070c0 <p05.6055>:
  4070c0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  4070d0:	4f50 4953 0058 0000 002e 0000               POSIX.......

004070dc <_ctype_>:
  4070dc:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  4070ec:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4070fc:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40710c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40711c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40712c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40713c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40714c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40715c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004071e0 <_init>:
  4071e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4071e2:	bf00      	nop
  4071e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4071e6:	bc08      	pop	{r3}
  4071e8:	469e      	mov	lr, r3
  4071ea:	4770      	bx	lr

004071ec <__init_array_start>:
  4071ec:	0040391d 	.word	0x0040391d

004071f0 <__frame_dummy_init_array_entry>:
  4071f0:	00400165                                e.@.

004071f4 <_fini>:
  4071f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4071f6:	bf00      	nop
  4071f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4071fa:	bc08      	pop	{r3}
  4071fc:	469e      	mov	lr, r3
  4071fe:	4770      	bx	lr

00407200 <__fini_array_start>:
  407200:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 64d0 0040 0e0a 7d20               .....d@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <raio>:
20400020:	cccd cccc cccc 3fe4                         .......?

20400028 <_impure_ptr>:
20400028:	0030 2040 0000 0000                         0.@ ....

20400030 <impure_data>:
20400030:	0000 0000 031c 2040 0384 2040 03ec 2040     ......@ ..@ ..@ 
	...
204000d8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400458 <__atexit_recursive_mutex>:
20400458:	0ccc 2040                                   ..@ 

2040045c <__malloc_av_>:
	...
20400464:	045c 2040 045c 2040 0464 2040 0464 2040     \.@ \.@ d.@ d.@ 
20400474:	046c 2040 046c 2040 0474 2040 0474 2040     l.@ l.@ t.@ t.@ 
20400484:	047c 2040 047c 2040 0484 2040 0484 2040     |.@ |.@ ..@ ..@ 
20400494:	048c 2040 048c 2040 0494 2040 0494 2040     ..@ ..@ ..@ ..@ 
204004a4:	049c 2040 049c 2040 04a4 2040 04a4 2040     ..@ ..@ ..@ ..@ 
204004b4:	04ac 2040 04ac 2040 04b4 2040 04b4 2040     ..@ ..@ ..@ ..@ 
204004c4:	04bc 2040 04bc 2040 04c4 2040 04c4 2040     ..@ ..@ ..@ ..@ 
204004d4:	04cc 2040 04cc 2040 04d4 2040 04d4 2040     ..@ ..@ ..@ ..@ 
204004e4:	04dc 2040 04dc 2040 04e4 2040 04e4 2040     ..@ ..@ ..@ ..@ 
204004f4:	04ec 2040 04ec 2040 04f4 2040 04f4 2040     ..@ ..@ ..@ ..@ 
20400504:	04fc 2040 04fc 2040 0504 2040 0504 2040     ..@ ..@ ..@ ..@ 
20400514:	050c 2040 050c 2040 0514 2040 0514 2040     ..@ ..@ ..@ ..@ 
20400524:	051c 2040 051c 2040 0524 2040 0524 2040     ..@ ..@ $.@ $.@ 
20400534:	052c 2040 052c 2040 0534 2040 0534 2040     ,.@ ,.@ 4.@ 4.@ 
20400544:	053c 2040 053c 2040 0544 2040 0544 2040     <.@ <.@ D.@ D.@ 
20400554:	054c 2040 054c 2040 0554 2040 0554 2040     L.@ L.@ T.@ T.@ 
20400564:	055c 2040 055c 2040 0564 2040 0564 2040     \.@ \.@ d.@ d.@ 
20400574:	056c 2040 056c 2040 0574 2040 0574 2040     l.@ l.@ t.@ t.@ 
20400584:	057c 2040 057c 2040 0584 2040 0584 2040     |.@ |.@ ..@ ..@ 
20400594:	058c 2040 058c 2040 0594 2040 0594 2040     ..@ ..@ ..@ ..@ 
204005a4:	059c 2040 059c 2040 05a4 2040 05a4 2040     ..@ ..@ ..@ ..@ 
204005b4:	05ac 2040 05ac 2040 05b4 2040 05b4 2040     ..@ ..@ ..@ ..@ 
204005c4:	05bc 2040 05bc 2040 05c4 2040 05c4 2040     ..@ ..@ ..@ ..@ 
204005d4:	05cc 2040 05cc 2040 05d4 2040 05d4 2040     ..@ ..@ ..@ ..@ 
204005e4:	05dc 2040 05dc 2040 05e4 2040 05e4 2040     ..@ ..@ ..@ ..@ 
204005f4:	05ec 2040 05ec 2040 05f4 2040 05f4 2040     ..@ ..@ ..@ ..@ 
20400604:	05fc 2040 05fc 2040 0604 2040 0604 2040     ..@ ..@ ..@ ..@ 
20400614:	060c 2040 060c 2040 0614 2040 0614 2040     ..@ ..@ ..@ ..@ 
20400624:	061c 2040 061c 2040 0624 2040 0624 2040     ..@ ..@ $.@ $.@ 
20400634:	062c 2040 062c 2040 0634 2040 0634 2040     ,.@ ,.@ 4.@ 4.@ 
20400644:	063c 2040 063c 2040 0644 2040 0644 2040     <.@ <.@ D.@ D.@ 
20400654:	064c 2040 064c 2040 0654 2040 0654 2040     L.@ L.@ T.@ T.@ 
20400664:	065c 2040 065c 2040 0664 2040 0664 2040     \.@ \.@ d.@ d.@ 
20400674:	066c 2040 066c 2040 0674 2040 0674 2040     l.@ l.@ t.@ t.@ 
20400684:	067c 2040 067c 2040 0684 2040 0684 2040     |.@ |.@ ..@ ..@ 
20400694:	068c 2040 068c 2040 0694 2040 0694 2040     ..@ ..@ ..@ ..@ 
204006a4:	069c 2040 069c 2040 06a4 2040 06a4 2040     ..@ ..@ ..@ ..@ 
204006b4:	06ac 2040 06ac 2040 06b4 2040 06b4 2040     ..@ ..@ ..@ ..@ 
204006c4:	06bc 2040 06bc 2040 06c4 2040 06c4 2040     ..@ ..@ ..@ ..@ 
204006d4:	06cc 2040 06cc 2040 06d4 2040 06d4 2040     ..@ ..@ ..@ ..@ 
204006e4:	06dc 2040 06dc 2040 06e4 2040 06e4 2040     ..@ ..@ ..@ ..@ 
204006f4:	06ec 2040 06ec 2040 06f4 2040 06f4 2040     ..@ ..@ ..@ ..@ 
20400704:	06fc 2040 06fc 2040 0704 2040 0704 2040     ..@ ..@ ..@ ..@ 
20400714:	070c 2040 070c 2040 0714 2040 0714 2040     ..@ ..@ ..@ ..@ 
20400724:	071c 2040 071c 2040 0724 2040 0724 2040     ..@ ..@ $.@ $.@ 
20400734:	072c 2040 072c 2040 0734 2040 0734 2040     ,.@ ,.@ 4.@ 4.@ 
20400744:	073c 2040 073c 2040 0744 2040 0744 2040     <.@ <.@ D.@ D.@ 
20400754:	074c 2040 074c 2040 0754 2040 0754 2040     L.@ L.@ T.@ T.@ 
20400764:	075c 2040 075c 2040 0764 2040 0764 2040     \.@ \.@ d.@ d.@ 
20400774:	076c 2040 076c 2040 0774 2040 0774 2040     l.@ l.@ t.@ t.@ 
20400784:	077c 2040 077c 2040 0784 2040 0784 2040     |.@ |.@ ..@ ..@ 
20400794:	078c 2040 078c 2040 0794 2040 0794 2040     ..@ ..@ ..@ ..@ 
204007a4:	079c 2040 079c 2040 07a4 2040 07a4 2040     ..@ ..@ ..@ ..@ 
204007b4:	07ac 2040 07ac 2040 07b4 2040 07b4 2040     ..@ ..@ ..@ ..@ 
204007c4:	07bc 2040 07bc 2040 07c4 2040 07c4 2040     ..@ ..@ ..@ ..@ 
204007d4:	07cc 2040 07cc 2040 07d4 2040 07d4 2040     ..@ ..@ ..@ ..@ 
204007e4:	07dc 2040 07dc 2040 07e4 2040 07e4 2040     ..@ ..@ ..@ ..@ 
204007f4:	07ec 2040 07ec 2040 07f4 2040 07f4 2040     ..@ ..@ ..@ ..@ 
20400804:	07fc 2040 07fc 2040 0804 2040 0804 2040     ..@ ..@ ..@ ..@ 
20400814:	080c 2040 080c 2040 0814 2040 0814 2040     ..@ ..@ ..@ ..@ 
20400824:	081c 2040 081c 2040 0824 2040 0824 2040     ..@ ..@ $.@ $.@ 
20400834:	082c 2040 082c 2040 0834 2040 0834 2040     ,.@ ,.@ 4.@ 4.@ 
20400844:	083c 2040 083c 2040 0844 2040 0844 2040     <.@ <.@ D.@ D.@ 
20400854:	084c 2040 084c 2040 0854 2040 0854 2040     L.@ L.@ T.@ T.@ 

20400864 <__malloc_sbrk_base>:
20400864:	ffff ffff                                   ....

20400868 <__malloc_trim_threshold>:
20400868:	0000 0002                                   ....

2040086c <__global_locale>:
2040086c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040088c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ac:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008cc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ec:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040090c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040092c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040094c:	6069 0040 5c29 0040 0000 0000 70dc 0040     i`@.)\@......p@.
2040095c:	70d8 0040 6f50 0040 6f50 0040 6f50 0040     .p@.Po@.Po@.Po@.
2040096c:	6f50 0040 6f50 0040 6f50 0040 6f50 0040     Po@.Po@.Po@.Po@.
2040097c:	6f50 0040 6f50 0040 ffff ffff ffff ffff     Po@.Po@.........
2040098c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009b4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
