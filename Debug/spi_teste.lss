
spi_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007134  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00407134  00407134  00017134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d8  20400000  0040713c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000320  204009d8  00407b18  000209d8  2**3
                  ALLOC
  4 .stack        00002000  20400cf8  00407e38  000209d8  2**0
                  ALLOC
  5 .heap         00000200  20402cf8  00409e38  000209d8  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d8  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  00020a06  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019ee6  00000000  00000000  00020a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003ba1  00000000  00000000  0003a945  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000060d8  00000000  00000000  0003e4e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000980  00000000  00000000  000445be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000009f0  00000000  00000000  00044f3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00021e9e  00000000  00000000  0004592e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fb80  00000000  00000000  000677cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00090578  00000000  00000000  0007734c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000020e8  00000000  00000000  001078c4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	f8 2c 40 20 f1 13 40 00 ed 13 40 00 ed 13 40 00     .,@ ..@...@...@.
  400010:	ed 13 40 00 ed 13 40 00 ed 13 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	ed 13 40 00 ed 13 40 00 00 00 00 00 ed 13 40 00     ..@...@.......@.
  40003c:	ed 13 40 00 ed 13 40 00 ed 13 40 00 c9 17 40 00     ..@...@...@...@.
  40004c:	e1 16 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  40005c:	ed 13 40 00 ed 13 40 00 00 00 00 00 51 0f 40 00     ..@...@.....Q.@.
  40006c:	65 0f 40 00 79 0f 40 00 ed 13 40 00 ed 13 40 00     e.@.y.@...@...@.
  40007c:	ed 13 40 00 8d 0f 40 00 a1 0f 40 00 ed 13 40 00     ..@...@...@...@.
  40008c:	ed 13 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  40009c:	ed 13 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  4000ac:	ed 13 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  4000bc:	ed 13 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  4000cc:	ed 13 40 00 00 00 00 00 ed 13 40 00 00 00 00 00     ..@.......@.....
  4000dc:	ed 13 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  4000ec:	ed 13 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  4000fc:	ed 13 40 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ..@...@...@...@.
  40010c:	ed 13 40 00 ed 13 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 ed 13 40 00 ed 13 40 00 ed 13 40 00     ......@...@...@.
  40012c:	ed 13 40 00 ed 13 40 00 00 00 00 00 ed 13 40 00     ..@...@.......@.
  40013c:	ed 13 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d8 	.word	0x204009d8
  40015c:	00000000 	.word	0x00000000
  400160:	0040713c 	.word	0x0040713c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	0040713c 	.word	0x0040713c
  4001a0:	204009dc 	.word	0x204009dc
  4001a4:	0040713c 	.word	0x0040713c
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
  4001ac:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
  4001ae:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001b0:	6884      	ldr	r4, [r0, #8]
  4001b2:	42a5      	cmp	r5, r4
  4001b4:	d003      	beq.n	4001be <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
  4001b6:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001b8:	6884      	ldr	r4, [r0, #8]
  4001ba:	42ac      	cmp	r4, r5
  4001bc:	d1fb      	bne.n	4001b6 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
  4001be:	b161      	cbz	r1, 4001da <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001c0:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4001c4:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4001c8:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4001cc:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
  4001d0:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
  4001d4:	bf18      	it	ne
  4001d6:	300c      	addne	r0, #12
  4001d8:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
  4001da:	b142      	cbz	r2, 4001ee <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
  4001dc:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4001e0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4001e4:	f3c4 2003 	ubfx	r0, r4, #8, #4
  4001e8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  4001ec:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
  4001ee:	b143      	cbz	r3, 400202 <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001f0:	f3c4 1202 	ubfx	r2, r4, #4, #3
  4001f4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  4001f8:	f004 040f 	and.w	r4, r4, #15
  4001fc:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  400200:	601c      	str	r4, [r3, #0]
	}
}
  400202:	bc30      	pop	{r4, r5}
  400204:	4770      	bx	lr
	...

00400208 <rtc_set_time_alarm>:
 */
uint32_t rtc_set_time_alarm(Rtc *p_rtc,
		uint32_t ul_hour_flag, uint32_t ul_hour,
		uint32_t ul_minute_flag, uint32_t ul_minute,
		uint32_t ul_second_flag, uint32_t ul_second)
{
  400208:	b5f0      	push	{r4, r5, r6, r7, lr}
  40020a:	9c05      	ldr	r4, [sp, #20]
  40020c:	9d06      	ldr	r5, [sp, #24]
  40020e:	9f07      	ldr	r7, [sp, #28]
	uint32_t ul_alarm = 0;

	/* Hour alarm setting */
	if (ul_hour_flag) {
  400210:	460e      	mov	r6, r1
  400212:	b1b1      	cbz	r1, 400242 <rtc_set_time_alarm+0x3a>
		/* If 12-hour mode, set AMPM bit */
		if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  400214:	6841      	ldr	r1, [r0, #4]
			if (ul_hour > 12) {
  400216:	f011 0f01 	tst.w	r1, #1
  40021a:	d005      	beq.n	400228 <rtc_set_time_alarm+0x20>
  40021c:	2a0c      	cmp	r2, #12
  40021e:	d903      	bls.n	400228 <rtc_set_time_alarm+0x20>
				ul_hour -= 12;
  400220:	3a0c      	subs	r2, #12
				ul_alarm |= RTC_TIMR_AMPM;
  400222:	f44f 0680 	mov.w	r6, #4194304	; 0x400000
  400226:	e000      	b.n	40022a <rtc_set_time_alarm+0x22>
	uint32_t ul_alarm = 0;
  400228:	2600      	movs	r6, #0
			}
		}

		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40022a:	4919      	ldr	r1, [pc, #100]	; (400290 <rtc_set_time_alarm+0x88>)
  40022c:	fba1 e102 	umull	lr, r1, r1, r2
  400230:	08c9      	lsrs	r1, r1, #3
				((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  400232:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
  400236:	eba2 024e 	sub.w	r2, r2, lr, lsl #1
  40023a:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  40023c:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
  400240:	4316      	orrs	r6, r2
	}

	/* Minute alarm setting */
	if (ul_minute_flag) {
  400242:	b15b      	cbz	r3, 40025c <rtc_set_time_alarm+0x54>
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  400244:	4b12      	ldr	r3, [pc, #72]	; (400290 <rtc_set_time_alarm+0x88>)
  400246:	fba3 2304 	umull	r2, r3, r3, r4
  40024a:	08db      	lsrs	r3, r3, #3
				((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  40024c:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  400250:	eba4 0442 	sub.w	r4, r4, r2, lsl #1
  400254:	0224      	lsls	r4, r4, #8
		ul_alarm |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  400256:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
  40025a:	4326      	orrs	r6, r4
	}

	/* Second alarm setting */
	if (ul_second_flag) {
  40025c:	b155      	cbz	r5, 400274 <rtc_set_time_alarm+0x6c>
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  40025e:	4b0c      	ldr	r3, [pc, #48]	; (400290 <rtc_set_time_alarm+0x88>)
  400260:	fba3 2307 	umull	r2, r3, r3, r7
  400264:	08db      	lsrs	r3, r3, #3
				((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  400266:	eb03 0283 	add.w	r2, r3, r3, lsl #2
  40026a:	eba7 0742 	sub.w	r7, r7, r2, lsl #1
		ul_alarm |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  40026e:	ea47 1303 	orr.w	r3, r7, r3, lsl #4
  400272:	431e      	orrs	r6, r3
	}

	p_rtc->RTC_TIMALR &= ~(RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  400274:	6902      	ldr	r2, [r0, #16]
  400276:	4b07      	ldr	r3, [pc, #28]	; (400294 <rtc_set_time_alarm+0x8c>)
  400278:	4013      	ands	r3, r2
  40027a:	6103      	str	r3, [r0, #16]
	p_rtc->RTC_TIMALR = ul_alarm;
  40027c:	6106      	str	r6, [r0, #16]
	p_rtc->RTC_TIMALR |= (RTC_TIMALR_SECEN | RTC_TIMALR_MINEN | RTC_TIMALR_HOUREN);
  40027e:	6902      	ldr	r2, [r0, #16]
  400280:	4b05      	ldr	r3, [pc, #20]	; (400298 <rtc_set_time_alarm+0x90>)
  400282:	4313      	orrs	r3, r2
  400284:	6103      	str	r3, [r0, #16]

	return (p_rtc->RTC_VER & RTC_VER_NVTIMALR);
  400286:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400288:	f000 0004 	and.w	r0, r0, #4
  40028c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40028e:	bf00      	nop
  400290:	cccccccd 	.word	0xcccccccd
  400294:	ff7f7f7f 	.word	0xff7f7f7f
  400298:	00808080 	.word	0x00808080

0040029c <rtc_get_date>:
 * \param pul_day Current day.
 * \param pul_week Current day in current week.
 */
void rtc_get_date(Rtc *p_rtc, uint32_t *pul_year, uint32_t *pul_month,
		uint32_t *pul_day, uint32_t *pul_week)
{
  40029c:	b4f0      	push	{r4, r5, r6, r7}
  40029e:	9e04      	ldr	r6, [sp, #16]
	uint32_t ul_date;
	uint32_t ul_cent;
	uint32_t ul_temp;

	/* Get the current date (multiple reads are necessary to insure a stable value). */
	ul_date = p_rtc->RTC_CALR;
  4002a0:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
  4002a2:	68c4      	ldr	r4, [r0, #12]
  4002a4:	42a5      	cmp	r5, r4
  4002a6:	d003      	beq.n	4002b0 <rtc_get_date+0x14>
		ul_date = p_rtc->RTC_CALR;
  4002a8:	68c5      	ldr	r5, [r0, #12]
	while (ul_date != p_rtc->RTC_CALR) {
  4002aa:	68c4      	ldr	r4, [r0, #12]
  4002ac:	42ac      	cmp	r4, r5
  4002ae:	d1fb      	bne.n	4002a8 <rtc_get_date+0xc>
	}

	/* Retrieve year */
	if (pul_year) {
  4002b0:	b199      	cbz	r1, 4002da <rtc_get_date+0x3e>
		ul_temp = (ul_date & RTC_CALR_CENT_Msk) >> RTC_CALR_CENT_Pos;
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
		ul_temp = (ul_date & RTC_CALR_YEAR_Msk) >> RTC_CALR_YEAR_Pos;
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002b2:	f3c4 3003 	ubfx	r0, r4, #12, #4
  4002b6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  4002ba:	f3c4 2703 	ubfx	r7, r4, #8, #4
  4002be:	eb07 0740 	add.w	r7, r7, r0, lsl #1
		ul_cent = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002c2:	f3c4 1002 	ubfx	r0, r4, #4, #3
  4002c6:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4002ca:	f004 000f 	and.w	r0, r4, #15
  4002ce:	eb00 0045 	add.w	r0, r0, r5, lsl #1
				(ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002d2:	2564      	movs	r5, #100	; 0x64
  4002d4:	fb05 7000 	mla	r0, r5, r0, r7
		*pul_year = (ul_cent * BCD_FACTOR * BCD_FACTOR) +
  4002d8:	6008      	str	r0, [r1, #0]
	}

	/* Retrieve month */
	if (pul_month) {
  4002da:	b142      	cbz	r2, 4002ee <rtc_get_date+0x52>
		ul_temp = (ul_date & RTC_CALR_MONTH_Msk) >> RTC_CALR_MONTH_Pos;
		*pul_month = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002dc:	f3c4 5000 	ubfx	r0, r4, #20, #1
  4002e0:	0081      	lsls	r1, r0, #2
  4002e2:	4408      	add	r0, r1
  4002e4:	f3c4 4103 	ubfx	r1, r4, #16, #4
  4002e8:	eb01 0140 	add.w	r1, r1, r0, lsl #1
  4002ec:	6011      	str	r1, [r2, #0]
	}

	/* Retrieve day */
	if (pul_day) {
  4002ee:	b143      	cbz	r3, 400302 <rtc_get_date+0x66>
		ul_temp = (ul_date & RTC_CALR_DATE_Msk) >> RTC_CALR_DATE_Pos;
		*pul_day = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4002f0:	f3c4 7201 	ubfx	r2, r4, #28, #2
  4002f4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  4002f8:	f3c4 6103 	ubfx	r1, r4, #24, #4
  4002fc:	eb01 0242 	add.w	r2, r1, r2, lsl #1
  400300:	601a      	str	r2, [r3, #0]
	}

	/* Retrieve week */
	if (pul_week) {
  400302:	b116      	cbz	r6, 40030a <rtc_get_date+0x6e>
		*pul_week = ((ul_date & RTC_CALR_DAY_Msk) >> RTC_CALR_DAY_Pos);
  400304:	f3c4 5442 	ubfx	r4, r4, #21, #3
  400308:	6034      	str	r4, [r6, #0]
	}
}
  40030a:	bcf0      	pop	{r4, r5, r6, r7}
  40030c:	4770      	bx	lr
	...

00400310 <rtc_set_date_alarm>:
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date_alarm(Rtc *p_rtc,
		uint32_t ul_month_flag, uint32_t ul_month,
		uint32_t ul_day_flag, uint32_t ul_day)
{
  400310:	b430      	push	{r4, r5}
  400312:	9d02      	ldr	r5, [sp, #8]
	uint32_t ul_alarm = 0;

	/* Month alarm setting */
	if (ul_month_flag) {
  400314:	460c      	mov	r4, r1
  400316:	b151      	cbz	r1, 40032e <rtc_set_date_alarm+0x1e>
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  400318:	4c12      	ldr	r4, [pc, #72]	; (400364 <rtc_set_date_alarm+0x54>)
  40031a:	fba4 1402 	umull	r1, r4, r4, r2
  40031e:	08e4      	lsrs	r4, r4, #3
				((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  400320:	eb04 0184 	add.w	r1, r4, r4, lsl #2
  400324:	eba2 0241 	sub.w	r2, r2, r1, lsl #1
  400328:	0412      	lsls	r2, r2, #16
		ul_alarm |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  40032a:	ea42 5404 	orr.w	r4, r2, r4, lsl #20
	}

	/* Day alarm setting */
	if (ul_day_flag) {
  40032e:	b15b      	cbz	r3, 400348 <rtc_set_date_alarm+0x38>
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400330:	4a0c      	ldr	r2, [pc, #48]	; (400364 <rtc_set_date_alarm+0x54>)
  400332:	fba2 3205 	umull	r3, r2, r2, r5
  400336:	08d2      	lsrs	r2, r2, #3
				((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  400338:	eb02 0382 	add.w	r3, r2, r2, lsl #2
  40033c:	eba5 0343 	sub.w	r3, r5, r3, lsl #1
  400340:	061b      	lsls	r3, r3, #24
		ul_alarm |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400342:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
  400346:	431c      	orrs	r4, r3
	}

	/* Set alarm */
	p_rtc->RTC_CALALR &= ~(RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  400348:	6942      	ldr	r2, [r0, #20]
  40034a:	4b07      	ldr	r3, [pc, #28]	; (400368 <rtc_set_date_alarm+0x58>)
  40034c:	4013      	ands	r3, r2
  40034e:	6143      	str	r3, [r0, #20]
	p_rtc->RTC_CALALR = ul_alarm;
  400350:	6144      	str	r4, [r0, #20]
	p_rtc->RTC_CALALR |= (RTC_CALALR_MTHEN | RTC_CALALR_DATEEN);
  400352:	6942      	ldr	r2, [r0, #20]
  400354:	4b05      	ldr	r3, [pc, #20]	; (40036c <rtc_set_date_alarm+0x5c>)
  400356:	4313      	orrs	r3, r2
  400358:	6143      	str	r3, [r0, #20]

	return (p_rtc->RTC_VER & RTC_VER_NVCALALR);
  40035a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  40035c:	f000 0008 	and.w	r0, r0, #8
  400360:	bc30      	pop	{r4, r5}
  400362:	4770      	bx	lr
  400364:	cccccccd 	.word	0xcccccccd
  400368:	7f7fffff 	.word	0x7f7fffff
  40036c:	80800000 	.word	0x80800000

00400370 <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  400370:	6980      	ldr	r0, [r0, #24]
}
  400372:	4770      	bx	lr

00400374 <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  400374:	61c1      	str	r1, [r0, #28]
  400376:	4770      	bx	lr

00400378 <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  400378:	4b03      	ldr	r3, [pc, #12]	; (400388 <rtt_init+0x10>)
  40037a:	681b      	ldr	r3, [r3, #0]
  40037c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  400380:	4319      	orrs	r1, r3
  400382:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  400384:	2000      	movs	r0, #0
  400386:	4770      	bx	lr
  400388:	204009f4 	.word	0x204009f4

0040038c <rtt_sel_source>:
 * \param p_rtt Pointer to an RTT instance.
 * \param is_rtc_sel RTC 1Hz Clock Selection.
 */
void rtt_sel_source(Rtt *p_rtt, bool is_rtc_sel)
{
	if(is_rtc_sel) {
  40038c:	b941      	cbnz	r1, 4003a0 <rtt_sel_source+0x14>
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
	} else {
		g_wobits_in_rtt_mr &= ~RTT_MR_RTC1HZ;
  40038e:	4a09      	ldr	r2, [pc, #36]	; (4003b4 <rtt_sel_source+0x28>)
  400390:	6813      	ldr	r3, [r2, #0]
  400392:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
  400396:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  400398:	6802      	ldr	r2, [r0, #0]
  40039a:	4313      	orrs	r3, r2
  40039c:	6003      	str	r3, [r0, #0]
  40039e:	4770      	bx	lr
		g_wobits_in_rtt_mr |= RTT_MR_RTC1HZ;
  4003a0:	4a04      	ldr	r2, [pc, #16]	; (4003b4 <rtt_sel_source+0x28>)
  4003a2:	6813      	ldr	r3, [r2, #0]
  4003a4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  4003a8:	6013      	str	r3, [r2, #0]
		p_rtt->RTT_MR |= g_wobits_in_rtt_mr;
  4003aa:	6802      	ldr	r2, [r0, #0]
  4003ac:	4313      	orrs	r3, r2
  4003ae:	6003      	str	r3, [r0, #0]
  4003b0:	4770      	bx	lr
  4003b2:	bf00      	nop
  4003b4:	204009f4 	.word	0x204009f4

004003b8 <rtt_enable_interrupt>:
 */
void rtt_enable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp;

	temp = p_rtt->RTT_MR;
  4003b8:	6802      	ldr	r2, [r0, #0]
	temp |= ul_sources;
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4003ba:	4b03      	ldr	r3, [pc, #12]	; (4003c8 <rtt_enable_interrupt+0x10>)
  4003bc:	681b      	ldr	r3, [r3, #0]
  4003be:	4319      	orrs	r1, r3
  4003c0:	4311      	orrs	r1, r2
#endif
	p_rtt->RTT_MR = temp;
  4003c2:	6001      	str	r1, [r0, #0]
  4003c4:	4770      	bx	lr
  4003c6:	bf00      	nop
  4003c8:	204009f4 	.word	0x204009f4

004003cc <rtt_disable_interrupt>:
 */
void rtt_disable_interrupt(Rtt *p_rtt, uint32_t ul_sources)
{
	uint32_t temp = 0;

	temp = p_rtt->RTT_MR;
  4003cc:	6803      	ldr	r3, [r0, #0]
	temp &= (~ul_sources);
  4003ce:	ea23 0101 	bic.w	r1, r3, r1
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	temp |= g_wobits_in_rtt_mr;
  4003d2:	4b02      	ldr	r3, [pc, #8]	; (4003dc <rtt_disable_interrupt+0x10>)
  4003d4:	681b      	ldr	r3, [r3, #0]
  4003d6:	4319      	orrs	r1, r3
#endif
	p_rtt->RTT_MR = temp;
  4003d8:	6001      	str	r1, [r0, #0]
  4003da:	4770      	bx	lr
  4003dc:	204009f4 	.word	0x204009f4

004003e0 <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  4003e0:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  4003e2:	6883      	ldr	r3, [r0, #8]
  4003e4:	429a      	cmp	r2, r3
  4003e6:	d003      	beq.n	4003f0 <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  4003e8:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  4003ea:	6883      	ldr	r3, [r0, #8]
  4003ec:	4293      	cmp	r3, r2
  4003ee:	d1fb      	bne.n	4003e8 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  4003f0:	4618      	mov	r0, r3
  4003f2:	4770      	bx	lr

004003f4 <rtt_get_status>:
 *
 * \return The Real-time Timer status.
 */
uint32_t rtt_get_status(Rtt *p_rtt)
{
	return p_rtt->RTT_SR;
  4003f4:	68c0      	ldr	r0, [r0, #12]
}
  4003f6:	4770      	bx	lr

004003f8 <rtt_write_alarm_time>:
 * \param ul_alarm_time Alarm time,Alarm time = ALMV + 1.
 *
 * \retval 0 Configuration is done.
 */
uint32_t rtt_write_alarm_time(Rtt *p_rtt, uint32_t ul_alarm_time)
{
  4003f8:	b570      	push	{r4, r5, r6, lr}
  4003fa:	4606      	mov	r6, r0
  4003fc:	460d      	mov	r5, r1
	uint32_t flag;

	flag = p_rtt->RTT_MR & RTT_MR_ALMIEN;
  4003fe:	6804      	ldr	r4, [r0, #0]
  400400:	f404 3480 	and.w	r4, r4, #65536	; 0x10000

	rtt_disable_interrupt(RTT, RTT_MR_ALMIEN);
  400404:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  400408:	4809      	ldr	r0, [pc, #36]	; (400430 <rtt_write_alarm_time+0x38>)
  40040a:	4b0a      	ldr	r3, [pc, #40]	; (400434 <rtt_write_alarm_time+0x3c>)
  40040c:	4798      	blx	r3

	/**
	 * Alarm time = ALMV + 1,If the incoming parameter 
	 * is 0, the ALMV is set to 0xFFFFFFFF.
	*/
	if(ul_alarm_time == 0) {
  40040e:	b92d      	cbnz	r5, 40041c <rtt_write_alarm_time+0x24>
		p_rtt->RTT_AR = 0xFFFFFFFF;
  400410:	f04f 33ff 	mov.w	r3, #4294967295
  400414:	6073      	str	r3, [r6, #4]
	}
	else {
		p_rtt->RTT_AR = ul_alarm_time - 1;
	}

	if (flag) {
  400416:	b924      	cbnz	r4, 400422 <rtt_write_alarm_time+0x2a>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
	}

	return 0;
}
  400418:	2000      	movs	r0, #0
  40041a:	bd70      	pop	{r4, r5, r6, pc}
		p_rtt->RTT_AR = ul_alarm_time - 1;
  40041c:	3d01      	subs	r5, #1
  40041e:	6075      	str	r5, [r6, #4]
  400420:	e7f9      	b.n	400416 <rtt_write_alarm_time+0x1e>
		rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  400422:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  400426:	4802      	ldr	r0, [pc, #8]	; (400430 <rtt_write_alarm_time+0x38>)
  400428:	4b03      	ldr	r3, [pc, #12]	; (400438 <rtt_write_alarm_time+0x40>)
  40042a:	4798      	blx	r3
  40042c:	e7f4      	b.n	400418 <rtt_write_alarm_time+0x20>
  40042e:	bf00      	nop
  400430:	400e1830 	.word	0x400e1830
  400434:	004003cd 	.word	0x004003cd
  400438:	004003b9 	.word	0x004003b9

0040043c <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  40043c:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  40043e:	4b07      	ldr	r3, [pc, #28]	; (40045c <spi_enable_clock+0x20>)
  400440:	4298      	cmp	r0, r3
  400442:	d003      	beq.n	40044c <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400444:	4b06      	ldr	r3, [pc, #24]	; (400460 <spi_enable_clock+0x24>)
  400446:	4298      	cmp	r0, r3
  400448:	d004      	beq.n	400454 <spi_enable_clock+0x18>
  40044a:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  40044c:	2015      	movs	r0, #21
  40044e:	4b05      	ldr	r3, [pc, #20]	; (400464 <spi_enable_clock+0x28>)
  400450:	4798      	blx	r3
  400452:	bd08      	pop	{r3, pc}
  400454:	202a      	movs	r0, #42	; 0x2a
  400456:	4b03      	ldr	r3, [pc, #12]	; (400464 <spi_enable_clock+0x28>)
  400458:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40045a:	e7f6      	b.n	40044a <spi_enable_clock+0xe>
  40045c:	40008000 	.word	0x40008000
  400460:	40058000 	.word	0x40058000
  400464:	004010d5 	.word	0x004010d5

00400468 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400468:	6843      	ldr	r3, [r0, #4]
  40046a:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  40046e:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400470:	6843      	ldr	r3, [r0, #4]
  400472:	0409      	lsls	r1, r1, #16
  400474:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400478:	4319      	orrs	r1, r3
  40047a:	6041      	str	r1, [r0, #4]
  40047c:	4770      	bx	lr

0040047e <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  40047e:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  400480:	f643 2499 	movw	r4, #15001	; 0x3a99
  400484:	6905      	ldr	r5, [r0, #16]
  400486:	f015 0f02 	tst.w	r5, #2
  40048a:	d103      	bne.n	400494 <spi_write+0x16>
		if (!timeout--) {
  40048c:	3c01      	subs	r4, #1
  40048e:	d1f9      	bne.n	400484 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400490:	2001      	movs	r0, #1
  400492:	e00c      	b.n	4004ae <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400494:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400496:	f014 0f02 	tst.w	r4, #2
  40049a:	d006      	beq.n	4004aa <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40049c:	0412      	lsls	r2, r2, #16
  40049e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4004a2:	4311      	orrs	r1, r2
		if (uc_last) {
  4004a4:	b10b      	cbz	r3, 4004aa <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4004a6:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4004aa:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4004ac:	2000      	movs	r0, #0
}
  4004ae:	bc30      	pop	{r4, r5}
  4004b0:	4770      	bx	lr

004004b2 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4004b2:	b932      	cbnz	r2, 4004c2 <spi_set_clock_polarity+0x10>
  4004b4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4004b8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004ba:	f023 0301 	bic.w	r3, r3, #1
  4004be:	6303      	str	r3, [r0, #48]	; 0x30
  4004c0:	4770      	bx	lr
  4004c2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4004c6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004c8:	f043 0301 	orr.w	r3, r3, #1
  4004cc:	6303      	str	r3, [r0, #48]	; 0x30
  4004ce:	4770      	bx	lr

004004d0 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4004d0:	b932      	cbnz	r2, 4004e0 <spi_set_clock_phase+0x10>
  4004d2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4004d6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004d8:	f023 0302 	bic.w	r3, r3, #2
  4004dc:	6303      	str	r3, [r0, #48]	; 0x30
  4004de:	4770      	bx	lr
  4004e0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  4004e4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4004e6:	f043 0302 	orr.w	r3, r3, #2
  4004ea:	6303      	str	r3, [r0, #48]	; 0x30
  4004ec:	4770      	bx	lr

004004ee <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  4004ee:	2a04      	cmp	r2, #4
  4004f0:	d003      	beq.n	4004fa <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  4004f2:	b16a      	cbz	r2, 400510 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  4004f4:	2a08      	cmp	r2, #8
  4004f6:	d016      	beq.n	400526 <spi_configure_cs_behavior+0x38>
  4004f8:	4770      	bx	lr
  4004fa:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  4004fe:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400500:	f023 0308 	bic.w	r3, r3, #8
  400504:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400506:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400508:	f043 0304 	orr.w	r3, r3, #4
  40050c:	6303      	str	r3, [r0, #48]	; 0x30
  40050e:	4770      	bx	lr
  400510:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400514:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400516:	f023 0308 	bic.w	r3, r3, #8
  40051a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40051c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40051e:	f023 0304 	bic.w	r3, r3, #4
  400522:	6303      	str	r3, [r0, #48]	; 0x30
  400524:	4770      	bx	lr
  400526:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40052a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40052c:	f043 0308 	orr.w	r3, r3, #8
  400530:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400532:	e7e1      	b.n	4004f8 <spi_configure_cs_behavior+0xa>

00400534 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400534:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  400538:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40053a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40053e:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400540:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400542:	431a      	orrs	r2, r3
  400544:	630a      	str	r2, [r1, #48]	; 0x30
  400546:	4770      	bx	lr

00400548 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  400548:	1e43      	subs	r3, r0, #1
  40054a:	4419      	add	r1, r3
  40054c:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400550:	1e43      	subs	r3, r0, #1
  400552:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400554:	bf94      	ite	ls
  400556:	b200      	sxthls	r0, r0
		return -1;
  400558:	f04f 30ff 	movhi.w	r0, #4294967295
}
  40055c:	4770      	bx	lr

0040055e <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  40055e:	b17a      	cbz	r2, 400580 <spi_set_baudrate_div+0x22>
{
  400560:	b410      	push	{r4}
  400562:	4614      	mov	r4, r2
  400564:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  400568:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40056a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40056e:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400570:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  400572:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  400576:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  400578:	2000      	movs	r0, #0
}
  40057a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40057e:	4770      	bx	lr
        return -1;
  400580:	f04f 30ff 	mov.w	r0, #4294967295
  400584:	4770      	bx	lr
	...

00400588 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  400588:	4b01      	ldr	r3, [pc, #4]	; (400590 <gfx_mono_set_framebuffer+0x8>)
  40058a:	6018      	str	r0, [r3, #0]
  40058c:	4770      	bx	lr
  40058e:	bf00      	nop
  400590:	204009f8 	.word	0x204009f8

00400594 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400594:	4b02      	ldr	r3, [pc, #8]	; (4005a0 <gfx_mono_framebuffer_put_byte+0xc>)
  400596:	681b      	ldr	r3, [r3, #0]
  400598:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  40059c:	5442      	strb	r2, [r0, r1]
  40059e:	4770      	bx	lr
  4005a0:	204009f8 	.word	0x204009f8

004005a4 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4005a4:	4b02      	ldr	r3, [pc, #8]	; (4005b0 <gfx_mono_framebuffer_get_byte+0xc>)
  4005a6:	681b      	ldr	r3, [r3, #0]
  4005a8:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4005ac:	5c40      	ldrb	r0, [r0, r1]
  4005ae:	4770      	bx	lr
  4005b0:	204009f8 	.word	0x204009f8

004005b4 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4005b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4005b8:	1884      	adds	r4, r0, r2
  4005ba:	2c80      	cmp	r4, #128	; 0x80
  4005bc:	dd02      	ble.n	4005c4 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4005be:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4005c2:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4005c4:	b322      	cbz	r2, 400610 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4005c6:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4005c8:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4005cc:	2601      	movs	r6, #1
  4005ce:	fa06 f101 	lsl.w	r1, r6, r1
  4005d2:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4005d4:	2b01      	cmp	r3, #1
  4005d6:	d01d      	beq.n	400614 <gfx_mono_generic_draw_horizontal_line+0x60>
  4005d8:	2b00      	cmp	r3, #0
  4005da:	d035      	beq.n	400648 <gfx_mono_generic_draw_horizontal_line+0x94>
  4005dc:	2b02      	cmp	r3, #2
  4005de:	d117      	bne.n	400610 <gfx_mono_generic_draw_horizontal_line+0x5c>
  4005e0:	3801      	subs	r0, #1
  4005e2:	b2c7      	uxtb	r7, r0
  4005e4:	19d4      	adds	r4, r2, r7
  4005e6:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  4005e8:	f8df a090 	ldr.w	sl, [pc, #144]	; 40067c <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  4005ec:	f04f 0900 	mov.w	r9, #0
  4005f0:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400680 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4005f4:	4621      	mov	r1, r4
  4005f6:	4628      	mov	r0, r5
  4005f8:	47d0      	blx	sl
			temp ^= pixelmask;
  4005fa:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4005fe:	464b      	mov	r3, r9
  400600:	b2d2      	uxtb	r2, r2
  400602:	4621      	mov	r1, r4
  400604:	4628      	mov	r0, r5
  400606:	47c0      	blx	r8
  400608:	3c01      	subs	r4, #1
  40060a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40060c:	42bc      	cmp	r4, r7
  40060e:	d1f1      	bne.n	4005f4 <gfx_mono_generic_draw_horizontal_line+0x40>
  400610:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400614:	3801      	subs	r0, #1
  400616:	b2c7      	uxtb	r7, r0
  400618:	19d4      	adds	r4, r2, r7
  40061a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40061c:	f8df a05c 	ldr.w	sl, [pc, #92]	; 40067c <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400620:	f04f 0900 	mov.w	r9, #0
  400624:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400680 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400628:	4621      	mov	r1, r4
  40062a:	4628      	mov	r0, r5
  40062c:	47d0      	blx	sl
			temp |= pixelmask;
  40062e:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400632:	464b      	mov	r3, r9
  400634:	b2d2      	uxtb	r2, r2
  400636:	4621      	mov	r1, r4
  400638:	4628      	mov	r0, r5
  40063a:	47c0      	blx	r8
  40063c:	3c01      	subs	r4, #1
  40063e:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400640:	42bc      	cmp	r4, r7
  400642:	d1f1      	bne.n	400628 <gfx_mono_generic_draw_horizontal_line+0x74>
  400644:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400648:	3801      	subs	r0, #1
  40064a:	b2c7      	uxtb	r7, r0
  40064c:	19d4      	adds	r4, r2, r7
  40064e:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400650:	f8df 8028 	ldr.w	r8, [pc, #40]	; 40067c <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400654:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  400656:	f8df 9028 	ldr.w	r9, [pc, #40]	; 400680 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40065a:	4621      	mov	r1, r4
  40065c:	4628      	mov	r0, r5
  40065e:	47c0      	blx	r8
			temp &= ~pixelmask;
  400660:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400664:	2300      	movs	r3, #0
  400666:	b2d2      	uxtb	r2, r2
  400668:	4621      	mov	r1, r4
  40066a:	4628      	mov	r0, r5
  40066c:	47c8      	blx	r9
  40066e:	3c01      	subs	r4, #1
  400670:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400672:	42bc      	cmp	r4, r7
  400674:	d1f1      	bne.n	40065a <gfx_mono_generic_draw_horizontal_line+0xa6>
  400676:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40067a:	bf00      	nop
  40067c:	004008b5 	.word	0x004008b5
  400680:	004007b1 	.word	0x004007b1

00400684 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400684:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400688:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  40068c:	b18b      	cbz	r3, 4006b2 <gfx_mono_generic_draw_filled_rect+0x2e>
  40068e:	461c      	mov	r4, r3
  400690:	4690      	mov	r8, r2
  400692:	4606      	mov	r6, r0
  400694:	1e4d      	subs	r5, r1, #1
  400696:	b2ed      	uxtb	r5, r5
  400698:	442c      	add	r4, r5
  40069a:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  40069c:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4006b8 <gfx_mono_generic_draw_filled_rect+0x34>
  4006a0:	463b      	mov	r3, r7
  4006a2:	4642      	mov	r2, r8
  4006a4:	4621      	mov	r1, r4
  4006a6:	4630      	mov	r0, r6
  4006a8:	47c8      	blx	r9
  4006aa:	3c01      	subs	r4, #1
  4006ac:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4006ae:	42ac      	cmp	r4, r5
  4006b0:	d1f6      	bne.n	4006a0 <gfx_mono_generic_draw_filled_rect+0x1c>
  4006b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4006b6:	bf00      	nop
  4006b8:	004005b5 	.word	0x004005b5

004006bc <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4006bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4006c0:	b083      	sub	sp, #12
  4006c2:	4604      	mov	r4, r0
  4006c4:	4688      	mov	r8, r1
  4006c6:	4691      	mov	r9, r2
  4006c8:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4006ca:	7a5b      	ldrb	r3, [r3, #9]
  4006cc:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006d0:	2100      	movs	r1, #0
  4006d2:	9100      	str	r1, [sp, #0]
  4006d4:	4649      	mov	r1, r9
  4006d6:	4640      	mov	r0, r8
  4006d8:	4d21      	ldr	r5, [pc, #132]	; (400760 <gfx_mono_draw_char+0xa4>)
  4006da:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  4006dc:	f89b 3000 	ldrb.w	r3, [fp]
  4006e0:	b113      	cbz	r3, 4006e8 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  4006e2:	b003      	add	sp, #12
  4006e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  4006e8:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006ec:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  4006ee:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  4006f2:	bf18      	it	ne
  4006f4:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  4006f6:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  4006fa:	f89b 700a 	ldrb.w	r7, [fp, #10]
  4006fe:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400700:	fb17 f70a 	smulbb	r7, r7, sl
  400704:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400708:	f8db 3004 	ldr.w	r3, [fp, #4]
  40070c:	fa13 f787 	uxtah	r7, r3, r7
  400710:	e01f      	b.n	400752 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400712:	0064      	lsls	r4, r4, #1
  400714:	b2e4      	uxtb	r4, r4
  400716:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400718:	b2eb      	uxtb	r3, r5
  40071a:	429e      	cmp	r6, r3
  40071c:	d910      	bls.n	400740 <gfx_mono_draw_char+0x84>
  40071e:	b2eb      	uxtb	r3, r5
  400720:	eb08 0003 	add.w	r0, r8, r3
  400724:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400726:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40072a:	bf08      	it	eq
  40072c:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400730:	f014 0f80 	tst.w	r4, #128	; 0x80
  400734:	d0ed      	beq.n	400712 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400736:	2201      	movs	r2, #1
  400738:	4649      	mov	r1, r9
  40073a:	4b0a      	ldr	r3, [pc, #40]	; (400764 <gfx_mono_draw_char+0xa8>)
  40073c:	4798      	blx	r3
  40073e:	e7e8      	b.n	400712 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400740:	f109 0901 	add.w	r9, r9, #1
  400744:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400748:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  40074c:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400750:	d0c7      	beq.n	4006e2 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  400752:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  400756:	2e00      	cmp	r6, #0
  400758:	d0f2      	beq.n	400740 <gfx_mono_draw_char+0x84>
  40075a:	2500      	movs	r5, #0
  40075c:	462c      	mov	r4, r5
  40075e:	e7de      	b.n	40071e <gfx_mono_draw_char+0x62>
  400760:	00400685 	.word	0x00400685
  400764:	00400851 	.word	0x00400851

00400768 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400768:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40076c:	4604      	mov	r4, r0
  40076e:	4690      	mov	r8, r2
  400770:	461d      	mov	r5, r3
  400772:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  400774:	4f0d      	ldr	r7, [pc, #52]	; (4007ac <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  400776:	460e      	mov	r6, r1
  400778:	e008      	b.n	40078c <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  40077a:	7a6a      	ldrb	r2, [r5, #9]
  40077c:	3201      	adds	r2, #1
  40077e:	4442      	add	r2, r8
  400780:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  400784:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  400786:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40078a:	b16b      	cbz	r3, 4007a8 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  40078c:	7820      	ldrb	r0, [r4, #0]
  40078e:	280a      	cmp	r0, #10
  400790:	d0f3      	beq.n	40077a <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  400792:	280d      	cmp	r0, #13
  400794:	d0f7      	beq.n	400786 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  400796:	462b      	mov	r3, r5
  400798:	4642      	mov	r2, r8
  40079a:	4649      	mov	r1, r9
  40079c:	47b8      	blx	r7
			x += font->width;
  40079e:	7a2b      	ldrb	r3, [r5, #8]
  4007a0:	4499      	add	r9, r3
  4007a2:	fa5f f989 	uxtb.w	r9, r9
  4007a6:	e7ee      	b.n	400786 <gfx_mono_draw_string+0x1e>
}
  4007a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4007ac:	004006bd 	.word	0x004006bd

004007b0 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4007b0:	b570      	push	{r4, r5, r6, lr}
  4007b2:	4604      	mov	r4, r0
  4007b4:	460d      	mov	r5, r1
  4007b6:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4007b8:	b91b      	cbnz	r3, 4007c2 <gfx_mono_ssd1306_put_byte+0x12>
  4007ba:	4b0d      	ldr	r3, [pc, #52]	; (4007f0 <gfx_mono_ssd1306_put_byte+0x40>)
  4007bc:	4798      	blx	r3
  4007be:	42b0      	cmp	r0, r6
  4007c0:	d015      	beq.n	4007ee <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4007c2:	4632      	mov	r2, r6
  4007c4:	4629      	mov	r1, r5
  4007c6:	4620      	mov	r0, r4
  4007c8:	4b0a      	ldr	r3, [pc, #40]	; (4007f4 <gfx_mono_ssd1306_put_byte+0x44>)
  4007ca:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4007cc:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4007d0:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4007d4:	4c08      	ldr	r4, [pc, #32]	; (4007f8 <gfx_mono_ssd1306_put_byte+0x48>)
  4007d6:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  4007d8:	f3c5 1002 	ubfx	r0, r5, #4, #3
  4007dc:	f040 0010 	orr.w	r0, r0, #16
  4007e0:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  4007e2:	f005 000f 	and.w	r0, r5, #15
  4007e6:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  4007e8:	4630      	mov	r0, r6
  4007ea:	4b04      	ldr	r3, [pc, #16]	; (4007fc <gfx_mono_ssd1306_put_byte+0x4c>)
  4007ec:	4798      	blx	r3
  4007ee:	bd70      	pop	{r4, r5, r6, pc}
  4007f0:	004005a5 	.word	0x004005a5
  4007f4:	00400595 	.word	0x00400595
  4007f8:	004008c1 	.word	0x004008c1
  4007fc:	00400ae1 	.word	0x00400ae1

00400800 <gfx_mono_ssd1306_init>:
{
  400800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400804:	480d      	ldr	r0, [pc, #52]	; (40083c <gfx_mono_ssd1306_init+0x3c>)
  400806:	4b0e      	ldr	r3, [pc, #56]	; (400840 <gfx_mono_ssd1306_init+0x40>)
  400808:	4798      	blx	r3
	ssd1306_init();
  40080a:	4b0e      	ldr	r3, [pc, #56]	; (400844 <gfx_mono_ssd1306_init+0x44>)
  40080c:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  40080e:	2040      	movs	r0, #64	; 0x40
  400810:	4b0d      	ldr	r3, [pc, #52]	; (400848 <gfx_mono_ssd1306_init+0x48>)
  400812:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400814:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400816:	f04f 0801 	mov.w	r8, #1
  40081a:	462f      	mov	r7, r5
  40081c:	4e0b      	ldr	r6, [pc, #44]	; (40084c <gfx_mono_ssd1306_init+0x4c>)
{
  40081e:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400820:	4643      	mov	r3, r8
  400822:	463a      	mov	r2, r7
  400824:	b2e1      	uxtb	r1, r4
  400826:	4628      	mov	r0, r5
  400828:	47b0      	blx	r6
  40082a:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  40082c:	2c80      	cmp	r4, #128	; 0x80
  40082e:	d1f7      	bne.n	400820 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400830:	3501      	adds	r5, #1
  400832:	b2ed      	uxtb	r5, r5
  400834:	2d04      	cmp	r5, #4
  400836:	d1f2      	bne.n	40081e <gfx_mono_ssd1306_init+0x1e>
  400838:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40083c:	204009fc 	.word	0x204009fc
  400840:	00400589 	.word	0x00400589
  400844:	00400901 	.word	0x00400901
  400848:	004008c1 	.word	0x004008c1
  40084c:	004007b1 	.word	0x004007b1

00400850 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400850:	09c3      	lsrs	r3, r0, #7
  400852:	d12a      	bne.n	4008aa <gfx_mono_ssd1306_draw_pixel+0x5a>
  400854:	291f      	cmp	r1, #31
  400856:	d828      	bhi.n	4008aa <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40085c:	4614      	mov	r4, r2
  40085e:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400860:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  400862:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  400866:	2201      	movs	r2, #1
  400868:	fa02 f701 	lsl.w	r7, r2, r1
  40086c:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400870:	4601      	mov	r1, r0
  400872:	4630      	mov	r0, r6
  400874:	4b0d      	ldr	r3, [pc, #52]	; (4008ac <gfx_mono_ssd1306_draw_pixel+0x5c>)
  400876:	4798      	blx	r3
  400878:	4602      	mov	r2, r0
	switch (color) {
  40087a:	2c01      	cmp	r4, #1
  40087c:	d009      	beq.n	400892 <gfx_mono_ssd1306_draw_pixel+0x42>
  40087e:	b164      	cbz	r4, 40089a <gfx_mono_ssd1306_draw_pixel+0x4a>
  400880:	2c02      	cmp	r4, #2
  400882:	d00e      	beq.n	4008a2 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  400884:	2300      	movs	r3, #0
  400886:	4629      	mov	r1, r5
  400888:	4630      	mov	r0, r6
  40088a:	4c09      	ldr	r4, [pc, #36]	; (4008b0 <gfx_mono_ssd1306_draw_pixel+0x60>)
  40088c:	47a0      	blx	r4
  40088e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  400892:	ea48 0200 	orr.w	r2, r8, r0
  400896:	b2d2      	uxtb	r2, r2
		break;
  400898:	e7f4      	b.n	400884 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  40089a:	ea20 0207 	bic.w	r2, r0, r7
  40089e:	b2d2      	uxtb	r2, r2
		break;
  4008a0:	e7f0      	b.n	400884 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4008a2:	ea88 0200 	eor.w	r2, r8, r0
  4008a6:	b2d2      	uxtb	r2, r2
		break;
  4008a8:	e7ec      	b.n	400884 <gfx_mono_ssd1306_draw_pixel+0x34>
  4008aa:	4770      	bx	lr
  4008ac:	004005a5 	.word	0x004005a5
  4008b0:	004007b1 	.word	0x004007b1

004008b4 <gfx_mono_ssd1306_get_byte>:
{
  4008b4:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4008b6:	4b01      	ldr	r3, [pc, #4]	; (4008bc <gfx_mono_ssd1306_get_byte+0x8>)
  4008b8:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4008ba:	bd08      	pop	{r3, pc}
  4008bc:	004005a5 	.word	0x004005a5

004008c0 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4008c0:	b538      	push	{r3, r4, r5, lr}
  4008c2:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4008c4:	2208      	movs	r2, #8
  4008c6:	4b09      	ldr	r3, [pc, #36]	; (4008ec <ssd1306_write_command+0x2c>)
  4008c8:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4008ca:	4c09      	ldr	r4, [pc, #36]	; (4008f0 <ssd1306_write_command+0x30>)
  4008cc:	2101      	movs	r1, #1
  4008ce:	4620      	mov	r0, r4
  4008d0:	4b08      	ldr	r3, [pc, #32]	; (4008f4 <ssd1306_write_command+0x34>)
  4008d2:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  4008d4:	2301      	movs	r3, #1
  4008d6:	461a      	mov	r2, r3
  4008d8:	4629      	mov	r1, r5
  4008da:	4620      	mov	r0, r4
  4008dc:	4c06      	ldr	r4, [pc, #24]	; (4008f8 <ssd1306_write_command+0x38>)
  4008de:	47a0      	blx	r4
	delay_us(10);
  4008e0:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4008e4:	4b05      	ldr	r3, [pc, #20]	; (4008fc <ssd1306_write_command+0x3c>)
  4008e6:	4798      	blx	r3
  4008e8:	bd38      	pop	{r3, r4, r5, pc}
  4008ea:	bf00      	nop
  4008ec:	400e1000 	.word	0x400e1000
  4008f0:	40008000 	.word	0x40008000
  4008f4:	00400469 	.word	0x00400469
  4008f8:	0040047f 	.word	0x0040047f
  4008fc:	20400001 	.word	0x20400001

00400900 <ssd1306_init>:
{
  400900:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400904:	4d66      	ldr	r5, [pc, #408]	; (400aa0 <ssd1306_init+0x1a0>)
  400906:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40090a:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40090c:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400910:	4b64      	ldr	r3, [pc, #400]	; (400aa4 <ssd1306_init+0x1a4>)
  400912:	2708      	movs	r7, #8
  400914:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400916:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40091a:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40091c:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400920:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400922:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400924:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400928:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  40092a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40092e:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400930:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  400932:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400936:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400938:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40093a:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40093e:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400940:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400942:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400946:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400948:	f022 0208 	bic.w	r2, r2, #8
  40094c:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40094e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400950:	f022 0208 	bic.w	r2, r2, #8
  400954:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  400956:	601f      	str	r7, [r3, #0]
  400958:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40095a:	631f      	str	r7, [r3, #48]	; 0x30
  40095c:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40095e:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400adc <ssd1306_init+0x1dc>
  400962:	2300      	movs	r3, #0
  400964:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400968:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40096c:	4640      	mov	r0, r8
  40096e:	4c4e      	ldr	r4, [pc, #312]	; (400aa8 <ssd1306_init+0x1a8>)
  400970:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400972:	2300      	movs	r3, #0
  400974:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400978:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40097c:	4640      	mov	r0, r8
  40097e:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400980:	2300      	movs	r3, #0
  400982:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400986:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40098a:	4640      	mov	r0, r8
  40098c:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  40098e:	2300      	movs	r3, #0
  400990:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400994:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400998:	4640      	mov	r0, r8
  40099a:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40099c:	2300      	movs	r3, #0
  40099e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4009a2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009a6:	4640      	mov	r0, r8
  4009a8:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4009aa:	2300      	movs	r3, #0
  4009ac:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4009b0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4009b4:	4640      	mov	r0, r8
  4009b6:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4009b8:	4c3c      	ldr	r4, [pc, #240]	; (400aac <ssd1306_init+0x1ac>)
  4009ba:	f04f 0902 	mov.w	r9, #2
  4009be:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4009c2:	f04f 0880 	mov.w	r8, #128	; 0x80
  4009c6:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4009ca:	6863      	ldr	r3, [r4, #4]
  4009cc:	f043 0301 	orr.w	r3, r3, #1
  4009d0:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4009d2:	463a      	mov	r2, r7
  4009d4:	2101      	movs	r1, #1
  4009d6:	4620      	mov	r0, r4
  4009d8:	4b35      	ldr	r3, [pc, #212]	; (400ab0 <ssd1306_init+0x1b0>)
  4009da:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  4009dc:	2200      	movs	r2, #0
  4009de:	2101      	movs	r1, #1
  4009e0:	4620      	mov	r0, r4
  4009e2:	4b34      	ldr	r3, [pc, #208]	; (400ab4 <ssd1306_init+0x1b4>)
  4009e4:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  4009e6:	2200      	movs	r2, #0
  4009e8:	2101      	movs	r1, #1
  4009ea:	4620      	mov	r0, r4
  4009ec:	4b32      	ldr	r3, [pc, #200]	; (400ab8 <ssd1306_init+0x1b8>)
  4009ee:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4009f0:	6863      	ldr	r3, [r4, #4]
  4009f2:	f023 0302 	bic.w	r3, r3, #2
  4009f6:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  4009f8:	2200      	movs	r2, #0
  4009fa:	2101      	movs	r1, #1
  4009fc:	4620      	mov	r0, r4
  4009fe:	4b2f      	ldr	r3, [pc, #188]	; (400abc <ssd1306_init+0x1bc>)
  400a00:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400a02:	6863      	ldr	r3, [r4, #4]
  400a04:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400a08:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400a0a:	6863      	ldr	r3, [r4, #4]
  400a0c:	f043 0310 	orr.w	r3, r3, #16
  400a10:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  400a12:	492b      	ldr	r1, [pc, #172]	; (400ac0 <ssd1306_init+0x1c0>)
  400a14:	482b      	ldr	r0, [pc, #172]	; (400ac4 <ssd1306_init+0x1c4>)
  400a16:	4b2c      	ldr	r3, [pc, #176]	; (400ac8 <ssd1306_init+0x1c8>)
  400a18:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400a1a:	b2c2      	uxtb	r2, r0
  400a1c:	2101      	movs	r1, #1
  400a1e:	4620      	mov	r0, r4
  400a20:	4b2a      	ldr	r3, [pc, #168]	; (400acc <ssd1306_init+0x1cc>)
  400a22:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400a24:	4620      	mov	r0, r4
  400a26:	4b2a      	ldr	r3, [pc, #168]	; (400ad0 <ssd1306_init+0x1d0>)
  400a28:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400a2a:	2301      	movs	r3, #1
  400a2c:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400a2e:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400a30:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a34:	4c27      	ldr	r4, [pc, #156]	; (400ad4 <ssd1306_init+0x1d4>)
  400a36:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400a38:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400a3a:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a3e:	47a0      	blx	r4
  400a40:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400a42:	20a8      	movs	r0, #168	; 0xa8
  400a44:	4c24      	ldr	r4, [pc, #144]	; (400ad8 <ssd1306_init+0x1d8>)
  400a46:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400a48:	201f      	movs	r0, #31
  400a4a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400a4c:	20d3      	movs	r0, #211	; 0xd3
  400a4e:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400a50:	2000      	movs	r0, #0
  400a52:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400a54:	2040      	movs	r0, #64	; 0x40
  400a56:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400a58:	20a1      	movs	r0, #161	; 0xa1
  400a5a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400a5c:	20c8      	movs	r0, #200	; 0xc8
  400a5e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400a60:	20da      	movs	r0, #218	; 0xda
  400a62:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400a64:	4648      	mov	r0, r9
  400a66:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400a68:	2081      	movs	r0, #129	; 0x81
  400a6a:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400a6c:	208f      	movs	r0, #143	; 0x8f
  400a6e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400a70:	20a4      	movs	r0, #164	; 0xa4
  400a72:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400a74:	20a6      	movs	r0, #166	; 0xa6
  400a76:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400a78:	20d5      	movs	r0, #213	; 0xd5
  400a7a:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400a7c:	4640      	mov	r0, r8
  400a7e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400a80:	208d      	movs	r0, #141	; 0x8d
  400a82:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400a84:	2014      	movs	r0, #20
  400a86:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400a88:	20db      	movs	r0, #219	; 0xdb
  400a8a:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400a8c:	2040      	movs	r0, #64	; 0x40
  400a8e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400a90:	20d9      	movs	r0, #217	; 0xd9
  400a92:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400a94:	20f1      	movs	r0, #241	; 0xf1
  400a96:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400a98:	20af      	movs	r0, #175	; 0xaf
  400a9a:	47a0      	blx	r4
  400a9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400aa0:	400e1200 	.word	0x400e1200
  400aa4:	400e1000 	.word	0x400e1000
  400aa8:	00400dc1 	.word	0x00400dc1
  400aac:	40008000 	.word	0x40008000
  400ab0:	004004ef 	.word	0x004004ef
  400ab4:	004004b3 	.word	0x004004b3
  400ab8:	004004d1 	.word	0x004004d1
  400abc:	00400535 	.word	0x00400535
  400ac0:	08f0d180 	.word	0x08f0d180
  400ac4:	000f4240 	.word	0x000f4240
  400ac8:	00400549 	.word	0x00400549
  400acc:	0040055f 	.word	0x0040055f
  400ad0:	0040043d 	.word	0x0040043d
  400ad4:	20400001 	.word	0x20400001
  400ad8:	004008c1 	.word	0x004008c1
  400adc:	400e1400 	.word	0x400e1400

00400ae0 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400ae0:	b538      	push	{r3, r4, r5, lr}
  400ae2:	4605      	mov	r5, r0
  400ae4:	2208      	movs	r2, #8
  400ae6:	4b09      	ldr	r3, [pc, #36]	; (400b0c <ssd1306_write_data+0x2c>)
  400ae8:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400aea:	4c09      	ldr	r4, [pc, #36]	; (400b10 <ssd1306_write_data+0x30>)
  400aec:	2101      	movs	r1, #1
  400aee:	4620      	mov	r0, r4
  400af0:	4b08      	ldr	r3, [pc, #32]	; (400b14 <ssd1306_write_data+0x34>)
  400af2:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400af4:	2301      	movs	r3, #1
  400af6:	461a      	mov	r2, r3
  400af8:	4629      	mov	r1, r5
  400afa:	4620      	mov	r0, r4
  400afc:	4c06      	ldr	r4, [pc, #24]	; (400b18 <ssd1306_write_data+0x38>)
  400afe:	47a0      	blx	r4
	delay_us(10);
  400b00:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400b04:	4b05      	ldr	r3, [pc, #20]	; (400b1c <ssd1306_write_data+0x3c>)
  400b06:	4798      	blx	r3
  400b08:	bd38      	pop	{r3, r4, r5, pc}
  400b0a:	bf00      	nop
  400b0c:	400e1000 	.word	0x400e1000
  400b10:	40008000 	.word	0x40008000
  400b14:	00400469 	.word	0x00400469
  400b18:	0040047f 	.word	0x0040047f
  400b1c:	20400001 	.word	0x20400001

00400b20 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400b20:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400b22:	4810      	ldr	r0, [pc, #64]	; (400b64 <sysclk_init+0x44>)
  400b24:	4b10      	ldr	r3, [pc, #64]	; (400b68 <sysclk_init+0x48>)
  400b26:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400b28:	213e      	movs	r1, #62	; 0x3e
  400b2a:	2000      	movs	r0, #0
  400b2c:	4b0f      	ldr	r3, [pc, #60]	; (400b6c <sysclk_init+0x4c>)
  400b2e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400b30:	4c0f      	ldr	r4, [pc, #60]	; (400b70 <sysclk_init+0x50>)
  400b32:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400b34:	2800      	cmp	r0, #0
  400b36:	d0fc      	beq.n	400b32 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400b38:	4b0e      	ldr	r3, [pc, #56]	; (400b74 <sysclk_init+0x54>)
  400b3a:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400b3c:	4a0e      	ldr	r2, [pc, #56]	; (400b78 <sysclk_init+0x58>)
  400b3e:	4b0f      	ldr	r3, [pc, #60]	; (400b7c <sysclk_init+0x5c>)
  400b40:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400b42:	4c0f      	ldr	r4, [pc, #60]	; (400b80 <sysclk_init+0x60>)
  400b44:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400b46:	2800      	cmp	r0, #0
  400b48:	d0fc      	beq.n	400b44 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400b4a:	2002      	movs	r0, #2
  400b4c:	4b0d      	ldr	r3, [pc, #52]	; (400b84 <sysclk_init+0x64>)
  400b4e:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400b50:	2000      	movs	r0, #0
  400b52:	4b0d      	ldr	r3, [pc, #52]	; (400b88 <sysclk_init+0x68>)
  400b54:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400b56:	4b0d      	ldr	r3, [pc, #52]	; (400b8c <sysclk_init+0x6c>)
  400b58:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400b5a:	4802      	ldr	r0, [pc, #8]	; (400b64 <sysclk_init+0x44>)
  400b5c:	4b02      	ldr	r3, [pc, #8]	; (400b68 <sysclk_init+0x48>)
  400b5e:	4798      	blx	r3
  400b60:	bd10      	pop	{r4, pc}
  400b62:	bf00      	nop
  400b64:	11e1a300 	.word	0x11e1a300
  400b68:	004015c5 	.word	0x004015c5
  400b6c:	00401051 	.word	0x00401051
  400b70:	004010a5 	.word	0x004010a5
  400b74:	004010b5 	.word	0x004010b5
  400b78:	20183f01 	.word	0x20183f01
  400b7c:	400e0600 	.word	0x400e0600
  400b80:	004010c5 	.word	0x004010c5
  400b84:	00400fb5 	.word	0x00400fb5
  400b88:	00400fed 	.word	0x00400fed
  400b8c:	004014b9 	.word	0x004014b9

00400b90 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400b92:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b96:	4b48      	ldr	r3, [pc, #288]	; (400cb8 <board_init+0x128>)
  400b98:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400b9a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b9e:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400ba2:	4b46      	ldr	r3, [pc, #280]	; (400cbc <board_init+0x12c>)
  400ba4:	2200      	movs	r2, #0
  400ba6:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400baa:	695a      	ldr	r2, [r3, #20]
  400bac:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400bb0:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400bb2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bb6:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400bba:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400bbe:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400bc2:	f007 0007 	and.w	r0, r7, #7
  400bc6:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400bc8:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400bcc:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400bd0:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400bd4:	f3bf 8f4f 	dsb	sy
  400bd8:	f04f 34ff 	mov.w	r4, #4294967295
  400bdc:	fa04 fc00 	lsl.w	ip, r4, r0
  400be0:	fa06 f000 	lsl.w	r0, r6, r0
  400be4:	fa04 f40e 	lsl.w	r4, r4, lr
  400be8:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400bec:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400bee:	463a      	mov	r2, r7
  400bf0:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400bf2:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400bf6:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400bfa:	3a01      	subs	r2, #1
  400bfc:	4423      	add	r3, r4
  400bfe:	f1b2 3fff 	cmp.w	r2, #4294967295
  400c02:	d1f6      	bne.n	400bf2 <board_init+0x62>
        } while(sets--);
  400c04:	3e01      	subs	r6, #1
  400c06:	4460      	add	r0, ip
  400c08:	f1b6 3fff 	cmp.w	r6, #4294967295
  400c0c:	d1ef      	bne.n	400bee <board_init+0x5e>
  400c0e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400c12:	4b2a      	ldr	r3, [pc, #168]	; (400cbc <board_init+0x12c>)
  400c14:	695a      	ldr	r2, [r3, #20]
  400c16:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400c1a:	615a      	str	r2, [r3, #20]
  400c1c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c20:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c24:	4a26      	ldr	r2, [pc, #152]	; (400cc0 <board_init+0x130>)
  400c26:	4927      	ldr	r1, [pc, #156]	; (400cc4 <board_init+0x134>)
  400c28:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c2a:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400c2e:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400c30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c34:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400c38:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400c3c:	f022 0201 	bic.w	r2, r2, #1
  400c40:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400c44:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400c48:	f022 0201 	bic.w	r2, r2, #1
  400c4c:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400c50:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c54:	f3bf 8f6f 	isb	sy
  400c58:	200a      	movs	r0, #10
  400c5a:	4c1b      	ldr	r4, [pc, #108]	; (400cc8 <board_init+0x138>)
  400c5c:	47a0      	blx	r4
  400c5e:	200b      	movs	r0, #11
  400c60:	47a0      	blx	r4
  400c62:	200c      	movs	r0, #12
  400c64:	47a0      	blx	r4
  400c66:	2010      	movs	r0, #16
  400c68:	47a0      	blx	r4
  400c6a:	2011      	movs	r0, #17
  400c6c:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400c6e:	4b17      	ldr	r3, [pc, #92]	; (400ccc <board_init+0x13c>)
  400c70:	f44f 7280 	mov.w	r2, #256	; 0x100
  400c74:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c76:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400c7a:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400c7c:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400c80:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400c84:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c86:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400c8a:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400c8c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400c90:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400c92:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400c94:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400c98:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400c9a:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c9e:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ca0:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400ca2:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400ca6:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400ca8:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400cac:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400cb0:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400cb6:	bf00      	nop
  400cb8:	400e1850 	.word	0x400e1850
  400cbc:	e000ed00 	.word	0xe000ed00
  400cc0:	400e0c00 	.word	0x400e0c00
  400cc4:	5a00080c 	.word	0x5a00080c
  400cc8:	004010d5 	.word	0x004010d5
  400ccc:	400e1200 	.word	0x400e1200

00400cd0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400cd0:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400cd2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400cd6:	d03a      	beq.n	400d4e <pio_set_peripheral+0x7e>
  400cd8:	d813      	bhi.n	400d02 <pio_set_peripheral+0x32>
  400cda:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400cde:	d025      	beq.n	400d2c <pio_set_peripheral+0x5c>
  400ce0:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400ce4:	d10a      	bne.n	400cfc <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400ce6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400ce8:	4313      	orrs	r3, r2
  400cea:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400cec:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400cee:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400cf0:	400b      	ands	r3, r1
  400cf2:	ea23 0302 	bic.w	r3, r3, r2
  400cf6:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400cf8:	6042      	str	r2, [r0, #4]
  400cfa:	4770      	bx	lr
	switch (ul_type) {
  400cfc:	2900      	cmp	r1, #0
  400cfe:	d1fb      	bne.n	400cf8 <pio_set_peripheral+0x28>
  400d00:	4770      	bx	lr
  400d02:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d06:	d021      	beq.n	400d4c <pio_set_peripheral+0x7c>
  400d08:	d809      	bhi.n	400d1e <pio_set_peripheral+0x4e>
  400d0a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d0e:	d1f3      	bne.n	400cf8 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d10:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400d12:	4313      	orrs	r3, r2
  400d14:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d16:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d18:	4313      	orrs	r3, r2
  400d1a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d1c:	e7ec      	b.n	400cf8 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400d1e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d22:	d013      	beq.n	400d4c <pio_set_peripheral+0x7c>
  400d24:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d28:	d010      	beq.n	400d4c <pio_set_peripheral+0x7c>
  400d2a:	e7e5      	b.n	400cf8 <pio_set_peripheral+0x28>
{
  400d2c:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d2e:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d30:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400d32:	43d3      	mvns	r3, r2
  400d34:	4021      	ands	r1, r4
  400d36:	461c      	mov	r4, r3
  400d38:	4019      	ands	r1, r3
  400d3a:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d3c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d3e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d40:	400b      	ands	r3, r1
  400d42:	4023      	ands	r3, r4
  400d44:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400d46:	6042      	str	r2, [r0, #4]
}
  400d48:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d4c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d4e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d50:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400d52:	400b      	ands	r3, r1
  400d54:	ea23 0302 	bic.w	r3, r3, r2
  400d58:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d5a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d5c:	4313      	orrs	r3, r2
  400d5e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d60:	e7ca      	b.n	400cf8 <pio_set_peripheral+0x28>

00400d62 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400d62:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d64:	f012 0f01 	tst.w	r2, #1
  400d68:	d10d      	bne.n	400d86 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400d6a:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400d6c:	f012 0f0a 	tst.w	r2, #10
  400d70:	d00b      	beq.n	400d8a <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400d72:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400d74:	f012 0f02 	tst.w	r2, #2
  400d78:	d109      	bne.n	400d8e <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400d7a:	f012 0f08 	tst.w	r2, #8
  400d7e:	d008      	beq.n	400d92 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400d80:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400d84:	e005      	b.n	400d92 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400d86:	6641      	str	r1, [r0, #100]	; 0x64
  400d88:	e7f0      	b.n	400d6c <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400d8a:	6241      	str	r1, [r0, #36]	; 0x24
  400d8c:	e7f2      	b.n	400d74 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400d8e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400d92:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400d94:	6001      	str	r1, [r0, #0]
  400d96:	4770      	bx	lr

00400d98 <pio_set_output>:
{
  400d98:	b410      	push	{r4}
  400d9a:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400d9c:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d9e:	b94c      	cbnz	r4, 400db4 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400da0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400da2:	b14b      	cbz	r3, 400db8 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400da4:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400da6:	b94a      	cbnz	r2, 400dbc <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400da8:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400daa:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400dac:	6001      	str	r1, [r0, #0]
}
  400dae:	f85d 4b04 	ldr.w	r4, [sp], #4
  400db2:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400db4:	6641      	str	r1, [r0, #100]	; 0x64
  400db6:	e7f4      	b.n	400da2 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400db8:	6541      	str	r1, [r0, #84]	; 0x54
  400dba:	e7f4      	b.n	400da6 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400dbc:	6301      	str	r1, [r0, #48]	; 0x30
  400dbe:	e7f4      	b.n	400daa <pio_set_output+0x12>

00400dc0 <pio_configure>:
{
  400dc0:	b570      	push	{r4, r5, r6, lr}
  400dc2:	b082      	sub	sp, #8
  400dc4:	4605      	mov	r5, r0
  400dc6:	4616      	mov	r6, r2
  400dc8:	461c      	mov	r4, r3
	switch (ul_type) {
  400dca:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400dce:	d014      	beq.n	400dfa <pio_configure+0x3a>
  400dd0:	d90a      	bls.n	400de8 <pio_configure+0x28>
  400dd2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400dd6:	d024      	beq.n	400e22 <pio_configure+0x62>
  400dd8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400ddc:	d021      	beq.n	400e22 <pio_configure+0x62>
  400dde:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400de2:	d017      	beq.n	400e14 <pio_configure+0x54>
		return 0;
  400de4:	2000      	movs	r0, #0
  400de6:	e01a      	b.n	400e1e <pio_configure+0x5e>
	switch (ul_type) {
  400de8:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400dec:	d005      	beq.n	400dfa <pio_configure+0x3a>
  400dee:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400df2:	d002      	beq.n	400dfa <pio_configure+0x3a>
  400df4:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400df8:	d1f4      	bne.n	400de4 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400dfa:	4632      	mov	r2, r6
  400dfc:	4628      	mov	r0, r5
  400dfe:	4b11      	ldr	r3, [pc, #68]	; (400e44 <pio_configure+0x84>)
  400e00:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400e02:	f014 0f01 	tst.w	r4, #1
  400e06:	d102      	bne.n	400e0e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400e08:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400e0a:	2001      	movs	r0, #1
  400e0c:	e007      	b.n	400e1e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400e0e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400e10:	2001      	movs	r0, #1
  400e12:	e004      	b.n	400e1e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400e14:	461a      	mov	r2, r3
  400e16:	4631      	mov	r1, r6
  400e18:	4b0b      	ldr	r3, [pc, #44]	; (400e48 <pio_configure+0x88>)
  400e1a:	4798      	blx	r3
	return 1;
  400e1c:	2001      	movs	r0, #1
}
  400e1e:	b002      	add	sp, #8
  400e20:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400e22:	f004 0301 	and.w	r3, r4, #1
  400e26:	9300      	str	r3, [sp, #0]
  400e28:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400e2c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e30:	bf14      	ite	ne
  400e32:	2200      	movne	r2, #0
  400e34:	2201      	moveq	r2, #1
  400e36:	4631      	mov	r1, r6
  400e38:	4628      	mov	r0, r5
  400e3a:	4c04      	ldr	r4, [pc, #16]	; (400e4c <pio_configure+0x8c>)
  400e3c:	47a0      	blx	r4
	return 1;
  400e3e:	2001      	movs	r0, #1
		break;
  400e40:	e7ed      	b.n	400e1e <pio_configure+0x5e>
  400e42:	bf00      	nop
  400e44:	00400cd1 	.word	0x00400cd1
  400e48:	00400d63 	.word	0x00400d63
  400e4c:	00400d99 	.word	0x00400d99

00400e50 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400e50:	f012 0f10 	tst.w	r2, #16
  400e54:	d012      	beq.n	400e7c <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400e56:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400e5a:	f012 0f20 	tst.w	r2, #32
  400e5e:	d007      	beq.n	400e70 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400e60:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400e64:	f012 0f40 	tst.w	r2, #64	; 0x40
  400e68:	d005      	beq.n	400e76 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400e6a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400e6e:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400e70:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400e74:	e7f6      	b.n	400e64 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400e76:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400e7a:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400e7c:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400e80:	4770      	bx	lr

00400e82 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400e82:	6401      	str	r1, [r0, #64]	; 0x40
  400e84:	4770      	bx	lr

00400e86 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400e86:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400e88:	4770      	bx	lr

00400e8a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400e8a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400e8c:	4770      	bx	lr
	...

00400e90 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e94:	4604      	mov	r4, r0
  400e96:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400e98:	4b0e      	ldr	r3, [pc, #56]	; (400ed4 <pio_handler_process+0x44>)
  400e9a:	4798      	blx	r3
  400e9c:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400e9e:	4620      	mov	r0, r4
  400ea0:	4b0d      	ldr	r3, [pc, #52]	; (400ed8 <pio_handler_process+0x48>)
  400ea2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400ea4:	4005      	ands	r5, r0
  400ea6:	d013      	beq.n	400ed0 <pio_handler_process+0x40>
  400ea8:	4c0c      	ldr	r4, [pc, #48]	; (400edc <pio_handler_process+0x4c>)
  400eaa:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400eae:	e003      	b.n	400eb8 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400eb0:	42b4      	cmp	r4, r6
  400eb2:	d00d      	beq.n	400ed0 <pio_handler_process+0x40>
  400eb4:	3410      	adds	r4, #16
		while (status != 0) {
  400eb6:	b15d      	cbz	r5, 400ed0 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400eb8:	6820      	ldr	r0, [r4, #0]
  400eba:	4540      	cmp	r0, r8
  400ebc:	d1f8      	bne.n	400eb0 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400ebe:	6861      	ldr	r1, [r4, #4]
  400ec0:	4229      	tst	r1, r5
  400ec2:	d0f5      	beq.n	400eb0 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400ec4:	68e3      	ldr	r3, [r4, #12]
  400ec6:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400ec8:	6863      	ldr	r3, [r4, #4]
  400eca:	ea25 0503 	bic.w	r5, r5, r3
  400ece:	e7ef      	b.n	400eb0 <pio_handler_process+0x20>
  400ed0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400ed4:	00400e87 	.word	0x00400e87
  400ed8:	00400e8b 	.word	0x00400e8b
  400edc:	20400bfc 	.word	0x20400bfc

00400ee0 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400ee0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400ee2:	4c18      	ldr	r4, [pc, #96]	; (400f44 <pio_handler_set+0x64>)
  400ee4:	6826      	ldr	r6, [r4, #0]
  400ee6:	2e06      	cmp	r6, #6
  400ee8:	d82a      	bhi.n	400f40 <pio_handler_set+0x60>
  400eea:	f04f 0c00 	mov.w	ip, #0
  400eee:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400ef0:	4f15      	ldr	r7, [pc, #84]	; (400f48 <pio_handler_set+0x68>)
  400ef2:	e004      	b.n	400efe <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400ef4:	3401      	adds	r4, #1
  400ef6:	b2e4      	uxtb	r4, r4
  400ef8:	46a4      	mov	ip, r4
  400efa:	42a6      	cmp	r6, r4
  400efc:	d309      	bcc.n	400f12 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400efe:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400f00:	0125      	lsls	r5, r4, #4
  400f02:	597d      	ldr	r5, [r7, r5]
  400f04:	428d      	cmp	r5, r1
  400f06:	d1f5      	bne.n	400ef4 <pio_handler_set+0x14>
  400f08:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400f0c:	686d      	ldr	r5, [r5, #4]
  400f0e:	4295      	cmp	r5, r2
  400f10:	d1f0      	bne.n	400ef4 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400f12:	4d0d      	ldr	r5, [pc, #52]	; (400f48 <pio_handler_set+0x68>)
  400f14:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400f18:	eb05 040e 	add.w	r4, r5, lr
  400f1c:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400f20:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400f22:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400f24:	9906      	ldr	r1, [sp, #24]
  400f26:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400f28:	3601      	adds	r6, #1
  400f2a:	4566      	cmp	r6, ip
  400f2c:	d005      	beq.n	400f3a <pio_handler_set+0x5a>
  400f2e:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400f30:	461a      	mov	r2, r3
  400f32:	4b06      	ldr	r3, [pc, #24]	; (400f4c <pio_handler_set+0x6c>)
  400f34:	4798      	blx	r3

	return 0;
  400f36:	2000      	movs	r0, #0
  400f38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400f3a:	4902      	ldr	r1, [pc, #8]	; (400f44 <pio_handler_set+0x64>)
  400f3c:	600e      	str	r6, [r1, #0]
  400f3e:	e7f6      	b.n	400f2e <pio_handler_set+0x4e>
		return 1;
  400f40:	2001      	movs	r0, #1
}
  400f42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f44:	20400c6c 	.word	0x20400c6c
  400f48:	20400bfc 	.word	0x20400bfc
  400f4c:	00400e51 	.word	0x00400e51

00400f50 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400f50:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400f52:	210a      	movs	r1, #10
  400f54:	4801      	ldr	r0, [pc, #4]	; (400f5c <PIOA_Handler+0xc>)
  400f56:	4b02      	ldr	r3, [pc, #8]	; (400f60 <PIOA_Handler+0x10>)
  400f58:	4798      	blx	r3
  400f5a:	bd08      	pop	{r3, pc}
  400f5c:	400e0e00 	.word	0x400e0e00
  400f60:	00400e91 	.word	0x00400e91

00400f64 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400f64:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400f66:	210b      	movs	r1, #11
  400f68:	4801      	ldr	r0, [pc, #4]	; (400f70 <PIOB_Handler+0xc>)
  400f6a:	4b02      	ldr	r3, [pc, #8]	; (400f74 <PIOB_Handler+0x10>)
  400f6c:	4798      	blx	r3
  400f6e:	bd08      	pop	{r3, pc}
  400f70:	400e1000 	.word	0x400e1000
  400f74:	00400e91 	.word	0x00400e91

00400f78 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400f78:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400f7a:	210c      	movs	r1, #12
  400f7c:	4801      	ldr	r0, [pc, #4]	; (400f84 <PIOC_Handler+0xc>)
  400f7e:	4b02      	ldr	r3, [pc, #8]	; (400f88 <PIOC_Handler+0x10>)
  400f80:	4798      	blx	r3
  400f82:	bd08      	pop	{r3, pc}
  400f84:	400e1200 	.word	0x400e1200
  400f88:	00400e91 	.word	0x00400e91

00400f8c <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400f8c:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400f8e:	2110      	movs	r1, #16
  400f90:	4801      	ldr	r0, [pc, #4]	; (400f98 <PIOD_Handler+0xc>)
  400f92:	4b02      	ldr	r3, [pc, #8]	; (400f9c <PIOD_Handler+0x10>)
  400f94:	4798      	blx	r3
  400f96:	bd08      	pop	{r3, pc}
  400f98:	400e1400 	.word	0x400e1400
  400f9c:	00400e91 	.word	0x00400e91

00400fa0 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400fa0:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400fa2:	2111      	movs	r1, #17
  400fa4:	4801      	ldr	r0, [pc, #4]	; (400fac <PIOE_Handler+0xc>)
  400fa6:	4b02      	ldr	r3, [pc, #8]	; (400fb0 <PIOE_Handler+0x10>)
  400fa8:	4798      	blx	r3
  400faa:	bd08      	pop	{r3, pc}
  400fac:	400e1600 	.word	0x400e1600
  400fb0:	00400e91 	.word	0x00400e91

00400fb4 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400fb4:	2803      	cmp	r0, #3
  400fb6:	d011      	beq.n	400fdc <pmc_mck_set_division+0x28>
  400fb8:	2804      	cmp	r0, #4
  400fba:	d012      	beq.n	400fe2 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400fbc:	2802      	cmp	r0, #2
  400fbe:	bf0c      	ite	eq
  400fc0:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400fc4:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400fc6:	4a08      	ldr	r2, [pc, #32]	; (400fe8 <pmc_mck_set_division+0x34>)
  400fc8:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400fca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400fce:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400fd0:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400fd2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fd4:	f013 0f08 	tst.w	r3, #8
  400fd8:	d0fb      	beq.n	400fd2 <pmc_mck_set_division+0x1e>
}
  400fda:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400fdc:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400fe0:	e7f1      	b.n	400fc6 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400fe2:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400fe6:	e7ee      	b.n	400fc6 <pmc_mck_set_division+0x12>
  400fe8:	400e0600 	.word	0x400e0600

00400fec <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400fec:	4a17      	ldr	r2, [pc, #92]	; (40104c <pmc_switch_mck_to_pllack+0x60>)
  400fee:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400ff0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400ff4:	4318      	orrs	r0, r3
  400ff6:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400ff8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ffa:	f013 0f08 	tst.w	r3, #8
  400ffe:	d10a      	bne.n	401016 <pmc_switch_mck_to_pllack+0x2a>
  401000:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401004:	4911      	ldr	r1, [pc, #68]	; (40104c <pmc_switch_mck_to_pllack+0x60>)
  401006:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401008:	f012 0f08 	tst.w	r2, #8
  40100c:	d103      	bne.n	401016 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40100e:	3b01      	subs	r3, #1
  401010:	d1f9      	bne.n	401006 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  401012:	2001      	movs	r0, #1
  401014:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  401016:	4a0d      	ldr	r2, [pc, #52]	; (40104c <pmc_switch_mck_to_pllack+0x60>)
  401018:	6b13      	ldr	r3, [r2, #48]	; 0x30
  40101a:	f023 0303 	bic.w	r3, r3, #3
  40101e:	f043 0302 	orr.w	r3, r3, #2
  401022:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  401024:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401026:	f013 0f08 	tst.w	r3, #8
  40102a:	d10a      	bne.n	401042 <pmc_switch_mck_to_pllack+0x56>
  40102c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401030:	4906      	ldr	r1, [pc, #24]	; (40104c <pmc_switch_mck_to_pllack+0x60>)
  401032:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401034:	f012 0f08 	tst.w	r2, #8
  401038:	d105      	bne.n	401046 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  40103a:	3b01      	subs	r3, #1
  40103c:	d1f9      	bne.n	401032 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  40103e:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  401040:	4770      	bx	lr
	return 0;
  401042:	2000      	movs	r0, #0
  401044:	4770      	bx	lr
  401046:	2000      	movs	r0, #0
  401048:	4770      	bx	lr
  40104a:	bf00      	nop
  40104c:	400e0600 	.word	0x400e0600

00401050 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401050:	b9a0      	cbnz	r0, 40107c <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401052:	480e      	ldr	r0, [pc, #56]	; (40108c <pmc_switch_mainck_to_xtal+0x3c>)
  401054:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  401056:	0209      	lsls	r1, r1, #8
  401058:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  40105a:	4a0d      	ldr	r2, [pc, #52]	; (401090 <pmc_switch_mainck_to_xtal+0x40>)
  40105c:	401a      	ands	r2, r3
  40105e:	4b0d      	ldr	r3, [pc, #52]	; (401094 <pmc_switch_mainck_to_xtal+0x44>)
  401060:	4313      	orrs	r3, r2
  401062:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401064:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401066:	4602      	mov	r2, r0
  401068:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40106a:	f013 0f01 	tst.w	r3, #1
  40106e:	d0fb      	beq.n	401068 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401070:	4a06      	ldr	r2, [pc, #24]	; (40108c <pmc_switch_mainck_to_xtal+0x3c>)
  401072:	6a11      	ldr	r1, [r2, #32]
  401074:	4b08      	ldr	r3, [pc, #32]	; (401098 <pmc_switch_mainck_to_xtal+0x48>)
  401076:	430b      	orrs	r3, r1
  401078:	6213      	str	r3, [r2, #32]
  40107a:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40107c:	4903      	ldr	r1, [pc, #12]	; (40108c <pmc_switch_mainck_to_xtal+0x3c>)
  40107e:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401080:	4a06      	ldr	r2, [pc, #24]	; (40109c <pmc_switch_mainck_to_xtal+0x4c>)
  401082:	401a      	ands	r2, r3
  401084:	4b06      	ldr	r3, [pc, #24]	; (4010a0 <pmc_switch_mainck_to_xtal+0x50>)
  401086:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401088:	620b      	str	r3, [r1, #32]
  40108a:	4770      	bx	lr
  40108c:	400e0600 	.word	0x400e0600
  401090:	ffc8fffc 	.word	0xffc8fffc
  401094:	00370001 	.word	0x00370001
  401098:	01370000 	.word	0x01370000
  40109c:	fec8fffc 	.word	0xfec8fffc
  4010a0:	01370002 	.word	0x01370002

004010a4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  4010a4:	4b02      	ldr	r3, [pc, #8]	; (4010b0 <pmc_osc_is_ready_mainck+0xc>)
  4010a6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010a8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4010ac:	4770      	bx	lr
  4010ae:	bf00      	nop
  4010b0:	400e0600 	.word	0x400e0600

004010b4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4010b4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4010b8:	4b01      	ldr	r3, [pc, #4]	; (4010c0 <pmc_disable_pllack+0xc>)
  4010ba:	629a      	str	r2, [r3, #40]	; 0x28
  4010bc:	4770      	bx	lr
  4010be:	bf00      	nop
  4010c0:	400e0600 	.word	0x400e0600

004010c4 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4010c4:	4b02      	ldr	r3, [pc, #8]	; (4010d0 <pmc_is_locked_pllack+0xc>)
  4010c6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010c8:	f000 0002 	and.w	r0, r0, #2
  4010cc:	4770      	bx	lr
  4010ce:	bf00      	nop
  4010d0:	400e0600 	.word	0x400e0600

004010d4 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4010d4:	283f      	cmp	r0, #63	; 0x3f
  4010d6:	d81e      	bhi.n	401116 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  4010d8:	281f      	cmp	r0, #31
  4010da:	d80c      	bhi.n	4010f6 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4010dc:	4b11      	ldr	r3, [pc, #68]	; (401124 <pmc_enable_periph_clk+0x50>)
  4010de:	699a      	ldr	r2, [r3, #24]
  4010e0:	2301      	movs	r3, #1
  4010e2:	4083      	lsls	r3, r0
  4010e4:	4393      	bics	r3, r2
  4010e6:	d018      	beq.n	40111a <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  4010e8:	2301      	movs	r3, #1
  4010ea:	fa03 f000 	lsl.w	r0, r3, r0
  4010ee:	4b0d      	ldr	r3, [pc, #52]	; (401124 <pmc_enable_periph_clk+0x50>)
  4010f0:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4010f2:	2000      	movs	r0, #0
  4010f4:	4770      	bx	lr
		ul_id -= 32;
  4010f6:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4010f8:	4b0a      	ldr	r3, [pc, #40]	; (401124 <pmc_enable_periph_clk+0x50>)
  4010fa:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4010fe:	2301      	movs	r3, #1
  401100:	4083      	lsls	r3, r0
  401102:	4393      	bics	r3, r2
  401104:	d00b      	beq.n	40111e <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  401106:	2301      	movs	r3, #1
  401108:	fa03 f000 	lsl.w	r0, r3, r0
  40110c:	4b05      	ldr	r3, [pc, #20]	; (401124 <pmc_enable_periph_clk+0x50>)
  40110e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  401112:	2000      	movs	r0, #0
  401114:	4770      	bx	lr
		return 1;
  401116:	2001      	movs	r0, #1
  401118:	4770      	bx	lr
	return 0;
  40111a:	2000      	movs	r0, #0
  40111c:	4770      	bx	lr
  40111e:	2000      	movs	r0, #0
}
  401120:	4770      	bx	lr
  401122:	bf00      	nop
  401124:	400e0600 	.word	0x400e0600

00401128 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  401128:	4770      	bx	lr
	...

0040112c <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  40112c:	4a10      	ldr	r2, [pc, #64]	; (401170 <pmc_enable_waitmode+0x44>)
  40112e:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401130:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401134:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  401138:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  40113a:	6a11      	ldr	r1, [r2, #32]
  40113c:	4b0d      	ldr	r3, [pc, #52]	; (401174 <pmc_enable_waitmode+0x48>)
  40113e:	430b      	orrs	r3, r1
  401140:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401142:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401144:	f013 0f08 	tst.w	r3, #8
  401148:	d0fb      	beq.n	401142 <pmc_enable_waitmode+0x16>
  40114a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  40114e:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  401150:	3b01      	subs	r3, #1
  401152:	d1fc      	bne.n	40114e <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  401154:	4a06      	ldr	r2, [pc, #24]	; (401170 <pmc_enable_waitmode+0x44>)
  401156:	6a13      	ldr	r3, [r2, #32]
  401158:	f013 0f08 	tst.w	r3, #8
  40115c:	d0fb      	beq.n	401156 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  40115e:	4a04      	ldr	r2, [pc, #16]	; (401170 <pmc_enable_waitmode+0x44>)
  401160:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401162:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  401166:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  40116a:	6713      	str	r3, [r2, #112]	; 0x70
  40116c:	4770      	bx	lr
  40116e:	bf00      	nop
  401170:	400e0600 	.word	0x400e0600
  401174:	00370004 	.word	0x00370004

00401178 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  401178:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  40117c:	1e43      	subs	r3, r0, #1
  40117e:	2b04      	cmp	r3, #4
  401180:	f200 8107 	bhi.w	401392 <pmc_sleep+0x21a>
  401184:	e8df f013 	tbh	[pc, r3, lsl #1]
  401188:	00050005 	.word	0x00050005
  40118c:	00150015 	.word	0x00150015
  401190:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  401192:	4a81      	ldr	r2, [pc, #516]	; (401398 <pmc_sleep+0x220>)
  401194:	6913      	ldr	r3, [r2, #16]
  401196:	f023 0304 	bic.w	r3, r3, #4
  40119a:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  40119c:	2201      	movs	r2, #1
  40119e:	4b7f      	ldr	r3, [pc, #508]	; (40139c <pmc_sleep+0x224>)
  4011a0:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4011a2:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  4011a6:	b662      	cpsie	i
  __ASM volatile ("dsb");
  4011a8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  4011ac:	bf30      	wfi
  4011ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4011b2:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  4011b4:	2803      	cmp	r0, #3
  4011b6:	bf0c      	ite	eq
  4011b8:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  4011ba:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  4011be:	4b78      	ldr	r3, [pc, #480]	; (4013a0 <pmc_sleep+0x228>)
  4011c0:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  4011c2:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4011c4:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  4011c8:	2200      	movs	r2, #0
  4011ca:	4b74      	ldr	r3, [pc, #464]	; (40139c <pmc_sleep+0x224>)
  4011cc:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  4011ce:	2201      	movs	r2, #1
  4011d0:	4b74      	ldr	r3, [pc, #464]	; (4013a4 <pmc_sleep+0x22c>)
  4011d2:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  4011d4:	4b74      	ldr	r3, [pc, #464]	; (4013a8 <pmc_sleep+0x230>)
  4011d6:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  4011d8:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  4011da:	4a74      	ldr	r2, [pc, #464]	; (4013ac <pmc_sleep+0x234>)
  4011dc:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  4011e0:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  4011e2:	4a73      	ldr	r2, [pc, #460]	; (4013b0 <pmc_sleep+0x238>)
  4011e4:	433a      	orrs	r2, r7
  4011e6:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  4011e8:	f005 0903 	and.w	r9, r5, #3
  4011ec:	f1b9 0f01 	cmp.w	r9, #1
  4011f0:	f240 8089 	bls.w	401306 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  4011f4:	f025 0103 	bic.w	r1, r5, #3
  4011f8:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  4011fc:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4011fe:	461a      	mov	r2, r3
  401200:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401202:	f013 0f08 	tst.w	r3, #8
  401206:	d0fb      	beq.n	401200 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401208:	f011 0f70 	tst.w	r1, #112	; 0x70
  40120c:	d008      	beq.n	401220 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  40120e:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  401212:	4b65      	ldr	r3, [pc, #404]	; (4013a8 <pmc_sleep+0x230>)
  401214:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401216:	461a      	mov	r2, r3
  401218:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40121a:	f013 0f08 	tst.w	r3, #8
  40121e:	d0fb      	beq.n	401218 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401220:	4b64      	ldr	r3, [pc, #400]	; (4013b4 <pmc_sleep+0x23c>)
  401222:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401224:	4a60      	ldr	r2, [pc, #384]	; (4013a8 <pmc_sleep+0x230>)
  401226:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401228:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  40122c:	d0fb      	beq.n	401226 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  40122e:	4a5e      	ldr	r2, [pc, #376]	; (4013a8 <pmc_sleep+0x230>)
  401230:	6a11      	ldr	r1, [r2, #32]
  401232:	4b61      	ldr	r3, [pc, #388]	; (4013b8 <pmc_sleep+0x240>)
  401234:	400b      	ands	r3, r1
  401236:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  40123a:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  40123c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40123e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401242:	d0fb      	beq.n	40123c <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401244:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401248:	4a58      	ldr	r2, [pc, #352]	; (4013ac <pmc_sleep+0x234>)
  40124a:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  40124c:	2c04      	cmp	r4, #4
  40124e:	d05c      	beq.n	40130a <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401250:	4c52      	ldr	r4, [pc, #328]	; (40139c <pmc_sleep+0x224>)
  401252:	2301      	movs	r3, #1
  401254:	7023      	strb	r3, [r4, #0]
  401256:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40125a:	b662      	cpsie	i

		pmc_enable_waitmode();
  40125c:	4b57      	ldr	r3, [pc, #348]	; (4013bc <pmc_sleep+0x244>)
  40125e:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  401260:	b672      	cpsid	i
  401262:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  401266:	2300      	movs	r3, #0
  401268:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  40126a:	f017 0f02 	tst.w	r7, #2
  40126e:	d055      	beq.n	40131c <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401270:	4a4d      	ldr	r2, [pc, #308]	; (4013a8 <pmc_sleep+0x230>)
  401272:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401274:	4952      	ldr	r1, [pc, #328]	; (4013c0 <pmc_sleep+0x248>)
  401276:	4019      	ands	r1, r3
  401278:	4b52      	ldr	r3, [pc, #328]	; (4013c4 <pmc_sleep+0x24c>)
  40127a:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40127c:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40127e:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  401280:	4b51      	ldr	r3, [pc, #324]	; (4013c8 <pmc_sleep+0x250>)
  401282:	400b      	ands	r3, r1
  401284:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401288:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  40128a:	4b50      	ldr	r3, [pc, #320]	; (4013cc <pmc_sleep+0x254>)
  40128c:	4033      	ands	r3, r6
  40128e:	2b00      	cmp	r3, #0
  401290:	d06e      	beq.n	401370 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  401292:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  401296:	4b44      	ldr	r3, [pc, #272]	; (4013a8 <pmc_sleep+0x230>)
  401298:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  40129a:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  40129c:	f1b9 0f02 	cmp.w	r9, #2
  4012a0:	d104      	bne.n	4012ac <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4012a2:	4a41      	ldr	r2, [pc, #260]	; (4013a8 <pmc_sleep+0x230>)
  4012a4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012a6:	f013 0f02 	tst.w	r3, #2
  4012aa:	d0fb      	beq.n	4012a4 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4012ac:	4a3e      	ldr	r2, [pc, #248]	; (4013a8 <pmc_sleep+0x230>)
  4012ae:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4012b0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  4012b4:	f005 0070 	and.w	r0, r5, #112	; 0x70
  4012b8:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4012ba:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012bc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012be:	f013 0f08 	tst.w	r3, #8
  4012c2:	d0fb      	beq.n	4012bc <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  4012c4:	4b39      	ldr	r3, [pc, #228]	; (4013ac <pmc_sleep+0x234>)
  4012c6:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  4012ca:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4012ce:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012d0:	461a      	mov	r2, r3
  4012d2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012d4:	f013 0f08 	tst.w	r3, #8
  4012d8:	d0fb      	beq.n	4012d2 <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  4012da:	4a33      	ldr	r2, [pc, #204]	; (4013a8 <pmc_sleep+0x230>)
  4012dc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012de:	420b      	tst	r3, r1
  4012e0:	d0fc      	beq.n	4012dc <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  4012e2:	2200      	movs	r2, #0
  4012e4:	4b2f      	ldr	r3, [pc, #188]	; (4013a4 <pmc_sleep+0x22c>)
  4012e6:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  4012e8:	4b39      	ldr	r3, [pc, #228]	; (4013d0 <pmc_sleep+0x258>)
  4012ea:	681b      	ldr	r3, [r3, #0]
  4012ec:	b11b      	cbz	r3, 4012f6 <pmc_sleep+0x17e>
			callback_clocks_restored();
  4012ee:	4798      	blx	r3
			callback_clocks_restored = NULL;
  4012f0:	2200      	movs	r2, #0
  4012f2:	4b37      	ldr	r3, [pc, #220]	; (4013d0 <pmc_sleep+0x258>)
  4012f4:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  4012f6:	2201      	movs	r2, #1
  4012f8:	4b28      	ldr	r3, [pc, #160]	; (40139c <pmc_sleep+0x224>)
  4012fa:	701a      	strb	r2, [r3, #0]
  4012fc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401300:	b662      	cpsie	i
  401302:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  401306:	4629      	mov	r1, r5
  401308:	e77e      	b.n	401208 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40130a:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  40130e:	6a11      	ldr	r1, [r2, #32]
  401310:	4b30      	ldr	r3, [pc, #192]	; (4013d4 <pmc_sleep+0x25c>)
  401312:	400b      	ands	r3, r1
  401314:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401318:	6213      	str	r3, [r2, #32]
  40131a:	e799      	b.n	401250 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  40131c:	f017 0f01 	tst.w	r7, #1
  401320:	d0b3      	beq.n	40128a <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  401322:	4b21      	ldr	r3, [pc, #132]	; (4013a8 <pmc_sleep+0x230>)
  401324:	6a1b      	ldr	r3, [r3, #32]
  401326:	f013 0f01 	tst.w	r3, #1
  40132a:	d10b      	bne.n	401344 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40132c:	491e      	ldr	r1, [pc, #120]	; (4013a8 <pmc_sleep+0x230>)
  40132e:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  401330:	4a29      	ldr	r2, [pc, #164]	; (4013d8 <pmc_sleep+0x260>)
  401332:	401a      	ands	r2, r3
  401334:	4b29      	ldr	r3, [pc, #164]	; (4013dc <pmc_sleep+0x264>)
  401336:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401338:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40133a:	460a      	mov	r2, r1
  40133c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40133e:	f013 0f01 	tst.w	r3, #1
  401342:	d0fb      	beq.n	40133c <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  401344:	4b18      	ldr	r3, [pc, #96]	; (4013a8 <pmc_sleep+0x230>)
  401346:	6a1b      	ldr	r3, [r3, #32]
  401348:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40134c:	d108      	bne.n	401360 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40134e:	4a16      	ldr	r2, [pc, #88]	; (4013a8 <pmc_sleep+0x230>)
  401350:	6a11      	ldr	r1, [r2, #32]
  401352:	4b23      	ldr	r3, [pc, #140]	; (4013e0 <pmc_sleep+0x268>)
  401354:	430b      	orrs	r3, r1
  401356:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401358:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40135a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40135e:	d0fb      	beq.n	401358 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401360:	4a11      	ldr	r2, [pc, #68]	; (4013a8 <pmc_sleep+0x230>)
  401362:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401364:	4b18      	ldr	r3, [pc, #96]	; (4013c8 <pmc_sleep+0x250>)
  401366:	400b      	ands	r3, r1
  401368:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40136c:	6213      	str	r3, [r2, #32]
  40136e:	e78c      	b.n	40128a <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  401370:	2100      	movs	r1, #0
  401372:	e793      	b.n	40129c <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  401374:	4a08      	ldr	r2, [pc, #32]	; (401398 <pmc_sleep+0x220>)
  401376:	6913      	ldr	r3, [r2, #16]
  401378:	f043 0304 	orr.w	r3, r3, #4
  40137c:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  40137e:	4a19      	ldr	r2, [pc, #100]	; (4013e4 <pmc_sleep+0x26c>)
  401380:	4b19      	ldr	r3, [pc, #100]	; (4013e8 <pmc_sleep+0x270>)
  401382:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  401384:	2201      	movs	r2, #1
  401386:	4b05      	ldr	r3, [pc, #20]	; (40139c <pmc_sleep+0x224>)
  401388:	701a      	strb	r2, [r3, #0]
  40138a:	f3bf 8f5f 	dmb	sy
  40138e:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401390:	bf30      	wfi
  401392:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401396:	bf00      	nop
  401398:	e000ed00 	.word	0xe000ed00
  40139c:	20400018 	.word	0x20400018
  4013a0:	00401129 	.word	0x00401129
  4013a4:	20400c70 	.word	0x20400c70
  4013a8:	400e0600 	.word	0x400e0600
  4013ac:	400e0c00 	.word	0x400e0c00
  4013b0:	00370008 	.word	0x00370008
  4013b4:	004010b5 	.word	0x004010b5
  4013b8:	fec8ffff 	.word	0xfec8ffff
  4013bc:	0040112d 	.word	0x0040112d
  4013c0:	fec8fffc 	.word	0xfec8fffc
  4013c4:	01370002 	.word	0x01370002
  4013c8:	ffc8ff87 	.word	0xffc8ff87
  4013cc:	07ff0000 	.word	0x07ff0000
  4013d0:	20400c74 	.word	0x20400c74
  4013d4:	ffc8fffe 	.word	0xffc8fffe
  4013d8:	ffc8fffc 	.word	0xffc8fffc
  4013dc:	00370001 	.word	0x00370001
  4013e0:	01370000 	.word	0x01370000
  4013e4:	a5000004 	.word	0xa5000004
  4013e8:	400e1810 	.word	0x400e1810

004013ec <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4013ec:	e7fe      	b.n	4013ec <Dummy_Handler>
	...

004013f0 <Reset_Handler>:
{
  4013f0:	b500      	push	{lr}
  4013f2:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4013f4:	4b25      	ldr	r3, [pc, #148]	; (40148c <Reset_Handler+0x9c>)
  4013f6:	4a26      	ldr	r2, [pc, #152]	; (401490 <Reset_Handler+0xa0>)
  4013f8:	429a      	cmp	r2, r3
  4013fa:	d010      	beq.n	40141e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4013fc:	4b25      	ldr	r3, [pc, #148]	; (401494 <Reset_Handler+0xa4>)
  4013fe:	4a23      	ldr	r2, [pc, #140]	; (40148c <Reset_Handler+0x9c>)
  401400:	429a      	cmp	r2, r3
  401402:	d20c      	bcs.n	40141e <Reset_Handler+0x2e>
  401404:	3b01      	subs	r3, #1
  401406:	1a9b      	subs	r3, r3, r2
  401408:	f023 0303 	bic.w	r3, r3, #3
  40140c:	3304      	adds	r3, #4
  40140e:	4413      	add	r3, r2
  401410:	491f      	ldr	r1, [pc, #124]	; (401490 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  401412:	f851 0b04 	ldr.w	r0, [r1], #4
  401416:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  40141a:	429a      	cmp	r2, r3
  40141c:	d1f9      	bne.n	401412 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  40141e:	4b1e      	ldr	r3, [pc, #120]	; (401498 <Reset_Handler+0xa8>)
  401420:	4a1e      	ldr	r2, [pc, #120]	; (40149c <Reset_Handler+0xac>)
  401422:	429a      	cmp	r2, r3
  401424:	d20a      	bcs.n	40143c <Reset_Handler+0x4c>
  401426:	3b01      	subs	r3, #1
  401428:	1a9b      	subs	r3, r3, r2
  40142a:	f023 0303 	bic.w	r3, r3, #3
  40142e:	3304      	adds	r3, #4
  401430:	4413      	add	r3, r2
                *pDest++ = 0;
  401432:	2100      	movs	r1, #0
  401434:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401438:	4293      	cmp	r3, r2
  40143a:	d1fb      	bne.n	401434 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40143c:	4a18      	ldr	r2, [pc, #96]	; (4014a0 <Reset_Handler+0xb0>)
  40143e:	4b19      	ldr	r3, [pc, #100]	; (4014a4 <Reset_Handler+0xb4>)
  401440:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401444:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401446:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  40144a:	fab3 f383 	clz	r3, r3
  40144e:	095b      	lsrs	r3, r3, #5
  401450:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  401452:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401454:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401458:	2200      	movs	r2, #0
  40145a:	4b13      	ldr	r3, [pc, #76]	; (4014a8 <Reset_Handler+0xb8>)
  40145c:	701a      	strb	r2, [r3, #0]
	return flags;
  40145e:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401460:	4a12      	ldr	r2, [pc, #72]	; (4014ac <Reset_Handler+0xbc>)
  401462:	6813      	ldr	r3, [r2, #0]
  401464:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401468:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  40146a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40146e:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401472:	b129      	cbz	r1, 401480 <Reset_Handler+0x90>
		cpu_irq_enable();
  401474:	2201      	movs	r2, #1
  401476:	4b0c      	ldr	r3, [pc, #48]	; (4014a8 <Reset_Handler+0xb8>)
  401478:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40147a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40147e:	b662      	cpsie	i
        __libc_init_array();
  401480:	4b0b      	ldr	r3, [pc, #44]	; (4014b0 <Reset_Handler+0xc0>)
  401482:	4798      	blx	r3
        main();
  401484:	4b0b      	ldr	r3, [pc, #44]	; (4014b4 <Reset_Handler+0xc4>)
  401486:	4798      	blx	r3
  401488:	e7fe      	b.n	401488 <Reset_Handler+0x98>
  40148a:	bf00      	nop
  40148c:	20400000 	.word	0x20400000
  401490:	0040713c 	.word	0x0040713c
  401494:	204009d8 	.word	0x204009d8
  401498:	20400cf8 	.word	0x20400cf8
  40149c:	204009d8 	.word	0x204009d8
  4014a0:	e000ed00 	.word	0xe000ed00
  4014a4:	00400000 	.word	0x00400000
  4014a8:	20400018 	.word	0x20400018
  4014ac:	e000ed88 	.word	0xe000ed88
  4014b0:	004022b1 	.word	0x004022b1
  4014b4:	00401955 	.word	0x00401955

004014b8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4014b8:	4b3b      	ldr	r3, [pc, #236]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  4014ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014bc:	f003 0303 	and.w	r3, r3, #3
  4014c0:	2b01      	cmp	r3, #1
  4014c2:	d01d      	beq.n	401500 <SystemCoreClockUpdate+0x48>
  4014c4:	b183      	cbz	r3, 4014e8 <SystemCoreClockUpdate+0x30>
  4014c6:	2b02      	cmp	r3, #2
  4014c8:	d036      	beq.n	401538 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4014ca:	4b37      	ldr	r3, [pc, #220]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  4014cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014ce:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014d2:	2b70      	cmp	r3, #112	; 0x70
  4014d4:	d05f      	beq.n	401596 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014d6:	4b34      	ldr	r3, [pc, #208]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  4014d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4014da:	4934      	ldr	r1, [pc, #208]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  4014dc:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4014e0:	680b      	ldr	r3, [r1, #0]
  4014e2:	40d3      	lsrs	r3, r2
  4014e4:	600b      	str	r3, [r1, #0]
  4014e6:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4014e8:	4b31      	ldr	r3, [pc, #196]	; (4015b0 <SystemCoreClockUpdate+0xf8>)
  4014ea:	695b      	ldr	r3, [r3, #20]
  4014ec:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4014f0:	bf14      	ite	ne
  4014f2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4014f6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4014fa:	4b2c      	ldr	r3, [pc, #176]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  4014fc:	601a      	str	r2, [r3, #0]
  4014fe:	e7e4      	b.n	4014ca <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401500:	4b29      	ldr	r3, [pc, #164]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  401502:	6a1b      	ldr	r3, [r3, #32]
  401504:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401508:	d003      	beq.n	401512 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  40150a:	4a2a      	ldr	r2, [pc, #168]	; (4015b4 <SystemCoreClockUpdate+0xfc>)
  40150c:	4b27      	ldr	r3, [pc, #156]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  40150e:	601a      	str	r2, [r3, #0]
  401510:	e7db      	b.n	4014ca <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401512:	4a29      	ldr	r2, [pc, #164]	; (4015b8 <SystemCoreClockUpdate+0x100>)
  401514:	4b25      	ldr	r3, [pc, #148]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  401516:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401518:	4b23      	ldr	r3, [pc, #140]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  40151a:	6a1b      	ldr	r3, [r3, #32]
  40151c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401520:	2b10      	cmp	r3, #16
  401522:	d005      	beq.n	401530 <SystemCoreClockUpdate+0x78>
  401524:	2b20      	cmp	r3, #32
  401526:	d1d0      	bne.n	4014ca <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401528:	4a22      	ldr	r2, [pc, #136]	; (4015b4 <SystemCoreClockUpdate+0xfc>)
  40152a:	4b20      	ldr	r3, [pc, #128]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  40152c:	601a      	str	r2, [r3, #0]
          break;
  40152e:	e7cc      	b.n	4014ca <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401530:	4a22      	ldr	r2, [pc, #136]	; (4015bc <SystemCoreClockUpdate+0x104>)
  401532:	4b1e      	ldr	r3, [pc, #120]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  401534:	601a      	str	r2, [r3, #0]
          break;
  401536:	e7c8      	b.n	4014ca <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401538:	4b1b      	ldr	r3, [pc, #108]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  40153a:	6a1b      	ldr	r3, [r3, #32]
  40153c:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401540:	d016      	beq.n	401570 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  401542:	4a1c      	ldr	r2, [pc, #112]	; (4015b4 <SystemCoreClockUpdate+0xfc>)
  401544:	4b19      	ldr	r3, [pc, #100]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  401546:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401548:	4b17      	ldr	r3, [pc, #92]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  40154a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40154c:	f003 0303 	and.w	r3, r3, #3
  401550:	2b02      	cmp	r3, #2
  401552:	d1ba      	bne.n	4014ca <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401554:	4a14      	ldr	r2, [pc, #80]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  401556:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401558:	6a92      	ldr	r2, [r2, #40]	; 0x28
  40155a:	4814      	ldr	r0, [pc, #80]	; (4015ac <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40155c:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401560:	6803      	ldr	r3, [r0, #0]
  401562:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401566:	b2d2      	uxtb	r2, r2
  401568:	fbb3 f3f2 	udiv	r3, r3, r2
  40156c:	6003      	str	r3, [r0, #0]
  40156e:	e7ac      	b.n	4014ca <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401570:	4a11      	ldr	r2, [pc, #68]	; (4015b8 <SystemCoreClockUpdate+0x100>)
  401572:	4b0e      	ldr	r3, [pc, #56]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  401574:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401576:	4b0c      	ldr	r3, [pc, #48]	; (4015a8 <SystemCoreClockUpdate+0xf0>)
  401578:	6a1b      	ldr	r3, [r3, #32]
  40157a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40157e:	2b10      	cmp	r3, #16
  401580:	d005      	beq.n	40158e <SystemCoreClockUpdate+0xd6>
  401582:	2b20      	cmp	r3, #32
  401584:	d1e0      	bne.n	401548 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401586:	4a0b      	ldr	r2, [pc, #44]	; (4015b4 <SystemCoreClockUpdate+0xfc>)
  401588:	4b08      	ldr	r3, [pc, #32]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  40158a:	601a      	str	r2, [r3, #0]
          break;
  40158c:	e7dc      	b.n	401548 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40158e:	4a0b      	ldr	r2, [pc, #44]	; (4015bc <SystemCoreClockUpdate+0x104>)
  401590:	4b06      	ldr	r3, [pc, #24]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  401592:	601a      	str	r2, [r3, #0]
          break;
  401594:	e7d8      	b.n	401548 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401596:	4a05      	ldr	r2, [pc, #20]	; (4015ac <SystemCoreClockUpdate+0xf4>)
  401598:	6813      	ldr	r3, [r2, #0]
  40159a:	4909      	ldr	r1, [pc, #36]	; (4015c0 <SystemCoreClockUpdate+0x108>)
  40159c:	fba1 1303 	umull	r1, r3, r1, r3
  4015a0:	085b      	lsrs	r3, r3, #1
  4015a2:	6013      	str	r3, [r2, #0]
  4015a4:	4770      	bx	lr
  4015a6:	bf00      	nop
  4015a8:	400e0600 	.word	0x400e0600
  4015ac:	2040001c 	.word	0x2040001c
  4015b0:	400e1810 	.word	0x400e1810
  4015b4:	00b71b00 	.word	0x00b71b00
  4015b8:	003d0900 	.word	0x003d0900
  4015bc:	007a1200 	.word	0x007a1200
  4015c0:	aaaaaaab 	.word	0xaaaaaaab

004015c4 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4015c4:	4b16      	ldr	r3, [pc, #88]	; (401620 <system_init_flash+0x5c>)
  4015c6:	4298      	cmp	r0, r3
  4015c8:	d913      	bls.n	4015f2 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4015ca:	4b16      	ldr	r3, [pc, #88]	; (401624 <system_init_flash+0x60>)
  4015cc:	4298      	cmp	r0, r3
  4015ce:	d915      	bls.n	4015fc <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4015d0:	4b15      	ldr	r3, [pc, #84]	; (401628 <system_init_flash+0x64>)
  4015d2:	4298      	cmp	r0, r3
  4015d4:	d916      	bls.n	401604 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4015d6:	4b15      	ldr	r3, [pc, #84]	; (40162c <system_init_flash+0x68>)
  4015d8:	4298      	cmp	r0, r3
  4015da:	d917      	bls.n	40160c <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4015dc:	4b14      	ldr	r3, [pc, #80]	; (401630 <system_init_flash+0x6c>)
  4015de:	4298      	cmp	r0, r3
  4015e0:	d918      	bls.n	401614 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4015e2:	4b14      	ldr	r3, [pc, #80]	; (401634 <system_init_flash+0x70>)
  4015e4:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4015e6:	bf94      	ite	ls
  4015e8:	4a13      	ldrls	r2, [pc, #76]	; (401638 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4015ea:	4a14      	ldrhi	r2, [pc, #80]	; (40163c <system_init_flash+0x78>)
  4015ec:	4b14      	ldr	r3, [pc, #80]	; (401640 <system_init_flash+0x7c>)
  4015ee:	601a      	str	r2, [r3, #0]
  4015f0:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4015f2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4015f6:	4b12      	ldr	r3, [pc, #72]	; (401640 <system_init_flash+0x7c>)
  4015f8:	601a      	str	r2, [r3, #0]
  4015fa:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4015fc:	4a11      	ldr	r2, [pc, #68]	; (401644 <system_init_flash+0x80>)
  4015fe:	4b10      	ldr	r3, [pc, #64]	; (401640 <system_init_flash+0x7c>)
  401600:	601a      	str	r2, [r3, #0]
  401602:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401604:	4a10      	ldr	r2, [pc, #64]	; (401648 <system_init_flash+0x84>)
  401606:	4b0e      	ldr	r3, [pc, #56]	; (401640 <system_init_flash+0x7c>)
  401608:	601a      	str	r2, [r3, #0]
  40160a:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40160c:	4a0f      	ldr	r2, [pc, #60]	; (40164c <system_init_flash+0x88>)
  40160e:	4b0c      	ldr	r3, [pc, #48]	; (401640 <system_init_flash+0x7c>)
  401610:	601a      	str	r2, [r3, #0]
  401612:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401614:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401618:	4b09      	ldr	r3, [pc, #36]	; (401640 <system_init_flash+0x7c>)
  40161a:	601a      	str	r2, [r3, #0]
  40161c:	4770      	bx	lr
  40161e:	bf00      	nop
  401620:	015ef3bf 	.word	0x015ef3bf
  401624:	02bde77f 	.word	0x02bde77f
  401628:	041cdb3f 	.word	0x041cdb3f
  40162c:	057bceff 	.word	0x057bceff
  401630:	06dac2bf 	.word	0x06dac2bf
  401634:	0839b67f 	.word	0x0839b67f
  401638:	04000500 	.word	0x04000500
  40163c:	04000600 	.word	0x04000600
  401640:	400e0c00 	.word	0x400e0c00
  401644:	04000100 	.word	0x04000100
  401648:	04000200 	.word	0x04000200
  40164c:	04000300 	.word	0x04000300

00401650 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401650:	4b0a      	ldr	r3, [pc, #40]	; (40167c <_sbrk+0x2c>)
  401652:	681b      	ldr	r3, [r3, #0]
  401654:	b153      	cbz	r3, 40166c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401656:	4b09      	ldr	r3, [pc, #36]	; (40167c <_sbrk+0x2c>)
  401658:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  40165a:	181a      	adds	r2, r3, r0
  40165c:	4908      	ldr	r1, [pc, #32]	; (401680 <_sbrk+0x30>)
  40165e:	4291      	cmp	r1, r2
  401660:	db08      	blt.n	401674 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401662:	4610      	mov	r0, r2
  401664:	4a05      	ldr	r2, [pc, #20]	; (40167c <_sbrk+0x2c>)
  401666:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401668:	4618      	mov	r0, r3
  40166a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  40166c:	4a05      	ldr	r2, [pc, #20]	; (401684 <_sbrk+0x34>)
  40166e:	4b03      	ldr	r3, [pc, #12]	; (40167c <_sbrk+0x2c>)
  401670:	601a      	str	r2, [r3, #0]
  401672:	e7f0      	b.n	401656 <_sbrk+0x6>
		return (caddr_t) -1;	
  401674:	f04f 30ff 	mov.w	r0, #4294967295
}
  401678:	4770      	bx	lr
  40167a:	bf00      	nop
  40167c:	20400c78 	.word	0x20400c78
  401680:	2045fffc 	.word	0x2045fffc
  401684:	20402ef8 	.word	0x20402ef8

00401688 <Button1_Handler>:



static void Button1_Handler(uint32_t id, uint32_t mask)
{
	mag_pulses = mag_pulses+1;
  401688:	4a02      	ldr	r2, [pc, #8]	; (401694 <Button1_Handler+0xc>)
  40168a:	6813      	ldr	r3, [r2, #0]
  40168c:	3301      	adds	r3, #1
  40168e:	6013      	str	r3, [r2, #0]
  401690:	4770      	bx	lr
  401692:	bf00      	nop
  401694:	20400c8c 	.word	0x20400c8c

00401698 <Button2_Handler>:
	
}
static void Button2_Handler(uint32_t id, uint32_t mask)
{
	what = what -1;
  401698:	4a04      	ldr	r2, [pc, #16]	; (4016ac <Button2_Handler+0x14>)
  40169a:	7813      	ldrb	r3, [r2, #0]
  40169c:	3b01      	subs	r3, #1
  40169e:	b2db      	uxtb	r3, r3
  4016a0:	7013      	strb	r3, [r2, #0]
	if (what < 0){
  4016a2:	7813      	ldrb	r3, [r2, #0]
		what = 2;
	}
	flag_draw = true;
  4016a4:	2201      	movs	r2, #1
  4016a6:	4b02      	ldr	r3, [pc, #8]	; (4016b0 <Button2_Handler+0x18>)
  4016a8:	701a      	strb	r2, [r3, #0]
  4016aa:	4770      	bx	lr
  4016ac:	20400c98 	.word	0x20400c98
  4016b0:	20400c89 	.word	0x20400c89

004016b4 <Button3_Handler>:
}
static void Button3_Handler(uint32_t id, uint32_t mask)
{
	what =what+1;
  4016b4:	4a07      	ldr	r2, [pc, #28]	; (4016d4 <Button3_Handler+0x20>)
  4016b6:	7813      	ldrb	r3, [r2, #0]
  4016b8:	3301      	adds	r3, #1
  4016ba:	b2db      	uxtb	r3, r3
  4016bc:	7013      	strb	r3, [r2, #0]
	if (what > 2){
  4016be:	7813      	ldrb	r3, [r2, #0]
  4016c0:	b2db      	uxtb	r3, r3
  4016c2:	2b02      	cmp	r3, #2
  4016c4:	d902      	bls.n	4016cc <Button3_Handler+0x18>
		what = 0;
  4016c6:	2200      	movs	r2, #0
  4016c8:	4b02      	ldr	r3, [pc, #8]	; (4016d4 <Button3_Handler+0x20>)
  4016ca:	701a      	strb	r2, [r3, #0]
	}
	flag_draw = true;
  4016cc:	2201      	movs	r2, #1
  4016ce:	4b02      	ldr	r3, [pc, #8]	; (4016d8 <Button3_Handler+0x24>)
  4016d0:	701a      	strb	r2, [r3, #0]
  4016d2:	4770      	bx	lr
  4016d4:	20400c98 	.word	0x20400c98
  4016d8:	20400c89 	.word	0x20400c89
  4016dc:	00000000 	.word	0x00000000

004016e0 <RTT_Handler>:
}

void RTT_Handler(void)
{
  4016e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4016e4:	ed2d 8b04 	vpush	{d8-d9}
	uint32_t ul_status;

	/* Get RTT status */
	ul_status = rtt_get_status(RTT);
  4016e8:	482b      	ldr	r0, [pc, #172]	; (401798 <RTT_Handler+0xb8>)
  4016ea:	4b2c      	ldr	r3, [pc, #176]	; (40179c <RTT_Handler+0xbc>)
  4016ec:	4798      	blx	r3
  4016ee:	4604      	mov	r4, r0

	/* IRQ due to Time has changed */
	if ((ul_status & RTT_SR_RTTINC) == RTT_SR_RTTINC) {
  4016f0:	f010 0f02 	tst.w	r0, #2
  4016f4:	d040      	beq.n	401778 <RTT_Handler+0x98>
		
	vel = 2*3.1415*raio*mag_pulses/(4);
  4016f6:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 4017c0 <RTT_Handler+0xe0>
  4016fa:	e9da 0100 	ldrd	r0, r1, [sl]
  4016fe:	4e28      	ldr	r6, [pc, #160]	; (4017a0 <RTT_Handler+0xc0>)
  401700:	f8d6 b000 	ldr.w	fp, [r6]
  401704:	4d27      	ldr	r5, [pc, #156]	; (4017a4 <RTT_Handler+0xc4>)
  401706:	a322      	add	r3, pc, #136	; (adr r3, 401790 <RTT_Handler+0xb0>)
  401708:	e9d3 2300 	ldrd	r2, r3, [r3]
  40170c:	47a8      	blx	r5
  40170e:	4680      	mov	r8, r0
  401710:	4689      	mov	r9, r1
  401712:	4f25      	ldr	r7, [pc, #148]	; (4017a8 <RTT_Handler+0xc8>)
  401714:	4658      	mov	r0, fp
  401716:	47b8      	blx	r7
  401718:	4602      	mov	r2, r0
  40171a:	460b      	mov	r3, r1
  40171c:	4640      	mov	r0, r8
  40171e:	4649      	mov	r1, r9
  401720:	47a8      	blx	r5
  401722:	2200      	movs	r2, #0
  401724:	4b21      	ldr	r3, [pc, #132]	; (4017ac <RTT_Handler+0xcc>)
  401726:	47a8      	blx	r5
  401728:	4b21      	ldr	r3, [pc, #132]	; (4017b0 <RTT_Handler+0xd0>)
  40172a:	e9c3 0100 	strd	r0, r1, [r3]
	distance += 2*3.1415*raio*mag_pulses+distance;
  40172e:	e9da 0100 	ldrd	r0, r1, [sl]
  401732:	f8d6 b000 	ldr.w	fp, [r6]
  401736:	f8df a08c 	ldr.w	sl, [pc, #140]	; 4017c4 <RTT_Handler+0xe4>
  40173a:	ed9a 9b00 	vldr	d9, [sl]
  40173e:	ed9a 8b00 	vldr	d8, [sl]
  401742:	a313      	add	r3, pc, #76	; (adr r3, 401790 <RTT_Handler+0xb0>)
  401744:	e9d3 2300 	ldrd	r2, r3, [r3]
  401748:	47a8      	blx	r5
  40174a:	4680      	mov	r8, r0
  40174c:	4689      	mov	r9, r1
  40174e:	4658      	mov	r0, fp
  401750:	47b8      	blx	r7
  401752:	4602      	mov	r2, r0
  401754:	460b      	mov	r3, r1
  401756:	4640      	mov	r0, r8
  401758:	4649      	mov	r1, r9
  40175a:	47a8      	blx	r5
  40175c:	4d15      	ldr	r5, [pc, #84]	; (4017b4 <RTT_Handler+0xd4>)
  40175e:	ec53 2b19 	vmov	r2, r3, d9
  401762:	47a8      	blx	r5
  401764:	ec53 2b18 	vmov	r2, r3, d8
  401768:	47a8      	blx	r5
  40176a:	e9ca 0100 	strd	r0, r1, [sl]
	mag_pulses = 0;
  40176e:	2300      	movs	r3, #0
  401770:	6033      	str	r3, [r6, #0]
	flag_draw = true;
  401772:	2201      	movs	r2, #1
  401774:	4b10      	ldr	r3, [pc, #64]	; (4017b8 <RTT_Handler+0xd8>)
  401776:	701a      	strb	r2, [r3, #0]
	}

	/* IRQ due to Alarm */
	if ((ul_status & RTT_SR_ALMS) == RTT_SR_ALMS) {
  401778:	f014 0f01 	tst.w	r4, #1
  40177c:	d004      	beq.n	401788 <RTT_Handler+0xa8>
		   
		flag_draw = true;
  40177e:	2301      	movs	r3, #1
  401780:	4a0d      	ldr	r2, [pc, #52]	; (4017b8 <RTT_Handler+0xd8>)
  401782:	7013      	strb	r3, [r2, #0]
		f_rtt_alarme = true;                  // flag RTT alarme
  401784:	4a0d      	ldr	r2, [pc, #52]	; (4017bc <RTT_Handler+0xdc>)
  401786:	7013      	strb	r3, [r2, #0]
	}
}
  401788:	ecbd 8b04 	vpop	{d8-d9}
  40178c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401790:	c083126f 	.word	0xc083126f
  401794:	401921ca 	.word	0x401921ca
  401798:	400e1830 	.word	0x400e1830
  40179c:	004003f5 	.word	0x004003f5
  4017a0:	20400c8c 	.word	0x20400c8c
  4017a4:	00401e8d 	.word	0x00401e8d
  4017a8:	00401dc1 	.word	0x00401dc1
  4017ac:	3fd00000 	.word	0x3fd00000
  4017b0:	20400c90 	.word	0x20400c90
  4017b4:	00401b29 	.word	0x00401b29
  4017b8:	20400c89 	.word	0x20400c89
  4017bc:	20400c88 	.word	0x20400c88
  4017c0:	20400020 	.word	0x20400020
  4017c4:	20400c80 	.word	0x20400c80

004017c8 <RTC_Handler>:

static float get_time_rtt(){
	uint ul_previous_time = rtt_read_timer_value(RTT);
}
void RTC_Handler(void)
{
  4017c8:	b530      	push	{r4, r5, lr}
  4017ca:	b08d      	sub	sp, #52	; 0x34
	uint32_t ul_status = rtc_get_status(RTC);
  4017cc:	4823      	ldr	r0, [pc, #140]	; (40185c <RTC_Handler+0x94>)
  4017ce:	4b24      	ldr	r3, [pc, #144]	; (401860 <RTC_Handler+0x98>)
  4017d0:	4798      	blx	r3
  4017d2:	4604      	mov	r4, r0
	/*
	*  Verifica por qual motivo entrou
	*  na interrupcao, se foi por segundo
	*  ou Alarm
	*/
	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  4017d4:	f010 0f04 	tst.w	r0, #4
  4017d8:	d112      	bne.n	401800 <RTC_Handler+0x38>
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
	}
	
	/* Time or date alarm */
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  4017da:	f014 0f02 	tst.w	r4, #2
  4017de:	d114      	bne.n	40180a <RTC_Handler+0x42>
			rtc_set_date_alarm(RTC, 1, MONTH2, 1, DAY2);
			rtc_set_time_alarm(RTC, 1, HOUR2, 1, MINUTE2, 1, SECOND2+4);	
	}
	
	
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  4017e0:	4d1e      	ldr	r5, [pc, #120]	; (40185c <RTC_Handler+0x94>)
  4017e2:	2101      	movs	r1, #1
  4017e4:	4628      	mov	r0, r5
  4017e6:	4c1f      	ldr	r4, [pc, #124]	; (401864 <RTC_Handler+0x9c>)
  4017e8:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  4017ea:	2108      	movs	r1, #8
  4017ec:	4628      	mov	r0, r5
  4017ee:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  4017f0:	2110      	movs	r1, #16
  4017f2:	4628      	mov	r0, r5
  4017f4:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);
  4017f6:	2120      	movs	r1, #32
  4017f8:	4628      	mov	r0, r5
  4017fa:	47a0      	blx	r4
	
	
	
}
  4017fc:	b00d      	add	sp, #52	; 0x34
  4017fe:	bd30      	pop	{r4, r5, pc}
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  401800:	2104      	movs	r1, #4
  401802:	4816      	ldr	r0, [pc, #88]	; (40185c <RTC_Handler+0x94>)
  401804:	4b17      	ldr	r3, [pc, #92]	; (401864 <RTC_Handler+0x9c>)
  401806:	4798      	blx	r3
  401808:	e7e7      	b.n	4017da <RTC_Handler+0x12>
			rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  40180a:	4c14      	ldr	r4, [pc, #80]	; (40185c <RTC_Handler+0x94>)
  40180c:	2102      	movs	r1, #2
  40180e:	4620      	mov	r0, r4
  401810:	4b14      	ldr	r3, [pc, #80]	; (401864 <RTC_Handler+0x9c>)
  401812:	4798      	blx	r3
			rtc_get_date(RTC,&YEAR2,&MONTH2,&DAY2,&WEEK2);
  401814:	ab08      	add	r3, sp, #32
  401816:	9300      	str	r3, [sp, #0]
  401818:	ab07      	add	r3, sp, #28
  40181a:	aa06      	add	r2, sp, #24
  40181c:	a905      	add	r1, sp, #20
  40181e:	4620      	mov	r0, r4
  401820:	4d11      	ldr	r5, [pc, #68]	; (401868 <RTC_Handler+0xa0>)
  401822:	47a8      	blx	r5
			rtc_get_time(RTC,&HOUR2,&MINUTE2,&SECOND2);
  401824:	ab0b      	add	r3, sp, #44	; 0x2c
  401826:	aa0a      	add	r2, sp, #40	; 0x28
  401828:	a909      	add	r1, sp, #36	; 0x24
  40182a:	4620      	mov	r0, r4
  40182c:	4d0f      	ldr	r5, [pc, #60]	; (40186c <RTC_Handler+0xa4>)
  40182e:	47a8      	blx	r5
			rtc_set_date_alarm(RTC, 1, MONTH2, 1, DAY2);
  401830:	9b07      	ldr	r3, [sp, #28]
  401832:	9300      	str	r3, [sp, #0]
  401834:	2301      	movs	r3, #1
  401836:	9a06      	ldr	r2, [sp, #24]
  401838:	4619      	mov	r1, r3
  40183a:	4620      	mov	r0, r4
  40183c:	4d0c      	ldr	r5, [pc, #48]	; (401870 <RTC_Handler+0xa8>)
  40183e:	47a8      	blx	r5
			rtc_set_time_alarm(RTC, 1, HOUR2, 1, MINUTE2, 1, SECOND2+4);	
  401840:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401842:	3304      	adds	r3, #4
  401844:	9302      	str	r3, [sp, #8]
  401846:	2101      	movs	r1, #1
  401848:	9101      	str	r1, [sp, #4]
  40184a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40184c:	9300      	str	r3, [sp, #0]
  40184e:	460b      	mov	r3, r1
  401850:	9a09      	ldr	r2, [sp, #36]	; 0x24
  401852:	4620      	mov	r0, r4
  401854:	4c07      	ldr	r4, [pc, #28]	; (401874 <RTC_Handler+0xac>)
  401856:	47a0      	blx	r4
  401858:	e7c2      	b.n	4017e0 <RTC_Handler+0x18>
  40185a:	bf00      	nop
  40185c:	400e1860 	.word	0x400e1860
  401860:	00400371 	.word	0x00400371
  401864:	00400375 	.word	0x00400375
  401868:	0040029d 	.word	0x0040029d
  40186c:	004001ad 	.word	0x004001ad
  401870:	00400311 	.word	0x00400311
  401874:	00400209 	.word	0x00400209

00401878 <BUT_init>:
void BUT_init(void){
  401878:	b5f0      	push	{r4, r5, r6, r7, lr}
  40187a:	b083      	sub	sp, #12
	/* config. pino botao em modo de entrada */
	pmc_enable_periph_clk(BUT1_PIO_ID);
  40187c:	2010      	movs	r0, #16
  40187e:	4c2a      	ldr	r4, [pc, #168]	; (401928 <BUT_init+0xb0>)
  401880:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT2_PIO_ID);
  401882:	200c      	movs	r0, #12
  401884:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT3_PIO_ID);
  401886:	200a      	movs	r0, #10
  401888:	47a0      	blx	r4
	pio_set_input(BUT1_PIO, BUT1_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  40188a:	4c28      	ldr	r4, [pc, #160]	; (40192c <BUT_init+0xb4>)
  40188c:	2209      	movs	r2, #9
  40188e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401892:	4620      	mov	r0, r4
  401894:	4f26      	ldr	r7, [pc, #152]	; (401930 <BUT_init+0xb8>)
  401896:	47b8      	blx	r7
	pio_set_input(BUT2_PIO, BUT2_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  401898:	4e26      	ldr	r6, [pc, #152]	; (401934 <BUT_init+0xbc>)
  40189a:	2209      	movs	r2, #9
  40189c:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4018a0:	4630      	mov	r0, r6
  4018a2:	47b8      	blx	r7
	pio_set_input(BUT3_PIO, BUT3_PIN_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4018a4:	4d24      	ldr	r5, [pc, #144]	; (401938 <BUT_init+0xc0>)
  4018a6:	2209      	movs	r2, #9
  4018a8:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4018ac:	4628      	mov	r0, r5
  4018ae:	47b8      	blx	r7

	/* config. interrupcao em borda de descida no botao do kit */
	/* indica funcao (but_Handler) a ser chamada quando houver uma interrup??o */
	pio_enable_interrupt(BUT1_PIO, BUT1_PIN_MASK);
  4018b0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4018b4:	4620      	mov	r0, r4
  4018b6:	4f21      	ldr	r7, [pc, #132]	; (40193c <BUT_init+0xc4>)
  4018b8:	47b8      	blx	r7
	pio_enable_interrupt(BUT2_PIO, BUT2_PIN_MASK);
  4018ba:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4018be:	4630      	mov	r0, r6
  4018c0:	47b8      	blx	r7
	pio_enable_interrupt(BUT3_PIO, BUT3_PIN_MASK);
  4018c2:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4018c6:	4628      	mov	r0, r5
  4018c8:	47b8      	blx	r7
	pio_handler_set(BUT1_PIO, BUT1_PIO_ID, BUT1_PIN_MASK, PIO_IT_FALL_EDGE, Button1_Handler);
  4018ca:	4b1d      	ldr	r3, [pc, #116]	; (401940 <BUT_init+0xc8>)
  4018cc:	9300      	str	r3, [sp, #0]
  4018ce:	2350      	movs	r3, #80	; 0x50
  4018d0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4018d4:	2110      	movs	r1, #16
  4018d6:	4620      	mov	r0, r4
  4018d8:	4c1a      	ldr	r4, [pc, #104]	; (401944 <BUT_init+0xcc>)
  4018da:	47a0      	blx	r4
	pio_handler_set(BUT2_PIO, BUT2_PIO_ID, BUT2_PIN_MASK, PIO_IT_FALL_EDGE, Button2_Handler);
  4018dc:	4b1a      	ldr	r3, [pc, #104]	; (401948 <BUT_init+0xd0>)
  4018de:	9300      	str	r3, [sp, #0]
  4018e0:	2350      	movs	r3, #80	; 0x50
  4018e2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4018e6:	210c      	movs	r1, #12
  4018e8:	4630      	mov	r0, r6
  4018ea:	47a0      	blx	r4
	pio_handler_set(BUT3_PIO, BUT3_PIO_ID, BUT3_PIN_MASK, PIO_IT_FALL_EDGE, Button3_Handler);
  4018ec:	4b17      	ldr	r3, [pc, #92]	; (40194c <BUT_init+0xd4>)
  4018ee:	9300      	str	r3, [sp, #0]
  4018f0:	2350      	movs	r3, #80	; 0x50
  4018f2:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4018f6:	210a      	movs	r1, #10
  4018f8:	4628      	mov	r0, r5
  4018fa:	47a0      	blx	r4
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4018fc:	4b14      	ldr	r3, [pc, #80]	; (401950 <BUT_init+0xd8>)
  4018fe:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401902:	601a      	str	r2, [r3, #0]
  401904:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  401908:	601a      	str	r2, [r3, #0]
  40190a:	f44f 6280 	mov.w	r2, #1024	; 0x400
  40190e:	601a      	str	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401910:	2240      	movs	r2, #64	; 0x40
  401912:	f883 2310 	strb.w	r2, [r3, #784]	; 0x310
  401916:	2260      	movs	r2, #96	; 0x60
  401918:	f883 230c 	strb.w	r2, [r3, #780]	; 0x30c
  40191c:	2280      	movs	r2, #128	; 0x80
  40191e:	f883 230a 	strb.w	r2, [r3, #778]	; 0x30a
	NVIC_EnableIRQ(BUT3_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 2);
	NVIC_SetPriority(BUT2_PIO_ID, 3);
	NVIC_SetPriority(BUT3_PIO_ID, 4);
	
};
  401922:	b003      	add	sp, #12
  401924:	bdf0      	pop	{r4, r5, r6, r7, pc}
  401926:	bf00      	nop
  401928:	004010d5 	.word	0x004010d5
  40192c:	400e1400 	.word	0x400e1400
  401930:	00400d63 	.word	0x00400d63
  401934:	400e1200 	.word	0x400e1200
  401938:	400e0e00 	.word	0x400e0e00
  40193c:	00400e83 	.word	0x00400e83
  401940:	00401689 	.word	0x00401689
  401944:	00400ee1 	.word	0x00400ee1
  401948:	00401699 	.word	0x00401699
  40194c:	004016b5 	.word	0x004016b5
  401950:	e000e100 	.word	0xe000e100

00401954 <main>:

}


int main (void)
{
  401954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401958:	b08d      	sub	sp, #52	; 0x34
	/* Insert system clock initialization code here (sysclk_init()). */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40195a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40195e:	4b53      	ldr	r3, [pc, #332]	; (401aac <main+0x158>)
  401960:	605a      	str	r2, [r3, #4]
	board_init();
  401962:	4b53      	ldr	r3, [pc, #332]	; (401ab0 <main+0x15c>)
  401964:	4798      	blx	r3
	sysclk_init();
  401966:	4b53      	ldr	r3, [pc, #332]	; (401ab4 <main+0x160>)
  401968:	4798      	blx	r3
	f_rtt_alarme = true;
  40196a:	2401      	movs	r4, #1
  40196c:	4b52      	ldr	r3, [pc, #328]	; (401ab8 <main+0x164>)
  40196e:	701c      	strb	r4, [r3, #0]

	delay_init();
	BUT_init();
  401970:	4b52      	ldr	r3, [pc, #328]	; (401abc <main+0x168>)
  401972:	4798      	blx	r3
	gfx_mono_ssd1306_init();
  401974:	4b52      	ldr	r3, [pc, #328]	; (401ac0 <main+0x16c>)
  401976:	4798      	blx	r3
	char buffer[32];
	rtc_set_date_alarm(RTC, 1, MOUNTH, 1, DAY);
  401978:	4d52      	ldr	r5, [pc, #328]	; (401ac4 <main+0x170>)
  40197a:	2313      	movs	r3, #19
  40197c:	9300      	str	r3, [sp, #0]
  40197e:	4623      	mov	r3, r4
  401980:	2203      	movs	r2, #3
  401982:	4621      	mov	r1, r4
  401984:	4628      	mov	r0, r5
  401986:	4e50      	ldr	r6, [pc, #320]	; (401ac8 <main+0x174>)
  401988:	47b0      	blx	r6
	rtc_set_time_alarm(RTC, 1, HOUR, 1, MINUTE, 1, SECOND+4);
  40198a:	2304      	movs	r3, #4
  40198c:	9302      	str	r3, [sp, #8]
  40198e:	9401      	str	r4, [sp, #4]
  401990:	232d      	movs	r3, #45	; 0x2d
  401992:	9300      	str	r3, [sp, #0]
  401994:	4623      	mov	r3, r4
  401996:	220f      	movs	r2, #15
  401998:	4621      	mov	r1, r4
  40199a:	4628      	mov	r0, r5
  40199c:	4c4b      	ldr	r4, [pc, #300]	; (401acc <main+0x178>)
  40199e:	47a0      	blx	r4
		//gfx_mono_draw_string("0", 50,16, &sysfont);
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
		
		if(flag_draw){
			//gfx_mono_draw_string("                   ",0,16,&sysfont);
			if(what==0){
  4019a0:	4d4b      	ldr	r5, [pc, #300]	; (401ad0 <main+0x17c>)
			else if(what==2){
				sprintf(&buffer,"%f",distance);
				gfx_mono_draw_string("Tmp ",1,16,&sysfont);
				gfx_mono_draw_string(buffer,40,16,&sysfont);
			}
			flag_draw = false;
  4019a2:	f04f 0900 	mov.w	r9, #0
		}
		if (f_rtt_alarme){
  4019a6:	4f44      	ldr	r7, [pc, #272]	; (401ab8 <main+0x164>)
	rtt_sel_source(RTT, false);
  4019a8:	f8df b160 	ldr.w	fp, [pc, #352]	; 401b0c <main+0x1b8>
	ul_previous_time = rtt_read_timer_value(RTT);
  4019ac:	4e49      	ldr	r6, [pc, #292]	; (401ad4 <main+0x180>)
  4019ae:	e079      	b.n	401aa4 <main+0x150>
				sprintf(&buffer,"%f",vel);
  4019b0:	4b49      	ldr	r3, [pc, #292]	; (401ad8 <main+0x184>)
  4019b2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4019b6:	4949      	ldr	r1, [pc, #292]	; (401adc <main+0x188>)
  4019b8:	a804      	add	r0, sp, #16
  4019ba:	f8df a154 	ldr.w	sl, [pc, #340]	; 401b10 <main+0x1bc>
  4019be:	47d0      	blx	sl
				gfx_mono_draw_string("Vel  ",1,16,&sysfont);
  4019c0:	4b47      	ldr	r3, [pc, #284]	; (401ae0 <main+0x18c>)
  4019c2:	2210      	movs	r2, #16
  4019c4:	2101      	movs	r1, #1
  4019c6:	4847      	ldr	r0, [pc, #284]	; (401ae4 <main+0x190>)
  4019c8:	f8df a148 	ldr.w	sl, [pc, #328]	; 401b14 <main+0x1c0>
  4019cc:	47d0      	blx	sl
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  4019ce:	4b44      	ldr	r3, [pc, #272]	; (401ae0 <main+0x18c>)
  4019d0:	2210      	movs	r2, #16
  4019d2:	2128      	movs	r1, #40	; 0x28
  4019d4:	eb0d 0002 	add.w	r0, sp, r2
  4019d8:	47d0      	blx	sl
			flag_draw = false;
  4019da:	f884 9000 	strb.w	r9, [r4]
		if (f_rtt_alarme){
  4019de:	783b      	ldrb	r3, [r7, #0]
  4019e0:	2b00      	cmp	r3, #0
  4019e2:	d13b      	bne.n	401a5c <main+0x108>
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  4019e4:	2002      	movs	r0, #2
  4019e6:	47c0      	blx	r8
		if(flag_draw){
  4019e8:	7823      	ldrb	r3, [r4, #0]
  4019ea:	2b00      	cmp	r3, #0
  4019ec:	d0f7      	beq.n	4019de <main+0x8a>
			if(what==0){
  4019ee:	782b      	ldrb	r3, [r5, #0]
  4019f0:	2b00      	cmp	r3, #0
  4019f2:	d0dd      	beq.n	4019b0 <main+0x5c>
			else if(what==1){
  4019f4:	782b      	ldrb	r3, [r5, #0]
  4019f6:	b2db      	uxtb	r3, r3
  4019f8:	2b01      	cmp	r3, #1
  4019fa:	d019      	beq.n	401a30 <main+0xdc>
			else if(what==2){
  4019fc:	782b      	ldrb	r3, [r5, #0]
  4019fe:	b2db      	uxtb	r3, r3
  401a00:	2b02      	cmp	r3, #2
  401a02:	d1ea      	bne.n	4019da <main+0x86>
				sprintf(&buffer,"%f",distance);
  401a04:	4b38      	ldr	r3, [pc, #224]	; (401ae8 <main+0x194>)
  401a06:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a0a:	4934      	ldr	r1, [pc, #208]	; (401adc <main+0x188>)
  401a0c:	a804      	add	r0, sp, #16
  401a0e:	f8df a100 	ldr.w	sl, [pc, #256]	; 401b10 <main+0x1bc>
  401a12:	47d0      	blx	sl
				gfx_mono_draw_string("Tmp ",1,16,&sysfont);
  401a14:	4b32      	ldr	r3, [pc, #200]	; (401ae0 <main+0x18c>)
  401a16:	2210      	movs	r2, #16
  401a18:	2101      	movs	r1, #1
  401a1a:	4834      	ldr	r0, [pc, #208]	; (401aec <main+0x198>)
  401a1c:	f8df a0f4 	ldr.w	sl, [pc, #244]	; 401b14 <main+0x1c0>
  401a20:	47d0      	blx	sl
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  401a22:	4b2f      	ldr	r3, [pc, #188]	; (401ae0 <main+0x18c>)
  401a24:	2210      	movs	r2, #16
  401a26:	2128      	movs	r1, #40	; 0x28
  401a28:	eb0d 0002 	add.w	r0, sp, r2
  401a2c:	47d0      	blx	sl
  401a2e:	e7d4      	b.n	4019da <main+0x86>
				sprintf(&buffer,"%f",distance);
  401a30:	4b2d      	ldr	r3, [pc, #180]	; (401ae8 <main+0x194>)
  401a32:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a36:	4929      	ldr	r1, [pc, #164]	; (401adc <main+0x188>)
  401a38:	a804      	add	r0, sp, #16
  401a3a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 401b10 <main+0x1bc>
  401a3e:	47d0      	blx	sl
				gfx_mono_draw_string("Mts ",1,16,&sysfont);
  401a40:	4b27      	ldr	r3, [pc, #156]	; (401ae0 <main+0x18c>)
  401a42:	2210      	movs	r2, #16
  401a44:	2101      	movs	r1, #1
  401a46:	482a      	ldr	r0, [pc, #168]	; (401af0 <main+0x19c>)
  401a48:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 401b14 <main+0x1c0>
  401a4c:	47d0      	blx	sl
				gfx_mono_draw_string(buffer,40,16,&sysfont);
  401a4e:	4b24      	ldr	r3, [pc, #144]	; (401ae0 <main+0x18c>)
  401a50:	2210      	movs	r2, #16
  401a52:	2128      	movs	r1, #40	; 0x28
  401a54:	eb0d 0002 	add.w	r0, sp, r2
  401a58:	47d0      	blx	sl
  401a5a:	e7be      	b.n	4019da <main+0x86>
	rtt_sel_source(RTT, false);
  401a5c:	4649      	mov	r1, r9
  401a5e:	4658      	mov	r0, fp
  401a60:	4b24      	ldr	r3, [pc, #144]	; (401af4 <main+0x1a0>)
  401a62:	4798      	blx	r3
	rtt_init(RTT, pllPreScale);
  401a64:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  401a68:	4658      	mov	r0, fp
  401a6a:	4b23      	ldr	r3, [pc, #140]	; (401af8 <main+0x1a4>)
  401a6c:	4798      	blx	r3
	ul_previous_time = rtt_read_timer_value(RTT);
  401a6e:	4658      	mov	r0, fp
  401a70:	47b0      	blx	r6
  401a72:	4604      	mov	r4, r0
	while (ul_previous_time == rtt_read_timer_value(RTT));
  401a74:	4658      	mov	r0, fp
  401a76:	47b0      	blx	r6
  401a78:	4284      	cmp	r4, r0
  401a7a:	d0fb      	beq.n	401a74 <main+0x120>
	rtt_write_alarm_time(RTT, IrqNPulses+ul_previous_time);
  401a7c:	1ca1      	adds	r1, r4, #2
  401a7e:	4658      	mov	r0, fp
  401a80:	4b1e      	ldr	r3, [pc, #120]	; (401afc <main+0x1a8>)
  401a82:	4798      	blx	r3
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401a84:	4b1e      	ldr	r3, [pc, #120]	; (401b00 <main+0x1ac>)
  401a86:	2208      	movs	r2, #8
  401a88:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401a8c:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401a90:	f883 9303 	strb.w	r9, [r3, #771]	; 0x303
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401a94:	601a      	str	r2, [r3, #0]
	rtt_enable_interrupt(RTT, RTT_MR_ALMIEN);
  401a96:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  401a9a:	4658      	mov	r0, fp
  401a9c:	4b19      	ldr	r3, [pc, #100]	; (401b04 <main+0x1b0>)
  401a9e:	4798      	blx	r3
			uint16_t pllPreScale = (int) (((float) 32768) / 2.0);
			uint32_t irqRTTvalue  = 2;
			RTT_init(pllPreScale, irqRTTvalue);
			f_rtt_alarme = false;
  401aa0:	f887 9000 	strb.w	r9, [r7]
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401aa4:	f8df 8070 	ldr.w	r8, [pc, #112]	; 401b18 <main+0x1c4>
		if(flag_draw){
  401aa8:	4c17      	ldr	r4, [pc, #92]	; (401b08 <main+0x1b4>)
  401aaa:	e79b      	b.n	4019e4 <main+0x90>
  401aac:	400e1850 	.word	0x400e1850
  401ab0:	00400b91 	.word	0x00400b91
  401ab4:	00400b21 	.word	0x00400b21
  401ab8:	20400c88 	.word	0x20400c88
  401abc:	00401879 	.word	0x00401879
  401ac0:	00400801 	.word	0x00400801
  401ac4:	400e1860 	.word	0x400e1860
  401ac8:	00400311 	.word	0x00400311
  401acc:	00400209 	.word	0x00400209
  401ad0:	20400c98 	.word	0x20400c98
  401ad4:	004003e1 	.word	0x004003e1
  401ad8:	20400c90 	.word	0x20400c90
  401adc:	00406e68 	.word	0x00406e68
  401ae0:	2040000c 	.word	0x2040000c
  401ae4:	00406e6c 	.word	0x00406e6c
  401ae8:	20400c80 	.word	0x20400c80
  401aec:	00406e7c 	.word	0x00406e7c
  401af0:	00406e74 	.word	0x00406e74
  401af4:	0040038d 	.word	0x0040038d
  401af8:	00400379 	.word	0x00400379
  401afc:	004003f9 	.word	0x004003f9
  401b00:	e000e100 	.word	0xe000e100
  401b04:	004003b9 	.word	0x004003b9
  401b08:	20400c89 	.word	0x20400c89
  401b0c:	400e1830 	.word	0x400e1830
  401b10:	0040239d 	.word	0x0040239d
  401b14:	00400769 	.word	0x00400769
  401b18:	00401179 	.word	0x00401179

00401b1c <__aeabi_drsub>:
  401b1c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  401b20:	e002      	b.n	401b28 <__adddf3>
  401b22:	bf00      	nop

00401b24 <__aeabi_dsub>:
  401b24:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401b28 <__adddf3>:
  401b28:	b530      	push	{r4, r5, lr}
  401b2a:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401b2e:	ea4f 0543 	mov.w	r5, r3, lsl #1
  401b32:	ea94 0f05 	teq	r4, r5
  401b36:	bf08      	it	eq
  401b38:	ea90 0f02 	teqeq	r0, r2
  401b3c:	bf1f      	itttt	ne
  401b3e:	ea54 0c00 	orrsne.w	ip, r4, r0
  401b42:	ea55 0c02 	orrsne.w	ip, r5, r2
  401b46:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401b4a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401b4e:	f000 80e2 	beq.w	401d16 <__adddf3+0x1ee>
  401b52:	ea4f 5454 	mov.w	r4, r4, lsr #21
  401b56:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401b5a:	bfb8      	it	lt
  401b5c:	426d      	neglt	r5, r5
  401b5e:	dd0c      	ble.n	401b7a <__adddf3+0x52>
  401b60:	442c      	add	r4, r5
  401b62:	ea80 0202 	eor.w	r2, r0, r2
  401b66:	ea81 0303 	eor.w	r3, r1, r3
  401b6a:	ea82 0000 	eor.w	r0, r2, r0
  401b6e:	ea83 0101 	eor.w	r1, r3, r1
  401b72:	ea80 0202 	eor.w	r2, r0, r2
  401b76:	ea81 0303 	eor.w	r3, r1, r3
  401b7a:	2d36      	cmp	r5, #54	; 0x36
  401b7c:	bf88      	it	hi
  401b7e:	bd30      	pophi	{r4, r5, pc}
  401b80:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401b84:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401b88:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401b8c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401b90:	d002      	beq.n	401b98 <__adddf3+0x70>
  401b92:	4240      	negs	r0, r0
  401b94:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401b98:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401b9c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401ba0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401ba4:	d002      	beq.n	401bac <__adddf3+0x84>
  401ba6:	4252      	negs	r2, r2
  401ba8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401bac:	ea94 0f05 	teq	r4, r5
  401bb0:	f000 80a7 	beq.w	401d02 <__adddf3+0x1da>
  401bb4:	f1a4 0401 	sub.w	r4, r4, #1
  401bb8:	f1d5 0e20 	rsbs	lr, r5, #32
  401bbc:	db0d      	blt.n	401bda <__adddf3+0xb2>
  401bbe:	fa02 fc0e 	lsl.w	ip, r2, lr
  401bc2:	fa22 f205 	lsr.w	r2, r2, r5
  401bc6:	1880      	adds	r0, r0, r2
  401bc8:	f141 0100 	adc.w	r1, r1, #0
  401bcc:	fa03 f20e 	lsl.w	r2, r3, lr
  401bd0:	1880      	adds	r0, r0, r2
  401bd2:	fa43 f305 	asr.w	r3, r3, r5
  401bd6:	4159      	adcs	r1, r3
  401bd8:	e00e      	b.n	401bf8 <__adddf3+0xd0>
  401bda:	f1a5 0520 	sub.w	r5, r5, #32
  401bde:	f10e 0e20 	add.w	lr, lr, #32
  401be2:	2a01      	cmp	r2, #1
  401be4:	fa03 fc0e 	lsl.w	ip, r3, lr
  401be8:	bf28      	it	cs
  401bea:	f04c 0c02 	orrcs.w	ip, ip, #2
  401bee:	fa43 f305 	asr.w	r3, r3, r5
  401bf2:	18c0      	adds	r0, r0, r3
  401bf4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  401bf8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401bfc:	d507      	bpl.n	401c0e <__adddf3+0xe6>
  401bfe:	f04f 0e00 	mov.w	lr, #0
  401c02:	f1dc 0c00 	rsbs	ip, ip, #0
  401c06:	eb7e 0000 	sbcs.w	r0, lr, r0
  401c0a:	eb6e 0101 	sbc.w	r1, lr, r1
  401c0e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  401c12:	d31b      	bcc.n	401c4c <__adddf3+0x124>
  401c14:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  401c18:	d30c      	bcc.n	401c34 <__adddf3+0x10c>
  401c1a:	0849      	lsrs	r1, r1, #1
  401c1c:	ea5f 0030 	movs.w	r0, r0, rrx
  401c20:	ea4f 0c3c 	mov.w	ip, ip, rrx
  401c24:	f104 0401 	add.w	r4, r4, #1
  401c28:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401c2c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401c30:	f080 809a 	bcs.w	401d68 <__adddf3+0x240>
  401c34:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401c38:	bf08      	it	eq
  401c3a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401c3e:	f150 0000 	adcs.w	r0, r0, #0
  401c42:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401c46:	ea41 0105 	orr.w	r1, r1, r5
  401c4a:	bd30      	pop	{r4, r5, pc}
  401c4c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401c50:	4140      	adcs	r0, r0
  401c52:	eb41 0101 	adc.w	r1, r1, r1
  401c56:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401c5a:	f1a4 0401 	sub.w	r4, r4, #1
  401c5e:	d1e9      	bne.n	401c34 <__adddf3+0x10c>
  401c60:	f091 0f00 	teq	r1, #0
  401c64:	bf04      	itt	eq
  401c66:	4601      	moveq	r1, r0
  401c68:	2000      	moveq	r0, #0
  401c6a:	fab1 f381 	clz	r3, r1
  401c6e:	bf08      	it	eq
  401c70:	3320      	addeq	r3, #32
  401c72:	f1a3 030b 	sub.w	r3, r3, #11
  401c76:	f1b3 0220 	subs.w	r2, r3, #32
  401c7a:	da0c      	bge.n	401c96 <__adddf3+0x16e>
  401c7c:	320c      	adds	r2, #12
  401c7e:	dd08      	ble.n	401c92 <__adddf3+0x16a>
  401c80:	f102 0c14 	add.w	ip, r2, #20
  401c84:	f1c2 020c 	rsb	r2, r2, #12
  401c88:	fa01 f00c 	lsl.w	r0, r1, ip
  401c8c:	fa21 f102 	lsr.w	r1, r1, r2
  401c90:	e00c      	b.n	401cac <__adddf3+0x184>
  401c92:	f102 0214 	add.w	r2, r2, #20
  401c96:	bfd8      	it	le
  401c98:	f1c2 0c20 	rsble	ip, r2, #32
  401c9c:	fa01 f102 	lsl.w	r1, r1, r2
  401ca0:	fa20 fc0c 	lsr.w	ip, r0, ip
  401ca4:	bfdc      	itt	le
  401ca6:	ea41 010c 	orrle.w	r1, r1, ip
  401caa:	4090      	lslle	r0, r2
  401cac:	1ae4      	subs	r4, r4, r3
  401cae:	bfa2      	ittt	ge
  401cb0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401cb4:	4329      	orrge	r1, r5
  401cb6:	bd30      	popge	{r4, r5, pc}
  401cb8:	ea6f 0404 	mvn.w	r4, r4
  401cbc:	3c1f      	subs	r4, #31
  401cbe:	da1c      	bge.n	401cfa <__adddf3+0x1d2>
  401cc0:	340c      	adds	r4, #12
  401cc2:	dc0e      	bgt.n	401ce2 <__adddf3+0x1ba>
  401cc4:	f104 0414 	add.w	r4, r4, #20
  401cc8:	f1c4 0220 	rsb	r2, r4, #32
  401ccc:	fa20 f004 	lsr.w	r0, r0, r4
  401cd0:	fa01 f302 	lsl.w	r3, r1, r2
  401cd4:	ea40 0003 	orr.w	r0, r0, r3
  401cd8:	fa21 f304 	lsr.w	r3, r1, r4
  401cdc:	ea45 0103 	orr.w	r1, r5, r3
  401ce0:	bd30      	pop	{r4, r5, pc}
  401ce2:	f1c4 040c 	rsb	r4, r4, #12
  401ce6:	f1c4 0220 	rsb	r2, r4, #32
  401cea:	fa20 f002 	lsr.w	r0, r0, r2
  401cee:	fa01 f304 	lsl.w	r3, r1, r4
  401cf2:	ea40 0003 	orr.w	r0, r0, r3
  401cf6:	4629      	mov	r1, r5
  401cf8:	bd30      	pop	{r4, r5, pc}
  401cfa:	fa21 f004 	lsr.w	r0, r1, r4
  401cfe:	4629      	mov	r1, r5
  401d00:	bd30      	pop	{r4, r5, pc}
  401d02:	f094 0f00 	teq	r4, #0
  401d06:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  401d0a:	bf06      	itte	eq
  401d0c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  401d10:	3401      	addeq	r4, #1
  401d12:	3d01      	subne	r5, #1
  401d14:	e74e      	b.n	401bb4 <__adddf3+0x8c>
  401d16:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401d1a:	bf18      	it	ne
  401d1c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401d20:	d029      	beq.n	401d76 <__adddf3+0x24e>
  401d22:	ea94 0f05 	teq	r4, r5
  401d26:	bf08      	it	eq
  401d28:	ea90 0f02 	teqeq	r0, r2
  401d2c:	d005      	beq.n	401d3a <__adddf3+0x212>
  401d2e:	ea54 0c00 	orrs.w	ip, r4, r0
  401d32:	bf04      	itt	eq
  401d34:	4619      	moveq	r1, r3
  401d36:	4610      	moveq	r0, r2
  401d38:	bd30      	pop	{r4, r5, pc}
  401d3a:	ea91 0f03 	teq	r1, r3
  401d3e:	bf1e      	ittt	ne
  401d40:	2100      	movne	r1, #0
  401d42:	2000      	movne	r0, #0
  401d44:	bd30      	popne	{r4, r5, pc}
  401d46:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401d4a:	d105      	bne.n	401d58 <__adddf3+0x230>
  401d4c:	0040      	lsls	r0, r0, #1
  401d4e:	4149      	adcs	r1, r1
  401d50:	bf28      	it	cs
  401d52:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  401d56:	bd30      	pop	{r4, r5, pc}
  401d58:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401d5c:	bf3c      	itt	cc
  401d5e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401d62:	bd30      	popcc	{r4, r5, pc}
  401d64:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401d68:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401d6c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401d70:	f04f 0000 	mov.w	r0, #0
  401d74:	bd30      	pop	{r4, r5, pc}
  401d76:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401d7a:	bf1a      	itte	ne
  401d7c:	4619      	movne	r1, r3
  401d7e:	4610      	movne	r0, r2
  401d80:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401d84:	bf1c      	itt	ne
  401d86:	460b      	movne	r3, r1
  401d88:	4602      	movne	r2, r0
  401d8a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401d8e:	bf06      	itte	eq
  401d90:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401d94:	ea91 0f03 	teqeq	r1, r3
  401d98:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401d9c:	bd30      	pop	{r4, r5, pc}
  401d9e:	bf00      	nop

00401da0 <__aeabi_ui2d>:
  401da0:	f090 0f00 	teq	r0, #0
  401da4:	bf04      	itt	eq
  401da6:	2100      	moveq	r1, #0
  401da8:	4770      	bxeq	lr
  401daa:	b530      	push	{r4, r5, lr}
  401dac:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401db0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401db4:	f04f 0500 	mov.w	r5, #0
  401db8:	f04f 0100 	mov.w	r1, #0
  401dbc:	e750      	b.n	401c60 <__adddf3+0x138>
  401dbe:	bf00      	nop

00401dc0 <__aeabi_i2d>:
  401dc0:	f090 0f00 	teq	r0, #0
  401dc4:	bf04      	itt	eq
  401dc6:	2100      	moveq	r1, #0
  401dc8:	4770      	bxeq	lr
  401dca:	b530      	push	{r4, r5, lr}
  401dcc:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401dd0:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401dd4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401dd8:	bf48      	it	mi
  401dda:	4240      	negmi	r0, r0
  401ddc:	f04f 0100 	mov.w	r1, #0
  401de0:	e73e      	b.n	401c60 <__adddf3+0x138>
  401de2:	bf00      	nop

00401de4 <__aeabi_f2d>:
  401de4:	0042      	lsls	r2, r0, #1
  401de6:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401dea:	ea4f 0131 	mov.w	r1, r1, rrx
  401dee:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401df2:	bf1f      	itttt	ne
  401df4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401df8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401dfc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401e00:	4770      	bxne	lr
  401e02:	f092 0f00 	teq	r2, #0
  401e06:	bf14      	ite	ne
  401e08:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401e0c:	4770      	bxeq	lr
  401e0e:	b530      	push	{r4, r5, lr}
  401e10:	f44f 7460 	mov.w	r4, #896	; 0x380
  401e14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401e18:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401e1c:	e720      	b.n	401c60 <__adddf3+0x138>
  401e1e:	bf00      	nop

00401e20 <__aeabi_ul2d>:
  401e20:	ea50 0201 	orrs.w	r2, r0, r1
  401e24:	bf08      	it	eq
  401e26:	4770      	bxeq	lr
  401e28:	b530      	push	{r4, r5, lr}
  401e2a:	f04f 0500 	mov.w	r5, #0
  401e2e:	e00a      	b.n	401e46 <__aeabi_l2d+0x16>

00401e30 <__aeabi_l2d>:
  401e30:	ea50 0201 	orrs.w	r2, r0, r1
  401e34:	bf08      	it	eq
  401e36:	4770      	bxeq	lr
  401e38:	b530      	push	{r4, r5, lr}
  401e3a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401e3e:	d502      	bpl.n	401e46 <__aeabi_l2d+0x16>
  401e40:	4240      	negs	r0, r0
  401e42:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401e46:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401e4a:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401e4e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401e52:	f43f aedc 	beq.w	401c0e <__adddf3+0xe6>
  401e56:	f04f 0203 	mov.w	r2, #3
  401e5a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401e5e:	bf18      	it	ne
  401e60:	3203      	addne	r2, #3
  401e62:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401e66:	bf18      	it	ne
  401e68:	3203      	addne	r2, #3
  401e6a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401e6e:	f1c2 0320 	rsb	r3, r2, #32
  401e72:	fa00 fc03 	lsl.w	ip, r0, r3
  401e76:	fa20 f002 	lsr.w	r0, r0, r2
  401e7a:	fa01 fe03 	lsl.w	lr, r1, r3
  401e7e:	ea40 000e 	orr.w	r0, r0, lr
  401e82:	fa21 f102 	lsr.w	r1, r1, r2
  401e86:	4414      	add	r4, r2
  401e88:	e6c1      	b.n	401c0e <__adddf3+0xe6>
  401e8a:	bf00      	nop

00401e8c <__aeabi_dmul>:
  401e8c:	b570      	push	{r4, r5, r6, lr}
  401e8e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401e92:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401e96:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401e9a:	bf1d      	ittte	ne
  401e9c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401ea0:	ea94 0f0c 	teqne	r4, ip
  401ea4:	ea95 0f0c 	teqne	r5, ip
  401ea8:	f000 f8de 	bleq	402068 <__aeabi_dmul+0x1dc>
  401eac:	442c      	add	r4, r5
  401eae:	ea81 0603 	eor.w	r6, r1, r3
  401eb2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401eb6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401eba:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401ebe:	bf18      	it	ne
  401ec0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401ec4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401ec8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401ecc:	d038      	beq.n	401f40 <__aeabi_dmul+0xb4>
  401ece:	fba0 ce02 	umull	ip, lr, r0, r2
  401ed2:	f04f 0500 	mov.w	r5, #0
  401ed6:	fbe1 e502 	umlal	lr, r5, r1, r2
  401eda:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401ede:	fbe0 e503 	umlal	lr, r5, r0, r3
  401ee2:	f04f 0600 	mov.w	r6, #0
  401ee6:	fbe1 5603 	umlal	r5, r6, r1, r3
  401eea:	f09c 0f00 	teq	ip, #0
  401eee:	bf18      	it	ne
  401ef0:	f04e 0e01 	orrne.w	lr, lr, #1
  401ef4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401ef8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401efc:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401f00:	d204      	bcs.n	401f0c <__aeabi_dmul+0x80>
  401f02:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401f06:	416d      	adcs	r5, r5
  401f08:	eb46 0606 	adc.w	r6, r6, r6
  401f0c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401f10:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401f14:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401f18:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401f1c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401f20:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401f24:	bf88      	it	hi
  401f26:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401f2a:	d81e      	bhi.n	401f6a <__aeabi_dmul+0xde>
  401f2c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401f30:	bf08      	it	eq
  401f32:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401f36:	f150 0000 	adcs.w	r0, r0, #0
  401f3a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401f3e:	bd70      	pop	{r4, r5, r6, pc}
  401f40:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401f44:	ea46 0101 	orr.w	r1, r6, r1
  401f48:	ea40 0002 	orr.w	r0, r0, r2
  401f4c:	ea81 0103 	eor.w	r1, r1, r3
  401f50:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401f54:	bfc2      	ittt	gt
  401f56:	ebd4 050c 	rsbsgt	r5, r4, ip
  401f5a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401f5e:	bd70      	popgt	{r4, r5, r6, pc}
  401f60:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401f64:	f04f 0e00 	mov.w	lr, #0
  401f68:	3c01      	subs	r4, #1
  401f6a:	f300 80ab 	bgt.w	4020c4 <__aeabi_dmul+0x238>
  401f6e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401f72:	bfde      	ittt	le
  401f74:	2000      	movle	r0, #0
  401f76:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401f7a:	bd70      	pople	{r4, r5, r6, pc}
  401f7c:	f1c4 0400 	rsb	r4, r4, #0
  401f80:	3c20      	subs	r4, #32
  401f82:	da35      	bge.n	401ff0 <__aeabi_dmul+0x164>
  401f84:	340c      	adds	r4, #12
  401f86:	dc1b      	bgt.n	401fc0 <__aeabi_dmul+0x134>
  401f88:	f104 0414 	add.w	r4, r4, #20
  401f8c:	f1c4 0520 	rsb	r5, r4, #32
  401f90:	fa00 f305 	lsl.w	r3, r0, r5
  401f94:	fa20 f004 	lsr.w	r0, r0, r4
  401f98:	fa01 f205 	lsl.w	r2, r1, r5
  401f9c:	ea40 0002 	orr.w	r0, r0, r2
  401fa0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401fa4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401fa8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401fac:	fa21 f604 	lsr.w	r6, r1, r4
  401fb0:	eb42 0106 	adc.w	r1, r2, r6
  401fb4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401fb8:	bf08      	it	eq
  401fba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401fbe:	bd70      	pop	{r4, r5, r6, pc}
  401fc0:	f1c4 040c 	rsb	r4, r4, #12
  401fc4:	f1c4 0520 	rsb	r5, r4, #32
  401fc8:	fa00 f304 	lsl.w	r3, r0, r4
  401fcc:	fa20 f005 	lsr.w	r0, r0, r5
  401fd0:	fa01 f204 	lsl.w	r2, r1, r4
  401fd4:	ea40 0002 	orr.w	r0, r0, r2
  401fd8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401fdc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401fe0:	f141 0100 	adc.w	r1, r1, #0
  401fe4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401fe8:	bf08      	it	eq
  401fea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401fee:	bd70      	pop	{r4, r5, r6, pc}
  401ff0:	f1c4 0520 	rsb	r5, r4, #32
  401ff4:	fa00 f205 	lsl.w	r2, r0, r5
  401ff8:	ea4e 0e02 	orr.w	lr, lr, r2
  401ffc:	fa20 f304 	lsr.w	r3, r0, r4
  402000:	fa01 f205 	lsl.w	r2, r1, r5
  402004:	ea43 0302 	orr.w	r3, r3, r2
  402008:	fa21 f004 	lsr.w	r0, r1, r4
  40200c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  402010:	fa21 f204 	lsr.w	r2, r1, r4
  402014:	ea20 0002 	bic.w	r0, r0, r2
  402018:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  40201c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  402020:	bf08      	it	eq
  402022:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  402026:	bd70      	pop	{r4, r5, r6, pc}
  402028:	f094 0f00 	teq	r4, #0
  40202c:	d10f      	bne.n	40204e <__aeabi_dmul+0x1c2>
  40202e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  402032:	0040      	lsls	r0, r0, #1
  402034:	eb41 0101 	adc.w	r1, r1, r1
  402038:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40203c:	bf08      	it	eq
  40203e:	3c01      	subeq	r4, #1
  402040:	d0f7      	beq.n	402032 <__aeabi_dmul+0x1a6>
  402042:	ea41 0106 	orr.w	r1, r1, r6
  402046:	f095 0f00 	teq	r5, #0
  40204a:	bf18      	it	ne
  40204c:	4770      	bxne	lr
  40204e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  402052:	0052      	lsls	r2, r2, #1
  402054:	eb43 0303 	adc.w	r3, r3, r3
  402058:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40205c:	bf08      	it	eq
  40205e:	3d01      	subeq	r5, #1
  402060:	d0f7      	beq.n	402052 <__aeabi_dmul+0x1c6>
  402062:	ea43 0306 	orr.w	r3, r3, r6
  402066:	4770      	bx	lr
  402068:	ea94 0f0c 	teq	r4, ip
  40206c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402070:	bf18      	it	ne
  402072:	ea95 0f0c 	teqne	r5, ip
  402076:	d00c      	beq.n	402092 <__aeabi_dmul+0x206>
  402078:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40207c:	bf18      	it	ne
  40207e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  402082:	d1d1      	bne.n	402028 <__aeabi_dmul+0x19c>
  402084:	ea81 0103 	eor.w	r1, r1, r3
  402088:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40208c:	f04f 0000 	mov.w	r0, #0
  402090:	bd70      	pop	{r4, r5, r6, pc}
  402092:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402096:	bf06      	itte	eq
  402098:	4610      	moveq	r0, r2
  40209a:	4619      	moveq	r1, r3
  40209c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  4020a0:	d019      	beq.n	4020d6 <__aeabi_dmul+0x24a>
  4020a2:	ea94 0f0c 	teq	r4, ip
  4020a6:	d102      	bne.n	4020ae <__aeabi_dmul+0x222>
  4020a8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  4020ac:	d113      	bne.n	4020d6 <__aeabi_dmul+0x24a>
  4020ae:	ea95 0f0c 	teq	r5, ip
  4020b2:	d105      	bne.n	4020c0 <__aeabi_dmul+0x234>
  4020b4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  4020b8:	bf1c      	itt	ne
  4020ba:	4610      	movne	r0, r2
  4020bc:	4619      	movne	r1, r3
  4020be:	d10a      	bne.n	4020d6 <__aeabi_dmul+0x24a>
  4020c0:	ea81 0103 	eor.w	r1, r1, r3
  4020c4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4020c8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4020cc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4020d0:	f04f 0000 	mov.w	r0, #0
  4020d4:	bd70      	pop	{r4, r5, r6, pc}
  4020d6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4020da:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4020de:	bd70      	pop	{r4, r5, r6, pc}

004020e0 <__aeabi_ddiv>:
  4020e0:	b570      	push	{r4, r5, r6, lr}
  4020e2:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4020e6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4020ea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4020ee:	bf1d      	ittte	ne
  4020f0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4020f4:	ea94 0f0c 	teqne	r4, ip
  4020f8:	ea95 0f0c 	teqne	r5, ip
  4020fc:	f000 f8a7 	bleq	40224e <__aeabi_ddiv+0x16e>
  402100:	eba4 0405 	sub.w	r4, r4, r5
  402104:	ea81 0e03 	eor.w	lr, r1, r3
  402108:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40210c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402110:	f000 8088 	beq.w	402224 <__aeabi_ddiv+0x144>
  402114:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402118:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  40211c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  402120:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  402124:	ea4f 2202 	mov.w	r2, r2, lsl #8
  402128:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  40212c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  402130:	ea4f 2600 	mov.w	r6, r0, lsl #8
  402134:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  402138:	429d      	cmp	r5, r3
  40213a:	bf08      	it	eq
  40213c:	4296      	cmpeq	r6, r2
  40213e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  402142:	f504 7440 	add.w	r4, r4, #768	; 0x300
  402146:	d202      	bcs.n	40214e <__aeabi_ddiv+0x6e>
  402148:	085b      	lsrs	r3, r3, #1
  40214a:	ea4f 0232 	mov.w	r2, r2, rrx
  40214e:	1ab6      	subs	r6, r6, r2
  402150:	eb65 0503 	sbc.w	r5, r5, r3
  402154:	085b      	lsrs	r3, r3, #1
  402156:	ea4f 0232 	mov.w	r2, r2, rrx
  40215a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40215e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  402162:	ebb6 0e02 	subs.w	lr, r6, r2
  402166:	eb75 0e03 	sbcs.w	lr, r5, r3
  40216a:	bf22      	ittt	cs
  40216c:	1ab6      	subcs	r6, r6, r2
  40216e:	4675      	movcs	r5, lr
  402170:	ea40 000c 	orrcs.w	r0, r0, ip
  402174:	085b      	lsrs	r3, r3, #1
  402176:	ea4f 0232 	mov.w	r2, r2, rrx
  40217a:	ebb6 0e02 	subs.w	lr, r6, r2
  40217e:	eb75 0e03 	sbcs.w	lr, r5, r3
  402182:	bf22      	ittt	cs
  402184:	1ab6      	subcs	r6, r6, r2
  402186:	4675      	movcs	r5, lr
  402188:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40218c:	085b      	lsrs	r3, r3, #1
  40218e:	ea4f 0232 	mov.w	r2, r2, rrx
  402192:	ebb6 0e02 	subs.w	lr, r6, r2
  402196:	eb75 0e03 	sbcs.w	lr, r5, r3
  40219a:	bf22      	ittt	cs
  40219c:	1ab6      	subcs	r6, r6, r2
  40219e:	4675      	movcs	r5, lr
  4021a0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  4021a4:	085b      	lsrs	r3, r3, #1
  4021a6:	ea4f 0232 	mov.w	r2, r2, rrx
  4021aa:	ebb6 0e02 	subs.w	lr, r6, r2
  4021ae:	eb75 0e03 	sbcs.w	lr, r5, r3
  4021b2:	bf22      	ittt	cs
  4021b4:	1ab6      	subcs	r6, r6, r2
  4021b6:	4675      	movcs	r5, lr
  4021b8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  4021bc:	ea55 0e06 	orrs.w	lr, r5, r6
  4021c0:	d018      	beq.n	4021f4 <__aeabi_ddiv+0x114>
  4021c2:	ea4f 1505 	mov.w	r5, r5, lsl #4
  4021c6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  4021ca:	ea4f 1606 	mov.w	r6, r6, lsl #4
  4021ce:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  4021d2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  4021d6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4021da:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4021de:	d1c0      	bne.n	402162 <__aeabi_ddiv+0x82>
  4021e0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4021e4:	d10b      	bne.n	4021fe <__aeabi_ddiv+0x11e>
  4021e6:	ea41 0100 	orr.w	r1, r1, r0
  4021ea:	f04f 0000 	mov.w	r0, #0
  4021ee:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4021f2:	e7b6      	b.n	402162 <__aeabi_ddiv+0x82>
  4021f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4021f8:	bf04      	itt	eq
  4021fa:	4301      	orreq	r1, r0
  4021fc:	2000      	moveq	r0, #0
  4021fe:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  402202:	bf88      	it	hi
  402204:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  402208:	f63f aeaf 	bhi.w	401f6a <__aeabi_dmul+0xde>
  40220c:	ebb5 0c03 	subs.w	ip, r5, r3
  402210:	bf04      	itt	eq
  402212:	ebb6 0c02 	subseq.w	ip, r6, r2
  402216:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  40221a:	f150 0000 	adcs.w	r0, r0, #0
  40221e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402222:	bd70      	pop	{r4, r5, r6, pc}
  402224:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  402228:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  40222c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  402230:	bfc2      	ittt	gt
  402232:	ebd4 050c 	rsbsgt	r5, r4, ip
  402236:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40223a:	bd70      	popgt	{r4, r5, r6, pc}
  40223c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  402240:	f04f 0e00 	mov.w	lr, #0
  402244:	3c01      	subs	r4, #1
  402246:	e690      	b.n	401f6a <__aeabi_dmul+0xde>
  402248:	ea45 0e06 	orr.w	lr, r5, r6
  40224c:	e68d      	b.n	401f6a <__aeabi_dmul+0xde>
  40224e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  402252:	ea94 0f0c 	teq	r4, ip
  402256:	bf08      	it	eq
  402258:	ea95 0f0c 	teqeq	r5, ip
  40225c:	f43f af3b 	beq.w	4020d6 <__aeabi_dmul+0x24a>
  402260:	ea94 0f0c 	teq	r4, ip
  402264:	d10a      	bne.n	40227c <__aeabi_ddiv+0x19c>
  402266:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40226a:	f47f af34 	bne.w	4020d6 <__aeabi_dmul+0x24a>
  40226e:	ea95 0f0c 	teq	r5, ip
  402272:	f47f af25 	bne.w	4020c0 <__aeabi_dmul+0x234>
  402276:	4610      	mov	r0, r2
  402278:	4619      	mov	r1, r3
  40227a:	e72c      	b.n	4020d6 <__aeabi_dmul+0x24a>
  40227c:	ea95 0f0c 	teq	r5, ip
  402280:	d106      	bne.n	402290 <__aeabi_ddiv+0x1b0>
  402282:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  402286:	f43f aefd 	beq.w	402084 <__aeabi_dmul+0x1f8>
  40228a:	4610      	mov	r0, r2
  40228c:	4619      	mov	r1, r3
  40228e:	e722      	b.n	4020d6 <__aeabi_dmul+0x24a>
  402290:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  402294:	bf18      	it	ne
  402296:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40229a:	f47f aec5 	bne.w	402028 <__aeabi_dmul+0x19c>
  40229e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  4022a2:	f47f af0d 	bne.w	4020c0 <__aeabi_dmul+0x234>
  4022a6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  4022aa:	f47f aeeb 	bne.w	402084 <__aeabi_dmul+0x1f8>
  4022ae:	e712      	b.n	4020d6 <__aeabi_dmul+0x24a>

004022b0 <__libc_init_array>:
  4022b0:	b570      	push	{r4, r5, r6, lr}
  4022b2:	4e0f      	ldr	r6, [pc, #60]	; (4022f0 <__libc_init_array+0x40>)
  4022b4:	4d0f      	ldr	r5, [pc, #60]	; (4022f4 <__libc_init_array+0x44>)
  4022b6:	1b76      	subs	r6, r6, r5
  4022b8:	10b6      	asrs	r6, r6, #2
  4022ba:	bf18      	it	ne
  4022bc:	2400      	movne	r4, #0
  4022be:	d005      	beq.n	4022cc <__libc_init_array+0x1c>
  4022c0:	3401      	adds	r4, #1
  4022c2:	f855 3b04 	ldr.w	r3, [r5], #4
  4022c6:	4798      	blx	r3
  4022c8:	42a6      	cmp	r6, r4
  4022ca:	d1f9      	bne.n	4022c0 <__libc_init_array+0x10>
  4022cc:	4e0a      	ldr	r6, [pc, #40]	; (4022f8 <__libc_init_array+0x48>)
  4022ce:	4d0b      	ldr	r5, [pc, #44]	; (4022fc <__libc_init_array+0x4c>)
  4022d0:	1b76      	subs	r6, r6, r5
  4022d2:	f004 ff1d 	bl	407110 <_init>
  4022d6:	10b6      	asrs	r6, r6, #2
  4022d8:	bf18      	it	ne
  4022da:	2400      	movne	r4, #0
  4022dc:	d006      	beq.n	4022ec <__libc_init_array+0x3c>
  4022de:	3401      	adds	r4, #1
  4022e0:	f855 3b04 	ldr.w	r3, [r5], #4
  4022e4:	4798      	blx	r3
  4022e6:	42a6      	cmp	r6, r4
  4022e8:	d1f9      	bne.n	4022de <__libc_init_array+0x2e>
  4022ea:	bd70      	pop	{r4, r5, r6, pc}
  4022ec:	bd70      	pop	{r4, r5, r6, pc}
  4022ee:	bf00      	nop
  4022f0:	0040711c 	.word	0x0040711c
  4022f4:	0040711c 	.word	0x0040711c
  4022f8:	00407124 	.word	0x00407124
  4022fc:	0040711c 	.word	0x0040711c

00402300 <memset>:
  402300:	b470      	push	{r4, r5, r6}
  402302:	0786      	lsls	r6, r0, #30
  402304:	d046      	beq.n	402394 <memset+0x94>
  402306:	1e54      	subs	r4, r2, #1
  402308:	2a00      	cmp	r2, #0
  40230a:	d041      	beq.n	402390 <memset+0x90>
  40230c:	b2ca      	uxtb	r2, r1
  40230e:	4603      	mov	r3, r0
  402310:	e002      	b.n	402318 <memset+0x18>
  402312:	f114 34ff 	adds.w	r4, r4, #4294967295
  402316:	d33b      	bcc.n	402390 <memset+0x90>
  402318:	f803 2b01 	strb.w	r2, [r3], #1
  40231c:	079d      	lsls	r5, r3, #30
  40231e:	d1f8      	bne.n	402312 <memset+0x12>
  402320:	2c03      	cmp	r4, #3
  402322:	d92e      	bls.n	402382 <memset+0x82>
  402324:	b2cd      	uxtb	r5, r1
  402326:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40232a:	2c0f      	cmp	r4, #15
  40232c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402330:	d919      	bls.n	402366 <memset+0x66>
  402332:	f103 0210 	add.w	r2, r3, #16
  402336:	4626      	mov	r6, r4
  402338:	3e10      	subs	r6, #16
  40233a:	2e0f      	cmp	r6, #15
  40233c:	f842 5c10 	str.w	r5, [r2, #-16]
  402340:	f842 5c0c 	str.w	r5, [r2, #-12]
  402344:	f842 5c08 	str.w	r5, [r2, #-8]
  402348:	f842 5c04 	str.w	r5, [r2, #-4]
  40234c:	f102 0210 	add.w	r2, r2, #16
  402350:	d8f2      	bhi.n	402338 <memset+0x38>
  402352:	f1a4 0210 	sub.w	r2, r4, #16
  402356:	f022 020f 	bic.w	r2, r2, #15
  40235a:	f004 040f 	and.w	r4, r4, #15
  40235e:	3210      	adds	r2, #16
  402360:	2c03      	cmp	r4, #3
  402362:	4413      	add	r3, r2
  402364:	d90d      	bls.n	402382 <memset+0x82>
  402366:	461e      	mov	r6, r3
  402368:	4622      	mov	r2, r4
  40236a:	3a04      	subs	r2, #4
  40236c:	2a03      	cmp	r2, #3
  40236e:	f846 5b04 	str.w	r5, [r6], #4
  402372:	d8fa      	bhi.n	40236a <memset+0x6a>
  402374:	1f22      	subs	r2, r4, #4
  402376:	f022 0203 	bic.w	r2, r2, #3
  40237a:	3204      	adds	r2, #4
  40237c:	4413      	add	r3, r2
  40237e:	f004 0403 	and.w	r4, r4, #3
  402382:	b12c      	cbz	r4, 402390 <memset+0x90>
  402384:	b2c9      	uxtb	r1, r1
  402386:	441c      	add	r4, r3
  402388:	f803 1b01 	strb.w	r1, [r3], #1
  40238c:	429c      	cmp	r4, r3
  40238e:	d1fb      	bne.n	402388 <memset+0x88>
  402390:	bc70      	pop	{r4, r5, r6}
  402392:	4770      	bx	lr
  402394:	4614      	mov	r4, r2
  402396:	4603      	mov	r3, r0
  402398:	e7c2      	b.n	402320 <memset+0x20>
  40239a:	bf00      	nop

0040239c <sprintf>:
  40239c:	b40e      	push	{r1, r2, r3}
  40239e:	b5f0      	push	{r4, r5, r6, r7, lr}
  4023a0:	b09c      	sub	sp, #112	; 0x70
  4023a2:	ab21      	add	r3, sp, #132	; 0x84
  4023a4:	490f      	ldr	r1, [pc, #60]	; (4023e4 <sprintf+0x48>)
  4023a6:	f853 2b04 	ldr.w	r2, [r3], #4
  4023aa:	9301      	str	r3, [sp, #4]
  4023ac:	4605      	mov	r5, r0
  4023ae:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  4023b2:	6808      	ldr	r0, [r1, #0]
  4023b4:	9502      	str	r5, [sp, #8]
  4023b6:	f44f 7702 	mov.w	r7, #520	; 0x208
  4023ba:	f64f 76ff 	movw	r6, #65535	; 0xffff
  4023be:	a902      	add	r1, sp, #8
  4023c0:	9506      	str	r5, [sp, #24]
  4023c2:	f8ad 7014 	strh.w	r7, [sp, #20]
  4023c6:	9404      	str	r4, [sp, #16]
  4023c8:	9407      	str	r4, [sp, #28]
  4023ca:	f8ad 6016 	strh.w	r6, [sp, #22]
  4023ce:	f000 f80b 	bl	4023e8 <_svfprintf_r>
  4023d2:	9b02      	ldr	r3, [sp, #8]
  4023d4:	2200      	movs	r2, #0
  4023d6:	701a      	strb	r2, [r3, #0]
  4023d8:	b01c      	add	sp, #112	; 0x70
  4023da:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  4023de:	b003      	add	sp, #12
  4023e0:	4770      	bx	lr
  4023e2:	bf00      	nop
  4023e4:	20400028 	.word	0x20400028

004023e8 <_svfprintf_r>:
  4023e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4023ec:	b0c3      	sub	sp, #268	; 0x10c
  4023ee:	460c      	mov	r4, r1
  4023f0:	910b      	str	r1, [sp, #44]	; 0x2c
  4023f2:	4692      	mov	sl, r2
  4023f4:	930f      	str	r3, [sp, #60]	; 0x3c
  4023f6:	900c      	str	r0, [sp, #48]	; 0x30
  4023f8:	f002 fa0e 	bl	404818 <_localeconv_r>
  4023fc:	6803      	ldr	r3, [r0, #0]
  4023fe:	931a      	str	r3, [sp, #104]	; 0x68
  402400:	4618      	mov	r0, r3
  402402:	f003 f8dd 	bl	4055c0 <strlen>
  402406:	89a3      	ldrh	r3, [r4, #12]
  402408:	9019      	str	r0, [sp, #100]	; 0x64
  40240a:	0619      	lsls	r1, r3, #24
  40240c:	d503      	bpl.n	402416 <_svfprintf_r+0x2e>
  40240e:	6923      	ldr	r3, [r4, #16]
  402410:	2b00      	cmp	r3, #0
  402412:	f001 8003 	beq.w	40341c <_svfprintf_r+0x1034>
  402416:	2300      	movs	r3, #0
  402418:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  40241c:	9313      	str	r3, [sp, #76]	; 0x4c
  40241e:	9315      	str	r3, [sp, #84]	; 0x54
  402420:	9314      	str	r3, [sp, #80]	; 0x50
  402422:	9327      	str	r3, [sp, #156]	; 0x9c
  402424:	9326      	str	r3, [sp, #152]	; 0x98
  402426:	9318      	str	r3, [sp, #96]	; 0x60
  402428:	931b      	str	r3, [sp, #108]	; 0x6c
  40242a:	9309      	str	r3, [sp, #36]	; 0x24
  40242c:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  402430:	46c8      	mov	r8, r9
  402432:	9316      	str	r3, [sp, #88]	; 0x58
  402434:	9317      	str	r3, [sp, #92]	; 0x5c
  402436:	f89a 3000 	ldrb.w	r3, [sl]
  40243a:	4654      	mov	r4, sl
  40243c:	b1e3      	cbz	r3, 402478 <_svfprintf_r+0x90>
  40243e:	2b25      	cmp	r3, #37	; 0x25
  402440:	d102      	bne.n	402448 <_svfprintf_r+0x60>
  402442:	e019      	b.n	402478 <_svfprintf_r+0x90>
  402444:	2b25      	cmp	r3, #37	; 0x25
  402446:	d003      	beq.n	402450 <_svfprintf_r+0x68>
  402448:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40244c:	2b00      	cmp	r3, #0
  40244e:	d1f9      	bne.n	402444 <_svfprintf_r+0x5c>
  402450:	eba4 050a 	sub.w	r5, r4, sl
  402454:	b185      	cbz	r5, 402478 <_svfprintf_r+0x90>
  402456:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402458:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40245a:	f8c8 a000 	str.w	sl, [r8]
  40245e:	3301      	adds	r3, #1
  402460:	442a      	add	r2, r5
  402462:	2b07      	cmp	r3, #7
  402464:	f8c8 5004 	str.w	r5, [r8, #4]
  402468:	9227      	str	r2, [sp, #156]	; 0x9c
  40246a:	9326      	str	r3, [sp, #152]	; 0x98
  40246c:	dc7f      	bgt.n	40256e <_svfprintf_r+0x186>
  40246e:	f108 0808 	add.w	r8, r8, #8
  402472:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402474:	442b      	add	r3, r5
  402476:	9309      	str	r3, [sp, #36]	; 0x24
  402478:	7823      	ldrb	r3, [r4, #0]
  40247a:	2b00      	cmp	r3, #0
  40247c:	d07f      	beq.n	40257e <_svfprintf_r+0x196>
  40247e:	2300      	movs	r3, #0
  402480:	461a      	mov	r2, r3
  402482:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402486:	4619      	mov	r1, r3
  402488:	930d      	str	r3, [sp, #52]	; 0x34
  40248a:	469b      	mov	fp, r3
  40248c:	f04f 30ff 	mov.w	r0, #4294967295
  402490:	7863      	ldrb	r3, [r4, #1]
  402492:	900a      	str	r0, [sp, #40]	; 0x28
  402494:	f104 0a01 	add.w	sl, r4, #1
  402498:	f10a 0a01 	add.w	sl, sl, #1
  40249c:	f1a3 0020 	sub.w	r0, r3, #32
  4024a0:	2858      	cmp	r0, #88	; 0x58
  4024a2:	f200 83c1 	bhi.w	402c28 <_svfprintf_r+0x840>
  4024a6:	e8df f010 	tbh	[pc, r0, lsl #1]
  4024aa:	0238      	.short	0x0238
  4024ac:	03bf03bf 	.word	0x03bf03bf
  4024b0:	03bf0240 	.word	0x03bf0240
  4024b4:	03bf03bf 	.word	0x03bf03bf
  4024b8:	03bf03bf 	.word	0x03bf03bf
  4024bc:	024503bf 	.word	0x024503bf
  4024c0:	03bf0203 	.word	0x03bf0203
  4024c4:	026b005d 	.word	0x026b005d
  4024c8:	028603bf 	.word	0x028603bf
  4024cc:	039d039d 	.word	0x039d039d
  4024d0:	039d039d 	.word	0x039d039d
  4024d4:	039d039d 	.word	0x039d039d
  4024d8:	039d039d 	.word	0x039d039d
  4024dc:	03bf039d 	.word	0x03bf039d
  4024e0:	03bf03bf 	.word	0x03bf03bf
  4024e4:	03bf03bf 	.word	0x03bf03bf
  4024e8:	03bf03bf 	.word	0x03bf03bf
  4024ec:	03bf03bf 	.word	0x03bf03bf
  4024f0:	033703bf 	.word	0x033703bf
  4024f4:	03bf0357 	.word	0x03bf0357
  4024f8:	03bf0357 	.word	0x03bf0357
  4024fc:	03bf03bf 	.word	0x03bf03bf
  402500:	039803bf 	.word	0x039803bf
  402504:	03bf03bf 	.word	0x03bf03bf
  402508:	03bf03ad 	.word	0x03bf03ad
  40250c:	03bf03bf 	.word	0x03bf03bf
  402510:	03bf03bf 	.word	0x03bf03bf
  402514:	03bf0259 	.word	0x03bf0259
  402518:	031e03bf 	.word	0x031e03bf
  40251c:	03bf03bf 	.word	0x03bf03bf
  402520:	03bf03bf 	.word	0x03bf03bf
  402524:	03bf03bf 	.word	0x03bf03bf
  402528:	03bf03bf 	.word	0x03bf03bf
  40252c:	03bf03bf 	.word	0x03bf03bf
  402530:	02db02c6 	.word	0x02db02c6
  402534:	03570357 	.word	0x03570357
  402538:	028b0357 	.word	0x028b0357
  40253c:	03bf02db 	.word	0x03bf02db
  402540:	029003bf 	.word	0x029003bf
  402544:	029d03bf 	.word	0x029d03bf
  402548:	02b401cc 	.word	0x02b401cc
  40254c:	03bf0208 	.word	0x03bf0208
  402550:	03bf01e1 	.word	0x03bf01e1
  402554:	03bf007e 	.word	0x03bf007e
  402558:	020d03bf 	.word	0x020d03bf
  40255c:	980d      	ldr	r0, [sp, #52]	; 0x34
  40255e:	930f      	str	r3, [sp, #60]	; 0x3c
  402560:	4240      	negs	r0, r0
  402562:	900d      	str	r0, [sp, #52]	; 0x34
  402564:	f04b 0b04 	orr.w	fp, fp, #4
  402568:	f89a 3000 	ldrb.w	r3, [sl]
  40256c:	e794      	b.n	402498 <_svfprintf_r+0xb0>
  40256e:	aa25      	add	r2, sp, #148	; 0x94
  402570:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402572:	980c      	ldr	r0, [sp, #48]	; 0x30
  402574:	f003 f892 	bl	40569c <__ssprint_r>
  402578:	b940      	cbnz	r0, 40258c <_svfprintf_r+0x1a4>
  40257a:	46c8      	mov	r8, r9
  40257c:	e779      	b.n	402472 <_svfprintf_r+0x8a>
  40257e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402580:	b123      	cbz	r3, 40258c <_svfprintf_r+0x1a4>
  402582:	980c      	ldr	r0, [sp, #48]	; 0x30
  402584:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402586:	aa25      	add	r2, sp, #148	; 0x94
  402588:	f003 f888 	bl	40569c <__ssprint_r>
  40258c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40258e:	899b      	ldrh	r3, [r3, #12]
  402590:	f013 0f40 	tst.w	r3, #64	; 0x40
  402594:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402596:	bf18      	it	ne
  402598:	f04f 33ff 	movne.w	r3, #4294967295
  40259c:	9309      	str	r3, [sp, #36]	; 0x24
  40259e:	9809      	ldr	r0, [sp, #36]	; 0x24
  4025a0:	b043      	add	sp, #268	; 0x10c
  4025a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4025a6:	f01b 0f20 	tst.w	fp, #32
  4025aa:	9311      	str	r3, [sp, #68]	; 0x44
  4025ac:	f040 81dd 	bne.w	40296a <_svfprintf_r+0x582>
  4025b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4025b2:	f01b 0f10 	tst.w	fp, #16
  4025b6:	4613      	mov	r3, r2
  4025b8:	f040 856e 	bne.w	403098 <_svfprintf_r+0xcb0>
  4025bc:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4025c0:	f000 856a 	beq.w	403098 <_svfprintf_r+0xcb0>
  4025c4:	8814      	ldrh	r4, [r2, #0]
  4025c6:	3204      	adds	r2, #4
  4025c8:	2500      	movs	r5, #0
  4025ca:	2301      	movs	r3, #1
  4025cc:	920f      	str	r2, [sp, #60]	; 0x3c
  4025ce:	2700      	movs	r7, #0
  4025d0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4025d4:	990a      	ldr	r1, [sp, #40]	; 0x28
  4025d6:	1c4a      	adds	r2, r1, #1
  4025d8:	f000 8265 	beq.w	402aa6 <_svfprintf_r+0x6be>
  4025dc:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  4025e0:	9207      	str	r2, [sp, #28]
  4025e2:	ea54 0205 	orrs.w	r2, r4, r5
  4025e6:	f040 8264 	bne.w	402ab2 <_svfprintf_r+0x6ca>
  4025ea:	2900      	cmp	r1, #0
  4025ec:	f040 843c 	bne.w	402e68 <_svfprintf_r+0xa80>
  4025f0:	2b00      	cmp	r3, #0
  4025f2:	f040 84d7 	bne.w	402fa4 <_svfprintf_r+0xbbc>
  4025f6:	f01b 0301 	ands.w	r3, fp, #1
  4025fa:	930e      	str	r3, [sp, #56]	; 0x38
  4025fc:	f000 8604 	beq.w	403208 <_svfprintf_r+0xe20>
  402600:	ae42      	add	r6, sp, #264	; 0x108
  402602:	2330      	movs	r3, #48	; 0x30
  402604:	f806 3d41 	strb.w	r3, [r6, #-65]!
  402608:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40260a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40260c:	4293      	cmp	r3, r2
  40260e:	bfb8      	it	lt
  402610:	4613      	movlt	r3, r2
  402612:	9308      	str	r3, [sp, #32]
  402614:	2300      	movs	r3, #0
  402616:	9312      	str	r3, [sp, #72]	; 0x48
  402618:	b117      	cbz	r7, 402620 <_svfprintf_r+0x238>
  40261a:	9b08      	ldr	r3, [sp, #32]
  40261c:	3301      	adds	r3, #1
  40261e:	9308      	str	r3, [sp, #32]
  402620:	9b07      	ldr	r3, [sp, #28]
  402622:	f013 0302 	ands.w	r3, r3, #2
  402626:	9310      	str	r3, [sp, #64]	; 0x40
  402628:	d002      	beq.n	402630 <_svfprintf_r+0x248>
  40262a:	9b08      	ldr	r3, [sp, #32]
  40262c:	3302      	adds	r3, #2
  40262e:	9308      	str	r3, [sp, #32]
  402630:	9b07      	ldr	r3, [sp, #28]
  402632:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  402636:	f040 830e 	bne.w	402c56 <_svfprintf_r+0x86e>
  40263a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40263c:	9a08      	ldr	r2, [sp, #32]
  40263e:	eba3 0b02 	sub.w	fp, r3, r2
  402642:	f1bb 0f00 	cmp.w	fp, #0
  402646:	f340 8306 	ble.w	402c56 <_svfprintf_r+0x86e>
  40264a:	f1bb 0f10 	cmp.w	fp, #16
  40264e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402650:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402652:	dd29      	ble.n	4026a8 <_svfprintf_r+0x2c0>
  402654:	4643      	mov	r3, r8
  402656:	4621      	mov	r1, r4
  402658:	46a8      	mov	r8, r5
  40265a:	2710      	movs	r7, #16
  40265c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40265e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402660:	e006      	b.n	402670 <_svfprintf_r+0x288>
  402662:	f1ab 0b10 	sub.w	fp, fp, #16
  402666:	f1bb 0f10 	cmp.w	fp, #16
  40266a:	f103 0308 	add.w	r3, r3, #8
  40266e:	dd18      	ble.n	4026a2 <_svfprintf_r+0x2ba>
  402670:	3201      	adds	r2, #1
  402672:	48b7      	ldr	r0, [pc, #732]	; (402950 <_svfprintf_r+0x568>)
  402674:	9226      	str	r2, [sp, #152]	; 0x98
  402676:	3110      	adds	r1, #16
  402678:	2a07      	cmp	r2, #7
  40267a:	9127      	str	r1, [sp, #156]	; 0x9c
  40267c:	e883 0081 	stmia.w	r3, {r0, r7}
  402680:	ddef      	ble.n	402662 <_svfprintf_r+0x27a>
  402682:	aa25      	add	r2, sp, #148	; 0x94
  402684:	4629      	mov	r1, r5
  402686:	4620      	mov	r0, r4
  402688:	f003 f808 	bl	40569c <__ssprint_r>
  40268c:	2800      	cmp	r0, #0
  40268e:	f47f af7d 	bne.w	40258c <_svfprintf_r+0x1a4>
  402692:	f1ab 0b10 	sub.w	fp, fp, #16
  402696:	f1bb 0f10 	cmp.w	fp, #16
  40269a:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40269c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40269e:	464b      	mov	r3, r9
  4026a0:	dce6      	bgt.n	402670 <_svfprintf_r+0x288>
  4026a2:	4645      	mov	r5, r8
  4026a4:	460c      	mov	r4, r1
  4026a6:	4698      	mov	r8, r3
  4026a8:	3201      	adds	r2, #1
  4026aa:	4ba9      	ldr	r3, [pc, #676]	; (402950 <_svfprintf_r+0x568>)
  4026ac:	9226      	str	r2, [sp, #152]	; 0x98
  4026ae:	445c      	add	r4, fp
  4026b0:	2a07      	cmp	r2, #7
  4026b2:	9427      	str	r4, [sp, #156]	; 0x9c
  4026b4:	e888 0808 	stmia.w	r8, {r3, fp}
  4026b8:	f300 8498 	bgt.w	402fec <_svfprintf_r+0xc04>
  4026bc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4026c0:	f108 0808 	add.w	r8, r8, #8
  4026c4:	b177      	cbz	r7, 4026e4 <_svfprintf_r+0x2fc>
  4026c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026c8:	3301      	adds	r3, #1
  4026ca:	3401      	adds	r4, #1
  4026cc:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  4026d0:	2201      	movs	r2, #1
  4026d2:	2b07      	cmp	r3, #7
  4026d4:	9427      	str	r4, [sp, #156]	; 0x9c
  4026d6:	9326      	str	r3, [sp, #152]	; 0x98
  4026d8:	e888 0006 	stmia.w	r8, {r1, r2}
  4026dc:	f300 83db 	bgt.w	402e96 <_svfprintf_r+0xaae>
  4026e0:	f108 0808 	add.w	r8, r8, #8
  4026e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4026e6:	b16b      	cbz	r3, 402704 <_svfprintf_r+0x31c>
  4026e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026ea:	3301      	adds	r3, #1
  4026ec:	3402      	adds	r4, #2
  4026ee:	a91e      	add	r1, sp, #120	; 0x78
  4026f0:	2202      	movs	r2, #2
  4026f2:	2b07      	cmp	r3, #7
  4026f4:	9427      	str	r4, [sp, #156]	; 0x9c
  4026f6:	9326      	str	r3, [sp, #152]	; 0x98
  4026f8:	e888 0006 	stmia.w	r8, {r1, r2}
  4026fc:	f300 83d6 	bgt.w	402eac <_svfprintf_r+0xac4>
  402700:	f108 0808 	add.w	r8, r8, #8
  402704:	2d80      	cmp	r5, #128	; 0x80
  402706:	f000 8315 	beq.w	402d34 <_svfprintf_r+0x94c>
  40270a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40270c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40270e:	1a9f      	subs	r7, r3, r2
  402710:	2f00      	cmp	r7, #0
  402712:	dd36      	ble.n	402782 <_svfprintf_r+0x39a>
  402714:	2f10      	cmp	r7, #16
  402716:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402718:	4d8e      	ldr	r5, [pc, #568]	; (402954 <_svfprintf_r+0x56c>)
  40271a:	dd27      	ble.n	40276c <_svfprintf_r+0x384>
  40271c:	4642      	mov	r2, r8
  40271e:	4621      	mov	r1, r4
  402720:	46b0      	mov	r8, r6
  402722:	f04f 0b10 	mov.w	fp, #16
  402726:	462e      	mov	r6, r5
  402728:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40272a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  40272c:	e004      	b.n	402738 <_svfprintf_r+0x350>
  40272e:	3f10      	subs	r7, #16
  402730:	2f10      	cmp	r7, #16
  402732:	f102 0208 	add.w	r2, r2, #8
  402736:	dd15      	ble.n	402764 <_svfprintf_r+0x37c>
  402738:	3301      	adds	r3, #1
  40273a:	3110      	adds	r1, #16
  40273c:	2b07      	cmp	r3, #7
  40273e:	9127      	str	r1, [sp, #156]	; 0x9c
  402740:	9326      	str	r3, [sp, #152]	; 0x98
  402742:	e882 0840 	stmia.w	r2, {r6, fp}
  402746:	ddf2      	ble.n	40272e <_svfprintf_r+0x346>
  402748:	aa25      	add	r2, sp, #148	; 0x94
  40274a:	4629      	mov	r1, r5
  40274c:	4620      	mov	r0, r4
  40274e:	f002 ffa5 	bl	40569c <__ssprint_r>
  402752:	2800      	cmp	r0, #0
  402754:	f47f af1a 	bne.w	40258c <_svfprintf_r+0x1a4>
  402758:	3f10      	subs	r7, #16
  40275a:	2f10      	cmp	r7, #16
  40275c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40275e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402760:	464a      	mov	r2, r9
  402762:	dce9      	bgt.n	402738 <_svfprintf_r+0x350>
  402764:	4635      	mov	r5, r6
  402766:	460c      	mov	r4, r1
  402768:	4646      	mov	r6, r8
  40276a:	4690      	mov	r8, r2
  40276c:	3301      	adds	r3, #1
  40276e:	443c      	add	r4, r7
  402770:	2b07      	cmp	r3, #7
  402772:	9427      	str	r4, [sp, #156]	; 0x9c
  402774:	9326      	str	r3, [sp, #152]	; 0x98
  402776:	e888 00a0 	stmia.w	r8, {r5, r7}
  40277a:	f300 8381 	bgt.w	402e80 <_svfprintf_r+0xa98>
  40277e:	f108 0808 	add.w	r8, r8, #8
  402782:	9b07      	ldr	r3, [sp, #28]
  402784:	05df      	lsls	r7, r3, #23
  402786:	f100 8268 	bmi.w	402c5a <_svfprintf_r+0x872>
  40278a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40278c:	990e      	ldr	r1, [sp, #56]	; 0x38
  40278e:	f8c8 6000 	str.w	r6, [r8]
  402792:	3301      	adds	r3, #1
  402794:	440c      	add	r4, r1
  402796:	2b07      	cmp	r3, #7
  402798:	9427      	str	r4, [sp, #156]	; 0x9c
  40279a:	f8c8 1004 	str.w	r1, [r8, #4]
  40279e:	9326      	str	r3, [sp, #152]	; 0x98
  4027a0:	f300 834d 	bgt.w	402e3e <_svfprintf_r+0xa56>
  4027a4:	f108 0808 	add.w	r8, r8, #8
  4027a8:	9b07      	ldr	r3, [sp, #28]
  4027aa:	075b      	lsls	r3, r3, #29
  4027ac:	d53a      	bpl.n	402824 <_svfprintf_r+0x43c>
  4027ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4027b0:	9a08      	ldr	r2, [sp, #32]
  4027b2:	1a9d      	subs	r5, r3, r2
  4027b4:	2d00      	cmp	r5, #0
  4027b6:	dd35      	ble.n	402824 <_svfprintf_r+0x43c>
  4027b8:	2d10      	cmp	r5, #16
  4027ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027bc:	dd20      	ble.n	402800 <_svfprintf_r+0x418>
  4027be:	2610      	movs	r6, #16
  4027c0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4027c2:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  4027c6:	e004      	b.n	4027d2 <_svfprintf_r+0x3ea>
  4027c8:	3d10      	subs	r5, #16
  4027ca:	2d10      	cmp	r5, #16
  4027cc:	f108 0808 	add.w	r8, r8, #8
  4027d0:	dd16      	ble.n	402800 <_svfprintf_r+0x418>
  4027d2:	3301      	adds	r3, #1
  4027d4:	4a5e      	ldr	r2, [pc, #376]	; (402950 <_svfprintf_r+0x568>)
  4027d6:	9326      	str	r3, [sp, #152]	; 0x98
  4027d8:	3410      	adds	r4, #16
  4027da:	2b07      	cmp	r3, #7
  4027dc:	9427      	str	r4, [sp, #156]	; 0x9c
  4027de:	e888 0044 	stmia.w	r8, {r2, r6}
  4027e2:	ddf1      	ble.n	4027c8 <_svfprintf_r+0x3e0>
  4027e4:	aa25      	add	r2, sp, #148	; 0x94
  4027e6:	4659      	mov	r1, fp
  4027e8:	4638      	mov	r0, r7
  4027ea:	f002 ff57 	bl	40569c <__ssprint_r>
  4027ee:	2800      	cmp	r0, #0
  4027f0:	f47f aecc 	bne.w	40258c <_svfprintf_r+0x1a4>
  4027f4:	3d10      	subs	r5, #16
  4027f6:	2d10      	cmp	r5, #16
  4027f8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027fc:	46c8      	mov	r8, r9
  4027fe:	dce8      	bgt.n	4027d2 <_svfprintf_r+0x3ea>
  402800:	3301      	adds	r3, #1
  402802:	4a53      	ldr	r2, [pc, #332]	; (402950 <_svfprintf_r+0x568>)
  402804:	9326      	str	r3, [sp, #152]	; 0x98
  402806:	442c      	add	r4, r5
  402808:	2b07      	cmp	r3, #7
  40280a:	9427      	str	r4, [sp, #156]	; 0x9c
  40280c:	e888 0024 	stmia.w	r8, {r2, r5}
  402810:	dd08      	ble.n	402824 <_svfprintf_r+0x43c>
  402812:	aa25      	add	r2, sp, #148	; 0x94
  402814:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402816:	980c      	ldr	r0, [sp, #48]	; 0x30
  402818:	f002 ff40 	bl	40569c <__ssprint_r>
  40281c:	2800      	cmp	r0, #0
  40281e:	f47f aeb5 	bne.w	40258c <_svfprintf_r+0x1a4>
  402822:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402824:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402826:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402828:	9908      	ldr	r1, [sp, #32]
  40282a:	428a      	cmp	r2, r1
  40282c:	bfac      	ite	ge
  40282e:	189b      	addge	r3, r3, r2
  402830:	185b      	addlt	r3, r3, r1
  402832:	9309      	str	r3, [sp, #36]	; 0x24
  402834:	2c00      	cmp	r4, #0
  402836:	f040 830d 	bne.w	402e54 <_svfprintf_r+0xa6c>
  40283a:	2300      	movs	r3, #0
  40283c:	9326      	str	r3, [sp, #152]	; 0x98
  40283e:	46c8      	mov	r8, r9
  402840:	e5f9      	b.n	402436 <_svfprintf_r+0x4e>
  402842:	9311      	str	r3, [sp, #68]	; 0x44
  402844:	f01b 0320 	ands.w	r3, fp, #32
  402848:	f040 81e3 	bne.w	402c12 <_svfprintf_r+0x82a>
  40284c:	f01b 0210 	ands.w	r2, fp, #16
  402850:	f040 842e 	bne.w	4030b0 <_svfprintf_r+0xcc8>
  402854:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402858:	f000 842a 	beq.w	4030b0 <_svfprintf_r+0xcc8>
  40285c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40285e:	4613      	mov	r3, r2
  402860:	460a      	mov	r2, r1
  402862:	3204      	adds	r2, #4
  402864:	880c      	ldrh	r4, [r1, #0]
  402866:	920f      	str	r2, [sp, #60]	; 0x3c
  402868:	2500      	movs	r5, #0
  40286a:	e6b0      	b.n	4025ce <_svfprintf_r+0x1e6>
  40286c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40286e:	9311      	str	r3, [sp, #68]	; 0x44
  402870:	6816      	ldr	r6, [r2, #0]
  402872:	2400      	movs	r4, #0
  402874:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  402878:	1d15      	adds	r5, r2, #4
  40287a:	2e00      	cmp	r6, #0
  40287c:	f000 86a7 	beq.w	4035ce <_svfprintf_r+0x11e6>
  402880:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402882:	1c53      	adds	r3, r2, #1
  402884:	f000 8609 	beq.w	40349a <_svfprintf_r+0x10b2>
  402888:	4621      	mov	r1, r4
  40288a:	4630      	mov	r0, r6
  40288c:	f002 fa88 	bl	404da0 <memchr>
  402890:	2800      	cmp	r0, #0
  402892:	f000 86e1 	beq.w	403658 <_svfprintf_r+0x1270>
  402896:	1b83      	subs	r3, r0, r6
  402898:	930e      	str	r3, [sp, #56]	; 0x38
  40289a:	940a      	str	r4, [sp, #40]	; 0x28
  40289c:	950f      	str	r5, [sp, #60]	; 0x3c
  40289e:	f8cd b01c 	str.w	fp, [sp, #28]
  4028a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4028a6:	9308      	str	r3, [sp, #32]
  4028a8:	9412      	str	r4, [sp, #72]	; 0x48
  4028aa:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4028ae:	e6b3      	b.n	402618 <_svfprintf_r+0x230>
  4028b0:	f89a 3000 	ldrb.w	r3, [sl]
  4028b4:	2201      	movs	r2, #1
  4028b6:	212b      	movs	r1, #43	; 0x2b
  4028b8:	e5ee      	b.n	402498 <_svfprintf_r+0xb0>
  4028ba:	f04b 0b20 	orr.w	fp, fp, #32
  4028be:	f89a 3000 	ldrb.w	r3, [sl]
  4028c2:	e5e9      	b.n	402498 <_svfprintf_r+0xb0>
  4028c4:	9311      	str	r3, [sp, #68]	; 0x44
  4028c6:	2a00      	cmp	r2, #0
  4028c8:	f040 8795 	bne.w	4037f6 <_svfprintf_r+0x140e>
  4028cc:	4b22      	ldr	r3, [pc, #136]	; (402958 <_svfprintf_r+0x570>)
  4028ce:	9318      	str	r3, [sp, #96]	; 0x60
  4028d0:	f01b 0f20 	tst.w	fp, #32
  4028d4:	f040 8111 	bne.w	402afa <_svfprintf_r+0x712>
  4028d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4028da:	f01b 0f10 	tst.w	fp, #16
  4028de:	4613      	mov	r3, r2
  4028e0:	f040 83e1 	bne.w	4030a6 <_svfprintf_r+0xcbe>
  4028e4:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4028e8:	f000 83dd 	beq.w	4030a6 <_svfprintf_r+0xcbe>
  4028ec:	3304      	adds	r3, #4
  4028ee:	8814      	ldrh	r4, [r2, #0]
  4028f0:	930f      	str	r3, [sp, #60]	; 0x3c
  4028f2:	2500      	movs	r5, #0
  4028f4:	f01b 0f01 	tst.w	fp, #1
  4028f8:	f000 810c 	beq.w	402b14 <_svfprintf_r+0x72c>
  4028fc:	ea54 0305 	orrs.w	r3, r4, r5
  402900:	f000 8108 	beq.w	402b14 <_svfprintf_r+0x72c>
  402904:	2330      	movs	r3, #48	; 0x30
  402906:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40290a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40290e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402912:	f04b 0b02 	orr.w	fp, fp, #2
  402916:	2302      	movs	r3, #2
  402918:	e659      	b.n	4025ce <_svfprintf_r+0x1e6>
  40291a:	f89a 3000 	ldrb.w	r3, [sl]
  40291e:	2900      	cmp	r1, #0
  402920:	f47f adba 	bne.w	402498 <_svfprintf_r+0xb0>
  402924:	2201      	movs	r2, #1
  402926:	2120      	movs	r1, #32
  402928:	e5b6      	b.n	402498 <_svfprintf_r+0xb0>
  40292a:	f04b 0b01 	orr.w	fp, fp, #1
  40292e:	f89a 3000 	ldrb.w	r3, [sl]
  402932:	e5b1      	b.n	402498 <_svfprintf_r+0xb0>
  402934:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402936:	6823      	ldr	r3, [r4, #0]
  402938:	930d      	str	r3, [sp, #52]	; 0x34
  40293a:	4618      	mov	r0, r3
  40293c:	2800      	cmp	r0, #0
  40293e:	4623      	mov	r3, r4
  402940:	f103 0304 	add.w	r3, r3, #4
  402944:	f6ff ae0a 	blt.w	40255c <_svfprintf_r+0x174>
  402948:	930f      	str	r3, [sp, #60]	; 0x3c
  40294a:	f89a 3000 	ldrb.w	r3, [sl]
  40294e:	e5a3      	b.n	402498 <_svfprintf_r+0xb0>
  402950:	00406ecc 	.word	0x00406ecc
  402954:	00406edc 	.word	0x00406edc
  402958:	00406eac 	.word	0x00406eac
  40295c:	f04b 0b10 	orr.w	fp, fp, #16
  402960:	f01b 0f20 	tst.w	fp, #32
  402964:	9311      	str	r3, [sp, #68]	; 0x44
  402966:	f43f ae23 	beq.w	4025b0 <_svfprintf_r+0x1c8>
  40296a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40296c:	3507      	adds	r5, #7
  40296e:	f025 0307 	bic.w	r3, r5, #7
  402972:	f103 0208 	add.w	r2, r3, #8
  402976:	e9d3 4500 	ldrd	r4, r5, [r3]
  40297a:	920f      	str	r2, [sp, #60]	; 0x3c
  40297c:	2301      	movs	r3, #1
  40297e:	e626      	b.n	4025ce <_svfprintf_r+0x1e6>
  402980:	f89a 3000 	ldrb.w	r3, [sl]
  402984:	2b2a      	cmp	r3, #42	; 0x2a
  402986:	f10a 0401 	add.w	r4, sl, #1
  40298a:	f000 8727 	beq.w	4037dc <_svfprintf_r+0x13f4>
  40298e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402992:	2809      	cmp	r0, #9
  402994:	46a2      	mov	sl, r4
  402996:	f200 86ad 	bhi.w	4036f4 <_svfprintf_r+0x130c>
  40299a:	2300      	movs	r3, #0
  40299c:	461c      	mov	r4, r3
  40299e:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4029a2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4029a6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4029aa:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4029ae:	2809      	cmp	r0, #9
  4029b0:	d9f5      	bls.n	40299e <_svfprintf_r+0x5b6>
  4029b2:	940a      	str	r4, [sp, #40]	; 0x28
  4029b4:	e572      	b.n	40249c <_svfprintf_r+0xb4>
  4029b6:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4029ba:	f89a 3000 	ldrb.w	r3, [sl]
  4029be:	e56b      	b.n	402498 <_svfprintf_r+0xb0>
  4029c0:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4029c4:	f89a 3000 	ldrb.w	r3, [sl]
  4029c8:	e566      	b.n	402498 <_svfprintf_r+0xb0>
  4029ca:	f89a 3000 	ldrb.w	r3, [sl]
  4029ce:	2b6c      	cmp	r3, #108	; 0x6c
  4029d0:	bf03      	ittte	eq
  4029d2:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4029d6:	f04b 0b20 	orreq.w	fp, fp, #32
  4029da:	f10a 0a01 	addeq.w	sl, sl, #1
  4029de:	f04b 0b10 	orrne.w	fp, fp, #16
  4029e2:	e559      	b.n	402498 <_svfprintf_r+0xb0>
  4029e4:	2a00      	cmp	r2, #0
  4029e6:	f040 8711 	bne.w	40380c <_svfprintf_r+0x1424>
  4029ea:	f01b 0f20 	tst.w	fp, #32
  4029ee:	f040 84f9 	bne.w	4033e4 <_svfprintf_r+0xffc>
  4029f2:	f01b 0f10 	tst.w	fp, #16
  4029f6:	f040 84ac 	bne.w	403352 <_svfprintf_r+0xf6a>
  4029fa:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4029fe:	f000 84a8 	beq.w	403352 <_svfprintf_r+0xf6a>
  402a02:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a04:	6813      	ldr	r3, [r2, #0]
  402a06:	3204      	adds	r2, #4
  402a08:	920f      	str	r2, [sp, #60]	; 0x3c
  402a0a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  402a0e:	801a      	strh	r2, [r3, #0]
  402a10:	e511      	b.n	402436 <_svfprintf_r+0x4e>
  402a12:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a14:	4bb3      	ldr	r3, [pc, #716]	; (402ce4 <_svfprintf_r+0x8fc>)
  402a16:	680c      	ldr	r4, [r1, #0]
  402a18:	9318      	str	r3, [sp, #96]	; 0x60
  402a1a:	2230      	movs	r2, #48	; 0x30
  402a1c:	2378      	movs	r3, #120	; 0x78
  402a1e:	3104      	adds	r1, #4
  402a20:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402a24:	9311      	str	r3, [sp, #68]	; 0x44
  402a26:	f04b 0b02 	orr.w	fp, fp, #2
  402a2a:	910f      	str	r1, [sp, #60]	; 0x3c
  402a2c:	2500      	movs	r5, #0
  402a2e:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402a32:	2302      	movs	r3, #2
  402a34:	e5cb      	b.n	4025ce <_svfprintf_r+0x1e6>
  402a36:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a38:	9311      	str	r3, [sp, #68]	; 0x44
  402a3a:	680a      	ldr	r2, [r1, #0]
  402a3c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402a40:	2300      	movs	r3, #0
  402a42:	460a      	mov	r2, r1
  402a44:	461f      	mov	r7, r3
  402a46:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402a4a:	3204      	adds	r2, #4
  402a4c:	2301      	movs	r3, #1
  402a4e:	9308      	str	r3, [sp, #32]
  402a50:	f8cd b01c 	str.w	fp, [sp, #28]
  402a54:	970a      	str	r7, [sp, #40]	; 0x28
  402a56:	9712      	str	r7, [sp, #72]	; 0x48
  402a58:	920f      	str	r2, [sp, #60]	; 0x3c
  402a5a:	930e      	str	r3, [sp, #56]	; 0x38
  402a5c:	ae28      	add	r6, sp, #160	; 0xa0
  402a5e:	e5df      	b.n	402620 <_svfprintf_r+0x238>
  402a60:	9311      	str	r3, [sp, #68]	; 0x44
  402a62:	2a00      	cmp	r2, #0
  402a64:	f040 86ea 	bne.w	40383c <_svfprintf_r+0x1454>
  402a68:	f01b 0f20 	tst.w	fp, #32
  402a6c:	d15d      	bne.n	402b2a <_svfprintf_r+0x742>
  402a6e:	f01b 0f10 	tst.w	fp, #16
  402a72:	f040 8308 	bne.w	403086 <_svfprintf_r+0xc9e>
  402a76:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402a7a:	f000 8304 	beq.w	403086 <_svfprintf_r+0xc9e>
  402a7e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402a80:	f9b1 4000 	ldrsh.w	r4, [r1]
  402a84:	3104      	adds	r1, #4
  402a86:	17e5      	asrs	r5, r4, #31
  402a88:	4622      	mov	r2, r4
  402a8a:	462b      	mov	r3, r5
  402a8c:	910f      	str	r1, [sp, #60]	; 0x3c
  402a8e:	2a00      	cmp	r2, #0
  402a90:	f173 0300 	sbcs.w	r3, r3, #0
  402a94:	db58      	blt.n	402b48 <_svfprintf_r+0x760>
  402a96:	990a      	ldr	r1, [sp, #40]	; 0x28
  402a98:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a9c:	1c4a      	adds	r2, r1, #1
  402a9e:	f04f 0301 	mov.w	r3, #1
  402aa2:	f47f ad9b 	bne.w	4025dc <_svfprintf_r+0x1f4>
  402aa6:	ea54 0205 	orrs.w	r2, r4, r5
  402aaa:	f000 81df 	beq.w	402e6c <_svfprintf_r+0xa84>
  402aae:	f8cd b01c 	str.w	fp, [sp, #28]
  402ab2:	2b01      	cmp	r3, #1
  402ab4:	f000 827b 	beq.w	402fae <_svfprintf_r+0xbc6>
  402ab8:	2b02      	cmp	r3, #2
  402aba:	f040 8206 	bne.w	402eca <_svfprintf_r+0xae2>
  402abe:	9818      	ldr	r0, [sp, #96]	; 0x60
  402ac0:	464e      	mov	r6, r9
  402ac2:	0923      	lsrs	r3, r4, #4
  402ac4:	f004 010f 	and.w	r1, r4, #15
  402ac8:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402acc:	092a      	lsrs	r2, r5, #4
  402ace:	461c      	mov	r4, r3
  402ad0:	4615      	mov	r5, r2
  402ad2:	5c43      	ldrb	r3, [r0, r1]
  402ad4:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402ad8:	ea54 0305 	orrs.w	r3, r4, r5
  402adc:	d1f1      	bne.n	402ac2 <_svfprintf_r+0x6da>
  402ade:	eba9 0306 	sub.w	r3, r9, r6
  402ae2:	930e      	str	r3, [sp, #56]	; 0x38
  402ae4:	e590      	b.n	402608 <_svfprintf_r+0x220>
  402ae6:	9311      	str	r3, [sp, #68]	; 0x44
  402ae8:	2a00      	cmp	r2, #0
  402aea:	f040 86a3 	bne.w	403834 <_svfprintf_r+0x144c>
  402aee:	4b7e      	ldr	r3, [pc, #504]	; (402ce8 <_svfprintf_r+0x900>)
  402af0:	9318      	str	r3, [sp, #96]	; 0x60
  402af2:	f01b 0f20 	tst.w	fp, #32
  402af6:	f43f aeef 	beq.w	4028d8 <_svfprintf_r+0x4f0>
  402afa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402afc:	3507      	adds	r5, #7
  402afe:	f025 0307 	bic.w	r3, r5, #7
  402b02:	f103 0208 	add.w	r2, r3, #8
  402b06:	f01b 0f01 	tst.w	fp, #1
  402b0a:	920f      	str	r2, [sp, #60]	; 0x3c
  402b0c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402b10:	f47f aef4 	bne.w	4028fc <_svfprintf_r+0x514>
  402b14:	2302      	movs	r3, #2
  402b16:	e55a      	b.n	4025ce <_svfprintf_r+0x1e6>
  402b18:	9311      	str	r3, [sp, #68]	; 0x44
  402b1a:	2a00      	cmp	r2, #0
  402b1c:	f040 8686 	bne.w	40382c <_svfprintf_r+0x1444>
  402b20:	f04b 0b10 	orr.w	fp, fp, #16
  402b24:	f01b 0f20 	tst.w	fp, #32
  402b28:	d0a1      	beq.n	402a6e <_svfprintf_r+0x686>
  402b2a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b2c:	3507      	adds	r5, #7
  402b2e:	f025 0507 	bic.w	r5, r5, #7
  402b32:	e9d5 2300 	ldrd	r2, r3, [r5]
  402b36:	2a00      	cmp	r2, #0
  402b38:	f105 0108 	add.w	r1, r5, #8
  402b3c:	461d      	mov	r5, r3
  402b3e:	f173 0300 	sbcs.w	r3, r3, #0
  402b42:	910f      	str	r1, [sp, #60]	; 0x3c
  402b44:	4614      	mov	r4, r2
  402b46:	daa6      	bge.n	402a96 <_svfprintf_r+0x6ae>
  402b48:	272d      	movs	r7, #45	; 0x2d
  402b4a:	4264      	negs	r4, r4
  402b4c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402b50:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402b54:	2301      	movs	r3, #1
  402b56:	e53d      	b.n	4025d4 <_svfprintf_r+0x1ec>
  402b58:	9311      	str	r3, [sp, #68]	; 0x44
  402b5a:	2a00      	cmp	r2, #0
  402b5c:	f040 8662 	bne.w	403824 <_svfprintf_r+0x143c>
  402b60:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402b62:	3507      	adds	r5, #7
  402b64:	f025 0307 	bic.w	r3, r5, #7
  402b68:	f103 0208 	add.w	r2, r3, #8
  402b6c:	920f      	str	r2, [sp, #60]	; 0x3c
  402b6e:	681a      	ldr	r2, [r3, #0]
  402b70:	9215      	str	r2, [sp, #84]	; 0x54
  402b72:	685b      	ldr	r3, [r3, #4]
  402b74:	9314      	str	r3, [sp, #80]	; 0x50
  402b76:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402b78:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402b7a:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402b7e:	4628      	mov	r0, r5
  402b80:	4621      	mov	r1, r4
  402b82:	f04f 32ff 	mov.w	r2, #4294967295
  402b86:	4b59      	ldr	r3, [pc, #356]	; (402cec <_svfprintf_r+0x904>)
  402b88:	f003 fa84 	bl	406094 <__aeabi_dcmpun>
  402b8c:	2800      	cmp	r0, #0
  402b8e:	f040 834a 	bne.w	403226 <_svfprintf_r+0xe3e>
  402b92:	4628      	mov	r0, r5
  402b94:	4621      	mov	r1, r4
  402b96:	f04f 32ff 	mov.w	r2, #4294967295
  402b9a:	4b54      	ldr	r3, [pc, #336]	; (402cec <_svfprintf_r+0x904>)
  402b9c:	f003 fa5c 	bl	406058 <__aeabi_dcmple>
  402ba0:	2800      	cmp	r0, #0
  402ba2:	f040 8340 	bne.w	403226 <_svfprintf_r+0xe3e>
  402ba6:	a815      	add	r0, sp, #84	; 0x54
  402ba8:	c80d      	ldmia	r0, {r0, r2, r3}
  402baa:	9914      	ldr	r1, [sp, #80]	; 0x50
  402bac:	f003 fa4a 	bl	406044 <__aeabi_dcmplt>
  402bb0:	2800      	cmp	r0, #0
  402bb2:	f040 8530 	bne.w	403616 <_svfprintf_r+0x122e>
  402bb6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402bba:	4e4d      	ldr	r6, [pc, #308]	; (402cf0 <_svfprintf_r+0x908>)
  402bbc:	4b4d      	ldr	r3, [pc, #308]	; (402cf4 <_svfprintf_r+0x90c>)
  402bbe:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402bc2:	9007      	str	r0, [sp, #28]
  402bc4:	9811      	ldr	r0, [sp, #68]	; 0x44
  402bc6:	2203      	movs	r2, #3
  402bc8:	2100      	movs	r1, #0
  402bca:	9208      	str	r2, [sp, #32]
  402bcc:	910a      	str	r1, [sp, #40]	; 0x28
  402bce:	2847      	cmp	r0, #71	; 0x47
  402bd0:	bfd8      	it	le
  402bd2:	461e      	movle	r6, r3
  402bd4:	920e      	str	r2, [sp, #56]	; 0x38
  402bd6:	9112      	str	r1, [sp, #72]	; 0x48
  402bd8:	e51e      	b.n	402618 <_svfprintf_r+0x230>
  402bda:	f04b 0b08 	orr.w	fp, fp, #8
  402bde:	f89a 3000 	ldrb.w	r3, [sl]
  402be2:	e459      	b.n	402498 <_svfprintf_r+0xb0>
  402be4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402be8:	2300      	movs	r3, #0
  402bea:	461c      	mov	r4, r3
  402bec:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402bf0:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402bf4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402bf8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402bfc:	2809      	cmp	r0, #9
  402bfe:	d9f5      	bls.n	402bec <_svfprintf_r+0x804>
  402c00:	940d      	str	r4, [sp, #52]	; 0x34
  402c02:	e44b      	b.n	40249c <_svfprintf_r+0xb4>
  402c04:	f04b 0b10 	orr.w	fp, fp, #16
  402c08:	9311      	str	r3, [sp, #68]	; 0x44
  402c0a:	f01b 0320 	ands.w	r3, fp, #32
  402c0e:	f43f ae1d 	beq.w	40284c <_svfprintf_r+0x464>
  402c12:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402c14:	3507      	adds	r5, #7
  402c16:	f025 0307 	bic.w	r3, r5, #7
  402c1a:	f103 0208 	add.w	r2, r3, #8
  402c1e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402c22:	920f      	str	r2, [sp, #60]	; 0x3c
  402c24:	2300      	movs	r3, #0
  402c26:	e4d2      	b.n	4025ce <_svfprintf_r+0x1e6>
  402c28:	9311      	str	r3, [sp, #68]	; 0x44
  402c2a:	2a00      	cmp	r2, #0
  402c2c:	f040 85e7 	bne.w	4037fe <_svfprintf_r+0x1416>
  402c30:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402c32:	2a00      	cmp	r2, #0
  402c34:	f43f aca3 	beq.w	40257e <_svfprintf_r+0x196>
  402c38:	2300      	movs	r3, #0
  402c3a:	2101      	movs	r1, #1
  402c3c:	461f      	mov	r7, r3
  402c3e:	9108      	str	r1, [sp, #32]
  402c40:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402c44:	f8cd b01c 	str.w	fp, [sp, #28]
  402c48:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402c4c:	930a      	str	r3, [sp, #40]	; 0x28
  402c4e:	9312      	str	r3, [sp, #72]	; 0x48
  402c50:	910e      	str	r1, [sp, #56]	; 0x38
  402c52:	ae28      	add	r6, sp, #160	; 0xa0
  402c54:	e4e4      	b.n	402620 <_svfprintf_r+0x238>
  402c56:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c58:	e534      	b.n	4026c4 <_svfprintf_r+0x2dc>
  402c5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c5c:	2b65      	cmp	r3, #101	; 0x65
  402c5e:	f340 80a7 	ble.w	402db0 <_svfprintf_r+0x9c8>
  402c62:	a815      	add	r0, sp, #84	; 0x54
  402c64:	c80d      	ldmia	r0, {r0, r2, r3}
  402c66:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c68:	f003 f9e2 	bl	406030 <__aeabi_dcmpeq>
  402c6c:	2800      	cmp	r0, #0
  402c6e:	f000 8150 	beq.w	402f12 <_svfprintf_r+0xb2a>
  402c72:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c74:	4a20      	ldr	r2, [pc, #128]	; (402cf8 <_svfprintf_r+0x910>)
  402c76:	f8c8 2000 	str.w	r2, [r8]
  402c7a:	3301      	adds	r3, #1
  402c7c:	3401      	adds	r4, #1
  402c7e:	2201      	movs	r2, #1
  402c80:	2b07      	cmp	r3, #7
  402c82:	9427      	str	r4, [sp, #156]	; 0x9c
  402c84:	9326      	str	r3, [sp, #152]	; 0x98
  402c86:	f8c8 2004 	str.w	r2, [r8, #4]
  402c8a:	f300 836a 	bgt.w	403362 <_svfprintf_r+0xf7a>
  402c8e:	f108 0808 	add.w	r8, r8, #8
  402c92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402c96:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c98:	4293      	cmp	r3, r2
  402c9a:	db03      	blt.n	402ca4 <_svfprintf_r+0x8bc>
  402c9c:	9b07      	ldr	r3, [sp, #28]
  402c9e:	07dd      	lsls	r5, r3, #31
  402ca0:	f57f ad82 	bpl.w	4027a8 <_svfprintf_r+0x3c0>
  402ca4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ca6:	9919      	ldr	r1, [sp, #100]	; 0x64
  402ca8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402caa:	f8c8 2000 	str.w	r2, [r8]
  402cae:	3301      	adds	r3, #1
  402cb0:	440c      	add	r4, r1
  402cb2:	2b07      	cmp	r3, #7
  402cb4:	f8c8 1004 	str.w	r1, [r8, #4]
  402cb8:	9427      	str	r4, [sp, #156]	; 0x9c
  402cba:	9326      	str	r3, [sp, #152]	; 0x98
  402cbc:	f300 839e 	bgt.w	4033fc <_svfprintf_r+0x1014>
  402cc0:	f108 0808 	add.w	r8, r8, #8
  402cc4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cc6:	1e5e      	subs	r6, r3, #1
  402cc8:	2e00      	cmp	r6, #0
  402cca:	f77f ad6d 	ble.w	4027a8 <_svfprintf_r+0x3c0>
  402cce:	2e10      	cmp	r6, #16
  402cd0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cd2:	4d0a      	ldr	r5, [pc, #40]	; (402cfc <_svfprintf_r+0x914>)
  402cd4:	f340 81f5 	ble.w	4030c2 <_svfprintf_r+0xcda>
  402cd8:	4622      	mov	r2, r4
  402cda:	2710      	movs	r7, #16
  402cdc:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ce0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ce2:	e013      	b.n	402d0c <_svfprintf_r+0x924>
  402ce4:	00406eac 	.word	0x00406eac
  402ce8:	00406e98 	.word	0x00406e98
  402cec:	7fefffff 	.word	0x7fefffff
  402cf0:	00406e8c 	.word	0x00406e8c
  402cf4:	00406e88 	.word	0x00406e88
  402cf8:	00406ec8 	.word	0x00406ec8
  402cfc:	00406edc 	.word	0x00406edc
  402d00:	f108 0808 	add.w	r8, r8, #8
  402d04:	3e10      	subs	r6, #16
  402d06:	2e10      	cmp	r6, #16
  402d08:	f340 81da 	ble.w	4030c0 <_svfprintf_r+0xcd8>
  402d0c:	3301      	adds	r3, #1
  402d0e:	3210      	adds	r2, #16
  402d10:	2b07      	cmp	r3, #7
  402d12:	9227      	str	r2, [sp, #156]	; 0x9c
  402d14:	9326      	str	r3, [sp, #152]	; 0x98
  402d16:	e888 00a0 	stmia.w	r8, {r5, r7}
  402d1a:	ddf1      	ble.n	402d00 <_svfprintf_r+0x918>
  402d1c:	aa25      	add	r2, sp, #148	; 0x94
  402d1e:	4621      	mov	r1, r4
  402d20:	4658      	mov	r0, fp
  402d22:	f002 fcbb 	bl	40569c <__ssprint_r>
  402d26:	2800      	cmp	r0, #0
  402d28:	f47f ac30 	bne.w	40258c <_svfprintf_r+0x1a4>
  402d2c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402d2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d30:	46c8      	mov	r8, r9
  402d32:	e7e7      	b.n	402d04 <_svfprintf_r+0x91c>
  402d34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402d36:	9a08      	ldr	r2, [sp, #32]
  402d38:	1a9f      	subs	r7, r3, r2
  402d3a:	2f00      	cmp	r7, #0
  402d3c:	f77f ace5 	ble.w	40270a <_svfprintf_r+0x322>
  402d40:	2f10      	cmp	r7, #16
  402d42:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d44:	4db6      	ldr	r5, [pc, #728]	; (403020 <_svfprintf_r+0xc38>)
  402d46:	dd27      	ble.n	402d98 <_svfprintf_r+0x9b0>
  402d48:	4642      	mov	r2, r8
  402d4a:	4621      	mov	r1, r4
  402d4c:	46b0      	mov	r8, r6
  402d4e:	f04f 0b10 	mov.w	fp, #16
  402d52:	462e      	mov	r6, r5
  402d54:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402d56:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402d58:	e004      	b.n	402d64 <_svfprintf_r+0x97c>
  402d5a:	3f10      	subs	r7, #16
  402d5c:	2f10      	cmp	r7, #16
  402d5e:	f102 0208 	add.w	r2, r2, #8
  402d62:	dd15      	ble.n	402d90 <_svfprintf_r+0x9a8>
  402d64:	3301      	adds	r3, #1
  402d66:	3110      	adds	r1, #16
  402d68:	2b07      	cmp	r3, #7
  402d6a:	9127      	str	r1, [sp, #156]	; 0x9c
  402d6c:	9326      	str	r3, [sp, #152]	; 0x98
  402d6e:	e882 0840 	stmia.w	r2, {r6, fp}
  402d72:	ddf2      	ble.n	402d5a <_svfprintf_r+0x972>
  402d74:	aa25      	add	r2, sp, #148	; 0x94
  402d76:	4629      	mov	r1, r5
  402d78:	4620      	mov	r0, r4
  402d7a:	f002 fc8f 	bl	40569c <__ssprint_r>
  402d7e:	2800      	cmp	r0, #0
  402d80:	f47f ac04 	bne.w	40258c <_svfprintf_r+0x1a4>
  402d84:	3f10      	subs	r7, #16
  402d86:	2f10      	cmp	r7, #16
  402d88:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402d8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402d8c:	464a      	mov	r2, r9
  402d8e:	dce9      	bgt.n	402d64 <_svfprintf_r+0x97c>
  402d90:	4635      	mov	r5, r6
  402d92:	460c      	mov	r4, r1
  402d94:	4646      	mov	r6, r8
  402d96:	4690      	mov	r8, r2
  402d98:	3301      	adds	r3, #1
  402d9a:	443c      	add	r4, r7
  402d9c:	2b07      	cmp	r3, #7
  402d9e:	9427      	str	r4, [sp, #156]	; 0x9c
  402da0:	9326      	str	r3, [sp, #152]	; 0x98
  402da2:	e888 00a0 	stmia.w	r8, {r5, r7}
  402da6:	f300 8232 	bgt.w	40320e <_svfprintf_r+0xe26>
  402daa:	f108 0808 	add.w	r8, r8, #8
  402dae:	e4ac      	b.n	40270a <_svfprintf_r+0x322>
  402db0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402db2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402db4:	2b01      	cmp	r3, #1
  402db6:	f340 81fe 	ble.w	4031b6 <_svfprintf_r+0xdce>
  402dba:	3701      	adds	r7, #1
  402dbc:	3401      	adds	r4, #1
  402dbe:	2301      	movs	r3, #1
  402dc0:	2f07      	cmp	r7, #7
  402dc2:	9427      	str	r4, [sp, #156]	; 0x9c
  402dc4:	9726      	str	r7, [sp, #152]	; 0x98
  402dc6:	f8c8 6000 	str.w	r6, [r8]
  402dca:	f8c8 3004 	str.w	r3, [r8, #4]
  402dce:	f300 8203 	bgt.w	4031d8 <_svfprintf_r+0xdf0>
  402dd2:	f108 0808 	add.w	r8, r8, #8
  402dd6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402dd8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402dda:	f8c8 3000 	str.w	r3, [r8]
  402dde:	3701      	adds	r7, #1
  402de0:	4414      	add	r4, r2
  402de2:	2f07      	cmp	r7, #7
  402de4:	9427      	str	r4, [sp, #156]	; 0x9c
  402de6:	9726      	str	r7, [sp, #152]	; 0x98
  402de8:	f8c8 2004 	str.w	r2, [r8, #4]
  402dec:	f300 8200 	bgt.w	4031f0 <_svfprintf_r+0xe08>
  402df0:	f108 0808 	add.w	r8, r8, #8
  402df4:	a815      	add	r0, sp, #84	; 0x54
  402df6:	c80d      	ldmia	r0, {r0, r2, r3}
  402df8:	9914      	ldr	r1, [sp, #80]	; 0x50
  402dfa:	f003 f919 	bl	406030 <__aeabi_dcmpeq>
  402dfe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e00:	2800      	cmp	r0, #0
  402e02:	f040 8101 	bne.w	403008 <_svfprintf_r+0xc20>
  402e06:	3b01      	subs	r3, #1
  402e08:	3701      	adds	r7, #1
  402e0a:	3601      	adds	r6, #1
  402e0c:	441c      	add	r4, r3
  402e0e:	2f07      	cmp	r7, #7
  402e10:	9726      	str	r7, [sp, #152]	; 0x98
  402e12:	9427      	str	r4, [sp, #156]	; 0x9c
  402e14:	f8c8 6000 	str.w	r6, [r8]
  402e18:	f8c8 3004 	str.w	r3, [r8, #4]
  402e1c:	f300 8127 	bgt.w	40306e <_svfprintf_r+0xc86>
  402e20:	f108 0808 	add.w	r8, r8, #8
  402e24:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402e26:	f8c8 2004 	str.w	r2, [r8, #4]
  402e2a:	3701      	adds	r7, #1
  402e2c:	4414      	add	r4, r2
  402e2e:	ab21      	add	r3, sp, #132	; 0x84
  402e30:	2f07      	cmp	r7, #7
  402e32:	9427      	str	r4, [sp, #156]	; 0x9c
  402e34:	9726      	str	r7, [sp, #152]	; 0x98
  402e36:	f8c8 3000 	str.w	r3, [r8]
  402e3a:	f77f acb3 	ble.w	4027a4 <_svfprintf_r+0x3bc>
  402e3e:	aa25      	add	r2, sp, #148	; 0x94
  402e40:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e42:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e44:	f002 fc2a 	bl	40569c <__ssprint_r>
  402e48:	2800      	cmp	r0, #0
  402e4a:	f47f ab9f 	bne.w	40258c <_svfprintf_r+0x1a4>
  402e4e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e50:	46c8      	mov	r8, r9
  402e52:	e4a9      	b.n	4027a8 <_svfprintf_r+0x3c0>
  402e54:	aa25      	add	r2, sp, #148	; 0x94
  402e56:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e58:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e5a:	f002 fc1f 	bl	40569c <__ssprint_r>
  402e5e:	2800      	cmp	r0, #0
  402e60:	f43f aceb 	beq.w	40283a <_svfprintf_r+0x452>
  402e64:	f7ff bb92 	b.w	40258c <_svfprintf_r+0x1a4>
  402e68:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402e6c:	2b01      	cmp	r3, #1
  402e6e:	f000 8134 	beq.w	4030da <_svfprintf_r+0xcf2>
  402e72:	2b02      	cmp	r3, #2
  402e74:	d125      	bne.n	402ec2 <_svfprintf_r+0xada>
  402e76:	f8cd b01c 	str.w	fp, [sp, #28]
  402e7a:	2400      	movs	r4, #0
  402e7c:	2500      	movs	r5, #0
  402e7e:	e61e      	b.n	402abe <_svfprintf_r+0x6d6>
  402e80:	aa25      	add	r2, sp, #148	; 0x94
  402e82:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e84:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e86:	f002 fc09 	bl	40569c <__ssprint_r>
  402e8a:	2800      	cmp	r0, #0
  402e8c:	f47f ab7e 	bne.w	40258c <_svfprintf_r+0x1a4>
  402e90:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e92:	46c8      	mov	r8, r9
  402e94:	e475      	b.n	402782 <_svfprintf_r+0x39a>
  402e96:	aa25      	add	r2, sp, #148	; 0x94
  402e98:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e9a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e9c:	f002 fbfe 	bl	40569c <__ssprint_r>
  402ea0:	2800      	cmp	r0, #0
  402ea2:	f47f ab73 	bne.w	40258c <_svfprintf_r+0x1a4>
  402ea6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ea8:	46c8      	mov	r8, r9
  402eaa:	e41b      	b.n	4026e4 <_svfprintf_r+0x2fc>
  402eac:	aa25      	add	r2, sp, #148	; 0x94
  402eae:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402eb0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402eb2:	f002 fbf3 	bl	40569c <__ssprint_r>
  402eb6:	2800      	cmp	r0, #0
  402eb8:	f47f ab68 	bne.w	40258c <_svfprintf_r+0x1a4>
  402ebc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ebe:	46c8      	mov	r8, r9
  402ec0:	e420      	b.n	402704 <_svfprintf_r+0x31c>
  402ec2:	f8cd b01c 	str.w	fp, [sp, #28]
  402ec6:	2400      	movs	r4, #0
  402ec8:	2500      	movs	r5, #0
  402eca:	4649      	mov	r1, r9
  402ecc:	e000      	b.n	402ed0 <_svfprintf_r+0xae8>
  402ece:	4631      	mov	r1, r6
  402ed0:	08e2      	lsrs	r2, r4, #3
  402ed2:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402ed6:	08e8      	lsrs	r0, r5, #3
  402ed8:	f004 0307 	and.w	r3, r4, #7
  402edc:	4605      	mov	r5, r0
  402ede:	4614      	mov	r4, r2
  402ee0:	3330      	adds	r3, #48	; 0x30
  402ee2:	ea54 0205 	orrs.w	r2, r4, r5
  402ee6:	f801 3c01 	strb.w	r3, [r1, #-1]
  402eea:	f101 36ff 	add.w	r6, r1, #4294967295
  402eee:	d1ee      	bne.n	402ece <_svfprintf_r+0xae6>
  402ef0:	9a07      	ldr	r2, [sp, #28]
  402ef2:	07d2      	lsls	r2, r2, #31
  402ef4:	f57f adf3 	bpl.w	402ade <_svfprintf_r+0x6f6>
  402ef8:	2b30      	cmp	r3, #48	; 0x30
  402efa:	f43f adf0 	beq.w	402ade <_svfprintf_r+0x6f6>
  402efe:	3902      	subs	r1, #2
  402f00:	2330      	movs	r3, #48	; 0x30
  402f02:	f806 3c01 	strb.w	r3, [r6, #-1]
  402f06:	eba9 0301 	sub.w	r3, r9, r1
  402f0a:	930e      	str	r3, [sp, #56]	; 0x38
  402f0c:	460e      	mov	r6, r1
  402f0e:	f7ff bb7b 	b.w	402608 <_svfprintf_r+0x220>
  402f12:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402f14:	2900      	cmp	r1, #0
  402f16:	f340 822e 	ble.w	403376 <_svfprintf_r+0xf8e>
  402f1a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f1c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402f1e:	4293      	cmp	r3, r2
  402f20:	bfa8      	it	ge
  402f22:	4613      	movge	r3, r2
  402f24:	2b00      	cmp	r3, #0
  402f26:	461f      	mov	r7, r3
  402f28:	dd0d      	ble.n	402f46 <_svfprintf_r+0xb5e>
  402f2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f2c:	f8c8 6000 	str.w	r6, [r8]
  402f30:	3301      	adds	r3, #1
  402f32:	443c      	add	r4, r7
  402f34:	2b07      	cmp	r3, #7
  402f36:	9427      	str	r4, [sp, #156]	; 0x9c
  402f38:	f8c8 7004 	str.w	r7, [r8, #4]
  402f3c:	9326      	str	r3, [sp, #152]	; 0x98
  402f3e:	f300 831f 	bgt.w	403580 <_svfprintf_r+0x1198>
  402f42:	f108 0808 	add.w	r8, r8, #8
  402f46:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f48:	2f00      	cmp	r7, #0
  402f4a:	bfa8      	it	ge
  402f4c:	1bdb      	subge	r3, r3, r7
  402f4e:	2b00      	cmp	r3, #0
  402f50:	461f      	mov	r7, r3
  402f52:	f340 80d6 	ble.w	403102 <_svfprintf_r+0xd1a>
  402f56:	2f10      	cmp	r7, #16
  402f58:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f5a:	4d31      	ldr	r5, [pc, #196]	; (403020 <_svfprintf_r+0xc38>)
  402f5c:	f340 81ed 	ble.w	40333a <_svfprintf_r+0xf52>
  402f60:	4642      	mov	r2, r8
  402f62:	4621      	mov	r1, r4
  402f64:	46b0      	mov	r8, r6
  402f66:	f04f 0b10 	mov.w	fp, #16
  402f6a:	462e      	mov	r6, r5
  402f6c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402f6e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402f70:	e004      	b.n	402f7c <_svfprintf_r+0xb94>
  402f72:	3208      	adds	r2, #8
  402f74:	3f10      	subs	r7, #16
  402f76:	2f10      	cmp	r7, #16
  402f78:	f340 81db 	ble.w	403332 <_svfprintf_r+0xf4a>
  402f7c:	3301      	adds	r3, #1
  402f7e:	3110      	adds	r1, #16
  402f80:	2b07      	cmp	r3, #7
  402f82:	9127      	str	r1, [sp, #156]	; 0x9c
  402f84:	9326      	str	r3, [sp, #152]	; 0x98
  402f86:	e882 0840 	stmia.w	r2, {r6, fp}
  402f8a:	ddf2      	ble.n	402f72 <_svfprintf_r+0xb8a>
  402f8c:	aa25      	add	r2, sp, #148	; 0x94
  402f8e:	4629      	mov	r1, r5
  402f90:	4620      	mov	r0, r4
  402f92:	f002 fb83 	bl	40569c <__ssprint_r>
  402f96:	2800      	cmp	r0, #0
  402f98:	f47f aaf8 	bne.w	40258c <_svfprintf_r+0x1a4>
  402f9c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402f9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fa0:	464a      	mov	r2, r9
  402fa2:	e7e7      	b.n	402f74 <_svfprintf_r+0xb8c>
  402fa4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402fa6:	930e      	str	r3, [sp, #56]	; 0x38
  402fa8:	464e      	mov	r6, r9
  402faa:	f7ff bb2d 	b.w	402608 <_svfprintf_r+0x220>
  402fae:	2d00      	cmp	r5, #0
  402fb0:	bf08      	it	eq
  402fb2:	2c0a      	cmpeq	r4, #10
  402fb4:	f0c0 808f 	bcc.w	4030d6 <_svfprintf_r+0xcee>
  402fb8:	464e      	mov	r6, r9
  402fba:	4620      	mov	r0, r4
  402fbc:	4629      	mov	r1, r5
  402fbe:	220a      	movs	r2, #10
  402fc0:	2300      	movs	r3, #0
  402fc2:	f003 f8a5 	bl	406110 <__aeabi_uldivmod>
  402fc6:	3230      	adds	r2, #48	; 0x30
  402fc8:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402fcc:	4620      	mov	r0, r4
  402fce:	4629      	mov	r1, r5
  402fd0:	2300      	movs	r3, #0
  402fd2:	220a      	movs	r2, #10
  402fd4:	f003 f89c 	bl	406110 <__aeabi_uldivmod>
  402fd8:	4604      	mov	r4, r0
  402fda:	460d      	mov	r5, r1
  402fdc:	ea54 0305 	orrs.w	r3, r4, r5
  402fe0:	d1eb      	bne.n	402fba <_svfprintf_r+0xbd2>
  402fe2:	eba9 0306 	sub.w	r3, r9, r6
  402fe6:	930e      	str	r3, [sp, #56]	; 0x38
  402fe8:	f7ff bb0e 	b.w	402608 <_svfprintf_r+0x220>
  402fec:	aa25      	add	r2, sp, #148	; 0x94
  402fee:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ff0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ff2:	f002 fb53 	bl	40569c <__ssprint_r>
  402ff6:	2800      	cmp	r0, #0
  402ff8:	f47f aac8 	bne.w	40258c <_svfprintf_r+0x1a4>
  402ffc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403000:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403002:	46c8      	mov	r8, r9
  403004:	f7ff bb5e 	b.w	4026c4 <_svfprintf_r+0x2dc>
  403008:	1e5e      	subs	r6, r3, #1
  40300a:	2e00      	cmp	r6, #0
  40300c:	f77f af0a 	ble.w	402e24 <_svfprintf_r+0xa3c>
  403010:	2e10      	cmp	r6, #16
  403012:	4d03      	ldr	r5, [pc, #12]	; (403020 <_svfprintf_r+0xc38>)
  403014:	dd22      	ble.n	40305c <_svfprintf_r+0xc74>
  403016:	4622      	mov	r2, r4
  403018:	f04f 0b10 	mov.w	fp, #16
  40301c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40301e:	e006      	b.n	40302e <_svfprintf_r+0xc46>
  403020:	00406edc 	.word	0x00406edc
  403024:	3e10      	subs	r6, #16
  403026:	2e10      	cmp	r6, #16
  403028:	f108 0808 	add.w	r8, r8, #8
  40302c:	dd15      	ble.n	40305a <_svfprintf_r+0xc72>
  40302e:	3701      	adds	r7, #1
  403030:	3210      	adds	r2, #16
  403032:	2f07      	cmp	r7, #7
  403034:	9227      	str	r2, [sp, #156]	; 0x9c
  403036:	9726      	str	r7, [sp, #152]	; 0x98
  403038:	e888 0820 	stmia.w	r8, {r5, fp}
  40303c:	ddf2      	ble.n	403024 <_svfprintf_r+0xc3c>
  40303e:	aa25      	add	r2, sp, #148	; 0x94
  403040:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403042:	4620      	mov	r0, r4
  403044:	f002 fb2a 	bl	40569c <__ssprint_r>
  403048:	2800      	cmp	r0, #0
  40304a:	f47f aa9f 	bne.w	40258c <_svfprintf_r+0x1a4>
  40304e:	3e10      	subs	r6, #16
  403050:	2e10      	cmp	r6, #16
  403052:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403054:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403056:	46c8      	mov	r8, r9
  403058:	dce9      	bgt.n	40302e <_svfprintf_r+0xc46>
  40305a:	4614      	mov	r4, r2
  40305c:	3701      	adds	r7, #1
  40305e:	4434      	add	r4, r6
  403060:	2f07      	cmp	r7, #7
  403062:	9427      	str	r4, [sp, #156]	; 0x9c
  403064:	9726      	str	r7, [sp, #152]	; 0x98
  403066:	e888 0060 	stmia.w	r8, {r5, r6}
  40306a:	f77f aed9 	ble.w	402e20 <_svfprintf_r+0xa38>
  40306e:	aa25      	add	r2, sp, #148	; 0x94
  403070:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403072:	980c      	ldr	r0, [sp, #48]	; 0x30
  403074:	f002 fb12 	bl	40569c <__ssprint_r>
  403078:	2800      	cmp	r0, #0
  40307a:	f47f aa87 	bne.w	40258c <_svfprintf_r+0x1a4>
  40307e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403080:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403082:	46c8      	mov	r8, r9
  403084:	e6ce      	b.n	402e24 <_svfprintf_r+0xa3c>
  403086:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403088:	6814      	ldr	r4, [r2, #0]
  40308a:	4613      	mov	r3, r2
  40308c:	3304      	adds	r3, #4
  40308e:	17e5      	asrs	r5, r4, #31
  403090:	930f      	str	r3, [sp, #60]	; 0x3c
  403092:	4622      	mov	r2, r4
  403094:	462b      	mov	r3, r5
  403096:	e4fa      	b.n	402a8e <_svfprintf_r+0x6a6>
  403098:	3204      	adds	r2, #4
  40309a:	681c      	ldr	r4, [r3, #0]
  40309c:	920f      	str	r2, [sp, #60]	; 0x3c
  40309e:	2301      	movs	r3, #1
  4030a0:	2500      	movs	r5, #0
  4030a2:	f7ff ba94 	b.w	4025ce <_svfprintf_r+0x1e6>
  4030a6:	681c      	ldr	r4, [r3, #0]
  4030a8:	3304      	adds	r3, #4
  4030aa:	930f      	str	r3, [sp, #60]	; 0x3c
  4030ac:	2500      	movs	r5, #0
  4030ae:	e421      	b.n	4028f4 <_svfprintf_r+0x50c>
  4030b0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4030b2:	460a      	mov	r2, r1
  4030b4:	3204      	adds	r2, #4
  4030b6:	680c      	ldr	r4, [r1, #0]
  4030b8:	920f      	str	r2, [sp, #60]	; 0x3c
  4030ba:	2500      	movs	r5, #0
  4030bc:	f7ff ba87 	b.w	4025ce <_svfprintf_r+0x1e6>
  4030c0:	4614      	mov	r4, r2
  4030c2:	3301      	adds	r3, #1
  4030c4:	4434      	add	r4, r6
  4030c6:	2b07      	cmp	r3, #7
  4030c8:	9427      	str	r4, [sp, #156]	; 0x9c
  4030ca:	9326      	str	r3, [sp, #152]	; 0x98
  4030cc:	e888 0060 	stmia.w	r8, {r5, r6}
  4030d0:	f77f ab68 	ble.w	4027a4 <_svfprintf_r+0x3bc>
  4030d4:	e6b3      	b.n	402e3e <_svfprintf_r+0xa56>
  4030d6:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4030da:	f8cd b01c 	str.w	fp, [sp, #28]
  4030de:	ae42      	add	r6, sp, #264	; 0x108
  4030e0:	3430      	adds	r4, #48	; 0x30
  4030e2:	2301      	movs	r3, #1
  4030e4:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4030e8:	930e      	str	r3, [sp, #56]	; 0x38
  4030ea:	f7ff ba8d 	b.w	402608 <_svfprintf_r+0x220>
  4030ee:	aa25      	add	r2, sp, #148	; 0x94
  4030f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030f2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030f4:	f002 fad2 	bl	40569c <__ssprint_r>
  4030f8:	2800      	cmp	r0, #0
  4030fa:	f47f aa47 	bne.w	40258c <_svfprintf_r+0x1a4>
  4030fe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403100:	46c8      	mov	r8, r9
  403102:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403104:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403106:	429a      	cmp	r2, r3
  403108:	db44      	blt.n	403194 <_svfprintf_r+0xdac>
  40310a:	9b07      	ldr	r3, [sp, #28]
  40310c:	07d9      	lsls	r1, r3, #31
  40310e:	d441      	bmi.n	403194 <_svfprintf_r+0xdac>
  403110:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403112:	9812      	ldr	r0, [sp, #72]	; 0x48
  403114:	1a9a      	subs	r2, r3, r2
  403116:	1a1d      	subs	r5, r3, r0
  403118:	4295      	cmp	r5, r2
  40311a:	bfa8      	it	ge
  40311c:	4615      	movge	r5, r2
  40311e:	2d00      	cmp	r5, #0
  403120:	dd0e      	ble.n	403140 <_svfprintf_r+0xd58>
  403122:	9926      	ldr	r1, [sp, #152]	; 0x98
  403124:	f8c8 5004 	str.w	r5, [r8, #4]
  403128:	3101      	adds	r1, #1
  40312a:	4406      	add	r6, r0
  40312c:	442c      	add	r4, r5
  40312e:	2907      	cmp	r1, #7
  403130:	f8c8 6000 	str.w	r6, [r8]
  403134:	9427      	str	r4, [sp, #156]	; 0x9c
  403136:	9126      	str	r1, [sp, #152]	; 0x98
  403138:	f300 823b 	bgt.w	4035b2 <_svfprintf_r+0x11ca>
  40313c:	f108 0808 	add.w	r8, r8, #8
  403140:	2d00      	cmp	r5, #0
  403142:	bfac      	ite	ge
  403144:	1b56      	subge	r6, r2, r5
  403146:	4616      	movlt	r6, r2
  403148:	2e00      	cmp	r6, #0
  40314a:	f77f ab2d 	ble.w	4027a8 <_svfprintf_r+0x3c0>
  40314e:	2e10      	cmp	r6, #16
  403150:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403152:	4db0      	ldr	r5, [pc, #704]	; (403414 <_svfprintf_r+0x102c>)
  403154:	ddb5      	ble.n	4030c2 <_svfprintf_r+0xcda>
  403156:	4622      	mov	r2, r4
  403158:	2710      	movs	r7, #16
  40315a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40315e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  403160:	e004      	b.n	40316c <_svfprintf_r+0xd84>
  403162:	f108 0808 	add.w	r8, r8, #8
  403166:	3e10      	subs	r6, #16
  403168:	2e10      	cmp	r6, #16
  40316a:	dda9      	ble.n	4030c0 <_svfprintf_r+0xcd8>
  40316c:	3301      	adds	r3, #1
  40316e:	3210      	adds	r2, #16
  403170:	2b07      	cmp	r3, #7
  403172:	9227      	str	r2, [sp, #156]	; 0x9c
  403174:	9326      	str	r3, [sp, #152]	; 0x98
  403176:	e888 00a0 	stmia.w	r8, {r5, r7}
  40317a:	ddf2      	ble.n	403162 <_svfprintf_r+0xd7a>
  40317c:	aa25      	add	r2, sp, #148	; 0x94
  40317e:	4621      	mov	r1, r4
  403180:	4658      	mov	r0, fp
  403182:	f002 fa8b 	bl	40569c <__ssprint_r>
  403186:	2800      	cmp	r0, #0
  403188:	f47f aa00 	bne.w	40258c <_svfprintf_r+0x1a4>
  40318c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40318e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403190:	46c8      	mov	r8, r9
  403192:	e7e8      	b.n	403166 <_svfprintf_r+0xd7e>
  403194:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403196:	9819      	ldr	r0, [sp, #100]	; 0x64
  403198:	991a      	ldr	r1, [sp, #104]	; 0x68
  40319a:	f8c8 1000 	str.w	r1, [r8]
  40319e:	3301      	adds	r3, #1
  4031a0:	4404      	add	r4, r0
  4031a2:	2b07      	cmp	r3, #7
  4031a4:	9427      	str	r4, [sp, #156]	; 0x9c
  4031a6:	f8c8 0004 	str.w	r0, [r8, #4]
  4031aa:	9326      	str	r3, [sp, #152]	; 0x98
  4031ac:	f300 81f5 	bgt.w	40359a <_svfprintf_r+0x11b2>
  4031b0:	f108 0808 	add.w	r8, r8, #8
  4031b4:	e7ac      	b.n	403110 <_svfprintf_r+0xd28>
  4031b6:	9b07      	ldr	r3, [sp, #28]
  4031b8:	07da      	lsls	r2, r3, #31
  4031ba:	f53f adfe 	bmi.w	402dba <_svfprintf_r+0x9d2>
  4031be:	3701      	adds	r7, #1
  4031c0:	3401      	adds	r4, #1
  4031c2:	2301      	movs	r3, #1
  4031c4:	2f07      	cmp	r7, #7
  4031c6:	9427      	str	r4, [sp, #156]	; 0x9c
  4031c8:	9726      	str	r7, [sp, #152]	; 0x98
  4031ca:	f8c8 6000 	str.w	r6, [r8]
  4031ce:	f8c8 3004 	str.w	r3, [r8, #4]
  4031d2:	f77f ae25 	ble.w	402e20 <_svfprintf_r+0xa38>
  4031d6:	e74a      	b.n	40306e <_svfprintf_r+0xc86>
  4031d8:	aa25      	add	r2, sp, #148	; 0x94
  4031da:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031dc:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031de:	f002 fa5d 	bl	40569c <__ssprint_r>
  4031e2:	2800      	cmp	r0, #0
  4031e4:	f47f a9d2 	bne.w	40258c <_svfprintf_r+0x1a4>
  4031e8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4031ea:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4031ec:	46c8      	mov	r8, r9
  4031ee:	e5f2      	b.n	402dd6 <_svfprintf_r+0x9ee>
  4031f0:	aa25      	add	r2, sp, #148	; 0x94
  4031f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031f4:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031f6:	f002 fa51 	bl	40569c <__ssprint_r>
  4031fa:	2800      	cmp	r0, #0
  4031fc:	f47f a9c6 	bne.w	40258c <_svfprintf_r+0x1a4>
  403200:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403202:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403204:	46c8      	mov	r8, r9
  403206:	e5f5      	b.n	402df4 <_svfprintf_r+0xa0c>
  403208:	464e      	mov	r6, r9
  40320a:	f7ff b9fd 	b.w	402608 <_svfprintf_r+0x220>
  40320e:	aa25      	add	r2, sp, #148	; 0x94
  403210:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403212:	980c      	ldr	r0, [sp, #48]	; 0x30
  403214:	f002 fa42 	bl	40569c <__ssprint_r>
  403218:	2800      	cmp	r0, #0
  40321a:	f47f a9b7 	bne.w	40258c <_svfprintf_r+0x1a4>
  40321e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403220:	46c8      	mov	r8, r9
  403222:	f7ff ba72 	b.w	40270a <_svfprintf_r+0x322>
  403226:	9c15      	ldr	r4, [sp, #84]	; 0x54
  403228:	4622      	mov	r2, r4
  40322a:	4620      	mov	r0, r4
  40322c:	9c14      	ldr	r4, [sp, #80]	; 0x50
  40322e:	4623      	mov	r3, r4
  403230:	4621      	mov	r1, r4
  403232:	f002 ff2f 	bl	406094 <__aeabi_dcmpun>
  403236:	2800      	cmp	r0, #0
  403238:	f040 8286 	bne.w	403748 <_svfprintf_r+0x1360>
  40323c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40323e:	3301      	adds	r3, #1
  403240:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403242:	f023 0320 	bic.w	r3, r3, #32
  403246:	930e      	str	r3, [sp, #56]	; 0x38
  403248:	f000 81e2 	beq.w	403610 <_svfprintf_r+0x1228>
  40324c:	2b47      	cmp	r3, #71	; 0x47
  40324e:	f000 811e 	beq.w	40348e <_svfprintf_r+0x10a6>
  403252:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  403256:	9307      	str	r3, [sp, #28]
  403258:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40325a:	1e1f      	subs	r7, r3, #0
  40325c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40325e:	9308      	str	r3, [sp, #32]
  403260:	bfbb      	ittet	lt
  403262:	463b      	movlt	r3, r7
  403264:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  403268:	2300      	movge	r3, #0
  40326a:	232d      	movlt	r3, #45	; 0x2d
  40326c:	9310      	str	r3, [sp, #64]	; 0x40
  40326e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403270:	2b66      	cmp	r3, #102	; 0x66
  403272:	f000 81bb 	beq.w	4035ec <_svfprintf_r+0x1204>
  403276:	2b46      	cmp	r3, #70	; 0x46
  403278:	f000 80df 	beq.w	40343a <_svfprintf_r+0x1052>
  40327c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40327e:	9a08      	ldr	r2, [sp, #32]
  403280:	2b45      	cmp	r3, #69	; 0x45
  403282:	bf0c      	ite	eq
  403284:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  403286:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  403288:	a823      	add	r0, sp, #140	; 0x8c
  40328a:	a920      	add	r1, sp, #128	; 0x80
  40328c:	bf08      	it	eq
  40328e:	1c5d      	addeq	r5, r3, #1
  403290:	9004      	str	r0, [sp, #16]
  403292:	9103      	str	r1, [sp, #12]
  403294:	a81f      	add	r0, sp, #124	; 0x7c
  403296:	2102      	movs	r1, #2
  403298:	463b      	mov	r3, r7
  40329a:	9002      	str	r0, [sp, #8]
  40329c:	9501      	str	r5, [sp, #4]
  40329e:	9100      	str	r1, [sp, #0]
  4032a0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032a2:	f000 fb75 	bl	403990 <_dtoa_r>
  4032a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032a8:	2b67      	cmp	r3, #103	; 0x67
  4032aa:	4606      	mov	r6, r0
  4032ac:	f040 81e0 	bne.w	403670 <_svfprintf_r+0x1288>
  4032b0:	f01b 0f01 	tst.w	fp, #1
  4032b4:	f000 8246 	beq.w	403744 <_svfprintf_r+0x135c>
  4032b8:	1974      	adds	r4, r6, r5
  4032ba:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4032bc:	9808      	ldr	r0, [sp, #32]
  4032be:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4032c0:	4639      	mov	r1, r7
  4032c2:	f002 feb5 	bl	406030 <__aeabi_dcmpeq>
  4032c6:	2800      	cmp	r0, #0
  4032c8:	f040 8165 	bne.w	403596 <_svfprintf_r+0x11ae>
  4032cc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032ce:	42a3      	cmp	r3, r4
  4032d0:	d206      	bcs.n	4032e0 <_svfprintf_r+0xef8>
  4032d2:	2130      	movs	r1, #48	; 0x30
  4032d4:	1c5a      	adds	r2, r3, #1
  4032d6:	9223      	str	r2, [sp, #140]	; 0x8c
  4032d8:	7019      	strb	r1, [r3, #0]
  4032da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4032dc:	429c      	cmp	r4, r3
  4032de:	d8f9      	bhi.n	4032d4 <_svfprintf_r+0xeec>
  4032e0:	1b9b      	subs	r3, r3, r6
  4032e2:	9313      	str	r3, [sp, #76]	; 0x4c
  4032e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4032e6:	2b47      	cmp	r3, #71	; 0x47
  4032e8:	f000 80e9 	beq.w	4034be <_svfprintf_r+0x10d6>
  4032ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032ee:	2b65      	cmp	r3, #101	; 0x65
  4032f0:	f340 81cd 	ble.w	40368e <_svfprintf_r+0x12a6>
  4032f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032f6:	2b66      	cmp	r3, #102	; 0x66
  4032f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4032fa:	9312      	str	r3, [sp, #72]	; 0x48
  4032fc:	f000 819e 	beq.w	40363c <_svfprintf_r+0x1254>
  403300:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403302:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403304:	4619      	mov	r1, r3
  403306:	4291      	cmp	r1, r2
  403308:	f300 818a 	bgt.w	403620 <_svfprintf_r+0x1238>
  40330c:	f01b 0f01 	tst.w	fp, #1
  403310:	f040 8213 	bne.w	40373a <_svfprintf_r+0x1352>
  403314:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  403318:	9308      	str	r3, [sp, #32]
  40331a:	2367      	movs	r3, #103	; 0x67
  40331c:	920e      	str	r2, [sp, #56]	; 0x38
  40331e:	9311      	str	r3, [sp, #68]	; 0x44
  403320:	9b10      	ldr	r3, [sp, #64]	; 0x40
  403322:	2b00      	cmp	r3, #0
  403324:	f040 80c4 	bne.w	4034b0 <_svfprintf_r+0x10c8>
  403328:	930a      	str	r3, [sp, #40]	; 0x28
  40332a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40332e:	f7ff b973 	b.w	402618 <_svfprintf_r+0x230>
  403332:	4635      	mov	r5, r6
  403334:	460c      	mov	r4, r1
  403336:	4646      	mov	r6, r8
  403338:	4690      	mov	r8, r2
  40333a:	3301      	adds	r3, #1
  40333c:	443c      	add	r4, r7
  40333e:	2b07      	cmp	r3, #7
  403340:	9427      	str	r4, [sp, #156]	; 0x9c
  403342:	9326      	str	r3, [sp, #152]	; 0x98
  403344:	e888 00a0 	stmia.w	r8, {r5, r7}
  403348:	f73f aed1 	bgt.w	4030ee <_svfprintf_r+0xd06>
  40334c:	f108 0808 	add.w	r8, r8, #8
  403350:	e6d7      	b.n	403102 <_svfprintf_r+0xd1a>
  403352:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403354:	6813      	ldr	r3, [r2, #0]
  403356:	3204      	adds	r2, #4
  403358:	920f      	str	r2, [sp, #60]	; 0x3c
  40335a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40335c:	601a      	str	r2, [r3, #0]
  40335e:	f7ff b86a 	b.w	402436 <_svfprintf_r+0x4e>
  403362:	aa25      	add	r2, sp, #148	; 0x94
  403364:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403366:	980c      	ldr	r0, [sp, #48]	; 0x30
  403368:	f002 f998 	bl	40569c <__ssprint_r>
  40336c:	2800      	cmp	r0, #0
  40336e:	f47f a90d 	bne.w	40258c <_svfprintf_r+0x1a4>
  403372:	46c8      	mov	r8, r9
  403374:	e48d      	b.n	402c92 <_svfprintf_r+0x8aa>
  403376:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403378:	4a27      	ldr	r2, [pc, #156]	; (403418 <_svfprintf_r+0x1030>)
  40337a:	f8c8 2000 	str.w	r2, [r8]
  40337e:	3301      	adds	r3, #1
  403380:	3401      	adds	r4, #1
  403382:	2201      	movs	r2, #1
  403384:	2b07      	cmp	r3, #7
  403386:	9427      	str	r4, [sp, #156]	; 0x9c
  403388:	9326      	str	r3, [sp, #152]	; 0x98
  40338a:	f8c8 2004 	str.w	r2, [r8, #4]
  40338e:	dc72      	bgt.n	403476 <_svfprintf_r+0x108e>
  403390:	f108 0808 	add.w	r8, r8, #8
  403394:	b929      	cbnz	r1, 4033a2 <_svfprintf_r+0xfba>
  403396:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403398:	b91b      	cbnz	r3, 4033a2 <_svfprintf_r+0xfba>
  40339a:	9b07      	ldr	r3, [sp, #28]
  40339c:	07d8      	lsls	r0, r3, #31
  40339e:	f57f aa03 	bpl.w	4027a8 <_svfprintf_r+0x3c0>
  4033a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4033a4:	9819      	ldr	r0, [sp, #100]	; 0x64
  4033a6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4033a8:	f8c8 2000 	str.w	r2, [r8]
  4033ac:	3301      	adds	r3, #1
  4033ae:	4602      	mov	r2, r0
  4033b0:	4422      	add	r2, r4
  4033b2:	2b07      	cmp	r3, #7
  4033b4:	9227      	str	r2, [sp, #156]	; 0x9c
  4033b6:	f8c8 0004 	str.w	r0, [r8, #4]
  4033ba:	9326      	str	r3, [sp, #152]	; 0x98
  4033bc:	f300 818d 	bgt.w	4036da <_svfprintf_r+0x12f2>
  4033c0:	f108 0808 	add.w	r8, r8, #8
  4033c4:	2900      	cmp	r1, #0
  4033c6:	f2c0 8165 	blt.w	403694 <_svfprintf_r+0x12ac>
  4033ca:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4033cc:	f8c8 6000 	str.w	r6, [r8]
  4033d0:	3301      	adds	r3, #1
  4033d2:	188c      	adds	r4, r1, r2
  4033d4:	2b07      	cmp	r3, #7
  4033d6:	9427      	str	r4, [sp, #156]	; 0x9c
  4033d8:	9326      	str	r3, [sp, #152]	; 0x98
  4033da:	f8c8 1004 	str.w	r1, [r8, #4]
  4033de:	f77f a9e1 	ble.w	4027a4 <_svfprintf_r+0x3bc>
  4033e2:	e52c      	b.n	402e3e <_svfprintf_r+0xa56>
  4033e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4033e6:	9909      	ldr	r1, [sp, #36]	; 0x24
  4033e8:	6813      	ldr	r3, [r2, #0]
  4033ea:	17cd      	asrs	r5, r1, #31
  4033ec:	4608      	mov	r0, r1
  4033ee:	3204      	adds	r2, #4
  4033f0:	4629      	mov	r1, r5
  4033f2:	920f      	str	r2, [sp, #60]	; 0x3c
  4033f4:	e9c3 0100 	strd	r0, r1, [r3]
  4033f8:	f7ff b81d 	b.w	402436 <_svfprintf_r+0x4e>
  4033fc:	aa25      	add	r2, sp, #148	; 0x94
  4033fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403400:	980c      	ldr	r0, [sp, #48]	; 0x30
  403402:	f002 f94b 	bl	40569c <__ssprint_r>
  403406:	2800      	cmp	r0, #0
  403408:	f47f a8c0 	bne.w	40258c <_svfprintf_r+0x1a4>
  40340c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40340e:	46c8      	mov	r8, r9
  403410:	e458      	b.n	402cc4 <_svfprintf_r+0x8dc>
  403412:	bf00      	nop
  403414:	00406edc 	.word	0x00406edc
  403418:	00406ec8 	.word	0x00406ec8
  40341c:	2140      	movs	r1, #64	; 0x40
  40341e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403420:	f001 fa0c 	bl	40483c <_malloc_r>
  403424:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403426:	6010      	str	r0, [r2, #0]
  403428:	6110      	str	r0, [r2, #16]
  40342a:	2800      	cmp	r0, #0
  40342c:	f000 81f2 	beq.w	403814 <_svfprintf_r+0x142c>
  403430:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403432:	2340      	movs	r3, #64	; 0x40
  403434:	6153      	str	r3, [r2, #20]
  403436:	f7fe bfee 	b.w	402416 <_svfprintf_r+0x2e>
  40343a:	a823      	add	r0, sp, #140	; 0x8c
  40343c:	a920      	add	r1, sp, #128	; 0x80
  40343e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403440:	9004      	str	r0, [sp, #16]
  403442:	9103      	str	r1, [sp, #12]
  403444:	a81f      	add	r0, sp, #124	; 0x7c
  403446:	2103      	movs	r1, #3
  403448:	9002      	str	r0, [sp, #8]
  40344a:	9a08      	ldr	r2, [sp, #32]
  40344c:	9401      	str	r4, [sp, #4]
  40344e:	463b      	mov	r3, r7
  403450:	9100      	str	r1, [sp, #0]
  403452:	980c      	ldr	r0, [sp, #48]	; 0x30
  403454:	f000 fa9c 	bl	403990 <_dtoa_r>
  403458:	4625      	mov	r5, r4
  40345a:	4606      	mov	r6, r0
  40345c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40345e:	2b46      	cmp	r3, #70	; 0x46
  403460:	eb06 0405 	add.w	r4, r6, r5
  403464:	f47f af29 	bne.w	4032ba <_svfprintf_r+0xed2>
  403468:	7833      	ldrb	r3, [r6, #0]
  40346a:	2b30      	cmp	r3, #48	; 0x30
  40346c:	f000 8178 	beq.w	403760 <_svfprintf_r+0x1378>
  403470:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403472:	442c      	add	r4, r5
  403474:	e721      	b.n	4032ba <_svfprintf_r+0xed2>
  403476:	aa25      	add	r2, sp, #148	; 0x94
  403478:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40347a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40347c:	f002 f90e 	bl	40569c <__ssprint_r>
  403480:	2800      	cmp	r0, #0
  403482:	f47f a883 	bne.w	40258c <_svfprintf_r+0x1a4>
  403486:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403488:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40348a:	46c8      	mov	r8, r9
  40348c:	e782      	b.n	403394 <_svfprintf_r+0xfac>
  40348e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403490:	2b00      	cmp	r3, #0
  403492:	bf08      	it	eq
  403494:	2301      	moveq	r3, #1
  403496:	930a      	str	r3, [sp, #40]	; 0x28
  403498:	e6db      	b.n	403252 <_svfprintf_r+0xe6a>
  40349a:	4630      	mov	r0, r6
  40349c:	940a      	str	r4, [sp, #40]	; 0x28
  40349e:	f002 f88f 	bl	4055c0 <strlen>
  4034a2:	950f      	str	r5, [sp, #60]	; 0x3c
  4034a4:	900e      	str	r0, [sp, #56]	; 0x38
  4034a6:	f8cd b01c 	str.w	fp, [sp, #28]
  4034aa:	4603      	mov	r3, r0
  4034ac:	f7ff b9f9 	b.w	4028a2 <_svfprintf_r+0x4ba>
  4034b0:	272d      	movs	r7, #45	; 0x2d
  4034b2:	2300      	movs	r3, #0
  4034b4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4034b8:	930a      	str	r3, [sp, #40]	; 0x28
  4034ba:	f7ff b8ae 	b.w	40261a <_svfprintf_r+0x232>
  4034be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4034c0:	9312      	str	r3, [sp, #72]	; 0x48
  4034c2:	461a      	mov	r2, r3
  4034c4:	3303      	adds	r3, #3
  4034c6:	db04      	blt.n	4034d2 <_svfprintf_r+0x10ea>
  4034c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034ca:	4619      	mov	r1, r3
  4034cc:	4291      	cmp	r1, r2
  4034ce:	f6bf af17 	bge.w	403300 <_svfprintf_r+0xf18>
  4034d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4034d4:	3b02      	subs	r3, #2
  4034d6:	9311      	str	r3, [sp, #68]	; 0x44
  4034d8:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  4034dc:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  4034e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4034e2:	3b01      	subs	r3, #1
  4034e4:	2b00      	cmp	r3, #0
  4034e6:	931f      	str	r3, [sp, #124]	; 0x7c
  4034e8:	bfbd      	ittte	lt
  4034ea:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  4034ec:	f1c3 0301 	rsblt	r3, r3, #1
  4034f0:	222d      	movlt	r2, #45	; 0x2d
  4034f2:	222b      	movge	r2, #43	; 0x2b
  4034f4:	2b09      	cmp	r3, #9
  4034f6:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  4034fa:	f340 8116 	ble.w	40372a <_svfprintf_r+0x1342>
  4034fe:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403502:	4620      	mov	r0, r4
  403504:	4dab      	ldr	r5, [pc, #684]	; (4037b4 <_svfprintf_r+0x13cc>)
  403506:	e000      	b.n	40350a <_svfprintf_r+0x1122>
  403508:	4610      	mov	r0, r2
  40350a:	fb85 1203 	smull	r1, r2, r5, r3
  40350e:	17d9      	asrs	r1, r3, #31
  403510:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  403514:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  403518:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  40351c:	3230      	adds	r2, #48	; 0x30
  40351e:	2909      	cmp	r1, #9
  403520:	f800 2c01 	strb.w	r2, [r0, #-1]
  403524:	460b      	mov	r3, r1
  403526:	f100 32ff 	add.w	r2, r0, #4294967295
  40352a:	dced      	bgt.n	403508 <_svfprintf_r+0x1120>
  40352c:	3330      	adds	r3, #48	; 0x30
  40352e:	3802      	subs	r0, #2
  403530:	b2d9      	uxtb	r1, r3
  403532:	4284      	cmp	r4, r0
  403534:	f802 1c01 	strb.w	r1, [r2, #-1]
  403538:	f240 8165 	bls.w	403806 <_svfprintf_r+0x141e>
  40353c:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  403540:	4613      	mov	r3, r2
  403542:	e001      	b.n	403548 <_svfprintf_r+0x1160>
  403544:	f813 1b01 	ldrb.w	r1, [r3], #1
  403548:	f800 1b01 	strb.w	r1, [r0], #1
  40354c:	42a3      	cmp	r3, r4
  40354e:	d1f9      	bne.n	403544 <_svfprintf_r+0x115c>
  403550:	3301      	adds	r3, #1
  403552:	1a9b      	subs	r3, r3, r2
  403554:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  403558:	4413      	add	r3, r2
  40355a:	aa21      	add	r2, sp, #132	; 0x84
  40355c:	1a9b      	subs	r3, r3, r2
  40355e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  403560:	931b      	str	r3, [sp, #108]	; 0x6c
  403562:	2a01      	cmp	r2, #1
  403564:	4413      	add	r3, r2
  403566:	930e      	str	r3, [sp, #56]	; 0x38
  403568:	f340 8119 	ble.w	40379e <_svfprintf_r+0x13b6>
  40356c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40356e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403570:	4413      	add	r3, r2
  403572:	930e      	str	r3, [sp, #56]	; 0x38
  403574:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403578:	9308      	str	r3, [sp, #32]
  40357a:	2300      	movs	r3, #0
  40357c:	9312      	str	r3, [sp, #72]	; 0x48
  40357e:	e6cf      	b.n	403320 <_svfprintf_r+0xf38>
  403580:	aa25      	add	r2, sp, #148	; 0x94
  403582:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403584:	980c      	ldr	r0, [sp, #48]	; 0x30
  403586:	f002 f889 	bl	40569c <__ssprint_r>
  40358a:	2800      	cmp	r0, #0
  40358c:	f47e affe 	bne.w	40258c <_svfprintf_r+0x1a4>
  403590:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403592:	46c8      	mov	r8, r9
  403594:	e4d7      	b.n	402f46 <_svfprintf_r+0xb5e>
  403596:	4623      	mov	r3, r4
  403598:	e6a2      	b.n	4032e0 <_svfprintf_r+0xef8>
  40359a:	aa25      	add	r2, sp, #148	; 0x94
  40359c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40359e:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035a0:	f002 f87c 	bl	40569c <__ssprint_r>
  4035a4:	2800      	cmp	r0, #0
  4035a6:	f47e aff1 	bne.w	40258c <_svfprintf_r+0x1a4>
  4035aa:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4035ac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035ae:	46c8      	mov	r8, r9
  4035b0:	e5ae      	b.n	403110 <_svfprintf_r+0xd28>
  4035b2:	aa25      	add	r2, sp, #148	; 0x94
  4035b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035b6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035b8:	f002 f870 	bl	40569c <__ssprint_r>
  4035bc:	2800      	cmp	r0, #0
  4035be:	f47e afe5 	bne.w	40258c <_svfprintf_r+0x1a4>
  4035c2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  4035c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4035c6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4035c8:	1a9a      	subs	r2, r3, r2
  4035ca:	46c8      	mov	r8, r9
  4035cc:	e5b8      	b.n	403140 <_svfprintf_r+0xd58>
  4035ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4035d0:	9612      	str	r6, [sp, #72]	; 0x48
  4035d2:	2b06      	cmp	r3, #6
  4035d4:	bf28      	it	cs
  4035d6:	2306      	movcs	r3, #6
  4035d8:	960a      	str	r6, [sp, #40]	; 0x28
  4035da:	4637      	mov	r7, r6
  4035dc:	9308      	str	r3, [sp, #32]
  4035de:	950f      	str	r5, [sp, #60]	; 0x3c
  4035e0:	f8cd b01c 	str.w	fp, [sp, #28]
  4035e4:	930e      	str	r3, [sp, #56]	; 0x38
  4035e6:	4e74      	ldr	r6, [pc, #464]	; (4037b8 <_svfprintf_r+0x13d0>)
  4035e8:	f7ff b816 	b.w	402618 <_svfprintf_r+0x230>
  4035ec:	a823      	add	r0, sp, #140	; 0x8c
  4035ee:	a920      	add	r1, sp, #128	; 0x80
  4035f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4035f2:	9004      	str	r0, [sp, #16]
  4035f4:	9103      	str	r1, [sp, #12]
  4035f6:	a81f      	add	r0, sp, #124	; 0x7c
  4035f8:	2103      	movs	r1, #3
  4035fa:	9002      	str	r0, [sp, #8]
  4035fc:	9a08      	ldr	r2, [sp, #32]
  4035fe:	9501      	str	r5, [sp, #4]
  403600:	463b      	mov	r3, r7
  403602:	9100      	str	r1, [sp, #0]
  403604:	980c      	ldr	r0, [sp, #48]	; 0x30
  403606:	f000 f9c3 	bl	403990 <_dtoa_r>
  40360a:	4606      	mov	r6, r0
  40360c:	1944      	adds	r4, r0, r5
  40360e:	e72b      	b.n	403468 <_svfprintf_r+0x1080>
  403610:	2306      	movs	r3, #6
  403612:	930a      	str	r3, [sp, #40]	; 0x28
  403614:	e61d      	b.n	403252 <_svfprintf_r+0xe6a>
  403616:	272d      	movs	r7, #45	; 0x2d
  403618:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40361c:	f7ff bacd 	b.w	402bba <_svfprintf_r+0x7d2>
  403620:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403622:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403624:	4413      	add	r3, r2
  403626:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403628:	930e      	str	r3, [sp, #56]	; 0x38
  40362a:	2a00      	cmp	r2, #0
  40362c:	f340 80b0 	ble.w	403790 <_svfprintf_r+0x13a8>
  403630:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403634:	9308      	str	r3, [sp, #32]
  403636:	2367      	movs	r3, #103	; 0x67
  403638:	9311      	str	r3, [sp, #68]	; 0x44
  40363a:	e671      	b.n	403320 <_svfprintf_r+0xf38>
  40363c:	2b00      	cmp	r3, #0
  40363e:	f340 80c3 	ble.w	4037c8 <_svfprintf_r+0x13e0>
  403642:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403644:	2a00      	cmp	r2, #0
  403646:	f040 8099 	bne.w	40377c <_svfprintf_r+0x1394>
  40364a:	f01b 0f01 	tst.w	fp, #1
  40364e:	f040 8095 	bne.w	40377c <_svfprintf_r+0x1394>
  403652:	9308      	str	r3, [sp, #32]
  403654:	930e      	str	r3, [sp, #56]	; 0x38
  403656:	e663      	b.n	403320 <_svfprintf_r+0xf38>
  403658:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40365a:	9308      	str	r3, [sp, #32]
  40365c:	930e      	str	r3, [sp, #56]	; 0x38
  40365e:	900a      	str	r0, [sp, #40]	; 0x28
  403660:	950f      	str	r5, [sp, #60]	; 0x3c
  403662:	f8cd b01c 	str.w	fp, [sp, #28]
  403666:	9012      	str	r0, [sp, #72]	; 0x48
  403668:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40366c:	f7fe bfd4 	b.w	402618 <_svfprintf_r+0x230>
  403670:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403672:	2b47      	cmp	r3, #71	; 0x47
  403674:	f47f ae20 	bne.w	4032b8 <_svfprintf_r+0xed0>
  403678:	f01b 0f01 	tst.w	fp, #1
  40367c:	f47f aeee 	bne.w	40345c <_svfprintf_r+0x1074>
  403680:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403682:	1b9b      	subs	r3, r3, r6
  403684:	9313      	str	r3, [sp, #76]	; 0x4c
  403686:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403688:	2b47      	cmp	r3, #71	; 0x47
  40368a:	f43f af18 	beq.w	4034be <_svfprintf_r+0x10d6>
  40368e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403690:	9312      	str	r3, [sp, #72]	; 0x48
  403692:	e721      	b.n	4034d8 <_svfprintf_r+0x10f0>
  403694:	424f      	negs	r7, r1
  403696:	3110      	adds	r1, #16
  403698:	4d48      	ldr	r5, [pc, #288]	; (4037bc <_svfprintf_r+0x13d4>)
  40369a:	da2f      	bge.n	4036fc <_svfprintf_r+0x1314>
  40369c:	2410      	movs	r4, #16
  40369e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4036a2:	e004      	b.n	4036ae <_svfprintf_r+0x12c6>
  4036a4:	f108 0808 	add.w	r8, r8, #8
  4036a8:	3f10      	subs	r7, #16
  4036aa:	2f10      	cmp	r7, #16
  4036ac:	dd26      	ble.n	4036fc <_svfprintf_r+0x1314>
  4036ae:	3301      	adds	r3, #1
  4036b0:	3210      	adds	r2, #16
  4036b2:	2b07      	cmp	r3, #7
  4036b4:	9227      	str	r2, [sp, #156]	; 0x9c
  4036b6:	9326      	str	r3, [sp, #152]	; 0x98
  4036b8:	f8c8 5000 	str.w	r5, [r8]
  4036bc:	f8c8 4004 	str.w	r4, [r8, #4]
  4036c0:	ddf0      	ble.n	4036a4 <_svfprintf_r+0x12bc>
  4036c2:	aa25      	add	r2, sp, #148	; 0x94
  4036c4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036c6:	4658      	mov	r0, fp
  4036c8:	f001 ffe8 	bl	40569c <__ssprint_r>
  4036cc:	2800      	cmp	r0, #0
  4036ce:	f47e af5d 	bne.w	40258c <_svfprintf_r+0x1a4>
  4036d2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036d6:	46c8      	mov	r8, r9
  4036d8:	e7e6      	b.n	4036a8 <_svfprintf_r+0x12c0>
  4036da:	aa25      	add	r2, sp, #148	; 0x94
  4036dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4036de:	980c      	ldr	r0, [sp, #48]	; 0x30
  4036e0:	f001 ffdc 	bl	40569c <__ssprint_r>
  4036e4:	2800      	cmp	r0, #0
  4036e6:	f47e af51 	bne.w	40258c <_svfprintf_r+0x1a4>
  4036ea:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4036ec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4036ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4036f0:	46c8      	mov	r8, r9
  4036f2:	e667      	b.n	4033c4 <_svfprintf_r+0xfdc>
  4036f4:	2000      	movs	r0, #0
  4036f6:	900a      	str	r0, [sp, #40]	; 0x28
  4036f8:	f7fe bed0 	b.w	40249c <_svfprintf_r+0xb4>
  4036fc:	3301      	adds	r3, #1
  4036fe:	443a      	add	r2, r7
  403700:	2b07      	cmp	r3, #7
  403702:	e888 00a0 	stmia.w	r8, {r5, r7}
  403706:	9227      	str	r2, [sp, #156]	; 0x9c
  403708:	9326      	str	r3, [sp, #152]	; 0x98
  40370a:	f108 0808 	add.w	r8, r8, #8
  40370e:	f77f ae5c 	ble.w	4033ca <_svfprintf_r+0xfe2>
  403712:	aa25      	add	r2, sp, #148	; 0x94
  403714:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403716:	980c      	ldr	r0, [sp, #48]	; 0x30
  403718:	f001 ffc0 	bl	40569c <__ssprint_r>
  40371c:	2800      	cmp	r0, #0
  40371e:	f47e af35 	bne.w	40258c <_svfprintf_r+0x1a4>
  403722:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403724:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403726:	46c8      	mov	r8, r9
  403728:	e64f      	b.n	4033ca <_svfprintf_r+0xfe2>
  40372a:	3330      	adds	r3, #48	; 0x30
  40372c:	2230      	movs	r2, #48	; 0x30
  40372e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  403732:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  403736:	ab22      	add	r3, sp, #136	; 0x88
  403738:	e70f      	b.n	40355a <_svfprintf_r+0x1172>
  40373a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40373c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  40373e:	4413      	add	r3, r2
  403740:	930e      	str	r3, [sp, #56]	; 0x38
  403742:	e775      	b.n	403630 <_svfprintf_r+0x1248>
  403744:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403746:	e5cb      	b.n	4032e0 <_svfprintf_r+0xef8>
  403748:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40374a:	4e1d      	ldr	r6, [pc, #116]	; (4037c0 <_svfprintf_r+0x13d8>)
  40374c:	2b00      	cmp	r3, #0
  40374e:	bfb6      	itet	lt
  403750:	272d      	movlt	r7, #45	; 0x2d
  403752:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  403756:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  40375a:	4b1a      	ldr	r3, [pc, #104]	; (4037c4 <_svfprintf_r+0x13dc>)
  40375c:	f7ff ba2f 	b.w	402bbe <_svfprintf_r+0x7d6>
  403760:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403762:	9808      	ldr	r0, [sp, #32]
  403764:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403766:	4639      	mov	r1, r7
  403768:	f002 fc62 	bl	406030 <__aeabi_dcmpeq>
  40376c:	2800      	cmp	r0, #0
  40376e:	f47f ae7f 	bne.w	403470 <_svfprintf_r+0x1088>
  403772:	f1c5 0501 	rsb	r5, r5, #1
  403776:	951f      	str	r5, [sp, #124]	; 0x7c
  403778:	442c      	add	r4, r5
  40377a:	e59e      	b.n	4032ba <_svfprintf_r+0xed2>
  40377c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40377e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403780:	4413      	add	r3, r2
  403782:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403784:	441a      	add	r2, r3
  403786:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40378a:	920e      	str	r2, [sp, #56]	; 0x38
  40378c:	9308      	str	r3, [sp, #32]
  40378e:	e5c7      	b.n	403320 <_svfprintf_r+0xf38>
  403790:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403792:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403794:	f1c3 0301 	rsb	r3, r3, #1
  403798:	441a      	add	r2, r3
  40379a:	4613      	mov	r3, r2
  40379c:	e7d0      	b.n	403740 <_svfprintf_r+0x1358>
  40379e:	f01b 0301 	ands.w	r3, fp, #1
  4037a2:	9312      	str	r3, [sp, #72]	; 0x48
  4037a4:	f47f aee2 	bne.w	40356c <_svfprintf_r+0x1184>
  4037a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4037aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4037ae:	9308      	str	r3, [sp, #32]
  4037b0:	e5b6      	b.n	403320 <_svfprintf_r+0xf38>
  4037b2:	bf00      	nop
  4037b4:	66666667 	.word	0x66666667
  4037b8:	00406ec0 	.word	0x00406ec0
  4037bc:	00406edc 	.word	0x00406edc
  4037c0:	00406e94 	.word	0x00406e94
  4037c4:	00406e90 	.word	0x00406e90
  4037c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4037ca:	b913      	cbnz	r3, 4037d2 <_svfprintf_r+0x13ea>
  4037cc:	f01b 0f01 	tst.w	fp, #1
  4037d0:	d002      	beq.n	4037d8 <_svfprintf_r+0x13f0>
  4037d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4037d4:	3301      	adds	r3, #1
  4037d6:	e7d4      	b.n	403782 <_svfprintf_r+0x139a>
  4037d8:	2301      	movs	r3, #1
  4037da:	e73a      	b.n	403652 <_svfprintf_r+0x126a>
  4037dc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4037de:	f89a 3001 	ldrb.w	r3, [sl, #1]
  4037e2:	6828      	ldr	r0, [r5, #0]
  4037e4:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  4037e8:	900a      	str	r0, [sp, #40]	; 0x28
  4037ea:	4628      	mov	r0, r5
  4037ec:	3004      	adds	r0, #4
  4037ee:	46a2      	mov	sl, r4
  4037f0:	900f      	str	r0, [sp, #60]	; 0x3c
  4037f2:	f7fe be51 	b.w	402498 <_svfprintf_r+0xb0>
  4037f6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4037fa:	f7ff b867 	b.w	4028cc <_svfprintf_r+0x4e4>
  4037fe:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403802:	f7ff ba15 	b.w	402c30 <_svfprintf_r+0x848>
  403806:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40380a:	e6a6      	b.n	40355a <_svfprintf_r+0x1172>
  40380c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403810:	f7ff b8eb 	b.w	4029ea <_svfprintf_r+0x602>
  403814:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403816:	230c      	movs	r3, #12
  403818:	6013      	str	r3, [r2, #0]
  40381a:	f04f 33ff 	mov.w	r3, #4294967295
  40381e:	9309      	str	r3, [sp, #36]	; 0x24
  403820:	f7fe bebd 	b.w	40259e <_svfprintf_r+0x1b6>
  403824:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403828:	f7ff b99a 	b.w	402b60 <_svfprintf_r+0x778>
  40382c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403830:	f7ff b976 	b.w	402b20 <_svfprintf_r+0x738>
  403834:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403838:	f7ff b959 	b.w	402aee <_svfprintf_r+0x706>
  40383c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403840:	f7ff b912 	b.w	402a68 <_svfprintf_r+0x680>

00403844 <register_fini>:
  403844:	4b02      	ldr	r3, [pc, #8]	; (403850 <register_fini+0xc>)
  403846:	b113      	cbz	r3, 40384e <register_fini+0xa>
  403848:	4802      	ldr	r0, [pc, #8]	; (403854 <register_fini+0x10>)
  40384a:	f000 b805 	b.w	403858 <atexit>
  40384e:	4770      	bx	lr
  403850:	00000000 	.word	0x00000000
  403854:	004047e5 	.word	0x004047e5

00403858 <atexit>:
  403858:	2300      	movs	r3, #0
  40385a:	4601      	mov	r1, r0
  40385c:	461a      	mov	r2, r3
  40385e:	4618      	mov	r0, r3
  403860:	f001 bf9a 	b.w	405798 <__register_exitproc>

00403864 <quorem>:
  403864:	6902      	ldr	r2, [r0, #16]
  403866:	690b      	ldr	r3, [r1, #16]
  403868:	4293      	cmp	r3, r2
  40386a:	f300 808d 	bgt.w	403988 <quorem+0x124>
  40386e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403872:	f103 38ff 	add.w	r8, r3, #4294967295
  403876:	f101 0714 	add.w	r7, r1, #20
  40387a:	f100 0b14 	add.w	fp, r0, #20
  40387e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403882:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  403886:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40388a:	b083      	sub	sp, #12
  40388c:	3201      	adds	r2, #1
  40388e:	fbb3 f9f2 	udiv	r9, r3, r2
  403892:	eb0b 0304 	add.w	r3, fp, r4
  403896:	9400      	str	r4, [sp, #0]
  403898:	eb07 0a04 	add.w	sl, r7, r4
  40389c:	9301      	str	r3, [sp, #4]
  40389e:	f1b9 0f00 	cmp.w	r9, #0
  4038a2:	d039      	beq.n	403918 <quorem+0xb4>
  4038a4:	2500      	movs	r5, #0
  4038a6:	462e      	mov	r6, r5
  4038a8:	46bc      	mov	ip, r7
  4038aa:	46de      	mov	lr, fp
  4038ac:	f85c 4b04 	ldr.w	r4, [ip], #4
  4038b0:	f8de 3000 	ldr.w	r3, [lr]
  4038b4:	b2a2      	uxth	r2, r4
  4038b6:	fb09 5502 	mla	r5, r9, r2, r5
  4038ba:	0c22      	lsrs	r2, r4, #16
  4038bc:	0c2c      	lsrs	r4, r5, #16
  4038be:	fb09 4202 	mla	r2, r9, r2, r4
  4038c2:	b2ad      	uxth	r5, r5
  4038c4:	1b75      	subs	r5, r6, r5
  4038c6:	b296      	uxth	r6, r2
  4038c8:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  4038cc:	fa15 f383 	uxtah	r3, r5, r3
  4038d0:	eb06 4623 	add.w	r6, r6, r3, asr #16
  4038d4:	b29b      	uxth	r3, r3
  4038d6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  4038da:	45e2      	cmp	sl, ip
  4038dc:	ea4f 4512 	mov.w	r5, r2, lsr #16
  4038e0:	f84e 3b04 	str.w	r3, [lr], #4
  4038e4:	ea4f 4626 	mov.w	r6, r6, asr #16
  4038e8:	d2e0      	bcs.n	4038ac <quorem+0x48>
  4038ea:	9b00      	ldr	r3, [sp, #0]
  4038ec:	f85b 3003 	ldr.w	r3, [fp, r3]
  4038f0:	b993      	cbnz	r3, 403918 <quorem+0xb4>
  4038f2:	9c01      	ldr	r4, [sp, #4]
  4038f4:	1f23      	subs	r3, r4, #4
  4038f6:	459b      	cmp	fp, r3
  4038f8:	d20c      	bcs.n	403914 <quorem+0xb0>
  4038fa:	f854 3c04 	ldr.w	r3, [r4, #-4]
  4038fe:	b94b      	cbnz	r3, 403914 <quorem+0xb0>
  403900:	f1a4 0308 	sub.w	r3, r4, #8
  403904:	e002      	b.n	40390c <quorem+0xa8>
  403906:	681a      	ldr	r2, [r3, #0]
  403908:	3b04      	subs	r3, #4
  40390a:	b91a      	cbnz	r2, 403914 <quorem+0xb0>
  40390c:	459b      	cmp	fp, r3
  40390e:	f108 38ff 	add.w	r8, r8, #4294967295
  403912:	d3f8      	bcc.n	403906 <quorem+0xa2>
  403914:	f8c0 8010 	str.w	r8, [r0, #16]
  403918:	4604      	mov	r4, r0
  40391a:	f001 fd35 	bl	405388 <__mcmp>
  40391e:	2800      	cmp	r0, #0
  403920:	db2e      	blt.n	403980 <quorem+0x11c>
  403922:	f109 0901 	add.w	r9, r9, #1
  403926:	465d      	mov	r5, fp
  403928:	2300      	movs	r3, #0
  40392a:	f857 1b04 	ldr.w	r1, [r7], #4
  40392e:	6828      	ldr	r0, [r5, #0]
  403930:	b28a      	uxth	r2, r1
  403932:	1a9a      	subs	r2, r3, r2
  403934:	0c0b      	lsrs	r3, r1, #16
  403936:	fa12 f280 	uxtah	r2, r2, r0
  40393a:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40393e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403942:	b292      	uxth	r2, r2
  403944:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403948:	45ba      	cmp	sl, r7
  40394a:	f845 2b04 	str.w	r2, [r5], #4
  40394e:	ea4f 4323 	mov.w	r3, r3, asr #16
  403952:	d2ea      	bcs.n	40392a <quorem+0xc6>
  403954:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403958:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  40395c:	b982      	cbnz	r2, 403980 <quorem+0x11c>
  40395e:	1f1a      	subs	r2, r3, #4
  403960:	4593      	cmp	fp, r2
  403962:	d20b      	bcs.n	40397c <quorem+0x118>
  403964:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403968:	b942      	cbnz	r2, 40397c <quorem+0x118>
  40396a:	3b08      	subs	r3, #8
  40396c:	e002      	b.n	403974 <quorem+0x110>
  40396e:	681a      	ldr	r2, [r3, #0]
  403970:	3b04      	subs	r3, #4
  403972:	b91a      	cbnz	r2, 40397c <quorem+0x118>
  403974:	459b      	cmp	fp, r3
  403976:	f108 38ff 	add.w	r8, r8, #4294967295
  40397a:	d3f8      	bcc.n	40396e <quorem+0x10a>
  40397c:	f8c4 8010 	str.w	r8, [r4, #16]
  403980:	4648      	mov	r0, r9
  403982:	b003      	add	sp, #12
  403984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403988:	2000      	movs	r0, #0
  40398a:	4770      	bx	lr
  40398c:	0000      	movs	r0, r0
	...

00403990 <_dtoa_r>:
  403990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403994:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403996:	b09b      	sub	sp, #108	; 0x6c
  403998:	4604      	mov	r4, r0
  40399a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40399c:	4692      	mov	sl, r2
  40399e:	469b      	mov	fp, r3
  4039a0:	b141      	cbz	r1, 4039b4 <_dtoa_r+0x24>
  4039a2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4039a4:	604a      	str	r2, [r1, #4]
  4039a6:	2301      	movs	r3, #1
  4039a8:	4093      	lsls	r3, r2
  4039aa:	608b      	str	r3, [r1, #8]
  4039ac:	f001 fb14 	bl	404fd8 <_Bfree>
  4039b0:	2300      	movs	r3, #0
  4039b2:	6423      	str	r3, [r4, #64]	; 0x40
  4039b4:	f1bb 0f00 	cmp.w	fp, #0
  4039b8:	465d      	mov	r5, fp
  4039ba:	db35      	blt.n	403a28 <_dtoa_r+0x98>
  4039bc:	2300      	movs	r3, #0
  4039be:	6033      	str	r3, [r6, #0]
  4039c0:	4b9d      	ldr	r3, [pc, #628]	; (403c38 <_dtoa_r+0x2a8>)
  4039c2:	43ab      	bics	r3, r5
  4039c4:	d015      	beq.n	4039f2 <_dtoa_r+0x62>
  4039c6:	4650      	mov	r0, sl
  4039c8:	4659      	mov	r1, fp
  4039ca:	2200      	movs	r2, #0
  4039cc:	2300      	movs	r3, #0
  4039ce:	f002 fb2f 	bl	406030 <__aeabi_dcmpeq>
  4039d2:	4680      	mov	r8, r0
  4039d4:	2800      	cmp	r0, #0
  4039d6:	d02d      	beq.n	403a34 <_dtoa_r+0xa4>
  4039d8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4039da:	2301      	movs	r3, #1
  4039dc:	6013      	str	r3, [r2, #0]
  4039de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4039e0:	2b00      	cmp	r3, #0
  4039e2:	f000 80bd 	beq.w	403b60 <_dtoa_r+0x1d0>
  4039e6:	4895      	ldr	r0, [pc, #596]	; (403c3c <_dtoa_r+0x2ac>)
  4039e8:	6018      	str	r0, [r3, #0]
  4039ea:	3801      	subs	r0, #1
  4039ec:	b01b      	add	sp, #108	; 0x6c
  4039ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4039f2:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4039f4:	f242 730f 	movw	r3, #9999	; 0x270f
  4039f8:	6013      	str	r3, [r2, #0]
  4039fa:	f1ba 0f00 	cmp.w	sl, #0
  4039fe:	d10d      	bne.n	403a1c <_dtoa_r+0x8c>
  403a00:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403a04:	b955      	cbnz	r5, 403a1c <_dtoa_r+0x8c>
  403a06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a08:	488d      	ldr	r0, [pc, #564]	; (403c40 <_dtoa_r+0x2b0>)
  403a0a:	2b00      	cmp	r3, #0
  403a0c:	d0ee      	beq.n	4039ec <_dtoa_r+0x5c>
  403a0e:	f100 0308 	add.w	r3, r0, #8
  403a12:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403a14:	6013      	str	r3, [r2, #0]
  403a16:	b01b      	add	sp, #108	; 0x6c
  403a18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403a1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403a1e:	4889      	ldr	r0, [pc, #548]	; (403c44 <_dtoa_r+0x2b4>)
  403a20:	2b00      	cmp	r3, #0
  403a22:	d0e3      	beq.n	4039ec <_dtoa_r+0x5c>
  403a24:	1cc3      	adds	r3, r0, #3
  403a26:	e7f4      	b.n	403a12 <_dtoa_r+0x82>
  403a28:	2301      	movs	r3, #1
  403a2a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403a2e:	6033      	str	r3, [r6, #0]
  403a30:	46ab      	mov	fp, r5
  403a32:	e7c5      	b.n	4039c0 <_dtoa_r+0x30>
  403a34:	aa18      	add	r2, sp, #96	; 0x60
  403a36:	ab19      	add	r3, sp, #100	; 0x64
  403a38:	9201      	str	r2, [sp, #4]
  403a3a:	9300      	str	r3, [sp, #0]
  403a3c:	4652      	mov	r2, sl
  403a3e:	465b      	mov	r3, fp
  403a40:	4620      	mov	r0, r4
  403a42:	f001 fd41 	bl	4054c8 <__d2b>
  403a46:	0d2b      	lsrs	r3, r5, #20
  403a48:	4681      	mov	r9, r0
  403a4a:	d071      	beq.n	403b30 <_dtoa_r+0x1a0>
  403a4c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403a50:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403a54:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403a56:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403a5a:	4650      	mov	r0, sl
  403a5c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403a60:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403a64:	2200      	movs	r2, #0
  403a66:	4b78      	ldr	r3, [pc, #480]	; (403c48 <_dtoa_r+0x2b8>)
  403a68:	f7fe f85c 	bl	401b24 <__aeabi_dsub>
  403a6c:	a36c      	add	r3, pc, #432	; (adr r3, 403c20 <_dtoa_r+0x290>)
  403a6e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a72:	f7fe fa0b 	bl	401e8c <__aeabi_dmul>
  403a76:	a36c      	add	r3, pc, #432	; (adr r3, 403c28 <_dtoa_r+0x298>)
  403a78:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a7c:	f7fe f854 	bl	401b28 <__adddf3>
  403a80:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403a84:	4630      	mov	r0, r6
  403a86:	f7fe f99b 	bl	401dc0 <__aeabi_i2d>
  403a8a:	a369      	add	r3, pc, #420	; (adr r3, 403c30 <_dtoa_r+0x2a0>)
  403a8c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a90:	f7fe f9fc 	bl	401e8c <__aeabi_dmul>
  403a94:	4602      	mov	r2, r0
  403a96:	460b      	mov	r3, r1
  403a98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  403a9c:	f7fe f844 	bl	401b28 <__adddf3>
  403aa0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403aa4:	f002 fb0c 	bl	4060c0 <__aeabi_d2iz>
  403aa8:	2200      	movs	r2, #0
  403aaa:	9002      	str	r0, [sp, #8]
  403aac:	2300      	movs	r3, #0
  403aae:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403ab2:	f002 fac7 	bl	406044 <__aeabi_dcmplt>
  403ab6:	2800      	cmp	r0, #0
  403ab8:	f040 8173 	bne.w	403da2 <_dtoa_r+0x412>
  403abc:	9d02      	ldr	r5, [sp, #8]
  403abe:	2d16      	cmp	r5, #22
  403ac0:	f200 815d 	bhi.w	403d7e <_dtoa_r+0x3ee>
  403ac4:	4b61      	ldr	r3, [pc, #388]	; (403c4c <_dtoa_r+0x2bc>)
  403ac6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403aca:	e9d3 0100 	ldrd	r0, r1, [r3]
  403ace:	4652      	mov	r2, sl
  403ad0:	465b      	mov	r3, fp
  403ad2:	f002 fad5 	bl	406080 <__aeabi_dcmpgt>
  403ad6:	2800      	cmp	r0, #0
  403ad8:	f000 81c5 	beq.w	403e66 <_dtoa_r+0x4d6>
  403adc:	1e6b      	subs	r3, r5, #1
  403ade:	9302      	str	r3, [sp, #8]
  403ae0:	2300      	movs	r3, #0
  403ae2:	930e      	str	r3, [sp, #56]	; 0x38
  403ae4:	1bbf      	subs	r7, r7, r6
  403ae6:	1e7b      	subs	r3, r7, #1
  403ae8:	9306      	str	r3, [sp, #24]
  403aea:	f100 8154 	bmi.w	403d96 <_dtoa_r+0x406>
  403aee:	2300      	movs	r3, #0
  403af0:	9308      	str	r3, [sp, #32]
  403af2:	9b02      	ldr	r3, [sp, #8]
  403af4:	2b00      	cmp	r3, #0
  403af6:	f2c0 8145 	blt.w	403d84 <_dtoa_r+0x3f4>
  403afa:	9a06      	ldr	r2, [sp, #24]
  403afc:	930d      	str	r3, [sp, #52]	; 0x34
  403afe:	4611      	mov	r1, r2
  403b00:	4419      	add	r1, r3
  403b02:	2300      	movs	r3, #0
  403b04:	9106      	str	r1, [sp, #24]
  403b06:	930c      	str	r3, [sp, #48]	; 0x30
  403b08:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b0a:	2b09      	cmp	r3, #9
  403b0c:	d82a      	bhi.n	403b64 <_dtoa_r+0x1d4>
  403b0e:	2b05      	cmp	r3, #5
  403b10:	f340 865b 	ble.w	4047ca <_dtoa_r+0xe3a>
  403b14:	3b04      	subs	r3, #4
  403b16:	9324      	str	r3, [sp, #144]	; 0x90
  403b18:	2500      	movs	r5, #0
  403b1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b1c:	3b02      	subs	r3, #2
  403b1e:	2b03      	cmp	r3, #3
  403b20:	f200 8642 	bhi.w	4047a8 <_dtoa_r+0xe18>
  403b24:	e8df f013 	tbh	[pc, r3, lsl #1]
  403b28:	02c903d4 	.word	0x02c903d4
  403b2c:	046103df 	.word	0x046103df
  403b30:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403b32:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403b34:	443e      	add	r6, r7
  403b36:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403b3a:	2b20      	cmp	r3, #32
  403b3c:	f340 818e 	ble.w	403e5c <_dtoa_r+0x4cc>
  403b40:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403b44:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403b48:	409d      	lsls	r5, r3
  403b4a:	fa2a f000 	lsr.w	r0, sl, r0
  403b4e:	4328      	orrs	r0, r5
  403b50:	f7fe f926 	bl	401da0 <__aeabi_ui2d>
  403b54:	2301      	movs	r3, #1
  403b56:	3e01      	subs	r6, #1
  403b58:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403b5c:	9314      	str	r3, [sp, #80]	; 0x50
  403b5e:	e781      	b.n	403a64 <_dtoa_r+0xd4>
  403b60:	483b      	ldr	r0, [pc, #236]	; (403c50 <_dtoa_r+0x2c0>)
  403b62:	e743      	b.n	4039ec <_dtoa_r+0x5c>
  403b64:	2100      	movs	r1, #0
  403b66:	6461      	str	r1, [r4, #68]	; 0x44
  403b68:	4620      	mov	r0, r4
  403b6a:	9125      	str	r1, [sp, #148]	; 0x94
  403b6c:	f001 fa0e 	bl	404f8c <_Balloc>
  403b70:	f04f 33ff 	mov.w	r3, #4294967295
  403b74:	930a      	str	r3, [sp, #40]	; 0x28
  403b76:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403b78:	930f      	str	r3, [sp, #60]	; 0x3c
  403b7a:	2301      	movs	r3, #1
  403b7c:	9004      	str	r0, [sp, #16]
  403b7e:	6420      	str	r0, [r4, #64]	; 0x40
  403b80:	9224      	str	r2, [sp, #144]	; 0x90
  403b82:	930b      	str	r3, [sp, #44]	; 0x2c
  403b84:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403b86:	2b00      	cmp	r3, #0
  403b88:	f2c0 80d9 	blt.w	403d3e <_dtoa_r+0x3ae>
  403b8c:	9a02      	ldr	r2, [sp, #8]
  403b8e:	2a0e      	cmp	r2, #14
  403b90:	f300 80d5 	bgt.w	403d3e <_dtoa_r+0x3ae>
  403b94:	4b2d      	ldr	r3, [pc, #180]	; (403c4c <_dtoa_r+0x2bc>)
  403b96:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403b9a:	e9d3 2300 	ldrd	r2, r3, [r3]
  403b9e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403ba2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403ba4:	2b00      	cmp	r3, #0
  403ba6:	f2c0 83ba 	blt.w	40431e <_dtoa_r+0x98e>
  403baa:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403bae:	4650      	mov	r0, sl
  403bb0:	462a      	mov	r2, r5
  403bb2:	4633      	mov	r3, r6
  403bb4:	4659      	mov	r1, fp
  403bb6:	f7fe fa93 	bl	4020e0 <__aeabi_ddiv>
  403bba:	f002 fa81 	bl	4060c0 <__aeabi_d2iz>
  403bbe:	4680      	mov	r8, r0
  403bc0:	f7fe f8fe 	bl	401dc0 <__aeabi_i2d>
  403bc4:	462a      	mov	r2, r5
  403bc6:	4633      	mov	r3, r6
  403bc8:	f7fe f960 	bl	401e8c <__aeabi_dmul>
  403bcc:	460b      	mov	r3, r1
  403bce:	4602      	mov	r2, r0
  403bd0:	4659      	mov	r1, fp
  403bd2:	4650      	mov	r0, sl
  403bd4:	f7fd ffa6 	bl	401b24 <__aeabi_dsub>
  403bd8:	9d04      	ldr	r5, [sp, #16]
  403bda:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403bde:	702b      	strb	r3, [r5, #0]
  403be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403be2:	2b01      	cmp	r3, #1
  403be4:	4606      	mov	r6, r0
  403be6:	460f      	mov	r7, r1
  403be8:	f105 0501 	add.w	r5, r5, #1
  403bec:	d068      	beq.n	403cc0 <_dtoa_r+0x330>
  403bee:	2200      	movs	r2, #0
  403bf0:	4b18      	ldr	r3, [pc, #96]	; (403c54 <_dtoa_r+0x2c4>)
  403bf2:	f7fe f94b 	bl	401e8c <__aeabi_dmul>
  403bf6:	2200      	movs	r2, #0
  403bf8:	2300      	movs	r3, #0
  403bfa:	4606      	mov	r6, r0
  403bfc:	460f      	mov	r7, r1
  403bfe:	f002 fa17 	bl	406030 <__aeabi_dcmpeq>
  403c02:	2800      	cmp	r0, #0
  403c04:	f040 8088 	bne.w	403d18 <_dtoa_r+0x388>
  403c08:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403c0c:	f04f 0a00 	mov.w	sl, #0
  403c10:	f8df b040 	ldr.w	fp, [pc, #64]	; 403c54 <_dtoa_r+0x2c4>
  403c14:	940c      	str	r4, [sp, #48]	; 0x30
  403c16:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403c1a:	e028      	b.n	403c6e <_dtoa_r+0x2de>
  403c1c:	f3af 8000 	nop.w
  403c20:	636f4361 	.word	0x636f4361
  403c24:	3fd287a7 	.word	0x3fd287a7
  403c28:	8b60c8b3 	.word	0x8b60c8b3
  403c2c:	3fc68a28 	.word	0x3fc68a28
  403c30:	509f79fb 	.word	0x509f79fb
  403c34:	3fd34413 	.word	0x3fd34413
  403c38:	7ff00000 	.word	0x7ff00000
  403c3c:	00406ec9 	.word	0x00406ec9
  403c40:	00406eec 	.word	0x00406eec
  403c44:	00406ef8 	.word	0x00406ef8
  403c48:	3ff80000 	.word	0x3ff80000
  403c4c:	00406f28 	.word	0x00406f28
  403c50:	00406ec8 	.word	0x00406ec8
  403c54:	40240000 	.word	0x40240000
  403c58:	f7fe f918 	bl	401e8c <__aeabi_dmul>
  403c5c:	2200      	movs	r2, #0
  403c5e:	2300      	movs	r3, #0
  403c60:	4606      	mov	r6, r0
  403c62:	460f      	mov	r7, r1
  403c64:	f002 f9e4 	bl	406030 <__aeabi_dcmpeq>
  403c68:	2800      	cmp	r0, #0
  403c6a:	f040 83c1 	bne.w	4043f0 <_dtoa_r+0xa60>
  403c6e:	4642      	mov	r2, r8
  403c70:	464b      	mov	r3, r9
  403c72:	4630      	mov	r0, r6
  403c74:	4639      	mov	r1, r7
  403c76:	f7fe fa33 	bl	4020e0 <__aeabi_ddiv>
  403c7a:	f002 fa21 	bl	4060c0 <__aeabi_d2iz>
  403c7e:	4604      	mov	r4, r0
  403c80:	f7fe f89e 	bl	401dc0 <__aeabi_i2d>
  403c84:	4642      	mov	r2, r8
  403c86:	464b      	mov	r3, r9
  403c88:	f7fe f900 	bl	401e8c <__aeabi_dmul>
  403c8c:	4602      	mov	r2, r0
  403c8e:	460b      	mov	r3, r1
  403c90:	4630      	mov	r0, r6
  403c92:	4639      	mov	r1, r7
  403c94:	f7fd ff46 	bl	401b24 <__aeabi_dsub>
  403c98:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403c9c:	9e04      	ldr	r6, [sp, #16]
  403c9e:	f805 eb01 	strb.w	lr, [r5], #1
  403ca2:	eba5 0e06 	sub.w	lr, r5, r6
  403ca6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403ca8:	45b6      	cmp	lr, r6
  403caa:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403cae:	4652      	mov	r2, sl
  403cb0:	465b      	mov	r3, fp
  403cb2:	d1d1      	bne.n	403c58 <_dtoa_r+0x2c8>
  403cb4:	46a0      	mov	r8, r4
  403cb6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403cba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403cbc:	4606      	mov	r6, r0
  403cbe:	460f      	mov	r7, r1
  403cc0:	4632      	mov	r2, r6
  403cc2:	463b      	mov	r3, r7
  403cc4:	4630      	mov	r0, r6
  403cc6:	4639      	mov	r1, r7
  403cc8:	f7fd ff2e 	bl	401b28 <__adddf3>
  403ccc:	4606      	mov	r6, r0
  403cce:	460f      	mov	r7, r1
  403cd0:	4602      	mov	r2, r0
  403cd2:	460b      	mov	r3, r1
  403cd4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403cd8:	f002 f9b4 	bl	406044 <__aeabi_dcmplt>
  403cdc:	b948      	cbnz	r0, 403cf2 <_dtoa_r+0x362>
  403cde:	4632      	mov	r2, r6
  403ce0:	463b      	mov	r3, r7
  403ce2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403ce6:	f002 f9a3 	bl	406030 <__aeabi_dcmpeq>
  403cea:	b1a8      	cbz	r0, 403d18 <_dtoa_r+0x388>
  403cec:	f018 0f01 	tst.w	r8, #1
  403cf0:	d012      	beq.n	403d18 <_dtoa_r+0x388>
  403cf2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403cf6:	9a04      	ldr	r2, [sp, #16]
  403cf8:	1e6b      	subs	r3, r5, #1
  403cfa:	e004      	b.n	403d06 <_dtoa_r+0x376>
  403cfc:	429a      	cmp	r2, r3
  403cfe:	f000 8401 	beq.w	404504 <_dtoa_r+0xb74>
  403d02:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403d06:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403d0a:	f103 0501 	add.w	r5, r3, #1
  403d0e:	d0f5      	beq.n	403cfc <_dtoa_r+0x36c>
  403d10:	f108 0801 	add.w	r8, r8, #1
  403d14:	f883 8000 	strb.w	r8, [r3]
  403d18:	4649      	mov	r1, r9
  403d1a:	4620      	mov	r0, r4
  403d1c:	f001 f95c 	bl	404fd8 <_Bfree>
  403d20:	2200      	movs	r2, #0
  403d22:	9b02      	ldr	r3, [sp, #8]
  403d24:	702a      	strb	r2, [r5, #0]
  403d26:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403d28:	3301      	adds	r3, #1
  403d2a:	6013      	str	r3, [r2, #0]
  403d2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403d2e:	2b00      	cmp	r3, #0
  403d30:	f000 839e 	beq.w	404470 <_dtoa_r+0xae0>
  403d34:	9804      	ldr	r0, [sp, #16]
  403d36:	601d      	str	r5, [r3, #0]
  403d38:	b01b      	add	sp, #108	; 0x6c
  403d3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403d3e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403d40:	2a00      	cmp	r2, #0
  403d42:	d03e      	beq.n	403dc2 <_dtoa_r+0x432>
  403d44:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403d46:	2a01      	cmp	r2, #1
  403d48:	f340 8311 	ble.w	40436e <_dtoa_r+0x9de>
  403d4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d4e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403d50:	1e5f      	subs	r7, r3, #1
  403d52:	42ba      	cmp	r2, r7
  403d54:	f2c0 838f 	blt.w	404476 <_dtoa_r+0xae6>
  403d58:	1bd7      	subs	r7, r2, r7
  403d5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d5c:	2b00      	cmp	r3, #0
  403d5e:	f2c0 848b 	blt.w	404678 <_dtoa_r+0xce8>
  403d62:	9d08      	ldr	r5, [sp, #32]
  403d64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d66:	9a08      	ldr	r2, [sp, #32]
  403d68:	441a      	add	r2, r3
  403d6a:	9208      	str	r2, [sp, #32]
  403d6c:	9a06      	ldr	r2, [sp, #24]
  403d6e:	2101      	movs	r1, #1
  403d70:	441a      	add	r2, r3
  403d72:	4620      	mov	r0, r4
  403d74:	9206      	str	r2, [sp, #24]
  403d76:	f001 f9c9 	bl	40510c <__i2b>
  403d7a:	4606      	mov	r6, r0
  403d7c:	e024      	b.n	403dc8 <_dtoa_r+0x438>
  403d7e:	2301      	movs	r3, #1
  403d80:	930e      	str	r3, [sp, #56]	; 0x38
  403d82:	e6af      	b.n	403ae4 <_dtoa_r+0x154>
  403d84:	9a08      	ldr	r2, [sp, #32]
  403d86:	9b02      	ldr	r3, [sp, #8]
  403d88:	1ad2      	subs	r2, r2, r3
  403d8a:	425b      	negs	r3, r3
  403d8c:	930c      	str	r3, [sp, #48]	; 0x30
  403d8e:	2300      	movs	r3, #0
  403d90:	9208      	str	r2, [sp, #32]
  403d92:	930d      	str	r3, [sp, #52]	; 0x34
  403d94:	e6b8      	b.n	403b08 <_dtoa_r+0x178>
  403d96:	f1c7 0301 	rsb	r3, r7, #1
  403d9a:	9308      	str	r3, [sp, #32]
  403d9c:	2300      	movs	r3, #0
  403d9e:	9306      	str	r3, [sp, #24]
  403da0:	e6a7      	b.n	403af2 <_dtoa_r+0x162>
  403da2:	9d02      	ldr	r5, [sp, #8]
  403da4:	4628      	mov	r0, r5
  403da6:	f7fe f80b 	bl	401dc0 <__aeabi_i2d>
  403daa:	4602      	mov	r2, r0
  403dac:	460b      	mov	r3, r1
  403dae:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403db2:	f002 f93d 	bl	406030 <__aeabi_dcmpeq>
  403db6:	2800      	cmp	r0, #0
  403db8:	f47f ae80 	bne.w	403abc <_dtoa_r+0x12c>
  403dbc:	1e6b      	subs	r3, r5, #1
  403dbe:	9302      	str	r3, [sp, #8]
  403dc0:	e67c      	b.n	403abc <_dtoa_r+0x12c>
  403dc2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403dc4:	9d08      	ldr	r5, [sp, #32]
  403dc6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403dc8:	2d00      	cmp	r5, #0
  403dca:	dd0c      	ble.n	403de6 <_dtoa_r+0x456>
  403dcc:	9906      	ldr	r1, [sp, #24]
  403dce:	2900      	cmp	r1, #0
  403dd0:	460b      	mov	r3, r1
  403dd2:	dd08      	ble.n	403de6 <_dtoa_r+0x456>
  403dd4:	42a9      	cmp	r1, r5
  403dd6:	9a08      	ldr	r2, [sp, #32]
  403dd8:	bfa8      	it	ge
  403dda:	462b      	movge	r3, r5
  403ddc:	1ad2      	subs	r2, r2, r3
  403dde:	1aed      	subs	r5, r5, r3
  403de0:	1acb      	subs	r3, r1, r3
  403de2:	9208      	str	r2, [sp, #32]
  403de4:	9306      	str	r3, [sp, #24]
  403de6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403de8:	b1d3      	cbz	r3, 403e20 <_dtoa_r+0x490>
  403dea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403dec:	2b00      	cmp	r3, #0
  403dee:	f000 82b7 	beq.w	404360 <_dtoa_r+0x9d0>
  403df2:	2f00      	cmp	r7, #0
  403df4:	dd10      	ble.n	403e18 <_dtoa_r+0x488>
  403df6:	4631      	mov	r1, r6
  403df8:	463a      	mov	r2, r7
  403dfa:	4620      	mov	r0, r4
  403dfc:	f001 fa22 	bl	405244 <__pow5mult>
  403e00:	464a      	mov	r2, r9
  403e02:	4601      	mov	r1, r0
  403e04:	4606      	mov	r6, r0
  403e06:	4620      	mov	r0, r4
  403e08:	f001 f98a 	bl	405120 <__multiply>
  403e0c:	4649      	mov	r1, r9
  403e0e:	4680      	mov	r8, r0
  403e10:	4620      	mov	r0, r4
  403e12:	f001 f8e1 	bl	404fd8 <_Bfree>
  403e16:	46c1      	mov	r9, r8
  403e18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403e1a:	1bda      	subs	r2, r3, r7
  403e1c:	f040 82a1 	bne.w	404362 <_dtoa_r+0x9d2>
  403e20:	2101      	movs	r1, #1
  403e22:	4620      	mov	r0, r4
  403e24:	f001 f972 	bl	40510c <__i2b>
  403e28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e2a:	2b00      	cmp	r3, #0
  403e2c:	4680      	mov	r8, r0
  403e2e:	dd1c      	ble.n	403e6a <_dtoa_r+0x4da>
  403e30:	4601      	mov	r1, r0
  403e32:	461a      	mov	r2, r3
  403e34:	4620      	mov	r0, r4
  403e36:	f001 fa05 	bl	405244 <__pow5mult>
  403e3a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e3c:	2b01      	cmp	r3, #1
  403e3e:	4680      	mov	r8, r0
  403e40:	f340 8254 	ble.w	4042ec <_dtoa_r+0x95c>
  403e44:	2300      	movs	r3, #0
  403e46:	930c      	str	r3, [sp, #48]	; 0x30
  403e48:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403e4c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403e50:	6918      	ldr	r0, [r3, #16]
  403e52:	f001 f90b 	bl	40506c <__hi0bits>
  403e56:	f1c0 0020 	rsb	r0, r0, #32
  403e5a:	e010      	b.n	403e7e <_dtoa_r+0x4ee>
  403e5c:	f1c3 0520 	rsb	r5, r3, #32
  403e60:	fa0a f005 	lsl.w	r0, sl, r5
  403e64:	e674      	b.n	403b50 <_dtoa_r+0x1c0>
  403e66:	900e      	str	r0, [sp, #56]	; 0x38
  403e68:	e63c      	b.n	403ae4 <_dtoa_r+0x154>
  403e6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403e6c:	2b01      	cmp	r3, #1
  403e6e:	f340 8287 	ble.w	404380 <_dtoa_r+0x9f0>
  403e72:	2300      	movs	r3, #0
  403e74:	930c      	str	r3, [sp, #48]	; 0x30
  403e76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403e78:	2001      	movs	r0, #1
  403e7a:	2b00      	cmp	r3, #0
  403e7c:	d1e4      	bne.n	403e48 <_dtoa_r+0x4b8>
  403e7e:	9a06      	ldr	r2, [sp, #24]
  403e80:	4410      	add	r0, r2
  403e82:	f010 001f 	ands.w	r0, r0, #31
  403e86:	f000 80a1 	beq.w	403fcc <_dtoa_r+0x63c>
  403e8a:	f1c0 0320 	rsb	r3, r0, #32
  403e8e:	2b04      	cmp	r3, #4
  403e90:	f340 849e 	ble.w	4047d0 <_dtoa_r+0xe40>
  403e94:	9b08      	ldr	r3, [sp, #32]
  403e96:	f1c0 001c 	rsb	r0, r0, #28
  403e9a:	4403      	add	r3, r0
  403e9c:	9308      	str	r3, [sp, #32]
  403e9e:	4613      	mov	r3, r2
  403ea0:	4403      	add	r3, r0
  403ea2:	4405      	add	r5, r0
  403ea4:	9306      	str	r3, [sp, #24]
  403ea6:	9b08      	ldr	r3, [sp, #32]
  403ea8:	2b00      	cmp	r3, #0
  403eaa:	dd05      	ble.n	403eb8 <_dtoa_r+0x528>
  403eac:	4649      	mov	r1, r9
  403eae:	461a      	mov	r2, r3
  403eb0:	4620      	mov	r0, r4
  403eb2:	f001 fa17 	bl	4052e4 <__lshift>
  403eb6:	4681      	mov	r9, r0
  403eb8:	9b06      	ldr	r3, [sp, #24]
  403eba:	2b00      	cmp	r3, #0
  403ebc:	dd05      	ble.n	403eca <_dtoa_r+0x53a>
  403ebe:	4641      	mov	r1, r8
  403ec0:	461a      	mov	r2, r3
  403ec2:	4620      	mov	r0, r4
  403ec4:	f001 fa0e 	bl	4052e4 <__lshift>
  403ec8:	4680      	mov	r8, r0
  403eca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403ecc:	2b00      	cmp	r3, #0
  403ece:	f040 8086 	bne.w	403fde <_dtoa_r+0x64e>
  403ed2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ed4:	2b00      	cmp	r3, #0
  403ed6:	f340 8266 	ble.w	4043a6 <_dtoa_r+0xa16>
  403eda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403edc:	2b00      	cmp	r3, #0
  403ede:	f000 8098 	beq.w	404012 <_dtoa_r+0x682>
  403ee2:	2d00      	cmp	r5, #0
  403ee4:	dd05      	ble.n	403ef2 <_dtoa_r+0x562>
  403ee6:	4631      	mov	r1, r6
  403ee8:	462a      	mov	r2, r5
  403eea:	4620      	mov	r0, r4
  403eec:	f001 f9fa 	bl	4052e4 <__lshift>
  403ef0:	4606      	mov	r6, r0
  403ef2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403ef4:	2b00      	cmp	r3, #0
  403ef6:	f040 8337 	bne.w	404568 <_dtoa_r+0xbd8>
  403efa:	9606      	str	r6, [sp, #24]
  403efc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403efe:	9a04      	ldr	r2, [sp, #16]
  403f00:	f8dd b018 	ldr.w	fp, [sp, #24]
  403f04:	3b01      	subs	r3, #1
  403f06:	18d3      	adds	r3, r2, r3
  403f08:	930b      	str	r3, [sp, #44]	; 0x2c
  403f0a:	f00a 0301 	and.w	r3, sl, #1
  403f0e:	930c      	str	r3, [sp, #48]	; 0x30
  403f10:	4617      	mov	r7, r2
  403f12:	46c2      	mov	sl, r8
  403f14:	4651      	mov	r1, sl
  403f16:	4648      	mov	r0, r9
  403f18:	f7ff fca4 	bl	403864 <quorem>
  403f1c:	4631      	mov	r1, r6
  403f1e:	4605      	mov	r5, r0
  403f20:	4648      	mov	r0, r9
  403f22:	f001 fa31 	bl	405388 <__mcmp>
  403f26:	465a      	mov	r2, fp
  403f28:	900a      	str	r0, [sp, #40]	; 0x28
  403f2a:	4651      	mov	r1, sl
  403f2c:	4620      	mov	r0, r4
  403f2e:	f001 fa47 	bl	4053c0 <__mdiff>
  403f32:	68c2      	ldr	r2, [r0, #12]
  403f34:	4680      	mov	r8, r0
  403f36:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403f3a:	2a00      	cmp	r2, #0
  403f3c:	f040 822b 	bne.w	404396 <_dtoa_r+0xa06>
  403f40:	4601      	mov	r1, r0
  403f42:	4648      	mov	r0, r9
  403f44:	9308      	str	r3, [sp, #32]
  403f46:	f001 fa1f 	bl	405388 <__mcmp>
  403f4a:	4641      	mov	r1, r8
  403f4c:	9006      	str	r0, [sp, #24]
  403f4e:	4620      	mov	r0, r4
  403f50:	f001 f842 	bl	404fd8 <_Bfree>
  403f54:	9a06      	ldr	r2, [sp, #24]
  403f56:	9b08      	ldr	r3, [sp, #32]
  403f58:	b932      	cbnz	r2, 403f68 <_dtoa_r+0x5d8>
  403f5a:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f5c:	b921      	cbnz	r1, 403f68 <_dtoa_r+0x5d8>
  403f5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f60:	2a00      	cmp	r2, #0
  403f62:	f000 83ef 	beq.w	404744 <_dtoa_r+0xdb4>
  403f66:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403f68:	990a      	ldr	r1, [sp, #40]	; 0x28
  403f6a:	2900      	cmp	r1, #0
  403f6c:	f2c0 829f 	blt.w	4044ae <_dtoa_r+0xb1e>
  403f70:	d105      	bne.n	403f7e <_dtoa_r+0x5ee>
  403f72:	9924      	ldr	r1, [sp, #144]	; 0x90
  403f74:	b919      	cbnz	r1, 403f7e <_dtoa_r+0x5ee>
  403f76:	990c      	ldr	r1, [sp, #48]	; 0x30
  403f78:	2900      	cmp	r1, #0
  403f7a:	f000 8298 	beq.w	4044ae <_dtoa_r+0xb1e>
  403f7e:	2a00      	cmp	r2, #0
  403f80:	f300 8306 	bgt.w	404590 <_dtoa_r+0xc00>
  403f84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403f86:	703b      	strb	r3, [r7, #0]
  403f88:	f107 0801 	add.w	r8, r7, #1
  403f8c:	4297      	cmp	r7, r2
  403f8e:	4645      	mov	r5, r8
  403f90:	f000 830c 	beq.w	4045ac <_dtoa_r+0xc1c>
  403f94:	4649      	mov	r1, r9
  403f96:	2300      	movs	r3, #0
  403f98:	220a      	movs	r2, #10
  403f9a:	4620      	mov	r0, r4
  403f9c:	f001 f826 	bl	404fec <__multadd>
  403fa0:	455e      	cmp	r6, fp
  403fa2:	4681      	mov	r9, r0
  403fa4:	4631      	mov	r1, r6
  403fa6:	f04f 0300 	mov.w	r3, #0
  403faa:	f04f 020a 	mov.w	r2, #10
  403fae:	4620      	mov	r0, r4
  403fb0:	f000 81eb 	beq.w	40438a <_dtoa_r+0x9fa>
  403fb4:	f001 f81a 	bl	404fec <__multadd>
  403fb8:	4659      	mov	r1, fp
  403fba:	4606      	mov	r6, r0
  403fbc:	2300      	movs	r3, #0
  403fbe:	220a      	movs	r2, #10
  403fc0:	4620      	mov	r0, r4
  403fc2:	f001 f813 	bl	404fec <__multadd>
  403fc6:	4647      	mov	r7, r8
  403fc8:	4683      	mov	fp, r0
  403fca:	e7a3      	b.n	403f14 <_dtoa_r+0x584>
  403fcc:	201c      	movs	r0, #28
  403fce:	9b08      	ldr	r3, [sp, #32]
  403fd0:	4403      	add	r3, r0
  403fd2:	9308      	str	r3, [sp, #32]
  403fd4:	9b06      	ldr	r3, [sp, #24]
  403fd6:	4403      	add	r3, r0
  403fd8:	4405      	add	r5, r0
  403fda:	9306      	str	r3, [sp, #24]
  403fdc:	e763      	b.n	403ea6 <_dtoa_r+0x516>
  403fde:	4641      	mov	r1, r8
  403fe0:	4648      	mov	r0, r9
  403fe2:	f001 f9d1 	bl	405388 <__mcmp>
  403fe6:	2800      	cmp	r0, #0
  403fe8:	f6bf af73 	bge.w	403ed2 <_dtoa_r+0x542>
  403fec:	9f02      	ldr	r7, [sp, #8]
  403fee:	4649      	mov	r1, r9
  403ff0:	2300      	movs	r3, #0
  403ff2:	220a      	movs	r2, #10
  403ff4:	4620      	mov	r0, r4
  403ff6:	3f01      	subs	r7, #1
  403ff8:	9702      	str	r7, [sp, #8]
  403ffa:	f000 fff7 	bl	404fec <__multadd>
  403ffe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404000:	4681      	mov	r9, r0
  404002:	2b00      	cmp	r3, #0
  404004:	f040 83b6 	bne.w	404774 <_dtoa_r+0xde4>
  404008:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40400a:	2b00      	cmp	r3, #0
  40400c:	f340 83bf 	ble.w	40478e <_dtoa_r+0xdfe>
  404010:	930a      	str	r3, [sp, #40]	; 0x28
  404012:	f8dd b010 	ldr.w	fp, [sp, #16]
  404016:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  404018:	465d      	mov	r5, fp
  40401a:	e002      	b.n	404022 <_dtoa_r+0x692>
  40401c:	f000 ffe6 	bl	404fec <__multadd>
  404020:	4681      	mov	r9, r0
  404022:	4641      	mov	r1, r8
  404024:	4648      	mov	r0, r9
  404026:	f7ff fc1d 	bl	403864 <quorem>
  40402a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40402e:	f805 ab01 	strb.w	sl, [r5], #1
  404032:	eba5 030b 	sub.w	r3, r5, fp
  404036:	42bb      	cmp	r3, r7
  404038:	f04f 020a 	mov.w	r2, #10
  40403c:	f04f 0300 	mov.w	r3, #0
  404040:	4649      	mov	r1, r9
  404042:	4620      	mov	r0, r4
  404044:	dbea      	blt.n	40401c <_dtoa_r+0x68c>
  404046:	9b04      	ldr	r3, [sp, #16]
  404048:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40404a:	2a01      	cmp	r2, #1
  40404c:	bfac      	ite	ge
  40404e:	189b      	addge	r3, r3, r2
  404050:	3301      	addlt	r3, #1
  404052:	461d      	mov	r5, r3
  404054:	f04f 0b00 	mov.w	fp, #0
  404058:	4649      	mov	r1, r9
  40405a:	2201      	movs	r2, #1
  40405c:	4620      	mov	r0, r4
  40405e:	f001 f941 	bl	4052e4 <__lshift>
  404062:	4641      	mov	r1, r8
  404064:	4681      	mov	r9, r0
  404066:	f001 f98f 	bl	405388 <__mcmp>
  40406a:	2800      	cmp	r0, #0
  40406c:	f340 823d 	ble.w	4044ea <_dtoa_r+0xb5a>
  404070:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  404074:	9904      	ldr	r1, [sp, #16]
  404076:	1e6b      	subs	r3, r5, #1
  404078:	e004      	b.n	404084 <_dtoa_r+0x6f4>
  40407a:	428b      	cmp	r3, r1
  40407c:	f000 81ae 	beq.w	4043dc <_dtoa_r+0xa4c>
  404080:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  404084:	2a39      	cmp	r2, #57	; 0x39
  404086:	f103 0501 	add.w	r5, r3, #1
  40408a:	d0f6      	beq.n	40407a <_dtoa_r+0x6ea>
  40408c:	3201      	adds	r2, #1
  40408e:	701a      	strb	r2, [r3, #0]
  404090:	4641      	mov	r1, r8
  404092:	4620      	mov	r0, r4
  404094:	f000 ffa0 	bl	404fd8 <_Bfree>
  404098:	2e00      	cmp	r6, #0
  40409a:	f43f ae3d 	beq.w	403d18 <_dtoa_r+0x388>
  40409e:	f1bb 0f00 	cmp.w	fp, #0
  4040a2:	d005      	beq.n	4040b0 <_dtoa_r+0x720>
  4040a4:	45b3      	cmp	fp, r6
  4040a6:	d003      	beq.n	4040b0 <_dtoa_r+0x720>
  4040a8:	4659      	mov	r1, fp
  4040aa:	4620      	mov	r0, r4
  4040ac:	f000 ff94 	bl	404fd8 <_Bfree>
  4040b0:	4631      	mov	r1, r6
  4040b2:	4620      	mov	r0, r4
  4040b4:	f000 ff90 	bl	404fd8 <_Bfree>
  4040b8:	e62e      	b.n	403d18 <_dtoa_r+0x388>
  4040ba:	2300      	movs	r3, #0
  4040bc:	930b      	str	r3, [sp, #44]	; 0x2c
  4040be:	9b02      	ldr	r3, [sp, #8]
  4040c0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4040c2:	4413      	add	r3, r2
  4040c4:	930f      	str	r3, [sp, #60]	; 0x3c
  4040c6:	3301      	adds	r3, #1
  4040c8:	2b01      	cmp	r3, #1
  4040ca:	461f      	mov	r7, r3
  4040cc:	461e      	mov	r6, r3
  4040ce:	930a      	str	r3, [sp, #40]	; 0x28
  4040d0:	bfb8      	it	lt
  4040d2:	2701      	movlt	r7, #1
  4040d4:	2100      	movs	r1, #0
  4040d6:	2f17      	cmp	r7, #23
  4040d8:	6461      	str	r1, [r4, #68]	; 0x44
  4040da:	d90a      	bls.n	4040f2 <_dtoa_r+0x762>
  4040dc:	2201      	movs	r2, #1
  4040de:	2304      	movs	r3, #4
  4040e0:	005b      	lsls	r3, r3, #1
  4040e2:	f103 0014 	add.w	r0, r3, #20
  4040e6:	4287      	cmp	r7, r0
  4040e8:	4611      	mov	r1, r2
  4040ea:	f102 0201 	add.w	r2, r2, #1
  4040ee:	d2f7      	bcs.n	4040e0 <_dtoa_r+0x750>
  4040f0:	6461      	str	r1, [r4, #68]	; 0x44
  4040f2:	4620      	mov	r0, r4
  4040f4:	f000 ff4a 	bl	404f8c <_Balloc>
  4040f8:	2e0e      	cmp	r6, #14
  4040fa:	9004      	str	r0, [sp, #16]
  4040fc:	6420      	str	r0, [r4, #64]	; 0x40
  4040fe:	f63f ad41 	bhi.w	403b84 <_dtoa_r+0x1f4>
  404102:	2d00      	cmp	r5, #0
  404104:	f43f ad3e 	beq.w	403b84 <_dtoa_r+0x1f4>
  404108:	9902      	ldr	r1, [sp, #8]
  40410a:	2900      	cmp	r1, #0
  40410c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  404110:	f340 8202 	ble.w	404518 <_dtoa_r+0xb88>
  404114:	4bb8      	ldr	r3, [pc, #736]	; (4043f8 <_dtoa_r+0xa68>)
  404116:	f001 020f 	and.w	r2, r1, #15
  40411a:	110d      	asrs	r5, r1, #4
  40411c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404120:	06e9      	lsls	r1, r5, #27
  404122:	e9d3 6700 	ldrd	r6, r7, [r3]
  404126:	f140 81ae 	bpl.w	404486 <_dtoa_r+0xaf6>
  40412a:	4bb4      	ldr	r3, [pc, #720]	; (4043fc <_dtoa_r+0xa6c>)
  40412c:	4650      	mov	r0, sl
  40412e:	4659      	mov	r1, fp
  404130:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  404134:	f7fd ffd4 	bl	4020e0 <__aeabi_ddiv>
  404138:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40413c:	f005 050f 	and.w	r5, r5, #15
  404140:	f04f 0a03 	mov.w	sl, #3
  404144:	b18d      	cbz	r5, 40416a <_dtoa_r+0x7da>
  404146:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 4043fc <_dtoa_r+0xa6c>
  40414a:	07ea      	lsls	r2, r5, #31
  40414c:	d509      	bpl.n	404162 <_dtoa_r+0x7d2>
  40414e:	4630      	mov	r0, r6
  404150:	4639      	mov	r1, r7
  404152:	e9d8 2300 	ldrd	r2, r3, [r8]
  404156:	f7fd fe99 	bl	401e8c <__aeabi_dmul>
  40415a:	f10a 0a01 	add.w	sl, sl, #1
  40415e:	4606      	mov	r6, r0
  404160:	460f      	mov	r7, r1
  404162:	106d      	asrs	r5, r5, #1
  404164:	f108 0808 	add.w	r8, r8, #8
  404168:	d1ef      	bne.n	40414a <_dtoa_r+0x7ba>
  40416a:	463b      	mov	r3, r7
  40416c:	4632      	mov	r2, r6
  40416e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404172:	f7fd ffb5 	bl	4020e0 <__aeabi_ddiv>
  404176:	4607      	mov	r7, r0
  404178:	4688      	mov	r8, r1
  40417a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40417c:	b143      	cbz	r3, 404190 <_dtoa_r+0x800>
  40417e:	2200      	movs	r2, #0
  404180:	4b9f      	ldr	r3, [pc, #636]	; (404400 <_dtoa_r+0xa70>)
  404182:	4638      	mov	r0, r7
  404184:	4641      	mov	r1, r8
  404186:	f001 ff5d 	bl	406044 <__aeabi_dcmplt>
  40418a:	2800      	cmp	r0, #0
  40418c:	f040 8286 	bne.w	40469c <_dtoa_r+0xd0c>
  404190:	4650      	mov	r0, sl
  404192:	f7fd fe15 	bl	401dc0 <__aeabi_i2d>
  404196:	463a      	mov	r2, r7
  404198:	4643      	mov	r3, r8
  40419a:	f7fd fe77 	bl	401e8c <__aeabi_dmul>
  40419e:	4b99      	ldr	r3, [pc, #612]	; (404404 <_dtoa_r+0xa74>)
  4041a0:	2200      	movs	r2, #0
  4041a2:	f7fd fcc1 	bl	401b28 <__adddf3>
  4041a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041a8:	4605      	mov	r5, r0
  4041aa:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4041ae:	2b00      	cmp	r3, #0
  4041b0:	f000 813e 	beq.w	404430 <_dtoa_r+0xaa0>
  4041b4:	9b02      	ldr	r3, [sp, #8]
  4041b6:	9315      	str	r3, [sp, #84]	; 0x54
  4041b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041ba:	9312      	str	r3, [sp, #72]	; 0x48
  4041bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4041be:	2b00      	cmp	r3, #0
  4041c0:	f000 81fa 	beq.w	4045b8 <_dtoa_r+0xc28>
  4041c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4041c6:	4b8c      	ldr	r3, [pc, #560]	; (4043f8 <_dtoa_r+0xa68>)
  4041c8:	498f      	ldr	r1, [pc, #572]	; (404408 <_dtoa_r+0xa78>)
  4041ca:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4041ce:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4041d2:	2000      	movs	r0, #0
  4041d4:	f7fd ff84 	bl	4020e0 <__aeabi_ddiv>
  4041d8:	462a      	mov	r2, r5
  4041da:	4633      	mov	r3, r6
  4041dc:	f7fd fca2 	bl	401b24 <__aeabi_dsub>
  4041e0:	4682      	mov	sl, r0
  4041e2:	468b      	mov	fp, r1
  4041e4:	4638      	mov	r0, r7
  4041e6:	4641      	mov	r1, r8
  4041e8:	f001 ff6a 	bl	4060c0 <__aeabi_d2iz>
  4041ec:	4605      	mov	r5, r0
  4041ee:	f7fd fde7 	bl	401dc0 <__aeabi_i2d>
  4041f2:	4602      	mov	r2, r0
  4041f4:	460b      	mov	r3, r1
  4041f6:	4638      	mov	r0, r7
  4041f8:	4641      	mov	r1, r8
  4041fa:	f7fd fc93 	bl	401b24 <__aeabi_dsub>
  4041fe:	3530      	adds	r5, #48	; 0x30
  404200:	fa5f f885 	uxtb.w	r8, r5
  404204:	9d04      	ldr	r5, [sp, #16]
  404206:	4606      	mov	r6, r0
  404208:	460f      	mov	r7, r1
  40420a:	f885 8000 	strb.w	r8, [r5]
  40420e:	4602      	mov	r2, r0
  404210:	460b      	mov	r3, r1
  404212:	4650      	mov	r0, sl
  404214:	4659      	mov	r1, fp
  404216:	3501      	adds	r5, #1
  404218:	f001 ff32 	bl	406080 <__aeabi_dcmpgt>
  40421c:	2800      	cmp	r0, #0
  40421e:	d154      	bne.n	4042ca <_dtoa_r+0x93a>
  404220:	4632      	mov	r2, r6
  404222:	463b      	mov	r3, r7
  404224:	2000      	movs	r0, #0
  404226:	4976      	ldr	r1, [pc, #472]	; (404400 <_dtoa_r+0xa70>)
  404228:	f7fd fc7c 	bl	401b24 <__aeabi_dsub>
  40422c:	4602      	mov	r2, r0
  40422e:	460b      	mov	r3, r1
  404230:	4650      	mov	r0, sl
  404232:	4659      	mov	r1, fp
  404234:	f001 ff24 	bl	406080 <__aeabi_dcmpgt>
  404238:	2800      	cmp	r0, #0
  40423a:	f040 8270 	bne.w	40471e <_dtoa_r+0xd8e>
  40423e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404240:	2a01      	cmp	r2, #1
  404242:	f000 8111 	beq.w	404468 <_dtoa_r+0xad8>
  404246:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404248:	9a04      	ldr	r2, [sp, #16]
  40424a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40424e:	4413      	add	r3, r2
  404250:	4699      	mov	r9, r3
  404252:	e00d      	b.n	404270 <_dtoa_r+0x8e0>
  404254:	2000      	movs	r0, #0
  404256:	496a      	ldr	r1, [pc, #424]	; (404400 <_dtoa_r+0xa70>)
  404258:	f7fd fc64 	bl	401b24 <__aeabi_dsub>
  40425c:	4652      	mov	r2, sl
  40425e:	465b      	mov	r3, fp
  404260:	f001 fef0 	bl	406044 <__aeabi_dcmplt>
  404264:	2800      	cmp	r0, #0
  404266:	f040 8258 	bne.w	40471a <_dtoa_r+0xd8a>
  40426a:	454d      	cmp	r5, r9
  40426c:	f000 80fa 	beq.w	404464 <_dtoa_r+0xad4>
  404270:	4650      	mov	r0, sl
  404272:	4659      	mov	r1, fp
  404274:	2200      	movs	r2, #0
  404276:	4b65      	ldr	r3, [pc, #404]	; (40440c <_dtoa_r+0xa7c>)
  404278:	f7fd fe08 	bl	401e8c <__aeabi_dmul>
  40427c:	2200      	movs	r2, #0
  40427e:	4b63      	ldr	r3, [pc, #396]	; (40440c <_dtoa_r+0xa7c>)
  404280:	4682      	mov	sl, r0
  404282:	468b      	mov	fp, r1
  404284:	4630      	mov	r0, r6
  404286:	4639      	mov	r1, r7
  404288:	f7fd fe00 	bl	401e8c <__aeabi_dmul>
  40428c:	460f      	mov	r7, r1
  40428e:	4606      	mov	r6, r0
  404290:	f001 ff16 	bl	4060c0 <__aeabi_d2iz>
  404294:	4680      	mov	r8, r0
  404296:	f7fd fd93 	bl	401dc0 <__aeabi_i2d>
  40429a:	4602      	mov	r2, r0
  40429c:	460b      	mov	r3, r1
  40429e:	4630      	mov	r0, r6
  4042a0:	4639      	mov	r1, r7
  4042a2:	f7fd fc3f 	bl	401b24 <__aeabi_dsub>
  4042a6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4042aa:	fa5f f888 	uxtb.w	r8, r8
  4042ae:	4652      	mov	r2, sl
  4042b0:	465b      	mov	r3, fp
  4042b2:	f805 8b01 	strb.w	r8, [r5], #1
  4042b6:	4606      	mov	r6, r0
  4042b8:	460f      	mov	r7, r1
  4042ba:	f001 fec3 	bl	406044 <__aeabi_dcmplt>
  4042be:	4632      	mov	r2, r6
  4042c0:	463b      	mov	r3, r7
  4042c2:	2800      	cmp	r0, #0
  4042c4:	d0c6      	beq.n	404254 <_dtoa_r+0x8c4>
  4042c6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4042ca:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4042cc:	9302      	str	r3, [sp, #8]
  4042ce:	e523      	b.n	403d18 <_dtoa_r+0x388>
  4042d0:	2300      	movs	r3, #0
  4042d2:	930b      	str	r3, [sp, #44]	; 0x2c
  4042d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4042d6:	2b00      	cmp	r3, #0
  4042d8:	f340 80dc 	ble.w	404494 <_dtoa_r+0xb04>
  4042dc:	461f      	mov	r7, r3
  4042de:	461e      	mov	r6, r3
  4042e0:	930f      	str	r3, [sp, #60]	; 0x3c
  4042e2:	930a      	str	r3, [sp, #40]	; 0x28
  4042e4:	e6f6      	b.n	4040d4 <_dtoa_r+0x744>
  4042e6:	2301      	movs	r3, #1
  4042e8:	930b      	str	r3, [sp, #44]	; 0x2c
  4042ea:	e7f3      	b.n	4042d4 <_dtoa_r+0x944>
  4042ec:	f1ba 0f00 	cmp.w	sl, #0
  4042f0:	f47f ada8 	bne.w	403e44 <_dtoa_r+0x4b4>
  4042f4:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4042f8:	2b00      	cmp	r3, #0
  4042fa:	f47f adba 	bne.w	403e72 <_dtoa_r+0x4e2>
  4042fe:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404302:	0d3f      	lsrs	r7, r7, #20
  404304:	053f      	lsls	r7, r7, #20
  404306:	2f00      	cmp	r7, #0
  404308:	f000 820d 	beq.w	404726 <_dtoa_r+0xd96>
  40430c:	9b08      	ldr	r3, [sp, #32]
  40430e:	3301      	adds	r3, #1
  404310:	9308      	str	r3, [sp, #32]
  404312:	9b06      	ldr	r3, [sp, #24]
  404314:	3301      	adds	r3, #1
  404316:	9306      	str	r3, [sp, #24]
  404318:	2301      	movs	r3, #1
  40431a:	930c      	str	r3, [sp, #48]	; 0x30
  40431c:	e5ab      	b.n	403e76 <_dtoa_r+0x4e6>
  40431e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404320:	2b00      	cmp	r3, #0
  404322:	f73f ac42 	bgt.w	403baa <_dtoa_r+0x21a>
  404326:	f040 8221 	bne.w	40476c <_dtoa_r+0xddc>
  40432a:	2200      	movs	r2, #0
  40432c:	4b38      	ldr	r3, [pc, #224]	; (404410 <_dtoa_r+0xa80>)
  40432e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  404332:	f7fd fdab 	bl	401e8c <__aeabi_dmul>
  404336:	4652      	mov	r2, sl
  404338:	465b      	mov	r3, fp
  40433a:	f001 fe97 	bl	40606c <__aeabi_dcmpge>
  40433e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  404342:	4646      	mov	r6, r8
  404344:	2800      	cmp	r0, #0
  404346:	d041      	beq.n	4043cc <_dtoa_r+0xa3c>
  404348:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40434a:	9d04      	ldr	r5, [sp, #16]
  40434c:	43db      	mvns	r3, r3
  40434e:	9302      	str	r3, [sp, #8]
  404350:	4641      	mov	r1, r8
  404352:	4620      	mov	r0, r4
  404354:	f000 fe40 	bl	404fd8 <_Bfree>
  404358:	2e00      	cmp	r6, #0
  40435a:	f43f acdd 	beq.w	403d18 <_dtoa_r+0x388>
  40435e:	e6a7      	b.n	4040b0 <_dtoa_r+0x720>
  404360:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404362:	4649      	mov	r1, r9
  404364:	4620      	mov	r0, r4
  404366:	f000 ff6d 	bl	405244 <__pow5mult>
  40436a:	4681      	mov	r9, r0
  40436c:	e558      	b.n	403e20 <_dtoa_r+0x490>
  40436e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404370:	2a00      	cmp	r2, #0
  404372:	f000 8187 	beq.w	404684 <_dtoa_r+0xcf4>
  404376:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40437a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40437c:	9d08      	ldr	r5, [sp, #32]
  40437e:	e4f2      	b.n	403d66 <_dtoa_r+0x3d6>
  404380:	f1ba 0f00 	cmp.w	sl, #0
  404384:	f47f ad75 	bne.w	403e72 <_dtoa_r+0x4e2>
  404388:	e7b4      	b.n	4042f4 <_dtoa_r+0x964>
  40438a:	f000 fe2f 	bl	404fec <__multadd>
  40438e:	4647      	mov	r7, r8
  404390:	4606      	mov	r6, r0
  404392:	4683      	mov	fp, r0
  404394:	e5be      	b.n	403f14 <_dtoa_r+0x584>
  404396:	4601      	mov	r1, r0
  404398:	4620      	mov	r0, r4
  40439a:	9306      	str	r3, [sp, #24]
  40439c:	f000 fe1c 	bl	404fd8 <_Bfree>
  4043a0:	2201      	movs	r2, #1
  4043a2:	9b06      	ldr	r3, [sp, #24]
  4043a4:	e5e0      	b.n	403f68 <_dtoa_r+0x5d8>
  4043a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4043a8:	2b02      	cmp	r3, #2
  4043aa:	f77f ad96 	ble.w	403eda <_dtoa_r+0x54a>
  4043ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4043b0:	2b00      	cmp	r3, #0
  4043b2:	d1c9      	bne.n	404348 <_dtoa_r+0x9b8>
  4043b4:	4641      	mov	r1, r8
  4043b6:	2205      	movs	r2, #5
  4043b8:	4620      	mov	r0, r4
  4043ba:	f000 fe17 	bl	404fec <__multadd>
  4043be:	4601      	mov	r1, r0
  4043c0:	4680      	mov	r8, r0
  4043c2:	4648      	mov	r0, r9
  4043c4:	f000 ffe0 	bl	405388 <__mcmp>
  4043c8:	2800      	cmp	r0, #0
  4043ca:	ddbd      	ble.n	404348 <_dtoa_r+0x9b8>
  4043cc:	9a02      	ldr	r2, [sp, #8]
  4043ce:	9904      	ldr	r1, [sp, #16]
  4043d0:	2331      	movs	r3, #49	; 0x31
  4043d2:	3201      	adds	r2, #1
  4043d4:	9202      	str	r2, [sp, #8]
  4043d6:	700b      	strb	r3, [r1, #0]
  4043d8:	1c4d      	adds	r5, r1, #1
  4043da:	e7b9      	b.n	404350 <_dtoa_r+0x9c0>
  4043dc:	9a02      	ldr	r2, [sp, #8]
  4043de:	3201      	adds	r2, #1
  4043e0:	9202      	str	r2, [sp, #8]
  4043e2:	9a04      	ldr	r2, [sp, #16]
  4043e4:	2331      	movs	r3, #49	; 0x31
  4043e6:	7013      	strb	r3, [r2, #0]
  4043e8:	e652      	b.n	404090 <_dtoa_r+0x700>
  4043ea:	2301      	movs	r3, #1
  4043ec:	930b      	str	r3, [sp, #44]	; 0x2c
  4043ee:	e666      	b.n	4040be <_dtoa_r+0x72e>
  4043f0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4043f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4043f6:	e48f      	b.n	403d18 <_dtoa_r+0x388>
  4043f8:	00406f28 	.word	0x00406f28
  4043fc:	00406f00 	.word	0x00406f00
  404400:	3ff00000 	.word	0x3ff00000
  404404:	401c0000 	.word	0x401c0000
  404408:	3fe00000 	.word	0x3fe00000
  40440c:	40240000 	.word	0x40240000
  404410:	40140000 	.word	0x40140000
  404414:	4650      	mov	r0, sl
  404416:	f7fd fcd3 	bl	401dc0 <__aeabi_i2d>
  40441a:	463a      	mov	r2, r7
  40441c:	4643      	mov	r3, r8
  40441e:	f7fd fd35 	bl	401e8c <__aeabi_dmul>
  404422:	2200      	movs	r2, #0
  404424:	4bc1      	ldr	r3, [pc, #772]	; (40472c <_dtoa_r+0xd9c>)
  404426:	f7fd fb7f 	bl	401b28 <__adddf3>
  40442a:	4605      	mov	r5, r0
  40442c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404430:	4641      	mov	r1, r8
  404432:	2200      	movs	r2, #0
  404434:	4bbe      	ldr	r3, [pc, #760]	; (404730 <_dtoa_r+0xda0>)
  404436:	4638      	mov	r0, r7
  404438:	f7fd fb74 	bl	401b24 <__aeabi_dsub>
  40443c:	462a      	mov	r2, r5
  40443e:	4633      	mov	r3, r6
  404440:	4682      	mov	sl, r0
  404442:	468b      	mov	fp, r1
  404444:	f001 fe1c 	bl	406080 <__aeabi_dcmpgt>
  404448:	4680      	mov	r8, r0
  40444a:	2800      	cmp	r0, #0
  40444c:	f040 8110 	bne.w	404670 <_dtoa_r+0xce0>
  404450:	462a      	mov	r2, r5
  404452:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  404456:	4650      	mov	r0, sl
  404458:	4659      	mov	r1, fp
  40445a:	f001 fdf3 	bl	406044 <__aeabi_dcmplt>
  40445e:	b118      	cbz	r0, 404468 <_dtoa_r+0xad8>
  404460:	4646      	mov	r6, r8
  404462:	e771      	b.n	404348 <_dtoa_r+0x9b8>
  404464:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  404468:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  40446c:	f7ff bb8a 	b.w	403b84 <_dtoa_r+0x1f4>
  404470:	9804      	ldr	r0, [sp, #16]
  404472:	f7ff babb 	b.w	4039ec <_dtoa_r+0x5c>
  404476:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404478:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40447a:	970c      	str	r7, [sp, #48]	; 0x30
  40447c:	1afb      	subs	r3, r7, r3
  40447e:	441a      	add	r2, r3
  404480:	920d      	str	r2, [sp, #52]	; 0x34
  404482:	2700      	movs	r7, #0
  404484:	e469      	b.n	403d5a <_dtoa_r+0x3ca>
  404486:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  40448a:	f04f 0a02 	mov.w	sl, #2
  40448e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404492:	e657      	b.n	404144 <_dtoa_r+0x7b4>
  404494:	2100      	movs	r1, #0
  404496:	2301      	movs	r3, #1
  404498:	6461      	str	r1, [r4, #68]	; 0x44
  40449a:	4620      	mov	r0, r4
  40449c:	9325      	str	r3, [sp, #148]	; 0x94
  40449e:	f000 fd75 	bl	404f8c <_Balloc>
  4044a2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4044a4:	9004      	str	r0, [sp, #16]
  4044a6:	6420      	str	r0, [r4, #64]	; 0x40
  4044a8:	930a      	str	r3, [sp, #40]	; 0x28
  4044aa:	930f      	str	r3, [sp, #60]	; 0x3c
  4044ac:	e629      	b.n	404102 <_dtoa_r+0x772>
  4044ae:	2a00      	cmp	r2, #0
  4044b0:	46d0      	mov	r8, sl
  4044b2:	f8cd b018 	str.w	fp, [sp, #24]
  4044b6:	469a      	mov	sl, r3
  4044b8:	dd11      	ble.n	4044de <_dtoa_r+0xb4e>
  4044ba:	4649      	mov	r1, r9
  4044bc:	2201      	movs	r2, #1
  4044be:	4620      	mov	r0, r4
  4044c0:	f000 ff10 	bl	4052e4 <__lshift>
  4044c4:	4641      	mov	r1, r8
  4044c6:	4681      	mov	r9, r0
  4044c8:	f000 ff5e 	bl	405388 <__mcmp>
  4044cc:	2800      	cmp	r0, #0
  4044ce:	f340 8146 	ble.w	40475e <_dtoa_r+0xdce>
  4044d2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4044d6:	f000 8106 	beq.w	4046e6 <_dtoa_r+0xd56>
  4044da:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  4044de:	46b3      	mov	fp, r6
  4044e0:	f887 a000 	strb.w	sl, [r7]
  4044e4:	1c7d      	adds	r5, r7, #1
  4044e6:	9e06      	ldr	r6, [sp, #24]
  4044e8:	e5d2      	b.n	404090 <_dtoa_r+0x700>
  4044ea:	d104      	bne.n	4044f6 <_dtoa_r+0xb66>
  4044ec:	f01a 0f01 	tst.w	sl, #1
  4044f0:	d001      	beq.n	4044f6 <_dtoa_r+0xb66>
  4044f2:	e5bd      	b.n	404070 <_dtoa_r+0x6e0>
  4044f4:	4615      	mov	r5, r2
  4044f6:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4044fa:	2b30      	cmp	r3, #48	; 0x30
  4044fc:	f105 32ff 	add.w	r2, r5, #4294967295
  404500:	d0f8      	beq.n	4044f4 <_dtoa_r+0xb64>
  404502:	e5c5      	b.n	404090 <_dtoa_r+0x700>
  404504:	9904      	ldr	r1, [sp, #16]
  404506:	2230      	movs	r2, #48	; 0x30
  404508:	700a      	strb	r2, [r1, #0]
  40450a:	9a02      	ldr	r2, [sp, #8]
  40450c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  404510:	3201      	adds	r2, #1
  404512:	9202      	str	r2, [sp, #8]
  404514:	f7ff bbfc 	b.w	403d10 <_dtoa_r+0x380>
  404518:	f000 80bb 	beq.w	404692 <_dtoa_r+0xd02>
  40451c:	9b02      	ldr	r3, [sp, #8]
  40451e:	425d      	negs	r5, r3
  404520:	4b84      	ldr	r3, [pc, #528]	; (404734 <_dtoa_r+0xda4>)
  404522:	f005 020f 	and.w	r2, r5, #15
  404526:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40452a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40452e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  404532:	f7fd fcab 	bl	401e8c <__aeabi_dmul>
  404536:	112d      	asrs	r5, r5, #4
  404538:	4607      	mov	r7, r0
  40453a:	4688      	mov	r8, r1
  40453c:	f000 812c 	beq.w	404798 <_dtoa_r+0xe08>
  404540:	4e7d      	ldr	r6, [pc, #500]	; (404738 <_dtoa_r+0xda8>)
  404542:	f04f 0a02 	mov.w	sl, #2
  404546:	07eb      	lsls	r3, r5, #31
  404548:	d509      	bpl.n	40455e <_dtoa_r+0xbce>
  40454a:	4638      	mov	r0, r7
  40454c:	4641      	mov	r1, r8
  40454e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404552:	f7fd fc9b 	bl	401e8c <__aeabi_dmul>
  404556:	f10a 0a01 	add.w	sl, sl, #1
  40455a:	4607      	mov	r7, r0
  40455c:	4688      	mov	r8, r1
  40455e:	106d      	asrs	r5, r5, #1
  404560:	f106 0608 	add.w	r6, r6, #8
  404564:	d1ef      	bne.n	404546 <_dtoa_r+0xbb6>
  404566:	e608      	b.n	40417a <_dtoa_r+0x7ea>
  404568:	6871      	ldr	r1, [r6, #4]
  40456a:	4620      	mov	r0, r4
  40456c:	f000 fd0e 	bl	404f8c <_Balloc>
  404570:	6933      	ldr	r3, [r6, #16]
  404572:	3302      	adds	r3, #2
  404574:	009a      	lsls	r2, r3, #2
  404576:	4605      	mov	r5, r0
  404578:	f106 010c 	add.w	r1, r6, #12
  40457c:	300c      	adds	r0, #12
  40457e:	f000 fc5f 	bl	404e40 <memcpy>
  404582:	4629      	mov	r1, r5
  404584:	2201      	movs	r2, #1
  404586:	4620      	mov	r0, r4
  404588:	f000 feac 	bl	4052e4 <__lshift>
  40458c:	9006      	str	r0, [sp, #24]
  40458e:	e4b5      	b.n	403efc <_dtoa_r+0x56c>
  404590:	2b39      	cmp	r3, #57	; 0x39
  404592:	f8cd b018 	str.w	fp, [sp, #24]
  404596:	46d0      	mov	r8, sl
  404598:	f000 80a5 	beq.w	4046e6 <_dtoa_r+0xd56>
  40459c:	f103 0a01 	add.w	sl, r3, #1
  4045a0:	46b3      	mov	fp, r6
  4045a2:	f887 a000 	strb.w	sl, [r7]
  4045a6:	1c7d      	adds	r5, r7, #1
  4045a8:	9e06      	ldr	r6, [sp, #24]
  4045aa:	e571      	b.n	404090 <_dtoa_r+0x700>
  4045ac:	465a      	mov	r2, fp
  4045ae:	46d0      	mov	r8, sl
  4045b0:	46b3      	mov	fp, r6
  4045b2:	469a      	mov	sl, r3
  4045b4:	4616      	mov	r6, r2
  4045b6:	e54f      	b.n	404058 <_dtoa_r+0x6c8>
  4045b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4045ba:	495e      	ldr	r1, [pc, #376]	; (404734 <_dtoa_r+0xda4>)
  4045bc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  4045c0:	462a      	mov	r2, r5
  4045c2:	4633      	mov	r3, r6
  4045c4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  4045c8:	f7fd fc60 	bl	401e8c <__aeabi_dmul>
  4045cc:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  4045d0:	4638      	mov	r0, r7
  4045d2:	4641      	mov	r1, r8
  4045d4:	f001 fd74 	bl	4060c0 <__aeabi_d2iz>
  4045d8:	4605      	mov	r5, r0
  4045da:	f7fd fbf1 	bl	401dc0 <__aeabi_i2d>
  4045de:	460b      	mov	r3, r1
  4045e0:	4602      	mov	r2, r0
  4045e2:	4641      	mov	r1, r8
  4045e4:	4638      	mov	r0, r7
  4045e6:	f7fd fa9d 	bl	401b24 <__aeabi_dsub>
  4045ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4045ec:	460f      	mov	r7, r1
  4045ee:	9904      	ldr	r1, [sp, #16]
  4045f0:	3530      	adds	r5, #48	; 0x30
  4045f2:	2b01      	cmp	r3, #1
  4045f4:	700d      	strb	r5, [r1, #0]
  4045f6:	4606      	mov	r6, r0
  4045f8:	f101 0501 	add.w	r5, r1, #1
  4045fc:	d026      	beq.n	40464c <_dtoa_r+0xcbc>
  4045fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404600:	9a04      	ldr	r2, [sp, #16]
  404602:	f8df b13c 	ldr.w	fp, [pc, #316]	; 404740 <_dtoa_r+0xdb0>
  404606:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40460a:	4413      	add	r3, r2
  40460c:	f04f 0a00 	mov.w	sl, #0
  404610:	4699      	mov	r9, r3
  404612:	4652      	mov	r2, sl
  404614:	465b      	mov	r3, fp
  404616:	4630      	mov	r0, r6
  404618:	4639      	mov	r1, r7
  40461a:	f7fd fc37 	bl	401e8c <__aeabi_dmul>
  40461e:	460f      	mov	r7, r1
  404620:	4606      	mov	r6, r0
  404622:	f001 fd4d 	bl	4060c0 <__aeabi_d2iz>
  404626:	4680      	mov	r8, r0
  404628:	f7fd fbca 	bl	401dc0 <__aeabi_i2d>
  40462c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404630:	4602      	mov	r2, r0
  404632:	460b      	mov	r3, r1
  404634:	4630      	mov	r0, r6
  404636:	4639      	mov	r1, r7
  404638:	f7fd fa74 	bl	401b24 <__aeabi_dsub>
  40463c:	f805 8b01 	strb.w	r8, [r5], #1
  404640:	454d      	cmp	r5, r9
  404642:	4606      	mov	r6, r0
  404644:	460f      	mov	r7, r1
  404646:	d1e4      	bne.n	404612 <_dtoa_r+0xc82>
  404648:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40464c:	4b3b      	ldr	r3, [pc, #236]	; (40473c <_dtoa_r+0xdac>)
  40464e:	2200      	movs	r2, #0
  404650:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  404654:	f7fd fa68 	bl	401b28 <__adddf3>
  404658:	4632      	mov	r2, r6
  40465a:	463b      	mov	r3, r7
  40465c:	f001 fcf2 	bl	406044 <__aeabi_dcmplt>
  404660:	2800      	cmp	r0, #0
  404662:	d046      	beq.n	4046f2 <_dtoa_r+0xd62>
  404664:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404666:	9302      	str	r3, [sp, #8]
  404668:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40466c:	f7ff bb43 	b.w	403cf6 <_dtoa_r+0x366>
  404670:	f04f 0800 	mov.w	r8, #0
  404674:	4646      	mov	r6, r8
  404676:	e6a9      	b.n	4043cc <_dtoa_r+0xa3c>
  404678:	9b08      	ldr	r3, [sp, #32]
  40467a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40467c:	1a9d      	subs	r5, r3, r2
  40467e:	2300      	movs	r3, #0
  404680:	f7ff bb71 	b.w	403d66 <_dtoa_r+0x3d6>
  404684:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404686:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404688:	9d08      	ldr	r5, [sp, #32]
  40468a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40468e:	f7ff bb6a 	b.w	403d66 <_dtoa_r+0x3d6>
  404692:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404696:	f04f 0a02 	mov.w	sl, #2
  40469a:	e56e      	b.n	40417a <_dtoa_r+0x7ea>
  40469c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40469e:	2b00      	cmp	r3, #0
  4046a0:	f43f aeb8 	beq.w	404414 <_dtoa_r+0xa84>
  4046a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046a6:	2b00      	cmp	r3, #0
  4046a8:	f77f aede 	ble.w	404468 <_dtoa_r+0xad8>
  4046ac:	2200      	movs	r2, #0
  4046ae:	4b24      	ldr	r3, [pc, #144]	; (404740 <_dtoa_r+0xdb0>)
  4046b0:	4638      	mov	r0, r7
  4046b2:	4641      	mov	r1, r8
  4046b4:	f7fd fbea 	bl	401e8c <__aeabi_dmul>
  4046b8:	4607      	mov	r7, r0
  4046ba:	4688      	mov	r8, r1
  4046bc:	f10a 0001 	add.w	r0, sl, #1
  4046c0:	f7fd fb7e 	bl	401dc0 <__aeabi_i2d>
  4046c4:	463a      	mov	r2, r7
  4046c6:	4643      	mov	r3, r8
  4046c8:	f7fd fbe0 	bl	401e8c <__aeabi_dmul>
  4046cc:	2200      	movs	r2, #0
  4046ce:	4b17      	ldr	r3, [pc, #92]	; (40472c <_dtoa_r+0xd9c>)
  4046d0:	f7fd fa2a 	bl	401b28 <__adddf3>
  4046d4:	9a02      	ldr	r2, [sp, #8]
  4046d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4046d8:	9312      	str	r3, [sp, #72]	; 0x48
  4046da:	3a01      	subs	r2, #1
  4046dc:	4605      	mov	r5, r0
  4046de:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4046e2:	9215      	str	r2, [sp, #84]	; 0x54
  4046e4:	e56a      	b.n	4041bc <_dtoa_r+0x82c>
  4046e6:	2239      	movs	r2, #57	; 0x39
  4046e8:	46b3      	mov	fp, r6
  4046ea:	703a      	strb	r2, [r7, #0]
  4046ec:	9e06      	ldr	r6, [sp, #24]
  4046ee:	1c7d      	adds	r5, r7, #1
  4046f0:	e4c0      	b.n	404074 <_dtoa_r+0x6e4>
  4046f2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  4046f6:	2000      	movs	r0, #0
  4046f8:	4910      	ldr	r1, [pc, #64]	; (40473c <_dtoa_r+0xdac>)
  4046fa:	f7fd fa13 	bl	401b24 <__aeabi_dsub>
  4046fe:	4632      	mov	r2, r6
  404700:	463b      	mov	r3, r7
  404702:	f001 fcbd 	bl	406080 <__aeabi_dcmpgt>
  404706:	b908      	cbnz	r0, 40470c <_dtoa_r+0xd7c>
  404708:	e6ae      	b.n	404468 <_dtoa_r+0xad8>
  40470a:	4615      	mov	r5, r2
  40470c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404710:	2b30      	cmp	r3, #48	; 0x30
  404712:	f105 32ff 	add.w	r2, r5, #4294967295
  404716:	d0f8      	beq.n	40470a <_dtoa_r+0xd7a>
  404718:	e5d7      	b.n	4042ca <_dtoa_r+0x93a>
  40471a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40471e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404720:	9302      	str	r3, [sp, #8]
  404722:	f7ff bae8 	b.w	403cf6 <_dtoa_r+0x366>
  404726:	970c      	str	r7, [sp, #48]	; 0x30
  404728:	f7ff bba5 	b.w	403e76 <_dtoa_r+0x4e6>
  40472c:	401c0000 	.word	0x401c0000
  404730:	40140000 	.word	0x40140000
  404734:	00406f28 	.word	0x00406f28
  404738:	00406f00 	.word	0x00406f00
  40473c:	3fe00000 	.word	0x3fe00000
  404740:	40240000 	.word	0x40240000
  404744:	2b39      	cmp	r3, #57	; 0x39
  404746:	f8cd b018 	str.w	fp, [sp, #24]
  40474a:	46d0      	mov	r8, sl
  40474c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  404750:	469a      	mov	sl, r3
  404752:	d0c8      	beq.n	4046e6 <_dtoa_r+0xd56>
  404754:	f1bb 0f00 	cmp.w	fp, #0
  404758:	f73f aebf 	bgt.w	4044da <_dtoa_r+0xb4a>
  40475c:	e6bf      	b.n	4044de <_dtoa_r+0xb4e>
  40475e:	f47f aebe 	bne.w	4044de <_dtoa_r+0xb4e>
  404762:	f01a 0f01 	tst.w	sl, #1
  404766:	f43f aeba 	beq.w	4044de <_dtoa_r+0xb4e>
  40476a:	e6b2      	b.n	4044d2 <_dtoa_r+0xb42>
  40476c:	f04f 0800 	mov.w	r8, #0
  404770:	4646      	mov	r6, r8
  404772:	e5e9      	b.n	404348 <_dtoa_r+0x9b8>
  404774:	4631      	mov	r1, r6
  404776:	2300      	movs	r3, #0
  404778:	220a      	movs	r2, #10
  40477a:	4620      	mov	r0, r4
  40477c:	f000 fc36 	bl	404fec <__multadd>
  404780:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404782:	2b00      	cmp	r3, #0
  404784:	4606      	mov	r6, r0
  404786:	dd0a      	ble.n	40479e <_dtoa_r+0xe0e>
  404788:	930a      	str	r3, [sp, #40]	; 0x28
  40478a:	f7ff bbaa 	b.w	403ee2 <_dtoa_r+0x552>
  40478e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404790:	2b02      	cmp	r3, #2
  404792:	dc23      	bgt.n	4047dc <_dtoa_r+0xe4c>
  404794:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404796:	e43b      	b.n	404010 <_dtoa_r+0x680>
  404798:	f04f 0a02 	mov.w	sl, #2
  40479c:	e4ed      	b.n	40417a <_dtoa_r+0x7ea>
  40479e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4047a0:	2b02      	cmp	r3, #2
  4047a2:	dc1b      	bgt.n	4047dc <_dtoa_r+0xe4c>
  4047a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047a6:	e7ef      	b.n	404788 <_dtoa_r+0xdf8>
  4047a8:	2500      	movs	r5, #0
  4047aa:	6465      	str	r5, [r4, #68]	; 0x44
  4047ac:	4629      	mov	r1, r5
  4047ae:	4620      	mov	r0, r4
  4047b0:	f000 fbec 	bl	404f8c <_Balloc>
  4047b4:	f04f 33ff 	mov.w	r3, #4294967295
  4047b8:	930a      	str	r3, [sp, #40]	; 0x28
  4047ba:	930f      	str	r3, [sp, #60]	; 0x3c
  4047bc:	2301      	movs	r3, #1
  4047be:	9004      	str	r0, [sp, #16]
  4047c0:	9525      	str	r5, [sp, #148]	; 0x94
  4047c2:	6420      	str	r0, [r4, #64]	; 0x40
  4047c4:	930b      	str	r3, [sp, #44]	; 0x2c
  4047c6:	f7ff b9dd 	b.w	403b84 <_dtoa_r+0x1f4>
  4047ca:	2501      	movs	r5, #1
  4047cc:	f7ff b9a5 	b.w	403b1a <_dtoa_r+0x18a>
  4047d0:	f43f ab69 	beq.w	403ea6 <_dtoa_r+0x516>
  4047d4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  4047d8:	f7ff bbf9 	b.w	403fce <_dtoa_r+0x63e>
  4047dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  4047de:	930a      	str	r3, [sp, #40]	; 0x28
  4047e0:	e5e5      	b.n	4043ae <_dtoa_r+0xa1e>
  4047e2:	bf00      	nop

004047e4 <__libc_fini_array>:
  4047e4:	b538      	push	{r3, r4, r5, lr}
  4047e6:	4c0a      	ldr	r4, [pc, #40]	; (404810 <__libc_fini_array+0x2c>)
  4047e8:	4d0a      	ldr	r5, [pc, #40]	; (404814 <__libc_fini_array+0x30>)
  4047ea:	1b64      	subs	r4, r4, r5
  4047ec:	10a4      	asrs	r4, r4, #2
  4047ee:	d00a      	beq.n	404806 <__libc_fini_array+0x22>
  4047f0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4047f4:	3b01      	subs	r3, #1
  4047f6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4047fa:	3c01      	subs	r4, #1
  4047fc:	f855 3904 	ldr.w	r3, [r5], #-4
  404800:	4798      	blx	r3
  404802:	2c00      	cmp	r4, #0
  404804:	d1f9      	bne.n	4047fa <__libc_fini_array+0x16>
  404806:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40480a:	f002 bc8b 	b.w	407124 <_fini>
  40480e:	bf00      	nop
  404810:	00407134 	.word	0x00407134
  404814:	00407130 	.word	0x00407130

00404818 <_localeconv_r>:
  404818:	4a04      	ldr	r2, [pc, #16]	; (40482c <_localeconv_r+0x14>)
  40481a:	4b05      	ldr	r3, [pc, #20]	; (404830 <_localeconv_r+0x18>)
  40481c:	6812      	ldr	r2, [r2, #0]
  40481e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404820:	2800      	cmp	r0, #0
  404822:	bf08      	it	eq
  404824:	4618      	moveq	r0, r3
  404826:	30f0      	adds	r0, #240	; 0xf0
  404828:	4770      	bx	lr
  40482a:	bf00      	nop
  40482c:	20400028 	.word	0x20400028
  404830:	2040086c 	.word	0x2040086c

00404834 <__retarget_lock_acquire_recursive>:
  404834:	4770      	bx	lr
  404836:	bf00      	nop

00404838 <__retarget_lock_release_recursive>:
  404838:	4770      	bx	lr
  40483a:	bf00      	nop

0040483c <_malloc_r>:
  40483c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404840:	f101 060b 	add.w	r6, r1, #11
  404844:	2e16      	cmp	r6, #22
  404846:	b083      	sub	sp, #12
  404848:	4605      	mov	r5, r0
  40484a:	f240 809e 	bls.w	40498a <_malloc_r+0x14e>
  40484e:	f036 0607 	bics.w	r6, r6, #7
  404852:	f100 80bd 	bmi.w	4049d0 <_malloc_r+0x194>
  404856:	42b1      	cmp	r1, r6
  404858:	f200 80ba 	bhi.w	4049d0 <_malloc_r+0x194>
  40485c:	f000 fb8a 	bl	404f74 <__malloc_lock>
  404860:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404864:	f0c0 8293 	bcc.w	404d8e <_malloc_r+0x552>
  404868:	0a73      	lsrs	r3, r6, #9
  40486a:	f000 80b8 	beq.w	4049de <_malloc_r+0x1a2>
  40486e:	2b04      	cmp	r3, #4
  404870:	f200 8179 	bhi.w	404b66 <_malloc_r+0x32a>
  404874:	09b3      	lsrs	r3, r6, #6
  404876:	f103 0039 	add.w	r0, r3, #57	; 0x39
  40487a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  40487e:	00c3      	lsls	r3, r0, #3
  404880:	4fbf      	ldr	r7, [pc, #764]	; (404b80 <_malloc_r+0x344>)
  404882:	443b      	add	r3, r7
  404884:	f1a3 0108 	sub.w	r1, r3, #8
  404888:	685c      	ldr	r4, [r3, #4]
  40488a:	42a1      	cmp	r1, r4
  40488c:	d106      	bne.n	40489c <_malloc_r+0x60>
  40488e:	e00c      	b.n	4048aa <_malloc_r+0x6e>
  404890:	2a00      	cmp	r2, #0
  404892:	f280 80aa 	bge.w	4049ea <_malloc_r+0x1ae>
  404896:	68e4      	ldr	r4, [r4, #12]
  404898:	42a1      	cmp	r1, r4
  40489a:	d006      	beq.n	4048aa <_malloc_r+0x6e>
  40489c:	6863      	ldr	r3, [r4, #4]
  40489e:	f023 0303 	bic.w	r3, r3, #3
  4048a2:	1b9a      	subs	r2, r3, r6
  4048a4:	2a0f      	cmp	r2, #15
  4048a6:	ddf3      	ble.n	404890 <_malloc_r+0x54>
  4048a8:	4670      	mov	r0, lr
  4048aa:	693c      	ldr	r4, [r7, #16]
  4048ac:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404b94 <_malloc_r+0x358>
  4048b0:	4574      	cmp	r4, lr
  4048b2:	f000 81ab 	beq.w	404c0c <_malloc_r+0x3d0>
  4048b6:	6863      	ldr	r3, [r4, #4]
  4048b8:	f023 0303 	bic.w	r3, r3, #3
  4048bc:	1b9a      	subs	r2, r3, r6
  4048be:	2a0f      	cmp	r2, #15
  4048c0:	f300 8190 	bgt.w	404be4 <_malloc_r+0x3a8>
  4048c4:	2a00      	cmp	r2, #0
  4048c6:	f8c7 e014 	str.w	lr, [r7, #20]
  4048ca:	f8c7 e010 	str.w	lr, [r7, #16]
  4048ce:	f280 809d 	bge.w	404a0c <_malloc_r+0x1d0>
  4048d2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4048d6:	f080 8161 	bcs.w	404b9c <_malloc_r+0x360>
  4048da:	08db      	lsrs	r3, r3, #3
  4048dc:	f103 0c01 	add.w	ip, r3, #1
  4048e0:	1099      	asrs	r1, r3, #2
  4048e2:	687a      	ldr	r2, [r7, #4]
  4048e4:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  4048e8:	f8c4 8008 	str.w	r8, [r4, #8]
  4048ec:	2301      	movs	r3, #1
  4048ee:	408b      	lsls	r3, r1
  4048f0:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  4048f4:	4313      	orrs	r3, r2
  4048f6:	3908      	subs	r1, #8
  4048f8:	60e1      	str	r1, [r4, #12]
  4048fa:	607b      	str	r3, [r7, #4]
  4048fc:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404900:	f8c8 400c 	str.w	r4, [r8, #12]
  404904:	1082      	asrs	r2, r0, #2
  404906:	2401      	movs	r4, #1
  404908:	4094      	lsls	r4, r2
  40490a:	429c      	cmp	r4, r3
  40490c:	f200 808b 	bhi.w	404a26 <_malloc_r+0x1ea>
  404910:	421c      	tst	r4, r3
  404912:	d106      	bne.n	404922 <_malloc_r+0xe6>
  404914:	f020 0003 	bic.w	r0, r0, #3
  404918:	0064      	lsls	r4, r4, #1
  40491a:	421c      	tst	r4, r3
  40491c:	f100 0004 	add.w	r0, r0, #4
  404920:	d0fa      	beq.n	404918 <_malloc_r+0xdc>
  404922:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404926:	46cc      	mov	ip, r9
  404928:	4680      	mov	r8, r0
  40492a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40492e:	459c      	cmp	ip, r3
  404930:	d107      	bne.n	404942 <_malloc_r+0x106>
  404932:	e16d      	b.n	404c10 <_malloc_r+0x3d4>
  404934:	2a00      	cmp	r2, #0
  404936:	f280 817b 	bge.w	404c30 <_malloc_r+0x3f4>
  40493a:	68db      	ldr	r3, [r3, #12]
  40493c:	459c      	cmp	ip, r3
  40493e:	f000 8167 	beq.w	404c10 <_malloc_r+0x3d4>
  404942:	6859      	ldr	r1, [r3, #4]
  404944:	f021 0103 	bic.w	r1, r1, #3
  404948:	1b8a      	subs	r2, r1, r6
  40494a:	2a0f      	cmp	r2, #15
  40494c:	ddf2      	ble.n	404934 <_malloc_r+0xf8>
  40494e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404952:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404956:	9300      	str	r3, [sp, #0]
  404958:	199c      	adds	r4, r3, r6
  40495a:	4628      	mov	r0, r5
  40495c:	f046 0601 	orr.w	r6, r6, #1
  404960:	f042 0501 	orr.w	r5, r2, #1
  404964:	605e      	str	r6, [r3, #4]
  404966:	f8c8 c00c 	str.w	ip, [r8, #12]
  40496a:	f8cc 8008 	str.w	r8, [ip, #8]
  40496e:	617c      	str	r4, [r7, #20]
  404970:	613c      	str	r4, [r7, #16]
  404972:	f8c4 e00c 	str.w	lr, [r4, #12]
  404976:	f8c4 e008 	str.w	lr, [r4, #8]
  40497a:	6065      	str	r5, [r4, #4]
  40497c:	505a      	str	r2, [r3, r1]
  40497e:	f000 faff 	bl	404f80 <__malloc_unlock>
  404982:	9b00      	ldr	r3, [sp, #0]
  404984:	f103 0408 	add.w	r4, r3, #8
  404988:	e01e      	b.n	4049c8 <_malloc_r+0x18c>
  40498a:	2910      	cmp	r1, #16
  40498c:	d820      	bhi.n	4049d0 <_malloc_r+0x194>
  40498e:	f000 faf1 	bl	404f74 <__malloc_lock>
  404992:	2610      	movs	r6, #16
  404994:	2318      	movs	r3, #24
  404996:	2002      	movs	r0, #2
  404998:	4f79      	ldr	r7, [pc, #484]	; (404b80 <_malloc_r+0x344>)
  40499a:	443b      	add	r3, r7
  40499c:	f1a3 0208 	sub.w	r2, r3, #8
  4049a0:	685c      	ldr	r4, [r3, #4]
  4049a2:	4294      	cmp	r4, r2
  4049a4:	f000 813d 	beq.w	404c22 <_malloc_r+0x3e6>
  4049a8:	6863      	ldr	r3, [r4, #4]
  4049aa:	68e1      	ldr	r1, [r4, #12]
  4049ac:	68a6      	ldr	r6, [r4, #8]
  4049ae:	f023 0303 	bic.w	r3, r3, #3
  4049b2:	4423      	add	r3, r4
  4049b4:	4628      	mov	r0, r5
  4049b6:	685a      	ldr	r2, [r3, #4]
  4049b8:	60f1      	str	r1, [r6, #12]
  4049ba:	f042 0201 	orr.w	r2, r2, #1
  4049be:	608e      	str	r6, [r1, #8]
  4049c0:	605a      	str	r2, [r3, #4]
  4049c2:	f000 fadd 	bl	404f80 <__malloc_unlock>
  4049c6:	3408      	adds	r4, #8
  4049c8:	4620      	mov	r0, r4
  4049ca:	b003      	add	sp, #12
  4049cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049d0:	2400      	movs	r4, #0
  4049d2:	230c      	movs	r3, #12
  4049d4:	4620      	mov	r0, r4
  4049d6:	602b      	str	r3, [r5, #0]
  4049d8:	b003      	add	sp, #12
  4049da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4049de:	2040      	movs	r0, #64	; 0x40
  4049e0:	f44f 7300 	mov.w	r3, #512	; 0x200
  4049e4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4049e8:	e74a      	b.n	404880 <_malloc_r+0x44>
  4049ea:	4423      	add	r3, r4
  4049ec:	68e1      	ldr	r1, [r4, #12]
  4049ee:	685a      	ldr	r2, [r3, #4]
  4049f0:	68a6      	ldr	r6, [r4, #8]
  4049f2:	f042 0201 	orr.w	r2, r2, #1
  4049f6:	60f1      	str	r1, [r6, #12]
  4049f8:	4628      	mov	r0, r5
  4049fa:	608e      	str	r6, [r1, #8]
  4049fc:	605a      	str	r2, [r3, #4]
  4049fe:	f000 fabf 	bl	404f80 <__malloc_unlock>
  404a02:	3408      	adds	r4, #8
  404a04:	4620      	mov	r0, r4
  404a06:	b003      	add	sp, #12
  404a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a0c:	4423      	add	r3, r4
  404a0e:	4628      	mov	r0, r5
  404a10:	685a      	ldr	r2, [r3, #4]
  404a12:	f042 0201 	orr.w	r2, r2, #1
  404a16:	605a      	str	r2, [r3, #4]
  404a18:	f000 fab2 	bl	404f80 <__malloc_unlock>
  404a1c:	3408      	adds	r4, #8
  404a1e:	4620      	mov	r0, r4
  404a20:	b003      	add	sp, #12
  404a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a26:	68bc      	ldr	r4, [r7, #8]
  404a28:	6863      	ldr	r3, [r4, #4]
  404a2a:	f023 0803 	bic.w	r8, r3, #3
  404a2e:	45b0      	cmp	r8, r6
  404a30:	d304      	bcc.n	404a3c <_malloc_r+0x200>
  404a32:	eba8 0306 	sub.w	r3, r8, r6
  404a36:	2b0f      	cmp	r3, #15
  404a38:	f300 8085 	bgt.w	404b46 <_malloc_r+0x30a>
  404a3c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404b98 <_malloc_r+0x35c>
  404a40:	4b50      	ldr	r3, [pc, #320]	; (404b84 <_malloc_r+0x348>)
  404a42:	f8d9 2000 	ldr.w	r2, [r9]
  404a46:	681b      	ldr	r3, [r3, #0]
  404a48:	3201      	adds	r2, #1
  404a4a:	4433      	add	r3, r6
  404a4c:	eb04 0a08 	add.w	sl, r4, r8
  404a50:	f000 8155 	beq.w	404cfe <_malloc_r+0x4c2>
  404a54:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404a58:	330f      	adds	r3, #15
  404a5a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404a5e:	f02b 0b0f 	bic.w	fp, fp, #15
  404a62:	4659      	mov	r1, fp
  404a64:	4628      	mov	r0, r5
  404a66:	f000 fd8b 	bl	405580 <_sbrk_r>
  404a6a:	1c41      	adds	r1, r0, #1
  404a6c:	4602      	mov	r2, r0
  404a6e:	f000 80fc 	beq.w	404c6a <_malloc_r+0x42e>
  404a72:	4582      	cmp	sl, r0
  404a74:	f200 80f7 	bhi.w	404c66 <_malloc_r+0x42a>
  404a78:	4b43      	ldr	r3, [pc, #268]	; (404b88 <_malloc_r+0x34c>)
  404a7a:	6819      	ldr	r1, [r3, #0]
  404a7c:	4459      	add	r1, fp
  404a7e:	6019      	str	r1, [r3, #0]
  404a80:	f000 814d 	beq.w	404d1e <_malloc_r+0x4e2>
  404a84:	f8d9 0000 	ldr.w	r0, [r9]
  404a88:	3001      	adds	r0, #1
  404a8a:	bf1b      	ittet	ne
  404a8c:	eba2 0a0a 	subne.w	sl, r2, sl
  404a90:	4451      	addne	r1, sl
  404a92:	f8c9 2000 	streq.w	r2, [r9]
  404a96:	6019      	strne	r1, [r3, #0]
  404a98:	f012 0107 	ands.w	r1, r2, #7
  404a9c:	f000 8115 	beq.w	404cca <_malloc_r+0x48e>
  404aa0:	f1c1 0008 	rsb	r0, r1, #8
  404aa4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404aa8:	4402      	add	r2, r0
  404aaa:	3108      	adds	r1, #8
  404aac:	eb02 090b 	add.w	r9, r2, fp
  404ab0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404ab4:	eba1 0909 	sub.w	r9, r1, r9
  404ab8:	4649      	mov	r1, r9
  404aba:	4628      	mov	r0, r5
  404abc:	9301      	str	r3, [sp, #4]
  404abe:	9200      	str	r2, [sp, #0]
  404ac0:	f000 fd5e 	bl	405580 <_sbrk_r>
  404ac4:	1c43      	adds	r3, r0, #1
  404ac6:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404aca:	f000 8143 	beq.w	404d54 <_malloc_r+0x518>
  404ace:	1a80      	subs	r0, r0, r2
  404ad0:	4448      	add	r0, r9
  404ad2:	f040 0001 	orr.w	r0, r0, #1
  404ad6:	6819      	ldr	r1, [r3, #0]
  404ad8:	60ba      	str	r2, [r7, #8]
  404ada:	4449      	add	r1, r9
  404adc:	42bc      	cmp	r4, r7
  404ade:	6050      	str	r0, [r2, #4]
  404ae0:	6019      	str	r1, [r3, #0]
  404ae2:	d017      	beq.n	404b14 <_malloc_r+0x2d8>
  404ae4:	f1b8 0f0f 	cmp.w	r8, #15
  404ae8:	f240 80fb 	bls.w	404ce2 <_malloc_r+0x4a6>
  404aec:	6860      	ldr	r0, [r4, #4]
  404aee:	f1a8 020c 	sub.w	r2, r8, #12
  404af2:	f022 0207 	bic.w	r2, r2, #7
  404af6:	eb04 0e02 	add.w	lr, r4, r2
  404afa:	f000 0001 	and.w	r0, r0, #1
  404afe:	f04f 0c05 	mov.w	ip, #5
  404b02:	4310      	orrs	r0, r2
  404b04:	2a0f      	cmp	r2, #15
  404b06:	6060      	str	r0, [r4, #4]
  404b08:	f8ce c004 	str.w	ip, [lr, #4]
  404b0c:	f8ce c008 	str.w	ip, [lr, #8]
  404b10:	f200 8117 	bhi.w	404d42 <_malloc_r+0x506>
  404b14:	4b1d      	ldr	r3, [pc, #116]	; (404b8c <_malloc_r+0x350>)
  404b16:	68bc      	ldr	r4, [r7, #8]
  404b18:	681a      	ldr	r2, [r3, #0]
  404b1a:	4291      	cmp	r1, r2
  404b1c:	bf88      	it	hi
  404b1e:	6019      	strhi	r1, [r3, #0]
  404b20:	4b1b      	ldr	r3, [pc, #108]	; (404b90 <_malloc_r+0x354>)
  404b22:	681a      	ldr	r2, [r3, #0]
  404b24:	4291      	cmp	r1, r2
  404b26:	6862      	ldr	r2, [r4, #4]
  404b28:	bf88      	it	hi
  404b2a:	6019      	strhi	r1, [r3, #0]
  404b2c:	f022 0203 	bic.w	r2, r2, #3
  404b30:	4296      	cmp	r6, r2
  404b32:	eba2 0306 	sub.w	r3, r2, r6
  404b36:	d801      	bhi.n	404b3c <_malloc_r+0x300>
  404b38:	2b0f      	cmp	r3, #15
  404b3a:	dc04      	bgt.n	404b46 <_malloc_r+0x30a>
  404b3c:	4628      	mov	r0, r5
  404b3e:	f000 fa1f 	bl	404f80 <__malloc_unlock>
  404b42:	2400      	movs	r4, #0
  404b44:	e740      	b.n	4049c8 <_malloc_r+0x18c>
  404b46:	19a2      	adds	r2, r4, r6
  404b48:	f043 0301 	orr.w	r3, r3, #1
  404b4c:	f046 0601 	orr.w	r6, r6, #1
  404b50:	6066      	str	r6, [r4, #4]
  404b52:	4628      	mov	r0, r5
  404b54:	60ba      	str	r2, [r7, #8]
  404b56:	6053      	str	r3, [r2, #4]
  404b58:	f000 fa12 	bl	404f80 <__malloc_unlock>
  404b5c:	3408      	adds	r4, #8
  404b5e:	4620      	mov	r0, r4
  404b60:	b003      	add	sp, #12
  404b62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404b66:	2b14      	cmp	r3, #20
  404b68:	d971      	bls.n	404c4e <_malloc_r+0x412>
  404b6a:	2b54      	cmp	r3, #84	; 0x54
  404b6c:	f200 80a3 	bhi.w	404cb6 <_malloc_r+0x47a>
  404b70:	0b33      	lsrs	r3, r6, #12
  404b72:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404b76:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404b7a:	00c3      	lsls	r3, r0, #3
  404b7c:	e680      	b.n	404880 <_malloc_r+0x44>
  404b7e:	bf00      	nop
  404b80:	2040045c 	.word	0x2040045c
  404b84:	20400ccc 	.word	0x20400ccc
  404b88:	20400c9c 	.word	0x20400c9c
  404b8c:	20400cc4 	.word	0x20400cc4
  404b90:	20400cc8 	.word	0x20400cc8
  404b94:	20400464 	.word	0x20400464
  404b98:	20400864 	.word	0x20400864
  404b9c:	0a5a      	lsrs	r2, r3, #9
  404b9e:	2a04      	cmp	r2, #4
  404ba0:	d95b      	bls.n	404c5a <_malloc_r+0x41e>
  404ba2:	2a14      	cmp	r2, #20
  404ba4:	f200 80ae 	bhi.w	404d04 <_malloc_r+0x4c8>
  404ba8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404bac:	00c9      	lsls	r1, r1, #3
  404bae:	325b      	adds	r2, #91	; 0x5b
  404bb0:	eb07 0c01 	add.w	ip, r7, r1
  404bb4:	5879      	ldr	r1, [r7, r1]
  404bb6:	f1ac 0c08 	sub.w	ip, ip, #8
  404bba:	458c      	cmp	ip, r1
  404bbc:	f000 8088 	beq.w	404cd0 <_malloc_r+0x494>
  404bc0:	684a      	ldr	r2, [r1, #4]
  404bc2:	f022 0203 	bic.w	r2, r2, #3
  404bc6:	4293      	cmp	r3, r2
  404bc8:	d273      	bcs.n	404cb2 <_malloc_r+0x476>
  404bca:	6889      	ldr	r1, [r1, #8]
  404bcc:	458c      	cmp	ip, r1
  404bce:	d1f7      	bne.n	404bc0 <_malloc_r+0x384>
  404bd0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404bd4:	687b      	ldr	r3, [r7, #4]
  404bd6:	60e2      	str	r2, [r4, #12]
  404bd8:	f8c4 c008 	str.w	ip, [r4, #8]
  404bdc:	6094      	str	r4, [r2, #8]
  404bde:	f8cc 400c 	str.w	r4, [ip, #12]
  404be2:	e68f      	b.n	404904 <_malloc_r+0xc8>
  404be4:	19a1      	adds	r1, r4, r6
  404be6:	f046 0c01 	orr.w	ip, r6, #1
  404bea:	f042 0601 	orr.w	r6, r2, #1
  404bee:	f8c4 c004 	str.w	ip, [r4, #4]
  404bf2:	4628      	mov	r0, r5
  404bf4:	6179      	str	r1, [r7, #20]
  404bf6:	6139      	str	r1, [r7, #16]
  404bf8:	f8c1 e00c 	str.w	lr, [r1, #12]
  404bfc:	f8c1 e008 	str.w	lr, [r1, #8]
  404c00:	604e      	str	r6, [r1, #4]
  404c02:	50e2      	str	r2, [r4, r3]
  404c04:	f000 f9bc 	bl	404f80 <__malloc_unlock>
  404c08:	3408      	adds	r4, #8
  404c0a:	e6dd      	b.n	4049c8 <_malloc_r+0x18c>
  404c0c:	687b      	ldr	r3, [r7, #4]
  404c0e:	e679      	b.n	404904 <_malloc_r+0xc8>
  404c10:	f108 0801 	add.w	r8, r8, #1
  404c14:	f018 0f03 	tst.w	r8, #3
  404c18:	f10c 0c08 	add.w	ip, ip, #8
  404c1c:	f47f ae85 	bne.w	40492a <_malloc_r+0xee>
  404c20:	e02d      	b.n	404c7e <_malloc_r+0x442>
  404c22:	68dc      	ldr	r4, [r3, #12]
  404c24:	42a3      	cmp	r3, r4
  404c26:	bf08      	it	eq
  404c28:	3002      	addeq	r0, #2
  404c2a:	f43f ae3e 	beq.w	4048aa <_malloc_r+0x6e>
  404c2e:	e6bb      	b.n	4049a8 <_malloc_r+0x16c>
  404c30:	4419      	add	r1, r3
  404c32:	461c      	mov	r4, r3
  404c34:	684a      	ldr	r2, [r1, #4]
  404c36:	68db      	ldr	r3, [r3, #12]
  404c38:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404c3c:	f042 0201 	orr.w	r2, r2, #1
  404c40:	604a      	str	r2, [r1, #4]
  404c42:	4628      	mov	r0, r5
  404c44:	60f3      	str	r3, [r6, #12]
  404c46:	609e      	str	r6, [r3, #8]
  404c48:	f000 f99a 	bl	404f80 <__malloc_unlock>
  404c4c:	e6bc      	b.n	4049c8 <_malloc_r+0x18c>
  404c4e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404c52:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404c56:	00c3      	lsls	r3, r0, #3
  404c58:	e612      	b.n	404880 <_malloc_r+0x44>
  404c5a:	099a      	lsrs	r2, r3, #6
  404c5c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404c60:	00c9      	lsls	r1, r1, #3
  404c62:	3238      	adds	r2, #56	; 0x38
  404c64:	e7a4      	b.n	404bb0 <_malloc_r+0x374>
  404c66:	42bc      	cmp	r4, r7
  404c68:	d054      	beq.n	404d14 <_malloc_r+0x4d8>
  404c6a:	68bc      	ldr	r4, [r7, #8]
  404c6c:	6862      	ldr	r2, [r4, #4]
  404c6e:	f022 0203 	bic.w	r2, r2, #3
  404c72:	e75d      	b.n	404b30 <_malloc_r+0x2f4>
  404c74:	f859 3908 	ldr.w	r3, [r9], #-8
  404c78:	4599      	cmp	r9, r3
  404c7a:	f040 8086 	bne.w	404d8a <_malloc_r+0x54e>
  404c7e:	f010 0f03 	tst.w	r0, #3
  404c82:	f100 30ff 	add.w	r0, r0, #4294967295
  404c86:	d1f5      	bne.n	404c74 <_malloc_r+0x438>
  404c88:	687b      	ldr	r3, [r7, #4]
  404c8a:	ea23 0304 	bic.w	r3, r3, r4
  404c8e:	607b      	str	r3, [r7, #4]
  404c90:	0064      	lsls	r4, r4, #1
  404c92:	429c      	cmp	r4, r3
  404c94:	f63f aec7 	bhi.w	404a26 <_malloc_r+0x1ea>
  404c98:	2c00      	cmp	r4, #0
  404c9a:	f43f aec4 	beq.w	404a26 <_malloc_r+0x1ea>
  404c9e:	421c      	tst	r4, r3
  404ca0:	4640      	mov	r0, r8
  404ca2:	f47f ae3e 	bne.w	404922 <_malloc_r+0xe6>
  404ca6:	0064      	lsls	r4, r4, #1
  404ca8:	421c      	tst	r4, r3
  404caa:	f100 0004 	add.w	r0, r0, #4
  404cae:	d0fa      	beq.n	404ca6 <_malloc_r+0x46a>
  404cb0:	e637      	b.n	404922 <_malloc_r+0xe6>
  404cb2:	468c      	mov	ip, r1
  404cb4:	e78c      	b.n	404bd0 <_malloc_r+0x394>
  404cb6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404cba:	d815      	bhi.n	404ce8 <_malloc_r+0x4ac>
  404cbc:	0bf3      	lsrs	r3, r6, #15
  404cbe:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404cc2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404cc6:	00c3      	lsls	r3, r0, #3
  404cc8:	e5da      	b.n	404880 <_malloc_r+0x44>
  404cca:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404cce:	e6ed      	b.n	404aac <_malloc_r+0x270>
  404cd0:	687b      	ldr	r3, [r7, #4]
  404cd2:	1092      	asrs	r2, r2, #2
  404cd4:	2101      	movs	r1, #1
  404cd6:	fa01 f202 	lsl.w	r2, r1, r2
  404cda:	4313      	orrs	r3, r2
  404cdc:	607b      	str	r3, [r7, #4]
  404cde:	4662      	mov	r2, ip
  404ce0:	e779      	b.n	404bd6 <_malloc_r+0x39a>
  404ce2:	2301      	movs	r3, #1
  404ce4:	6053      	str	r3, [r2, #4]
  404ce6:	e729      	b.n	404b3c <_malloc_r+0x300>
  404ce8:	f240 5254 	movw	r2, #1364	; 0x554
  404cec:	4293      	cmp	r3, r2
  404cee:	d822      	bhi.n	404d36 <_malloc_r+0x4fa>
  404cf0:	0cb3      	lsrs	r3, r6, #18
  404cf2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404cf6:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404cfa:	00c3      	lsls	r3, r0, #3
  404cfc:	e5c0      	b.n	404880 <_malloc_r+0x44>
  404cfe:	f103 0b10 	add.w	fp, r3, #16
  404d02:	e6ae      	b.n	404a62 <_malloc_r+0x226>
  404d04:	2a54      	cmp	r2, #84	; 0x54
  404d06:	d829      	bhi.n	404d5c <_malloc_r+0x520>
  404d08:	0b1a      	lsrs	r2, r3, #12
  404d0a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404d0e:	00c9      	lsls	r1, r1, #3
  404d10:	326e      	adds	r2, #110	; 0x6e
  404d12:	e74d      	b.n	404bb0 <_malloc_r+0x374>
  404d14:	4b20      	ldr	r3, [pc, #128]	; (404d98 <_malloc_r+0x55c>)
  404d16:	6819      	ldr	r1, [r3, #0]
  404d18:	4459      	add	r1, fp
  404d1a:	6019      	str	r1, [r3, #0]
  404d1c:	e6b2      	b.n	404a84 <_malloc_r+0x248>
  404d1e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404d22:	2800      	cmp	r0, #0
  404d24:	f47f aeae 	bne.w	404a84 <_malloc_r+0x248>
  404d28:	eb08 030b 	add.w	r3, r8, fp
  404d2c:	68ba      	ldr	r2, [r7, #8]
  404d2e:	f043 0301 	orr.w	r3, r3, #1
  404d32:	6053      	str	r3, [r2, #4]
  404d34:	e6ee      	b.n	404b14 <_malloc_r+0x2d8>
  404d36:	207f      	movs	r0, #127	; 0x7f
  404d38:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404d3c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404d40:	e59e      	b.n	404880 <_malloc_r+0x44>
  404d42:	f104 0108 	add.w	r1, r4, #8
  404d46:	4628      	mov	r0, r5
  404d48:	9300      	str	r3, [sp, #0]
  404d4a:	f000 fe07 	bl	40595c <_free_r>
  404d4e:	9b00      	ldr	r3, [sp, #0]
  404d50:	6819      	ldr	r1, [r3, #0]
  404d52:	e6df      	b.n	404b14 <_malloc_r+0x2d8>
  404d54:	2001      	movs	r0, #1
  404d56:	f04f 0900 	mov.w	r9, #0
  404d5a:	e6bc      	b.n	404ad6 <_malloc_r+0x29a>
  404d5c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404d60:	d805      	bhi.n	404d6e <_malloc_r+0x532>
  404d62:	0bda      	lsrs	r2, r3, #15
  404d64:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404d68:	00c9      	lsls	r1, r1, #3
  404d6a:	3277      	adds	r2, #119	; 0x77
  404d6c:	e720      	b.n	404bb0 <_malloc_r+0x374>
  404d6e:	f240 5154 	movw	r1, #1364	; 0x554
  404d72:	428a      	cmp	r2, r1
  404d74:	d805      	bhi.n	404d82 <_malloc_r+0x546>
  404d76:	0c9a      	lsrs	r2, r3, #18
  404d78:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  404d7c:	00c9      	lsls	r1, r1, #3
  404d7e:	327c      	adds	r2, #124	; 0x7c
  404d80:	e716      	b.n	404bb0 <_malloc_r+0x374>
  404d82:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404d86:	227e      	movs	r2, #126	; 0x7e
  404d88:	e712      	b.n	404bb0 <_malloc_r+0x374>
  404d8a:	687b      	ldr	r3, [r7, #4]
  404d8c:	e780      	b.n	404c90 <_malloc_r+0x454>
  404d8e:	08f0      	lsrs	r0, r6, #3
  404d90:	f106 0308 	add.w	r3, r6, #8
  404d94:	e600      	b.n	404998 <_malloc_r+0x15c>
  404d96:	bf00      	nop
  404d98:	20400c9c 	.word	0x20400c9c
  404d9c:	00000000 	.word	0x00000000

00404da0 <memchr>:
  404da0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404da4:	2a10      	cmp	r2, #16
  404da6:	db2b      	blt.n	404e00 <memchr+0x60>
  404da8:	f010 0f07 	tst.w	r0, #7
  404dac:	d008      	beq.n	404dc0 <memchr+0x20>
  404dae:	f810 3b01 	ldrb.w	r3, [r0], #1
  404db2:	3a01      	subs	r2, #1
  404db4:	428b      	cmp	r3, r1
  404db6:	d02d      	beq.n	404e14 <memchr+0x74>
  404db8:	f010 0f07 	tst.w	r0, #7
  404dbc:	b342      	cbz	r2, 404e10 <memchr+0x70>
  404dbe:	d1f6      	bne.n	404dae <memchr+0xe>
  404dc0:	b4f0      	push	{r4, r5, r6, r7}
  404dc2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404dc6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  404dca:	f022 0407 	bic.w	r4, r2, #7
  404dce:	f07f 0700 	mvns.w	r7, #0
  404dd2:	2300      	movs	r3, #0
  404dd4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404dd8:	3c08      	subs	r4, #8
  404dda:	ea85 0501 	eor.w	r5, r5, r1
  404dde:	ea86 0601 	eor.w	r6, r6, r1
  404de2:	fa85 f547 	uadd8	r5, r5, r7
  404de6:	faa3 f587 	sel	r5, r3, r7
  404dea:	fa86 f647 	uadd8	r6, r6, r7
  404dee:	faa5 f687 	sel	r6, r5, r7
  404df2:	b98e      	cbnz	r6, 404e18 <memchr+0x78>
  404df4:	d1ee      	bne.n	404dd4 <memchr+0x34>
  404df6:	bcf0      	pop	{r4, r5, r6, r7}
  404df8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404dfc:	f002 0207 	and.w	r2, r2, #7
  404e00:	b132      	cbz	r2, 404e10 <memchr+0x70>
  404e02:	f810 3b01 	ldrb.w	r3, [r0], #1
  404e06:	3a01      	subs	r2, #1
  404e08:	ea83 0301 	eor.w	r3, r3, r1
  404e0c:	b113      	cbz	r3, 404e14 <memchr+0x74>
  404e0e:	d1f8      	bne.n	404e02 <memchr+0x62>
  404e10:	2000      	movs	r0, #0
  404e12:	4770      	bx	lr
  404e14:	3801      	subs	r0, #1
  404e16:	4770      	bx	lr
  404e18:	2d00      	cmp	r5, #0
  404e1a:	bf06      	itte	eq
  404e1c:	4635      	moveq	r5, r6
  404e1e:	3803      	subeq	r0, #3
  404e20:	3807      	subne	r0, #7
  404e22:	f015 0f01 	tst.w	r5, #1
  404e26:	d107      	bne.n	404e38 <memchr+0x98>
  404e28:	3001      	adds	r0, #1
  404e2a:	f415 7f80 	tst.w	r5, #256	; 0x100
  404e2e:	bf02      	ittt	eq
  404e30:	3001      	addeq	r0, #1
  404e32:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404e36:	3001      	addeq	r0, #1
  404e38:	bcf0      	pop	{r4, r5, r6, r7}
  404e3a:	3801      	subs	r0, #1
  404e3c:	4770      	bx	lr
  404e3e:	bf00      	nop

00404e40 <memcpy>:
  404e40:	4684      	mov	ip, r0
  404e42:	ea41 0300 	orr.w	r3, r1, r0
  404e46:	f013 0303 	ands.w	r3, r3, #3
  404e4a:	d16d      	bne.n	404f28 <memcpy+0xe8>
  404e4c:	3a40      	subs	r2, #64	; 0x40
  404e4e:	d341      	bcc.n	404ed4 <memcpy+0x94>
  404e50:	f851 3b04 	ldr.w	r3, [r1], #4
  404e54:	f840 3b04 	str.w	r3, [r0], #4
  404e58:	f851 3b04 	ldr.w	r3, [r1], #4
  404e5c:	f840 3b04 	str.w	r3, [r0], #4
  404e60:	f851 3b04 	ldr.w	r3, [r1], #4
  404e64:	f840 3b04 	str.w	r3, [r0], #4
  404e68:	f851 3b04 	ldr.w	r3, [r1], #4
  404e6c:	f840 3b04 	str.w	r3, [r0], #4
  404e70:	f851 3b04 	ldr.w	r3, [r1], #4
  404e74:	f840 3b04 	str.w	r3, [r0], #4
  404e78:	f851 3b04 	ldr.w	r3, [r1], #4
  404e7c:	f840 3b04 	str.w	r3, [r0], #4
  404e80:	f851 3b04 	ldr.w	r3, [r1], #4
  404e84:	f840 3b04 	str.w	r3, [r0], #4
  404e88:	f851 3b04 	ldr.w	r3, [r1], #4
  404e8c:	f840 3b04 	str.w	r3, [r0], #4
  404e90:	f851 3b04 	ldr.w	r3, [r1], #4
  404e94:	f840 3b04 	str.w	r3, [r0], #4
  404e98:	f851 3b04 	ldr.w	r3, [r1], #4
  404e9c:	f840 3b04 	str.w	r3, [r0], #4
  404ea0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ea4:	f840 3b04 	str.w	r3, [r0], #4
  404ea8:	f851 3b04 	ldr.w	r3, [r1], #4
  404eac:	f840 3b04 	str.w	r3, [r0], #4
  404eb0:	f851 3b04 	ldr.w	r3, [r1], #4
  404eb4:	f840 3b04 	str.w	r3, [r0], #4
  404eb8:	f851 3b04 	ldr.w	r3, [r1], #4
  404ebc:	f840 3b04 	str.w	r3, [r0], #4
  404ec0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ec4:	f840 3b04 	str.w	r3, [r0], #4
  404ec8:	f851 3b04 	ldr.w	r3, [r1], #4
  404ecc:	f840 3b04 	str.w	r3, [r0], #4
  404ed0:	3a40      	subs	r2, #64	; 0x40
  404ed2:	d2bd      	bcs.n	404e50 <memcpy+0x10>
  404ed4:	3230      	adds	r2, #48	; 0x30
  404ed6:	d311      	bcc.n	404efc <memcpy+0xbc>
  404ed8:	f851 3b04 	ldr.w	r3, [r1], #4
  404edc:	f840 3b04 	str.w	r3, [r0], #4
  404ee0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ee4:	f840 3b04 	str.w	r3, [r0], #4
  404ee8:	f851 3b04 	ldr.w	r3, [r1], #4
  404eec:	f840 3b04 	str.w	r3, [r0], #4
  404ef0:	f851 3b04 	ldr.w	r3, [r1], #4
  404ef4:	f840 3b04 	str.w	r3, [r0], #4
  404ef8:	3a10      	subs	r2, #16
  404efa:	d2ed      	bcs.n	404ed8 <memcpy+0x98>
  404efc:	320c      	adds	r2, #12
  404efe:	d305      	bcc.n	404f0c <memcpy+0xcc>
  404f00:	f851 3b04 	ldr.w	r3, [r1], #4
  404f04:	f840 3b04 	str.w	r3, [r0], #4
  404f08:	3a04      	subs	r2, #4
  404f0a:	d2f9      	bcs.n	404f00 <memcpy+0xc0>
  404f0c:	3204      	adds	r2, #4
  404f0e:	d008      	beq.n	404f22 <memcpy+0xe2>
  404f10:	07d2      	lsls	r2, r2, #31
  404f12:	bf1c      	itt	ne
  404f14:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404f18:	f800 3b01 	strbne.w	r3, [r0], #1
  404f1c:	d301      	bcc.n	404f22 <memcpy+0xe2>
  404f1e:	880b      	ldrh	r3, [r1, #0]
  404f20:	8003      	strh	r3, [r0, #0]
  404f22:	4660      	mov	r0, ip
  404f24:	4770      	bx	lr
  404f26:	bf00      	nop
  404f28:	2a08      	cmp	r2, #8
  404f2a:	d313      	bcc.n	404f54 <memcpy+0x114>
  404f2c:	078b      	lsls	r3, r1, #30
  404f2e:	d08d      	beq.n	404e4c <memcpy+0xc>
  404f30:	f010 0303 	ands.w	r3, r0, #3
  404f34:	d08a      	beq.n	404e4c <memcpy+0xc>
  404f36:	f1c3 0304 	rsb	r3, r3, #4
  404f3a:	1ad2      	subs	r2, r2, r3
  404f3c:	07db      	lsls	r3, r3, #31
  404f3e:	bf1c      	itt	ne
  404f40:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404f44:	f800 3b01 	strbne.w	r3, [r0], #1
  404f48:	d380      	bcc.n	404e4c <memcpy+0xc>
  404f4a:	f831 3b02 	ldrh.w	r3, [r1], #2
  404f4e:	f820 3b02 	strh.w	r3, [r0], #2
  404f52:	e77b      	b.n	404e4c <memcpy+0xc>
  404f54:	3a04      	subs	r2, #4
  404f56:	d3d9      	bcc.n	404f0c <memcpy+0xcc>
  404f58:	3a01      	subs	r2, #1
  404f5a:	f811 3b01 	ldrb.w	r3, [r1], #1
  404f5e:	f800 3b01 	strb.w	r3, [r0], #1
  404f62:	d2f9      	bcs.n	404f58 <memcpy+0x118>
  404f64:	780b      	ldrb	r3, [r1, #0]
  404f66:	7003      	strb	r3, [r0, #0]
  404f68:	784b      	ldrb	r3, [r1, #1]
  404f6a:	7043      	strb	r3, [r0, #1]
  404f6c:	788b      	ldrb	r3, [r1, #2]
  404f6e:	7083      	strb	r3, [r0, #2]
  404f70:	4660      	mov	r0, ip
  404f72:	4770      	bx	lr

00404f74 <__malloc_lock>:
  404f74:	4801      	ldr	r0, [pc, #4]	; (404f7c <__malloc_lock+0x8>)
  404f76:	f7ff bc5d 	b.w	404834 <__retarget_lock_acquire_recursive>
  404f7a:	bf00      	nop
  404f7c:	20400ce0 	.word	0x20400ce0

00404f80 <__malloc_unlock>:
  404f80:	4801      	ldr	r0, [pc, #4]	; (404f88 <__malloc_unlock+0x8>)
  404f82:	f7ff bc59 	b.w	404838 <__retarget_lock_release_recursive>
  404f86:	bf00      	nop
  404f88:	20400ce0 	.word	0x20400ce0

00404f8c <_Balloc>:
  404f8c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404f8e:	b570      	push	{r4, r5, r6, lr}
  404f90:	4605      	mov	r5, r0
  404f92:	460c      	mov	r4, r1
  404f94:	b14b      	cbz	r3, 404faa <_Balloc+0x1e>
  404f96:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  404f9a:	b180      	cbz	r0, 404fbe <_Balloc+0x32>
  404f9c:	6802      	ldr	r2, [r0, #0]
  404f9e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404fa2:	2300      	movs	r3, #0
  404fa4:	6103      	str	r3, [r0, #16]
  404fa6:	60c3      	str	r3, [r0, #12]
  404fa8:	bd70      	pop	{r4, r5, r6, pc}
  404faa:	2221      	movs	r2, #33	; 0x21
  404fac:	2104      	movs	r1, #4
  404fae:	f000 fc55 	bl	40585c <_calloc_r>
  404fb2:	64e8      	str	r0, [r5, #76]	; 0x4c
  404fb4:	4603      	mov	r3, r0
  404fb6:	2800      	cmp	r0, #0
  404fb8:	d1ed      	bne.n	404f96 <_Balloc+0xa>
  404fba:	2000      	movs	r0, #0
  404fbc:	bd70      	pop	{r4, r5, r6, pc}
  404fbe:	2101      	movs	r1, #1
  404fc0:	fa01 f604 	lsl.w	r6, r1, r4
  404fc4:	1d72      	adds	r2, r6, #5
  404fc6:	4628      	mov	r0, r5
  404fc8:	0092      	lsls	r2, r2, #2
  404fca:	f000 fc47 	bl	40585c <_calloc_r>
  404fce:	2800      	cmp	r0, #0
  404fd0:	d0f3      	beq.n	404fba <_Balloc+0x2e>
  404fd2:	6044      	str	r4, [r0, #4]
  404fd4:	6086      	str	r6, [r0, #8]
  404fd6:	e7e4      	b.n	404fa2 <_Balloc+0x16>

00404fd8 <_Bfree>:
  404fd8:	b131      	cbz	r1, 404fe8 <_Bfree+0x10>
  404fda:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404fdc:	684a      	ldr	r2, [r1, #4]
  404fde:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404fe2:	6008      	str	r0, [r1, #0]
  404fe4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404fe8:	4770      	bx	lr
  404fea:	bf00      	nop

00404fec <__multadd>:
  404fec:	b5f0      	push	{r4, r5, r6, r7, lr}
  404fee:	690c      	ldr	r4, [r1, #16]
  404ff0:	b083      	sub	sp, #12
  404ff2:	460d      	mov	r5, r1
  404ff4:	4606      	mov	r6, r0
  404ff6:	f101 0e14 	add.w	lr, r1, #20
  404ffa:	2700      	movs	r7, #0
  404ffc:	f8de 0000 	ldr.w	r0, [lr]
  405000:	b281      	uxth	r1, r0
  405002:	fb02 3301 	mla	r3, r2, r1, r3
  405006:	0c01      	lsrs	r1, r0, #16
  405008:	0c18      	lsrs	r0, r3, #16
  40500a:	fb02 0101 	mla	r1, r2, r1, r0
  40500e:	b29b      	uxth	r3, r3
  405010:	3701      	adds	r7, #1
  405012:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  405016:	42bc      	cmp	r4, r7
  405018:	f84e 3b04 	str.w	r3, [lr], #4
  40501c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405020:	dcec      	bgt.n	404ffc <__multadd+0x10>
  405022:	b13b      	cbz	r3, 405034 <__multadd+0x48>
  405024:	68aa      	ldr	r2, [r5, #8]
  405026:	4294      	cmp	r4, r2
  405028:	da07      	bge.n	40503a <__multadd+0x4e>
  40502a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40502e:	3401      	adds	r4, #1
  405030:	6153      	str	r3, [r2, #20]
  405032:	612c      	str	r4, [r5, #16]
  405034:	4628      	mov	r0, r5
  405036:	b003      	add	sp, #12
  405038:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40503a:	6869      	ldr	r1, [r5, #4]
  40503c:	9301      	str	r3, [sp, #4]
  40503e:	3101      	adds	r1, #1
  405040:	4630      	mov	r0, r6
  405042:	f7ff ffa3 	bl	404f8c <_Balloc>
  405046:	692a      	ldr	r2, [r5, #16]
  405048:	3202      	adds	r2, #2
  40504a:	f105 010c 	add.w	r1, r5, #12
  40504e:	4607      	mov	r7, r0
  405050:	0092      	lsls	r2, r2, #2
  405052:	300c      	adds	r0, #12
  405054:	f7ff fef4 	bl	404e40 <memcpy>
  405058:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40505a:	6869      	ldr	r1, [r5, #4]
  40505c:	9b01      	ldr	r3, [sp, #4]
  40505e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405062:	6028      	str	r0, [r5, #0]
  405064:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405068:	463d      	mov	r5, r7
  40506a:	e7de      	b.n	40502a <__multadd+0x3e>

0040506c <__hi0bits>:
  40506c:	0c02      	lsrs	r2, r0, #16
  40506e:	0412      	lsls	r2, r2, #16
  405070:	4603      	mov	r3, r0
  405072:	b9b2      	cbnz	r2, 4050a2 <__hi0bits+0x36>
  405074:	0403      	lsls	r3, r0, #16
  405076:	2010      	movs	r0, #16
  405078:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40507c:	bf04      	itt	eq
  40507e:	021b      	lsleq	r3, r3, #8
  405080:	3008      	addeq	r0, #8
  405082:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  405086:	bf04      	itt	eq
  405088:	011b      	lsleq	r3, r3, #4
  40508a:	3004      	addeq	r0, #4
  40508c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  405090:	bf04      	itt	eq
  405092:	009b      	lsleq	r3, r3, #2
  405094:	3002      	addeq	r0, #2
  405096:	2b00      	cmp	r3, #0
  405098:	db02      	blt.n	4050a0 <__hi0bits+0x34>
  40509a:	005b      	lsls	r3, r3, #1
  40509c:	d403      	bmi.n	4050a6 <__hi0bits+0x3a>
  40509e:	2020      	movs	r0, #32
  4050a0:	4770      	bx	lr
  4050a2:	2000      	movs	r0, #0
  4050a4:	e7e8      	b.n	405078 <__hi0bits+0xc>
  4050a6:	3001      	adds	r0, #1
  4050a8:	4770      	bx	lr
  4050aa:	bf00      	nop

004050ac <__lo0bits>:
  4050ac:	6803      	ldr	r3, [r0, #0]
  4050ae:	f013 0207 	ands.w	r2, r3, #7
  4050b2:	4601      	mov	r1, r0
  4050b4:	d007      	beq.n	4050c6 <__lo0bits+0x1a>
  4050b6:	07da      	lsls	r2, r3, #31
  4050b8:	d421      	bmi.n	4050fe <__lo0bits+0x52>
  4050ba:	0798      	lsls	r0, r3, #30
  4050bc:	d421      	bmi.n	405102 <__lo0bits+0x56>
  4050be:	089b      	lsrs	r3, r3, #2
  4050c0:	600b      	str	r3, [r1, #0]
  4050c2:	2002      	movs	r0, #2
  4050c4:	4770      	bx	lr
  4050c6:	b298      	uxth	r0, r3
  4050c8:	b198      	cbz	r0, 4050f2 <__lo0bits+0x46>
  4050ca:	4610      	mov	r0, r2
  4050cc:	f013 0fff 	tst.w	r3, #255	; 0xff
  4050d0:	bf04      	itt	eq
  4050d2:	0a1b      	lsreq	r3, r3, #8
  4050d4:	3008      	addeq	r0, #8
  4050d6:	071a      	lsls	r2, r3, #28
  4050d8:	bf04      	itt	eq
  4050da:	091b      	lsreq	r3, r3, #4
  4050dc:	3004      	addeq	r0, #4
  4050de:	079a      	lsls	r2, r3, #30
  4050e0:	bf04      	itt	eq
  4050e2:	089b      	lsreq	r3, r3, #2
  4050e4:	3002      	addeq	r0, #2
  4050e6:	07da      	lsls	r2, r3, #31
  4050e8:	d407      	bmi.n	4050fa <__lo0bits+0x4e>
  4050ea:	085b      	lsrs	r3, r3, #1
  4050ec:	d104      	bne.n	4050f8 <__lo0bits+0x4c>
  4050ee:	2020      	movs	r0, #32
  4050f0:	4770      	bx	lr
  4050f2:	0c1b      	lsrs	r3, r3, #16
  4050f4:	2010      	movs	r0, #16
  4050f6:	e7e9      	b.n	4050cc <__lo0bits+0x20>
  4050f8:	3001      	adds	r0, #1
  4050fa:	600b      	str	r3, [r1, #0]
  4050fc:	4770      	bx	lr
  4050fe:	2000      	movs	r0, #0
  405100:	4770      	bx	lr
  405102:	085b      	lsrs	r3, r3, #1
  405104:	600b      	str	r3, [r1, #0]
  405106:	2001      	movs	r0, #1
  405108:	4770      	bx	lr
  40510a:	bf00      	nop

0040510c <__i2b>:
  40510c:	b510      	push	{r4, lr}
  40510e:	460c      	mov	r4, r1
  405110:	2101      	movs	r1, #1
  405112:	f7ff ff3b 	bl	404f8c <_Balloc>
  405116:	2201      	movs	r2, #1
  405118:	6144      	str	r4, [r0, #20]
  40511a:	6102      	str	r2, [r0, #16]
  40511c:	bd10      	pop	{r4, pc}
  40511e:	bf00      	nop

00405120 <__multiply>:
  405120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405124:	690c      	ldr	r4, [r1, #16]
  405126:	6915      	ldr	r5, [r2, #16]
  405128:	42ac      	cmp	r4, r5
  40512a:	b083      	sub	sp, #12
  40512c:	468b      	mov	fp, r1
  40512e:	4616      	mov	r6, r2
  405130:	da04      	bge.n	40513c <__multiply+0x1c>
  405132:	4622      	mov	r2, r4
  405134:	46b3      	mov	fp, r6
  405136:	462c      	mov	r4, r5
  405138:	460e      	mov	r6, r1
  40513a:	4615      	mov	r5, r2
  40513c:	f8db 3008 	ldr.w	r3, [fp, #8]
  405140:	f8db 1004 	ldr.w	r1, [fp, #4]
  405144:	eb04 0805 	add.w	r8, r4, r5
  405148:	4598      	cmp	r8, r3
  40514a:	bfc8      	it	gt
  40514c:	3101      	addgt	r1, #1
  40514e:	f7ff ff1d 	bl	404f8c <_Balloc>
  405152:	f100 0914 	add.w	r9, r0, #20
  405156:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40515a:	45d1      	cmp	r9, sl
  40515c:	9000      	str	r0, [sp, #0]
  40515e:	d205      	bcs.n	40516c <__multiply+0x4c>
  405160:	464b      	mov	r3, r9
  405162:	2100      	movs	r1, #0
  405164:	f843 1b04 	str.w	r1, [r3], #4
  405168:	459a      	cmp	sl, r3
  40516a:	d8fb      	bhi.n	405164 <__multiply+0x44>
  40516c:	f106 0c14 	add.w	ip, r6, #20
  405170:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405174:	f10b 0b14 	add.w	fp, fp, #20
  405178:	459c      	cmp	ip, r3
  40517a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40517e:	d24c      	bcs.n	40521a <__multiply+0xfa>
  405180:	f8cd a004 	str.w	sl, [sp, #4]
  405184:	469a      	mov	sl, r3
  405186:	f8dc 5000 	ldr.w	r5, [ip]
  40518a:	b2af      	uxth	r7, r5
  40518c:	b1ef      	cbz	r7, 4051ca <__multiply+0xaa>
  40518e:	2100      	movs	r1, #0
  405190:	464d      	mov	r5, r9
  405192:	465e      	mov	r6, fp
  405194:	460c      	mov	r4, r1
  405196:	f856 2b04 	ldr.w	r2, [r6], #4
  40519a:	6828      	ldr	r0, [r5, #0]
  40519c:	b293      	uxth	r3, r2
  40519e:	b281      	uxth	r1, r0
  4051a0:	fb07 1303 	mla	r3, r7, r3, r1
  4051a4:	0c12      	lsrs	r2, r2, #16
  4051a6:	0c01      	lsrs	r1, r0, #16
  4051a8:	4423      	add	r3, r4
  4051aa:	fb07 1102 	mla	r1, r7, r2, r1
  4051ae:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4051b2:	b29b      	uxth	r3, r3
  4051b4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4051b8:	45b6      	cmp	lr, r6
  4051ba:	f845 3b04 	str.w	r3, [r5], #4
  4051be:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4051c2:	d8e8      	bhi.n	405196 <__multiply+0x76>
  4051c4:	602c      	str	r4, [r5, #0]
  4051c6:	f8dc 5000 	ldr.w	r5, [ip]
  4051ca:	0c2d      	lsrs	r5, r5, #16
  4051cc:	d01d      	beq.n	40520a <__multiply+0xea>
  4051ce:	f8d9 3000 	ldr.w	r3, [r9]
  4051d2:	4648      	mov	r0, r9
  4051d4:	461c      	mov	r4, r3
  4051d6:	4659      	mov	r1, fp
  4051d8:	2200      	movs	r2, #0
  4051da:	880e      	ldrh	r6, [r1, #0]
  4051dc:	0c24      	lsrs	r4, r4, #16
  4051de:	fb05 4406 	mla	r4, r5, r6, r4
  4051e2:	4422      	add	r2, r4
  4051e4:	b29b      	uxth	r3, r3
  4051e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4051ea:	f840 3b04 	str.w	r3, [r0], #4
  4051ee:	f851 3b04 	ldr.w	r3, [r1], #4
  4051f2:	6804      	ldr	r4, [r0, #0]
  4051f4:	0c1b      	lsrs	r3, r3, #16
  4051f6:	b2a6      	uxth	r6, r4
  4051f8:	fb05 6303 	mla	r3, r5, r3, r6
  4051fc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405200:	458e      	cmp	lr, r1
  405202:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405206:	d8e8      	bhi.n	4051da <__multiply+0xba>
  405208:	6003      	str	r3, [r0, #0]
  40520a:	f10c 0c04 	add.w	ip, ip, #4
  40520e:	45e2      	cmp	sl, ip
  405210:	f109 0904 	add.w	r9, r9, #4
  405214:	d8b7      	bhi.n	405186 <__multiply+0x66>
  405216:	f8dd a004 	ldr.w	sl, [sp, #4]
  40521a:	f1b8 0f00 	cmp.w	r8, #0
  40521e:	dd0b      	ble.n	405238 <__multiply+0x118>
  405220:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405224:	f1aa 0a04 	sub.w	sl, sl, #4
  405228:	b11b      	cbz	r3, 405232 <__multiply+0x112>
  40522a:	e005      	b.n	405238 <__multiply+0x118>
  40522c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405230:	b913      	cbnz	r3, 405238 <__multiply+0x118>
  405232:	f1b8 0801 	subs.w	r8, r8, #1
  405236:	d1f9      	bne.n	40522c <__multiply+0x10c>
  405238:	9800      	ldr	r0, [sp, #0]
  40523a:	f8c0 8010 	str.w	r8, [r0, #16]
  40523e:	b003      	add	sp, #12
  405240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405244 <__pow5mult>:
  405244:	f012 0303 	ands.w	r3, r2, #3
  405248:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40524c:	4614      	mov	r4, r2
  40524e:	4607      	mov	r7, r0
  405250:	d12e      	bne.n	4052b0 <__pow5mult+0x6c>
  405252:	460d      	mov	r5, r1
  405254:	10a4      	asrs	r4, r4, #2
  405256:	d01c      	beq.n	405292 <__pow5mult+0x4e>
  405258:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40525a:	b396      	cbz	r6, 4052c2 <__pow5mult+0x7e>
  40525c:	07e3      	lsls	r3, r4, #31
  40525e:	f04f 0800 	mov.w	r8, #0
  405262:	d406      	bmi.n	405272 <__pow5mult+0x2e>
  405264:	1064      	asrs	r4, r4, #1
  405266:	d014      	beq.n	405292 <__pow5mult+0x4e>
  405268:	6830      	ldr	r0, [r6, #0]
  40526a:	b1a8      	cbz	r0, 405298 <__pow5mult+0x54>
  40526c:	4606      	mov	r6, r0
  40526e:	07e3      	lsls	r3, r4, #31
  405270:	d5f8      	bpl.n	405264 <__pow5mult+0x20>
  405272:	4632      	mov	r2, r6
  405274:	4629      	mov	r1, r5
  405276:	4638      	mov	r0, r7
  405278:	f7ff ff52 	bl	405120 <__multiply>
  40527c:	b1b5      	cbz	r5, 4052ac <__pow5mult+0x68>
  40527e:	686a      	ldr	r2, [r5, #4]
  405280:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405282:	1064      	asrs	r4, r4, #1
  405284:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  405288:	6029      	str	r1, [r5, #0]
  40528a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40528e:	4605      	mov	r5, r0
  405290:	d1ea      	bne.n	405268 <__pow5mult+0x24>
  405292:	4628      	mov	r0, r5
  405294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405298:	4632      	mov	r2, r6
  40529a:	4631      	mov	r1, r6
  40529c:	4638      	mov	r0, r7
  40529e:	f7ff ff3f 	bl	405120 <__multiply>
  4052a2:	6030      	str	r0, [r6, #0]
  4052a4:	f8c0 8000 	str.w	r8, [r0]
  4052a8:	4606      	mov	r6, r0
  4052aa:	e7e0      	b.n	40526e <__pow5mult+0x2a>
  4052ac:	4605      	mov	r5, r0
  4052ae:	e7d9      	b.n	405264 <__pow5mult+0x20>
  4052b0:	1e5a      	subs	r2, r3, #1
  4052b2:	4d0b      	ldr	r5, [pc, #44]	; (4052e0 <__pow5mult+0x9c>)
  4052b4:	2300      	movs	r3, #0
  4052b6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4052ba:	f7ff fe97 	bl	404fec <__multadd>
  4052be:	4605      	mov	r5, r0
  4052c0:	e7c8      	b.n	405254 <__pow5mult+0x10>
  4052c2:	2101      	movs	r1, #1
  4052c4:	4638      	mov	r0, r7
  4052c6:	f7ff fe61 	bl	404f8c <_Balloc>
  4052ca:	f240 2171 	movw	r1, #625	; 0x271
  4052ce:	2201      	movs	r2, #1
  4052d0:	2300      	movs	r3, #0
  4052d2:	6141      	str	r1, [r0, #20]
  4052d4:	6102      	str	r2, [r0, #16]
  4052d6:	4606      	mov	r6, r0
  4052d8:	64b8      	str	r0, [r7, #72]	; 0x48
  4052da:	6003      	str	r3, [r0, #0]
  4052dc:	e7be      	b.n	40525c <__pow5mult+0x18>
  4052de:	bf00      	nop
  4052e0:	00406ff0 	.word	0x00406ff0

004052e4 <__lshift>:
  4052e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4052e8:	4691      	mov	r9, r2
  4052ea:	690a      	ldr	r2, [r1, #16]
  4052ec:	688b      	ldr	r3, [r1, #8]
  4052ee:	ea4f 1469 	mov.w	r4, r9, asr #5
  4052f2:	eb04 0802 	add.w	r8, r4, r2
  4052f6:	f108 0501 	add.w	r5, r8, #1
  4052fa:	429d      	cmp	r5, r3
  4052fc:	460e      	mov	r6, r1
  4052fe:	4607      	mov	r7, r0
  405300:	6849      	ldr	r1, [r1, #4]
  405302:	dd04      	ble.n	40530e <__lshift+0x2a>
  405304:	005b      	lsls	r3, r3, #1
  405306:	429d      	cmp	r5, r3
  405308:	f101 0101 	add.w	r1, r1, #1
  40530c:	dcfa      	bgt.n	405304 <__lshift+0x20>
  40530e:	4638      	mov	r0, r7
  405310:	f7ff fe3c 	bl	404f8c <_Balloc>
  405314:	2c00      	cmp	r4, #0
  405316:	f100 0314 	add.w	r3, r0, #20
  40531a:	dd06      	ble.n	40532a <__lshift+0x46>
  40531c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405320:	2100      	movs	r1, #0
  405322:	f843 1b04 	str.w	r1, [r3], #4
  405326:	429a      	cmp	r2, r3
  405328:	d1fb      	bne.n	405322 <__lshift+0x3e>
  40532a:	6934      	ldr	r4, [r6, #16]
  40532c:	f106 0114 	add.w	r1, r6, #20
  405330:	f019 091f 	ands.w	r9, r9, #31
  405334:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405338:	d01d      	beq.n	405376 <__lshift+0x92>
  40533a:	f1c9 0c20 	rsb	ip, r9, #32
  40533e:	2200      	movs	r2, #0
  405340:	680c      	ldr	r4, [r1, #0]
  405342:	fa04 f409 	lsl.w	r4, r4, r9
  405346:	4314      	orrs	r4, r2
  405348:	f843 4b04 	str.w	r4, [r3], #4
  40534c:	f851 2b04 	ldr.w	r2, [r1], #4
  405350:	458e      	cmp	lr, r1
  405352:	fa22 f20c 	lsr.w	r2, r2, ip
  405356:	d8f3      	bhi.n	405340 <__lshift+0x5c>
  405358:	601a      	str	r2, [r3, #0]
  40535a:	b10a      	cbz	r2, 405360 <__lshift+0x7c>
  40535c:	f108 0502 	add.w	r5, r8, #2
  405360:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405362:	6872      	ldr	r2, [r6, #4]
  405364:	3d01      	subs	r5, #1
  405366:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40536a:	6105      	str	r5, [r0, #16]
  40536c:	6031      	str	r1, [r6, #0]
  40536e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405372:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405376:	3b04      	subs	r3, #4
  405378:	f851 2b04 	ldr.w	r2, [r1], #4
  40537c:	f843 2f04 	str.w	r2, [r3, #4]!
  405380:	458e      	cmp	lr, r1
  405382:	d8f9      	bhi.n	405378 <__lshift+0x94>
  405384:	e7ec      	b.n	405360 <__lshift+0x7c>
  405386:	bf00      	nop

00405388 <__mcmp>:
  405388:	b430      	push	{r4, r5}
  40538a:	690b      	ldr	r3, [r1, #16]
  40538c:	4605      	mov	r5, r0
  40538e:	6900      	ldr	r0, [r0, #16]
  405390:	1ac0      	subs	r0, r0, r3
  405392:	d10f      	bne.n	4053b4 <__mcmp+0x2c>
  405394:	009b      	lsls	r3, r3, #2
  405396:	3514      	adds	r5, #20
  405398:	3114      	adds	r1, #20
  40539a:	4419      	add	r1, r3
  40539c:	442b      	add	r3, r5
  40539e:	e001      	b.n	4053a4 <__mcmp+0x1c>
  4053a0:	429d      	cmp	r5, r3
  4053a2:	d207      	bcs.n	4053b4 <__mcmp+0x2c>
  4053a4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4053a8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4053ac:	4294      	cmp	r4, r2
  4053ae:	d0f7      	beq.n	4053a0 <__mcmp+0x18>
  4053b0:	d302      	bcc.n	4053b8 <__mcmp+0x30>
  4053b2:	2001      	movs	r0, #1
  4053b4:	bc30      	pop	{r4, r5}
  4053b6:	4770      	bx	lr
  4053b8:	f04f 30ff 	mov.w	r0, #4294967295
  4053bc:	e7fa      	b.n	4053b4 <__mcmp+0x2c>
  4053be:	bf00      	nop

004053c0 <__mdiff>:
  4053c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4053c4:	690f      	ldr	r7, [r1, #16]
  4053c6:	460e      	mov	r6, r1
  4053c8:	6911      	ldr	r1, [r2, #16]
  4053ca:	1a7f      	subs	r7, r7, r1
  4053cc:	2f00      	cmp	r7, #0
  4053ce:	4690      	mov	r8, r2
  4053d0:	d117      	bne.n	405402 <__mdiff+0x42>
  4053d2:	0089      	lsls	r1, r1, #2
  4053d4:	f106 0514 	add.w	r5, r6, #20
  4053d8:	f102 0e14 	add.w	lr, r2, #20
  4053dc:	186b      	adds	r3, r5, r1
  4053de:	4471      	add	r1, lr
  4053e0:	e001      	b.n	4053e6 <__mdiff+0x26>
  4053e2:	429d      	cmp	r5, r3
  4053e4:	d25c      	bcs.n	4054a0 <__mdiff+0xe0>
  4053e6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4053ea:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  4053ee:	42a2      	cmp	r2, r4
  4053f0:	d0f7      	beq.n	4053e2 <__mdiff+0x22>
  4053f2:	d25e      	bcs.n	4054b2 <__mdiff+0xf2>
  4053f4:	4633      	mov	r3, r6
  4053f6:	462c      	mov	r4, r5
  4053f8:	4646      	mov	r6, r8
  4053fa:	4675      	mov	r5, lr
  4053fc:	4698      	mov	r8, r3
  4053fe:	2701      	movs	r7, #1
  405400:	e005      	b.n	40540e <__mdiff+0x4e>
  405402:	db58      	blt.n	4054b6 <__mdiff+0xf6>
  405404:	f106 0514 	add.w	r5, r6, #20
  405408:	f108 0414 	add.w	r4, r8, #20
  40540c:	2700      	movs	r7, #0
  40540e:	6871      	ldr	r1, [r6, #4]
  405410:	f7ff fdbc 	bl	404f8c <_Balloc>
  405414:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405418:	6936      	ldr	r6, [r6, #16]
  40541a:	60c7      	str	r7, [r0, #12]
  40541c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405420:	46a6      	mov	lr, r4
  405422:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405426:	f100 0414 	add.w	r4, r0, #20
  40542a:	2300      	movs	r3, #0
  40542c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405430:	f855 8b04 	ldr.w	r8, [r5], #4
  405434:	b28a      	uxth	r2, r1
  405436:	fa13 f388 	uxtah	r3, r3, r8
  40543a:	0c09      	lsrs	r1, r1, #16
  40543c:	1a9a      	subs	r2, r3, r2
  40543e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405442:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405446:	b292      	uxth	r2, r2
  405448:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40544c:	45f4      	cmp	ip, lr
  40544e:	f844 2b04 	str.w	r2, [r4], #4
  405452:	ea4f 4323 	mov.w	r3, r3, asr #16
  405456:	d8e9      	bhi.n	40542c <__mdiff+0x6c>
  405458:	42af      	cmp	r7, r5
  40545a:	d917      	bls.n	40548c <__mdiff+0xcc>
  40545c:	46a4      	mov	ip, r4
  40545e:	46ae      	mov	lr, r5
  405460:	f85e 2b04 	ldr.w	r2, [lr], #4
  405464:	fa13 f382 	uxtah	r3, r3, r2
  405468:	1419      	asrs	r1, r3, #16
  40546a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40546e:	b29b      	uxth	r3, r3
  405470:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405474:	4577      	cmp	r7, lr
  405476:	f84c 2b04 	str.w	r2, [ip], #4
  40547a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40547e:	d8ef      	bhi.n	405460 <__mdiff+0xa0>
  405480:	43ed      	mvns	r5, r5
  405482:	442f      	add	r7, r5
  405484:	f027 0703 	bic.w	r7, r7, #3
  405488:	3704      	adds	r7, #4
  40548a:	443c      	add	r4, r7
  40548c:	3c04      	subs	r4, #4
  40548e:	b922      	cbnz	r2, 40549a <__mdiff+0xda>
  405490:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  405494:	3e01      	subs	r6, #1
  405496:	2b00      	cmp	r3, #0
  405498:	d0fa      	beq.n	405490 <__mdiff+0xd0>
  40549a:	6106      	str	r6, [r0, #16]
  40549c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054a0:	2100      	movs	r1, #0
  4054a2:	f7ff fd73 	bl	404f8c <_Balloc>
  4054a6:	2201      	movs	r2, #1
  4054a8:	2300      	movs	r3, #0
  4054aa:	6102      	str	r2, [r0, #16]
  4054ac:	6143      	str	r3, [r0, #20]
  4054ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4054b2:	4674      	mov	r4, lr
  4054b4:	e7ab      	b.n	40540e <__mdiff+0x4e>
  4054b6:	4633      	mov	r3, r6
  4054b8:	f106 0414 	add.w	r4, r6, #20
  4054bc:	f102 0514 	add.w	r5, r2, #20
  4054c0:	4616      	mov	r6, r2
  4054c2:	2701      	movs	r7, #1
  4054c4:	4698      	mov	r8, r3
  4054c6:	e7a2      	b.n	40540e <__mdiff+0x4e>

004054c8 <__d2b>:
  4054c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4054cc:	b082      	sub	sp, #8
  4054ce:	2101      	movs	r1, #1
  4054d0:	461c      	mov	r4, r3
  4054d2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4054d6:	4615      	mov	r5, r2
  4054d8:	9e08      	ldr	r6, [sp, #32]
  4054da:	f7ff fd57 	bl	404f8c <_Balloc>
  4054de:	f3c4 0413 	ubfx	r4, r4, #0, #20
  4054e2:	4680      	mov	r8, r0
  4054e4:	b10f      	cbz	r7, 4054ea <__d2b+0x22>
  4054e6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  4054ea:	9401      	str	r4, [sp, #4]
  4054ec:	b31d      	cbz	r5, 405536 <__d2b+0x6e>
  4054ee:	a802      	add	r0, sp, #8
  4054f0:	f840 5d08 	str.w	r5, [r0, #-8]!
  4054f4:	f7ff fdda 	bl	4050ac <__lo0bits>
  4054f8:	2800      	cmp	r0, #0
  4054fa:	d134      	bne.n	405566 <__d2b+0x9e>
  4054fc:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405500:	f8c8 2014 	str.w	r2, [r8, #20]
  405504:	2b00      	cmp	r3, #0
  405506:	bf0c      	ite	eq
  405508:	2101      	moveq	r1, #1
  40550a:	2102      	movne	r1, #2
  40550c:	f8c8 3018 	str.w	r3, [r8, #24]
  405510:	f8c8 1010 	str.w	r1, [r8, #16]
  405514:	b9df      	cbnz	r7, 40554e <__d2b+0x86>
  405516:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40551a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40551e:	6030      	str	r0, [r6, #0]
  405520:	6918      	ldr	r0, [r3, #16]
  405522:	f7ff fda3 	bl	40506c <__hi0bits>
  405526:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405528:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40552c:	6018      	str	r0, [r3, #0]
  40552e:	4640      	mov	r0, r8
  405530:	b002      	add	sp, #8
  405532:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405536:	a801      	add	r0, sp, #4
  405538:	f7ff fdb8 	bl	4050ac <__lo0bits>
  40553c:	9b01      	ldr	r3, [sp, #4]
  40553e:	f8c8 3014 	str.w	r3, [r8, #20]
  405542:	2101      	movs	r1, #1
  405544:	3020      	adds	r0, #32
  405546:	f8c8 1010 	str.w	r1, [r8, #16]
  40554a:	2f00      	cmp	r7, #0
  40554c:	d0e3      	beq.n	405516 <__d2b+0x4e>
  40554e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405550:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405554:	4407      	add	r7, r0
  405556:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40555a:	6037      	str	r7, [r6, #0]
  40555c:	6018      	str	r0, [r3, #0]
  40555e:	4640      	mov	r0, r8
  405560:	b002      	add	sp, #8
  405562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405566:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40556a:	f1c0 0220 	rsb	r2, r0, #32
  40556e:	fa03 f202 	lsl.w	r2, r3, r2
  405572:	430a      	orrs	r2, r1
  405574:	40c3      	lsrs	r3, r0
  405576:	9301      	str	r3, [sp, #4]
  405578:	f8c8 2014 	str.w	r2, [r8, #20]
  40557c:	e7c2      	b.n	405504 <__d2b+0x3c>
  40557e:	bf00      	nop

00405580 <_sbrk_r>:
  405580:	b538      	push	{r3, r4, r5, lr}
  405582:	4c07      	ldr	r4, [pc, #28]	; (4055a0 <_sbrk_r+0x20>)
  405584:	2300      	movs	r3, #0
  405586:	4605      	mov	r5, r0
  405588:	4608      	mov	r0, r1
  40558a:	6023      	str	r3, [r4, #0]
  40558c:	f7fc f860 	bl	401650 <_sbrk>
  405590:	1c43      	adds	r3, r0, #1
  405592:	d000      	beq.n	405596 <_sbrk_r+0x16>
  405594:	bd38      	pop	{r3, r4, r5, pc}
  405596:	6823      	ldr	r3, [r4, #0]
  405598:	2b00      	cmp	r3, #0
  40559a:	d0fb      	beq.n	405594 <_sbrk_r+0x14>
  40559c:	602b      	str	r3, [r5, #0]
  40559e:	bd38      	pop	{r3, r4, r5, pc}
  4055a0:	20400cf4 	.word	0x20400cf4
	...

004055c0 <strlen>:
  4055c0:	f890 f000 	pld	[r0]
  4055c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  4055c8:	f020 0107 	bic.w	r1, r0, #7
  4055cc:	f06f 0c00 	mvn.w	ip, #0
  4055d0:	f010 0407 	ands.w	r4, r0, #7
  4055d4:	f891 f020 	pld	[r1, #32]
  4055d8:	f040 8049 	bne.w	40566e <strlen+0xae>
  4055dc:	f04f 0400 	mov.w	r4, #0
  4055e0:	f06f 0007 	mvn.w	r0, #7
  4055e4:	e9d1 2300 	ldrd	r2, r3, [r1]
  4055e8:	f891 f040 	pld	[r1, #64]	; 0x40
  4055ec:	f100 0008 	add.w	r0, r0, #8
  4055f0:	fa82 f24c 	uadd8	r2, r2, ip
  4055f4:	faa4 f28c 	sel	r2, r4, ip
  4055f8:	fa83 f34c 	uadd8	r3, r3, ip
  4055fc:	faa2 f38c 	sel	r3, r2, ip
  405600:	bb4b      	cbnz	r3, 405656 <strlen+0x96>
  405602:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405606:	fa82 f24c 	uadd8	r2, r2, ip
  40560a:	f100 0008 	add.w	r0, r0, #8
  40560e:	faa4 f28c 	sel	r2, r4, ip
  405612:	fa83 f34c 	uadd8	r3, r3, ip
  405616:	faa2 f38c 	sel	r3, r2, ip
  40561a:	b9e3      	cbnz	r3, 405656 <strlen+0x96>
  40561c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405620:	fa82 f24c 	uadd8	r2, r2, ip
  405624:	f100 0008 	add.w	r0, r0, #8
  405628:	faa4 f28c 	sel	r2, r4, ip
  40562c:	fa83 f34c 	uadd8	r3, r3, ip
  405630:	faa2 f38c 	sel	r3, r2, ip
  405634:	b97b      	cbnz	r3, 405656 <strlen+0x96>
  405636:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  40563a:	f101 0120 	add.w	r1, r1, #32
  40563e:	fa82 f24c 	uadd8	r2, r2, ip
  405642:	f100 0008 	add.w	r0, r0, #8
  405646:	faa4 f28c 	sel	r2, r4, ip
  40564a:	fa83 f34c 	uadd8	r3, r3, ip
  40564e:	faa2 f38c 	sel	r3, r2, ip
  405652:	2b00      	cmp	r3, #0
  405654:	d0c6      	beq.n	4055e4 <strlen+0x24>
  405656:	2a00      	cmp	r2, #0
  405658:	bf04      	itt	eq
  40565a:	3004      	addeq	r0, #4
  40565c:	461a      	moveq	r2, r3
  40565e:	ba12      	rev	r2, r2
  405660:	fab2 f282 	clz	r2, r2
  405664:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405668:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  40566c:	4770      	bx	lr
  40566e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405672:	f004 0503 	and.w	r5, r4, #3
  405676:	f1c4 0000 	rsb	r0, r4, #0
  40567a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  40567e:	f014 0f04 	tst.w	r4, #4
  405682:	f891 f040 	pld	[r1, #64]	; 0x40
  405686:	fa0c f505 	lsl.w	r5, ip, r5
  40568a:	ea62 0205 	orn	r2, r2, r5
  40568e:	bf1c      	itt	ne
  405690:	ea63 0305 	ornne	r3, r3, r5
  405694:	4662      	movne	r2, ip
  405696:	f04f 0400 	mov.w	r4, #0
  40569a:	e7a9      	b.n	4055f0 <strlen+0x30>

0040569c <__ssprint_r>:
  40569c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4056a0:	6893      	ldr	r3, [r2, #8]
  4056a2:	b083      	sub	sp, #12
  4056a4:	4690      	mov	r8, r2
  4056a6:	2b00      	cmp	r3, #0
  4056a8:	d070      	beq.n	40578c <__ssprint_r+0xf0>
  4056aa:	4682      	mov	sl, r0
  4056ac:	460c      	mov	r4, r1
  4056ae:	6817      	ldr	r7, [r2, #0]
  4056b0:	688d      	ldr	r5, [r1, #8]
  4056b2:	6808      	ldr	r0, [r1, #0]
  4056b4:	e042      	b.n	40573c <__ssprint_r+0xa0>
  4056b6:	89a3      	ldrh	r3, [r4, #12]
  4056b8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4056bc:	d02e      	beq.n	40571c <__ssprint_r+0x80>
  4056be:	6965      	ldr	r5, [r4, #20]
  4056c0:	6921      	ldr	r1, [r4, #16]
  4056c2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  4056c6:	eba0 0b01 	sub.w	fp, r0, r1
  4056ca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  4056ce:	f10b 0001 	add.w	r0, fp, #1
  4056d2:	106d      	asrs	r5, r5, #1
  4056d4:	4430      	add	r0, r6
  4056d6:	42a8      	cmp	r0, r5
  4056d8:	462a      	mov	r2, r5
  4056da:	bf84      	itt	hi
  4056dc:	4605      	movhi	r5, r0
  4056de:	462a      	movhi	r2, r5
  4056e0:	055b      	lsls	r3, r3, #21
  4056e2:	d538      	bpl.n	405756 <__ssprint_r+0xba>
  4056e4:	4611      	mov	r1, r2
  4056e6:	4650      	mov	r0, sl
  4056e8:	f7ff f8a8 	bl	40483c <_malloc_r>
  4056ec:	2800      	cmp	r0, #0
  4056ee:	d03c      	beq.n	40576a <__ssprint_r+0xce>
  4056f0:	465a      	mov	r2, fp
  4056f2:	6921      	ldr	r1, [r4, #16]
  4056f4:	9001      	str	r0, [sp, #4]
  4056f6:	f7ff fba3 	bl	404e40 <memcpy>
  4056fa:	89a2      	ldrh	r2, [r4, #12]
  4056fc:	9b01      	ldr	r3, [sp, #4]
  4056fe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405702:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405706:	81a2      	strh	r2, [r4, #12]
  405708:	eba5 020b 	sub.w	r2, r5, fp
  40570c:	eb03 000b 	add.w	r0, r3, fp
  405710:	6165      	str	r5, [r4, #20]
  405712:	6123      	str	r3, [r4, #16]
  405714:	6020      	str	r0, [r4, #0]
  405716:	60a2      	str	r2, [r4, #8]
  405718:	4635      	mov	r5, r6
  40571a:	46b3      	mov	fp, r6
  40571c:	465a      	mov	r2, fp
  40571e:	4649      	mov	r1, r9
  405720:	f000 fa18 	bl	405b54 <memmove>
  405724:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405728:	68a2      	ldr	r2, [r4, #8]
  40572a:	6820      	ldr	r0, [r4, #0]
  40572c:	1b55      	subs	r5, r2, r5
  40572e:	4458      	add	r0, fp
  405730:	1b9e      	subs	r6, r3, r6
  405732:	60a5      	str	r5, [r4, #8]
  405734:	6020      	str	r0, [r4, #0]
  405736:	f8c8 6008 	str.w	r6, [r8, #8]
  40573a:	b33e      	cbz	r6, 40578c <__ssprint_r+0xf0>
  40573c:	687e      	ldr	r6, [r7, #4]
  40573e:	463b      	mov	r3, r7
  405740:	3708      	adds	r7, #8
  405742:	2e00      	cmp	r6, #0
  405744:	d0fa      	beq.n	40573c <__ssprint_r+0xa0>
  405746:	42ae      	cmp	r6, r5
  405748:	f8d3 9000 	ldr.w	r9, [r3]
  40574c:	46ab      	mov	fp, r5
  40574e:	d2b2      	bcs.n	4056b6 <__ssprint_r+0x1a>
  405750:	4635      	mov	r5, r6
  405752:	46b3      	mov	fp, r6
  405754:	e7e2      	b.n	40571c <__ssprint_r+0x80>
  405756:	4650      	mov	r0, sl
  405758:	f000 fa60 	bl	405c1c <_realloc_r>
  40575c:	4603      	mov	r3, r0
  40575e:	2800      	cmp	r0, #0
  405760:	d1d2      	bne.n	405708 <__ssprint_r+0x6c>
  405762:	6921      	ldr	r1, [r4, #16]
  405764:	4650      	mov	r0, sl
  405766:	f000 f8f9 	bl	40595c <_free_r>
  40576a:	230c      	movs	r3, #12
  40576c:	f8ca 3000 	str.w	r3, [sl]
  405770:	89a3      	ldrh	r3, [r4, #12]
  405772:	2200      	movs	r2, #0
  405774:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405778:	f04f 30ff 	mov.w	r0, #4294967295
  40577c:	81a3      	strh	r3, [r4, #12]
  40577e:	f8c8 2008 	str.w	r2, [r8, #8]
  405782:	f8c8 2004 	str.w	r2, [r8, #4]
  405786:	b003      	add	sp, #12
  405788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40578c:	2000      	movs	r0, #0
  40578e:	f8c8 0004 	str.w	r0, [r8, #4]
  405792:	b003      	add	sp, #12
  405794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405798 <__register_exitproc>:
  405798:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40579c:	4d2c      	ldr	r5, [pc, #176]	; (405850 <__register_exitproc+0xb8>)
  40579e:	4606      	mov	r6, r0
  4057a0:	6828      	ldr	r0, [r5, #0]
  4057a2:	4698      	mov	r8, r3
  4057a4:	460f      	mov	r7, r1
  4057a6:	4691      	mov	r9, r2
  4057a8:	f7ff f844 	bl	404834 <__retarget_lock_acquire_recursive>
  4057ac:	4b29      	ldr	r3, [pc, #164]	; (405854 <__register_exitproc+0xbc>)
  4057ae:	681c      	ldr	r4, [r3, #0]
  4057b0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  4057b4:	2b00      	cmp	r3, #0
  4057b6:	d03e      	beq.n	405836 <__register_exitproc+0x9e>
  4057b8:	685a      	ldr	r2, [r3, #4]
  4057ba:	2a1f      	cmp	r2, #31
  4057bc:	dc1c      	bgt.n	4057f8 <__register_exitproc+0x60>
  4057be:	f102 0e01 	add.w	lr, r2, #1
  4057c2:	b176      	cbz	r6, 4057e2 <__register_exitproc+0x4a>
  4057c4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4057c8:	2401      	movs	r4, #1
  4057ca:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4057ce:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4057d2:	4094      	lsls	r4, r2
  4057d4:	4320      	orrs	r0, r4
  4057d6:	2e02      	cmp	r6, #2
  4057d8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4057dc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4057e0:	d023      	beq.n	40582a <__register_exitproc+0x92>
  4057e2:	3202      	adds	r2, #2
  4057e4:	f8c3 e004 	str.w	lr, [r3, #4]
  4057e8:	6828      	ldr	r0, [r5, #0]
  4057ea:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4057ee:	f7ff f823 	bl	404838 <__retarget_lock_release_recursive>
  4057f2:	2000      	movs	r0, #0
  4057f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4057f8:	4b17      	ldr	r3, [pc, #92]	; (405858 <__register_exitproc+0xc0>)
  4057fa:	b30b      	cbz	r3, 405840 <__register_exitproc+0xa8>
  4057fc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405800:	f3af 8000 	nop.w
  405804:	4603      	mov	r3, r0
  405806:	b1d8      	cbz	r0, 405840 <__register_exitproc+0xa8>
  405808:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40580c:	6002      	str	r2, [r0, #0]
  40580e:	2100      	movs	r1, #0
  405810:	6041      	str	r1, [r0, #4]
  405812:	460a      	mov	r2, r1
  405814:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405818:	f04f 0e01 	mov.w	lr, #1
  40581c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405820:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405824:	2e00      	cmp	r6, #0
  405826:	d0dc      	beq.n	4057e2 <__register_exitproc+0x4a>
  405828:	e7cc      	b.n	4057c4 <__register_exitproc+0x2c>
  40582a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40582e:	430c      	orrs	r4, r1
  405830:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405834:	e7d5      	b.n	4057e2 <__register_exitproc+0x4a>
  405836:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40583a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40583e:	e7bb      	b.n	4057b8 <__register_exitproc+0x20>
  405840:	6828      	ldr	r0, [r5, #0]
  405842:	f7fe fff9 	bl	404838 <__retarget_lock_release_recursive>
  405846:	f04f 30ff 	mov.w	r0, #4294967295
  40584a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40584e:	bf00      	nop
  405850:	20400458 	.word	0x20400458
  405854:	00406e84 	.word	0x00406e84
  405858:	00000000 	.word	0x00000000

0040585c <_calloc_r>:
  40585c:	b510      	push	{r4, lr}
  40585e:	fb02 f101 	mul.w	r1, r2, r1
  405862:	f7fe ffeb 	bl	40483c <_malloc_r>
  405866:	4604      	mov	r4, r0
  405868:	b1d8      	cbz	r0, 4058a2 <_calloc_r+0x46>
  40586a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  40586e:	f022 0203 	bic.w	r2, r2, #3
  405872:	3a04      	subs	r2, #4
  405874:	2a24      	cmp	r2, #36	; 0x24
  405876:	d818      	bhi.n	4058aa <_calloc_r+0x4e>
  405878:	2a13      	cmp	r2, #19
  40587a:	d914      	bls.n	4058a6 <_calloc_r+0x4a>
  40587c:	2300      	movs	r3, #0
  40587e:	2a1b      	cmp	r2, #27
  405880:	6003      	str	r3, [r0, #0]
  405882:	6043      	str	r3, [r0, #4]
  405884:	d916      	bls.n	4058b4 <_calloc_r+0x58>
  405886:	2a24      	cmp	r2, #36	; 0x24
  405888:	6083      	str	r3, [r0, #8]
  40588a:	60c3      	str	r3, [r0, #12]
  40588c:	bf11      	iteee	ne
  40588e:	f100 0210 	addne.w	r2, r0, #16
  405892:	6103      	streq	r3, [r0, #16]
  405894:	6143      	streq	r3, [r0, #20]
  405896:	f100 0218 	addeq.w	r2, r0, #24
  40589a:	2300      	movs	r3, #0
  40589c:	6013      	str	r3, [r2, #0]
  40589e:	6053      	str	r3, [r2, #4]
  4058a0:	6093      	str	r3, [r2, #8]
  4058a2:	4620      	mov	r0, r4
  4058a4:	bd10      	pop	{r4, pc}
  4058a6:	4602      	mov	r2, r0
  4058a8:	e7f7      	b.n	40589a <_calloc_r+0x3e>
  4058aa:	2100      	movs	r1, #0
  4058ac:	f7fc fd28 	bl	402300 <memset>
  4058b0:	4620      	mov	r0, r4
  4058b2:	bd10      	pop	{r4, pc}
  4058b4:	f100 0208 	add.w	r2, r0, #8
  4058b8:	e7ef      	b.n	40589a <_calloc_r+0x3e>
  4058ba:	bf00      	nop

004058bc <_malloc_trim_r>:
  4058bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4058be:	4f24      	ldr	r7, [pc, #144]	; (405950 <_malloc_trim_r+0x94>)
  4058c0:	460c      	mov	r4, r1
  4058c2:	4606      	mov	r6, r0
  4058c4:	f7ff fb56 	bl	404f74 <__malloc_lock>
  4058c8:	68bb      	ldr	r3, [r7, #8]
  4058ca:	685d      	ldr	r5, [r3, #4]
  4058cc:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  4058d0:	310f      	adds	r1, #15
  4058d2:	f025 0503 	bic.w	r5, r5, #3
  4058d6:	4429      	add	r1, r5
  4058d8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  4058dc:	f021 010f 	bic.w	r1, r1, #15
  4058e0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  4058e4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  4058e8:	db07      	blt.n	4058fa <_malloc_trim_r+0x3e>
  4058ea:	2100      	movs	r1, #0
  4058ec:	4630      	mov	r0, r6
  4058ee:	f7ff fe47 	bl	405580 <_sbrk_r>
  4058f2:	68bb      	ldr	r3, [r7, #8]
  4058f4:	442b      	add	r3, r5
  4058f6:	4298      	cmp	r0, r3
  4058f8:	d004      	beq.n	405904 <_malloc_trim_r+0x48>
  4058fa:	4630      	mov	r0, r6
  4058fc:	f7ff fb40 	bl	404f80 <__malloc_unlock>
  405900:	2000      	movs	r0, #0
  405902:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405904:	4261      	negs	r1, r4
  405906:	4630      	mov	r0, r6
  405908:	f7ff fe3a 	bl	405580 <_sbrk_r>
  40590c:	3001      	adds	r0, #1
  40590e:	d00d      	beq.n	40592c <_malloc_trim_r+0x70>
  405910:	4b10      	ldr	r3, [pc, #64]	; (405954 <_malloc_trim_r+0x98>)
  405912:	68ba      	ldr	r2, [r7, #8]
  405914:	6819      	ldr	r1, [r3, #0]
  405916:	1b2d      	subs	r5, r5, r4
  405918:	f045 0501 	orr.w	r5, r5, #1
  40591c:	4630      	mov	r0, r6
  40591e:	1b09      	subs	r1, r1, r4
  405920:	6055      	str	r5, [r2, #4]
  405922:	6019      	str	r1, [r3, #0]
  405924:	f7ff fb2c 	bl	404f80 <__malloc_unlock>
  405928:	2001      	movs	r0, #1
  40592a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40592c:	2100      	movs	r1, #0
  40592e:	4630      	mov	r0, r6
  405930:	f7ff fe26 	bl	405580 <_sbrk_r>
  405934:	68ba      	ldr	r2, [r7, #8]
  405936:	1a83      	subs	r3, r0, r2
  405938:	2b0f      	cmp	r3, #15
  40593a:	ddde      	ble.n	4058fa <_malloc_trim_r+0x3e>
  40593c:	4c06      	ldr	r4, [pc, #24]	; (405958 <_malloc_trim_r+0x9c>)
  40593e:	4905      	ldr	r1, [pc, #20]	; (405954 <_malloc_trim_r+0x98>)
  405940:	6824      	ldr	r4, [r4, #0]
  405942:	f043 0301 	orr.w	r3, r3, #1
  405946:	1b00      	subs	r0, r0, r4
  405948:	6053      	str	r3, [r2, #4]
  40594a:	6008      	str	r0, [r1, #0]
  40594c:	e7d5      	b.n	4058fa <_malloc_trim_r+0x3e>
  40594e:	bf00      	nop
  405950:	2040045c 	.word	0x2040045c
  405954:	20400c9c 	.word	0x20400c9c
  405958:	20400864 	.word	0x20400864

0040595c <_free_r>:
  40595c:	2900      	cmp	r1, #0
  40595e:	d044      	beq.n	4059ea <_free_r+0x8e>
  405960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405964:	460d      	mov	r5, r1
  405966:	4680      	mov	r8, r0
  405968:	f7ff fb04 	bl	404f74 <__malloc_lock>
  40596c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405970:	4969      	ldr	r1, [pc, #420]	; (405b18 <_free_r+0x1bc>)
  405972:	f027 0301 	bic.w	r3, r7, #1
  405976:	f1a5 0408 	sub.w	r4, r5, #8
  40597a:	18e2      	adds	r2, r4, r3
  40597c:	688e      	ldr	r6, [r1, #8]
  40597e:	6850      	ldr	r0, [r2, #4]
  405980:	42b2      	cmp	r2, r6
  405982:	f020 0003 	bic.w	r0, r0, #3
  405986:	d05e      	beq.n	405a46 <_free_r+0xea>
  405988:	07fe      	lsls	r6, r7, #31
  40598a:	6050      	str	r0, [r2, #4]
  40598c:	d40b      	bmi.n	4059a6 <_free_r+0x4a>
  40598e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405992:	1be4      	subs	r4, r4, r7
  405994:	f101 0e08 	add.w	lr, r1, #8
  405998:	68a5      	ldr	r5, [r4, #8]
  40599a:	4575      	cmp	r5, lr
  40599c:	443b      	add	r3, r7
  40599e:	d06d      	beq.n	405a7c <_free_r+0x120>
  4059a0:	68e7      	ldr	r7, [r4, #12]
  4059a2:	60ef      	str	r7, [r5, #12]
  4059a4:	60bd      	str	r5, [r7, #8]
  4059a6:	1815      	adds	r5, r2, r0
  4059a8:	686d      	ldr	r5, [r5, #4]
  4059aa:	07ed      	lsls	r5, r5, #31
  4059ac:	d53e      	bpl.n	405a2c <_free_r+0xd0>
  4059ae:	f043 0201 	orr.w	r2, r3, #1
  4059b2:	6062      	str	r2, [r4, #4]
  4059b4:	50e3      	str	r3, [r4, r3]
  4059b6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4059ba:	d217      	bcs.n	4059ec <_free_r+0x90>
  4059bc:	08db      	lsrs	r3, r3, #3
  4059be:	1c58      	adds	r0, r3, #1
  4059c0:	109a      	asrs	r2, r3, #2
  4059c2:	684d      	ldr	r5, [r1, #4]
  4059c4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4059c8:	60a7      	str	r7, [r4, #8]
  4059ca:	2301      	movs	r3, #1
  4059cc:	4093      	lsls	r3, r2
  4059ce:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4059d2:	432b      	orrs	r3, r5
  4059d4:	3a08      	subs	r2, #8
  4059d6:	60e2      	str	r2, [r4, #12]
  4059d8:	604b      	str	r3, [r1, #4]
  4059da:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4059de:	60fc      	str	r4, [r7, #12]
  4059e0:	4640      	mov	r0, r8
  4059e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4059e6:	f7ff bacb 	b.w	404f80 <__malloc_unlock>
  4059ea:	4770      	bx	lr
  4059ec:	0a5a      	lsrs	r2, r3, #9
  4059ee:	2a04      	cmp	r2, #4
  4059f0:	d852      	bhi.n	405a98 <_free_r+0x13c>
  4059f2:	099a      	lsrs	r2, r3, #6
  4059f4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4059f8:	00ff      	lsls	r7, r7, #3
  4059fa:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4059fe:	19c8      	adds	r0, r1, r7
  405a00:	59ca      	ldr	r2, [r1, r7]
  405a02:	3808      	subs	r0, #8
  405a04:	4290      	cmp	r0, r2
  405a06:	d04f      	beq.n	405aa8 <_free_r+0x14c>
  405a08:	6851      	ldr	r1, [r2, #4]
  405a0a:	f021 0103 	bic.w	r1, r1, #3
  405a0e:	428b      	cmp	r3, r1
  405a10:	d232      	bcs.n	405a78 <_free_r+0x11c>
  405a12:	6892      	ldr	r2, [r2, #8]
  405a14:	4290      	cmp	r0, r2
  405a16:	d1f7      	bne.n	405a08 <_free_r+0xac>
  405a18:	68c3      	ldr	r3, [r0, #12]
  405a1a:	60a0      	str	r0, [r4, #8]
  405a1c:	60e3      	str	r3, [r4, #12]
  405a1e:	609c      	str	r4, [r3, #8]
  405a20:	60c4      	str	r4, [r0, #12]
  405a22:	4640      	mov	r0, r8
  405a24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405a28:	f7ff baaa 	b.w	404f80 <__malloc_unlock>
  405a2c:	6895      	ldr	r5, [r2, #8]
  405a2e:	4f3b      	ldr	r7, [pc, #236]	; (405b1c <_free_r+0x1c0>)
  405a30:	42bd      	cmp	r5, r7
  405a32:	4403      	add	r3, r0
  405a34:	d040      	beq.n	405ab8 <_free_r+0x15c>
  405a36:	68d0      	ldr	r0, [r2, #12]
  405a38:	60e8      	str	r0, [r5, #12]
  405a3a:	f043 0201 	orr.w	r2, r3, #1
  405a3e:	6085      	str	r5, [r0, #8]
  405a40:	6062      	str	r2, [r4, #4]
  405a42:	50e3      	str	r3, [r4, r3]
  405a44:	e7b7      	b.n	4059b6 <_free_r+0x5a>
  405a46:	07ff      	lsls	r7, r7, #31
  405a48:	4403      	add	r3, r0
  405a4a:	d407      	bmi.n	405a5c <_free_r+0x100>
  405a4c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405a50:	1aa4      	subs	r4, r4, r2
  405a52:	4413      	add	r3, r2
  405a54:	68a0      	ldr	r0, [r4, #8]
  405a56:	68e2      	ldr	r2, [r4, #12]
  405a58:	60c2      	str	r2, [r0, #12]
  405a5a:	6090      	str	r0, [r2, #8]
  405a5c:	4a30      	ldr	r2, [pc, #192]	; (405b20 <_free_r+0x1c4>)
  405a5e:	6812      	ldr	r2, [r2, #0]
  405a60:	f043 0001 	orr.w	r0, r3, #1
  405a64:	4293      	cmp	r3, r2
  405a66:	6060      	str	r0, [r4, #4]
  405a68:	608c      	str	r4, [r1, #8]
  405a6a:	d3b9      	bcc.n	4059e0 <_free_r+0x84>
  405a6c:	4b2d      	ldr	r3, [pc, #180]	; (405b24 <_free_r+0x1c8>)
  405a6e:	4640      	mov	r0, r8
  405a70:	6819      	ldr	r1, [r3, #0]
  405a72:	f7ff ff23 	bl	4058bc <_malloc_trim_r>
  405a76:	e7b3      	b.n	4059e0 <_free_r+0x84>
  405a78:	4610      	mov	r0, r2
  405a7a:	e7cd      	b.n	405a18 <_free_r+0xbc>
  405a7c:	1811      	adds	r1, r2, r0
  405a7e:	6849      	ldr	r1, [r1, #4]
  405a80:	07c9      	lsls	r1, r1, #31
  405a82:	d444      	bmi.n	405b0e <_free_r+0x1b2>
  405a84:	6891      	ldr	r1, [r2, #8]
  405a86:	68d2      	ldr	r2, [r2, #12]
  405a88:	60ca      	str	r2, [r1, #12]
  405a8a:	4403      	add	r3, r0
  405a8c:	f043 0001 	orr.w	r0, r3, #1
  405a90:	6091      	str	r1, [r2, #8]
  405a92:	6060      	str	r0, [r4, #4]
  405a94:	50e3      	str	r3, [r4, r3]
  405a96:	e7a3      	b.n	4059e0 <_free_r+0x84>
  405a98:	2a14      	cmp	r2, #20
  405a9a:	d816      	bhi.n	405aca <_free_r+0x16e>
  405a9c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405aa0:	00ff      	lsls	r7, r7, #3
  405aa2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405aa6:	e7aa      	b.n	4059fe <_free_r+0xa2>
  405aa8:	10aa      	asrs	r2, r5, #2
  405aaa:	2301      	movs	r3, #1
  405aac:	684d      	ldr	r5, [r1, #4]
  405aae:	4093      	lsls	r3, r2
  405ab0:	432b      	orrs	r3, r5
  405ab2:	604b      	str	r3, [r1, #4]
  405ab4:	4603      	mov	r3, r0
  405ab6:	e7b0      	b.n	405a1a <_free_r+0xbe>
  405ab8:	f043 0201 	orr.w	r2, r3, #1
  405abc:	614c      	str	r4, [r1, #20]
  405abe:	610c      	str	r4, [r1, #16]
  405ac0:	60e5      	str	r5, [r4, #12]
  405ac2:	60a5      	str	r5, [r4, #8]
  405ac4:	6062      	str	r2, [r4, #4]
  405ac6:	50e3      	str	r3, [r4, r3]
  405ac8:	e78a      	b.n	4059e0 <_free_r+0x84>
  405aca:	2a54      	cmp	r2, #84	; 0x54
  405acc:	d806      	bhi.n	405adc <_free_r+0x180>
  405ace:	0b1a      	lsrs	r2, r3, #12
  405ad0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405ad4:	00ff      	lsls	r7, r7, #3
  405ad6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  405ada:	e790      	b.n	4059fe <_free_r+0xa2>
  405adc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405ae0:	d806      	bhi.n	405af0 <_free_r+0x194>
  405ae2:	0bda      	lsrs	r2, r3, #15
  405ae4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405ae8:	00ff      	lsls	r7, r7, #3
  405aea:	f102 0577 	add.w	r5, r2, #119	; 0x77
  405aee:	e786      	b.n	4059fe <_free_r+0xa2>
  405af0:	f240 5054 	movw	r0, #1364	; 0x554
  405af4:	4282      	cmp	r2, r0
  405af6:	d806      	bhi.n	405b06 <_free_r+0x1aa>
  405af8:	0c9a      	lsrs	r2, r3, #18
  405afa:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  405afe:	00ff      	lsls	r7, r7, #3
  405b00:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405b04:	e77b      	b.n	4059fe <_free_r+0xa2>
  405b06:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  405b0a:	257e      	movs	r5, #126	; 0x7e
  405b0c:	e777      	b.n	4059fe <_free_r+0xa2>
  405b0e:	f043 0101 	orr.w	r1, r3, #1
  405b12:	6061      	str	r1, [r4, #4]
  405b14:	6013      	str	r3, [r2, #0]
  405b16:	e763      	b.n	4059e0 <_free_r+0x84>
  405b18:	2040045c 	.word	0x2040045c
  405b1c:	20400464 	.word	0x20400464
  405b20:	20400868 	.word	0x20400868
  405b24:	20400ccc 	.word	0x20400ccc

00405b28 <__ascii_mbtowc>:
  405b28:	b082      	sub	sp, #8
  405b2a:	b149      	cbz	r1, 405b40 <__ascii_mbtowc+0x18>
  405b2c:	b15a      	cbz	r2, 405b46 <__ascii_mbtowc+0x1e>
  405b2e:	b16b      	cbz	r3, 405b4c <__ascii_mbtowc+0x24>
  405b30:	7813      	ldrb	r3, [r2, #0]
  405b32:	600b      	str	r3, [r1, #0]
  405b34:	7812      	ldrb	r2, [r2, #0]
  405b36:	1c10      	adds	r0, r2, #0
  405b38:	bf18      	it	ne
  405b3a:	2001      	movne	r0, #1
  405b3c:	b002      	add	sp, #8
  405b3e:	4770      	bx	lr
  405b40:	a901      	add	r1, sp, #4
  405b42:	2a00      	cmp	r2, #0
  405b44:	d1f3      	bne.n	405b2e <__ascii_mbtowc+0x6>
  405b46:	4610      	mov	r0, r2
  405b48:	b002      	add	sp, #8
  405b4a:	4770      	bx	lr
  405b4c:	f06f 0001 	mvn.w	r0, #1
  405b50:	e7f4      	b.n	405b3c <__ascii_mbtowc+0x14>
  405b52:	bf00      	nop

00405b54 <memmove>:
  405b54:	4288      	cmp	r0, r1
  405b56:	b5f0      	push	{r4, r5, r6, r7, lr}
  405b58:	d90d      	bls.n	405b76 <memmove+0x22>
  405b5a:	188b      	adds	r3, r1, r2
  405b5c:	4298      	cmp	r0, r3
  405b5e:	d20a      	bcs.n	405b76 <memmove+0x22>
  405b60:	1884      	adds	r4, r0, r2
  405b62:	2a00      	cmp	r2, #0
  405b64:	d051      	beq.n	405c0a <memmove+0xb6>
  405b66:	4622      	mov	r2, r4
  405b68:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405b6c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405b70:	4299      	cmp	r1, r3
  405b72:	d1f9      	bne.n	405b68 <memmove+0x14>
  405b74:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405b76:	2a0f      	cmp	r2, #15
  405b78:	d948      	bls.n	405c0c <memmove+0xb8>
  405b7a:	ea41 0300 	orr.w	r3, r1, r0
  405b7e:	079b      	lsls	r3, r3, #30
  405b80:	d146      	bne.n	405c10 <memmove+0xbc>
  405b82:	f100 0410 	add.w	r4, r0, #16
  405b86:	f101 0310 	add.w	r3, r1, #16
  405b8a:	4615      	mov	r5, r2
  405b8c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405b90:	f844 6c10 	str.w	r6, [r4, #-16]
  405b94:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405b98:	f844 6c0c 	str.w	r6, [r4, #-12]
  405b9c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405ba0:	f844 6c08 	str.w	r6, [r4, #-8]
  405ba4:	3d10      	subs	r5, #16
  405ba6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405baa:	f844 6c04 	str.w	r6, [r4, #-4]
  405bae:	2d0f      	cmp	r5, #15
  405bb0:	f103 0310 	add.w	r3, r3, #16
  405bb4:	f104 0410 	add.w	r4, r4, #16
  405bb8:	d8e8      	bhi.n	405b8c <memmove+0x38>
  405bba:	f1a2 0310 	sub.w	r3, r2, #16
  405bbe:	f023 030f 	bic.w	r3, r3, #15
  405bc2:	f002 0e0f 	and.w	lr, r2, #15
  405bc6:	3310      	adds	r3, #16
  405bc8:	f1be 0f03 	cmp.w	lr, #3
  405bcc:	4419      	add	r1, r3
  405bce:	4403      	add	r3, r0
  405bd0:	d921      	bls.n	405c16 <memmove+0xc2>
  405bd2:	1f1e      	subs	r6, r3, #4
  405bd4:	460d      	mov	r5, r1
  405bd6:	4674      	mov	r4, lr
  405bd8:	3c04      	subs	r4, #4
  405bda:	f855 7b04 	ldr.w	r7, [r5], #4
  405bde:	f846 7f04 	str.w	r7, [r6, #4]!
  405be2:	2c03      	cmp	r4, #3
  405be4:	d8f8      	bhi.n	405bd8 <memmove+0x84>
  405be6:	f1ae 0404 	sub.w	r4, lr, #4
  405bea:	f024 0403 	bic.w	r4, r4, #3
  405bee:	3404      	adds	r4, #4
  405bf0:	4421      	add	r1, r4
  405bf2:	4423      	add	r3, r4
  405bf4:	f002 0203 	and.w	r2, r2, #3
  405bf8:	b162      	cbz	r2, 405c14 <memmove+0xc0>
  405bfa:	3b01      	subs	r3, #1
  405bfc:	440a      	add	r2, r1
  405bfe:	f811 4b01 	ldrb.w	r4, [r1], #1
  405c02:	f803 4f01 	strb.w	r4, [r3, #1]!
  405c06:	428a      	cmp	r2, r1
  405c08:	d1f9      	bne.n	405bfe <memmove+0xaa>
  405c0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c0c:	4603      	mov	r3, r0
  405c0e:	e7f3      	b.n	405bf8 <memmove+0xa4>
  405c10:	4603      	mov	r3, r0
  405c12:	e7f2      	b.n	405bfa <memmove+0xa6>
  405c14:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405c16:	4672      	mov	r2, lr
  405c18:	e7ee      	b.n	405bf8 <memmove+0xa4>
  405c1a:	bf00      	nop

00405c1c <_realloc_r>:
  405c1c:	2900      	cmp	r1, #0
  405c1e:	f000 8095 	beq.w	405d4c <_realloc_r+0x130>
  405c22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405c26:	460d      	mov	r5, r1
  405c28:	4616      	mov	r6, r2
  405c2a:	b083      	sub	sp, #12
  405c2c:	4680      	mov	r8, r0
  405c2e:	f106 070b 	add.w	r7, r6, #11
  405c32:	f7ff f99f 	bl	404f74 <__malloc_lock>
  405c36:	f855 ec04 	ldr.w	lr, [r5, #-4]
  405c3a:	2f16      	cmp	r7, #22
  405c3c:	f02e 0403 	bic.w	r4, lr, #3
  405c40:	f1a5 0908 	sub.w	r9, r5, #8
  405c44:	d83c      	bhi.n	405cc0 <_realloc_r+0xa4>
  405c46:	2210      	movs	r2, #16
  405c48:	4617      	mov	r7, r2
  405c4a:	42be      	cmp	r6, r7
  405c4c:	d83d      	bhi.n	405cca <_realloc_r+0xae>
  405c4e:	4294      	cmp	r4, r2
  405c50:	da43      	bge.n	405cda <_realloc_r+0xbe>
  405c52:	4bc4      	ldr	r3, [pc, #784]	; (405f64 <_realloc_r+0x348>)
  405c54:	6899      	ldr	r1, [r3, #8]
  405c56:	eb09 0004 	add.w	r0, r9, r4
  405c5a:	4288      	cmp	r0, r1
  405c5c:	f000 80b4 	beq.w	405dc8 <_realloc_r+0x1ac>
  405c60:	6843      	ldr	r3, [r0, #4]
  405c62:	f023 0101 	bic.w	r1, r3, #1
  405c66:	4401      	add	r1, r0
  405c68:	6849      	ldr	r1, [r1, #4]
  405c6a:	07c9      	lsls	r1, r1, #31
  405c6c:	d54c      	bpl.n	405d08 <_realloc_r+0xec>
  405c6e:	f01e 0f01 	tst.w	lr, #1
  405c72:	f000 809b 	beq.w	405dac <_realloc_r+0x190>
  405c76:	4631      	mov	r1, r6
  405c78:	4640      	mov	r0, r8
  405c7a:	f7fe fddf 	bl	40483c <_malloc_r>
  405c7e:	4606      	mov	r6, r0
  405c80:	2800      	cmp	r0, #0
  405c82:	d03a      	beq.n	405cfa <_realloc_r+0xde>
  405c84:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405c88:	f023 0301 	bic.w	r3, r3, #1
  405c8c:	444b      	add	r3, r9
  405c8e:	f1a0 0208 	sub.w	r2, r0, #8
  405c92:	429a      	cmp	r2, r3
  405c94:	f000 8121 	beq.w	405eda <_realloc_r+0x2be>
  405c98:	1f22      	subs	r2, r4, #4
  405c9a:	2a24      	cmp	r2, #36	; 0x24
  405c9c:	f200 8107 	bhi.w	405eae <_realloc_r+0x292>
  405ca0:	2a13      	cmp	r2, #19
  405ca2:	f200 80db 	bhi.w	405e5c <_realloc_r+0x240>
  405ca6:	4603      	mov	r3, r0
  405ca8:	462a      	mov	r2, r5
  405caa:	6811      	ldr	r1, [r2, #0]
  405cac:	6019      	str	r1, [r3, #0]
  405cae:	6851      	ldr	r1, [r2, #4]
  405cb0:	6059      	str	r1, [r3, #4]
  405cb2:	6892      	ldr	r2, [r2, #8]
  405cb4:	609a      	str	r2, [r3, #8]
  405cb6:	4629      	mov	r1, r5
  405cb8:	4640      	mov	r0, r8
  405cba:	f7ff fe4f 	bl	40595c <_free_r>
  405cbe:	e01c      	b.n	405cfa <_realloc_r+0xde>
  405cc0:	f027 0707 	bic.w	r7, r7, #7
  405cc4:	2f00      	cmp	r7, #0
  405cc6:	463a      	mov	r2, r7
  405cc8:	dabf      	bge.n	405c4a <_realloc_r+0x2e>
  405cca:	2600      	movs	r6, #0
  405ccc:	230c      	movs	r3, #12
  405cce:	4630      	mov	r0, r6
  405cd0:	f8c8 3000 	str.w	r3, [r8]
  405cd4:	b003      	add	sp, #12
  405cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405cda:	462e      	mov	r6, r5
  405cdc:	1be3      	subs	r3, r4, r7
  405cde:	2b0f      	cmp	r3, #15
  405ce0:	d81e      	bhi.n	405d20 <_realloc_r+0x104>
  405ce2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405ce6:	f003 0301 	and.w	r3, r3, #1
  405cea:	4323      	orrs	r3, r4
  405cec:	444c      	add	r4, r9
  405cee:	f8c9 3004 	str.w	r3, [r9, #4]
  405cf2:	6863      	ldr	r3, [r4, #4]
  405cf4:	f043 0301 	orr.w	r3, r3, #1
  405cf8:	6063      	str	r3, [r4, #4]
  405cfa:	4640      	mov	r0, r8
  405cfc:	f7ff f940 	bl	404f80 <__malloc_unlock>
  405d00:	4630      	mov	r0, r6
  405d02:	b003      	add	sp, #12
  405d04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405d08:	f023 0303 	bic.w	r3, r3, #3
  405d0c:	18e1      	adds	r1, r4, r3
  405d0e:	4291      	cmp	r1, r2
  405d10:	db1f      	blt.n	405d52 <_realloc_r+0x136>
  405d12:	68c3      	ldr	r3, [r0, #12]
  405d14:	6882      	ldr	r2, [r0, #8]
  405d16:	462e      	mov	r6, r5
  405d18:	60d3      	str	r3, [r2, #12]
  405d1a:	460c      	mov	r4, r1
  405d1c:	609a      	str	r2, [r3, #8]
  405d1e:	e7dd      	b.n	405cdc <_realloc_r+0xc0>
  405d20:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405d24:	eb09 0107 	add.w	r1, r9, r7
  405d28:	f002 0201 	and.w	r2, r2, #1
  405d2c:	444c      	add	r4, r9
  405d2e:	f043 0301 	orr.w	r3, r3, #1
  405d32:	4317      	orrs	r7, r2
  405d34:	f8c9 7004 	str.w	r7, [r9, #4]
  405d38:	604b      	str	r3, [r1, #4]
  405d3a:	6863      	ldr	r3, [r4, #4]
  405d3c:	f043 0301 	orr.w	r3, r3, #1
  405d40:	3108      	adds	r1, #8
  405d42:	6063      	str	r3, [r4, #4]
  405d44:	4640      	mov	r0, r8
  405d46:	f7ff fe09 	bl	40595c <_free_r>
  405d4a:	e7d6      	b.n	405cfa <_realloc_r+0xde>
  405d4c:	4611      	mov	r1, r2
  405d4e:	f7fe bd75 	b.w	40483c <_malloc_r>
  405d52:	f01e 0f01 	tst.w	lr, #1
  405d56:	d18e      	bne.n	405c76 <_realloc_r+0x5a>
  405d58:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405d5c:	eba9 0a01 	sub.w	sl, r9, r1
  405d60:	f8da 1004 	ldr.w	r1, [sl, #4]
  405d64:	f021 0103 	bic.w	r1, r1, #3
  405d68:	440b      	add	r3, r1
  405d6a:	4423      	add	r3, r4
  405d6c:	4293      	cmp	r3, r2
  405d6e:	db25      	blt.n	405dbc <_realloc_r+0x1a0>
  405d70:	68c2      	ldr	r2, [r0, #12]
  405d72:	6881      	ldr	r1, [r0, #8]
  405d74:	4656      	mov	r6, sl
  405d76:	60ca      	str	r2, [r1, #12]
  405d78:	6091      	str	r1, [r2, #8]
  405d7a:	f8da 100c 	ldr.w	r1, [sl, #12]
  405d7e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405d82:	1f22      	subs	r2, r4, #4
  405d84:	2a24      	cmp	r2, #36	; 0x24
  405d86:	60c1      	str	r1, [r0, #12]
  405d88:	6088      	str	r0, [r1, #8]
  405d8a:	f200 8094 	bhi.w	405eb6 <_realloc_r+0x29a>
  405d8e:	2a13      	cmp	r2, #19
  405d90:	d96f      	bls.n	405e72 <_realloc_r+0x256>
  405d92:	6829      	ldr	r1, [r5, #0]
  405d94:	f8ca 1008 	str.w	r1, [sl, #8]
  405d98:	6869      	ldr	r1, [r5, #4]
  405d9a:	f8ca 100c 	str.w	r1, [sl, #12]
  405d9e:	2a1b      	cmp	r2, #27
  405da0:	f200 80a2 	bhi.w	405ee8 <_realloc_r+0x2cc>
  405da4:	3508      	adds	r5, #8
  405da6:	f10a 0210 	add.w	r2, sl, #16
  405daa:	e063      	b.n	405e74 <_realloc_r+0x258>
  405dac:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405db0:	eba9 0a03 	sub.w	sl, r9, r3
  405db4:	f8da 1004 	ldr.w	r1, [sl, #4]
  405db8:	f021 0103 	bic.w	r1, r1, #3
  405dbc:	1863      	adds	r3, r4, r1
  405dbe:	4293      	cmp	r3, r2
  405dc0:	f6ff af59 	blt.w	405c76 <_realloc_r+0x5a>
  405dc4:	4656      	mov	r6, sl
  405dc6:	e7d8      	b.n	405d7a <_realloc_r+0x15e>
  405dc8:	6841      	ldr	r1, [r0, #4]
  405dca:	f021 0b03 	bic.w	fp, r1, #3
  405dce:	44a3      	add	fp, r4
  405dd0:	f107 0010 	add.w	r0, r7, #16
  405dd4:	4583      	cmp	fp, r0
  405dd6:	da56      	bge.n	405e86 <_realloc_r+0x26a>
  405dd8:	f01e 0f01 	tst.w	lr, #1
  405ddc:	f47f af4b 	bne.w	405c76 <_realloc_r+0x5a>
  405de0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405de4:	eba9 0a01 	sub.w	sl, r9, r1
  405de8:	f8da 1004 	ldr.w	r1, [sl, #4]
  405dec:	f021 0103 	bic.w	r1, r1, #3
  405df0:	448b      	add	fp, r1
  405df2:	4558      	cmp	r0, fp
  405df4:	dce2      	bgt.n	405dbc <_realloc_r+0x1a0>
  405df6:	4656      	mov	r6, sl
  405df8:	f8da 100c 	ldr.w	r1, [sl, #12]
  405dfc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405e00:	1f22      	subs	r2, r4, #4
  405e02:	2a24      	cmp	r2, #36	; 0x24
  405e04:	60c1      	str	r1, [r0, #12]
  405e06:	6088      	str	r0, [r1, #8]
  405e08:	f200 808f 	bhi.w	405f2a <_realloc_r+0x30e>
  405e0c:	2a13      	cmp	r2, #19
  405e0e:	f240 808a 	bls.w	405f26 <_realloc_r+0x30a>
  405e12:	6829      	ldr	r1, [r5, #0]
  405e14:	f8ca 1008 	str.w	r1, [sl, #8]
  405e18:	6869      	ldr	r1, [r5, #4]
  405e1a:	f8ca 100c 	str.w	r1, [sl, #12]
  405e1e:	2a1b      	cmp	r2, #27
  405e20:	f200 808a 	bhi.w	405f38 <_realloc_r+0x31c>
  405e24:	3508      	adds	r5, #8
  405e26:	f10a 0210 	add.w	r2, sl, #16
  405e2a:	6829      	ldr	r1, [r5, #0]
  405e2c:	6011      	str	r1, [r2, #0]
  405e2e:	6869      	ldr	r1, [r5, #4]
  405e30:	6051      	str	r1, [r2, #4]
  405e32:	68a9      	ldr	r1, [r5, #8]
  405e34:	6091      	str	r1, [r2, #8]
  405e36:	eb0a 0107 	add.w	r1, sl, r7
  405e3a:	ebab 0207 	sub.w	r2, fp, r7
  405e3e:	f042 0201 	orr.w	r2, r2, #1
  405e42:	6099      	str	r1, [r3, #8]
  405e44:	604a      	str	r2, [r1, #4]
  405e46:	f8da 3004 	ldr.w	r3, [sl, #4]
  405e4a:	f003 0301 	and.w	r3, r3, #1
  405e4e:	431f      	orrs	r7, r3
  405e50:	4640      	mov	r0, r8
  405e52:	f8ca 7004 	str.w	r7, [sl, #4]
  405e56:	f7ff f893 	bl	404f80 <__malloc_unlock>
  405e5a:	e751      	b.n	405d00 <_realloc_r+0xe4>
  405e5c:	682b      	ldr	r3, [r5, #0]
  405e5e:	6003      	str	r3, [r0, #0]
  405e60:	686b      	ldr	r3, [r5, #4]
  405e62:	6043      	str	r3, [r0, #4]
  405e64:	2a1b      	cmp	r2, #27
  405e66:	d82d      	bhi.n	405ec4 <_realloc_r+0x2a8>
  405e68:	f100 0308 	add.w	r3, r0, #8
  405e6c:	f105 0208 	add.w	r2, r5, #8
  405e70:	e71b      	b.n	405caa <_realloc_r+0x8e>
  405e72:	4632      	mov	r2, r6
  405e74:	6829      	ldr	r1, [r5, #0]
  405e76:	6011      	str	r1, [r2, #0]
  405e78:	6869      	ldr	r1, [r5, #4]
  405e7a:	6051      	str	r1, [r2, #4]
  405e7c:	68a9      	ldr	r1, [r5, #8]
  405e7e:	6091      	str	r1, [r2, #8]
  405e80:	461c      	mov	r4, r3
  405e82:	46d1      	mov	r9, sl
  405e84:	e72a      	b.n	405cdc <_realloc_r+0xc0>
  405e86:	eb09 0107 	add.w	r1, r9, r7
  405e8a:	ebab 0b07 	sub.w	fp, fp, r7
  405e8e:	f04b 0201 	orr.w	r2, fp, #1
  405e92:	6099      	str	r1, [r3, #8]
  405e94:	604a      	str	r2, [r1, #4]
  405e96:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405e9a:	f003 0301 	and.w	r3, r3, #1
  405e9e:	431f      	orrs	r7, r3
  405ea0:	4640      	mov	r0, r8
  405ea2:	f845 7c04 	str.w	r7, [r5, #-4]
  405ea6:	f7ff f86b 	bl	404f80 <__malloc_unlock>
  405eaa:	462e      	mov	r6, r5
  405eac:	e728      	b.n	405d00 <_realloc_r+0xe4>
  405eae:	4629      	mov	r1, r5
  405eb0:	f7ff fe50 	bl	405b54 <memmove>
  405eb4:	e6ff      	b.n	405cb6 <_realloc_r+0x9a>
  405eb6:	4629      	mov	r1, r5
  405eb8:	4630      	mov	r0, r6
  405eba:	461c      	mov	r4, r3
  405ebc:	46d1      	mov	r9, sl
  405ebe:	f7ff fe49 	bl	405b54 <memmove>
  405ec2:	e70b      	b.n	405cdc <_realloc_r+0xc0>
  405ec4:	68ab      	ldr	r3, [r5, #8]
  405ec6:	6083      	str	r3, [r0, #8]
  405ec8:	68eb      	ldr	r3, [r5, #12]
  405eca:	60c3      	str	r3, [r0, #12]
  405ecc:	2a24      	cmp	r2, #36	; 0x24
  405ece:	d017      	beq.n	405f00 <_realloc_r+0x2e4>
  405ed0:	f100 0310 	add.w	r3, r0, #16
  405ed4:	f105 0210 	add.w	r2, r5, #16
  405ed8:	e6e7      	b.n	405caa <_realloc_r+0x8e>
  405eda:	f850 3c04 	ldr.w	r3, [r0, #-4]
  405ede:	f023 0303 	bic.w	r3, r3, #3
  405ee2:	441c      	add	r4, r3
  405ee4:	462e      	mov	r6, r5
  405ee6:	e6f9      	b.n	405cdc <_realloc_r+0xc0>
  405ee8:	68a9      	ldr	r1, [r5, #8]
  405eea:	f8ca 1010 	str.w	r1, [sl, #16]
  405eee:	68e9      	ldr	r1, [r5, #12]
  405ef0:	f8ca 1014 	str.w	r1, [sl, #20]
  405ef4:	2a24      	cmp	r2, #36	; 0x24
  405ef6:	d00c      	beq.n	405f12 <_realloc_r+0x2f6>
  405ef8:	3510      	adds	r5, #16
  405efa:	f10a 0218 	add.w	r2, sl, #24
  405efe:	e7b9      	b.n	405e74 <_realloc_r+0x258>
  405f00:	692b      	ldr	r3, [r5, #16]
  405f02:	6103      	str	r3, [r0, #16]
  405f04:	696b      	ldr	r3, [r5, #20]
  405f06:	6143      	str	r3, [r0, #20]
  405f08:	f105 0218 	add.w	r2, r5, #24
  405f0c:	f100 0318 	add.w	r3, r0, #24
  405f10:	e6cb      	b.n	405caa <_realloc_r+0x8e>
  405f12:	692a      	ldr	r2, [r5, #16]
  405f14:	f8ca 2018 	str.w	r2, [sl, #24]
  405f18:	696a      	ldr	r2, [r5, #20]
  405f1a:	f8ca 201c 	str.w	r2, [sl, #28]
  405f1e:	3518      	adds	r5, #24
  405f20:	f10a 0220 	add.w	r2, sl, #32
  405f24:	e7a6      	b.n	405e74 <_realloc_r+0x258>
  405f26:	4632      	mov	r2, r6
  405f28:	e77f      	b.n	405e2a <_realloc_r+0x20e>
  405f2a:	4629      	mov	r1, r5
  405f2c:	4630      	mov	r0, r6
  405f2e:	9301      	str	r3, [sp, #4]
  405f30:	f7ff fe10 	bl	405b54 <memmove>
  405f34:	9b01      	ldr	r3, [sp, #4]
  405f36:	e77e      	b.n	405e36 <_realloc_r+0x21a>
  405f38:	68a9      	ldr	r1, [r5, #8]
  405f3a:	f8ca 1010 	str.w	r1, [sl, #16]
  405f3e:	68e9      	ldr	r1, [r5, #12]
  405f40:	f8ca 1014 	str.w	r1, [sl, #20]
  405f44:	2a24      	cmp	r2, #36	; 0x24
  405f46:	d003      	beq.n	405f50 <_realloc_r+0x334>
  405f48:	3510      	adds	r5, #16
  405f4a:	f10a 0218 	add.w	r2, sl, #24
  405f4e:	e76c      	b.n	405e2a <_realloc_r+0x20e>
  405f50:	692a      	ldr	r2, [r5, #16]
  405f52:	f8ca 2018 	str.w	r2, [sl, #24]
  405f56:	696a      	ldr	r2, [r5, #20]
  405f58:	f8ca 201c 	str.w	r2, [sl, #28]
  405f5c:	3518      	adds	r5, #24
  405f5e:	f10a 0220 	add.w	r2, sl, #32
  405f62:	e762      	b.n	405e2a <_realloc_r+0x20e>
  405f64:	2040045c 	.word	0x2040045c

00405f68 <__ascii_wctomb>:
  405f68:	b121      	cbz	r1, 405f74 <__ascii_wctomb+0xc>
  405f6a:	2aff      	cmp	r2, #255	; 0xff
  405f6c:	d804      	bhi.n	405f78 <__ascii_wctomb+0x10>
  405f6e:	700a      	strb	r2, [r1, #0]
  405f70:	2001      	movs	r0, #1
  405f72:	4770      	bx	lr
  405f74:	4608      	mov	r0, r1
  405f76:	4770      	bx	lr
  405f78:	238a      	movs	r3, #138	; 0x8a
  405f7a:	6003      	str	r3, [r0, #0]
  405f7c:	f04f 30ff 	mov.w	r0, #4294967295
  405f80:	4770      	bx	lr
  405f82:	bf00      	nop

00405f84 <__gedf2>:
  405f84:	f04f 3cff 	mov.w	ip, #4294967295
  405f88:	e006      	b.n	405f98 <__cmpdf2+0x4>
  405f8a:	bf00      	nop

00405f8c <__ledf2>:
  405f8c:	f04f 0c01 	mov.w	ip, #1
  405f90:	e002      	b.n	405f98 <__cmpdf2+0x4>
  405f92:	bf00      	nop

00405f94 <__cmpdf2>:
  405f94:	f04f 0c01 	mov.w	ip, #1
  405f98:	f84d cd04 	str.w	ip, [sp, #-4]!
  405f9c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fa0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405fa8:	bf18      	it	ne
  405faa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405fae:	d01b      	beq.n	405fe8 <__cmpdf2+0x54>
  405fb0:	b001      	add	sp, #4
  405fb2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405fb6:	bf0c      	ite	eq
  405fb8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405fbc:	ea91 0f03 	teqne	r1, r3
  405fc0:	bf02      	ittt	eq
  405fc2:	ea90 0f02 	teqeq	r0, r2
  405fc6:	2000      	moveq	r0, #0
  405fc8:	4770      	bxeq	lr
  405fca:	f110 0f00 	cmn.w	r0, #0
  405fce:	ea91 0f03 	teq	r1, r3
  405fd2:	bf58      	it	pl
  405fd4:	4299      	cmppl	r1, r3
  405fd6:	bf08      	it	eq
  405fd8:	4290      	cmpeq	r0, r2
  405fda:	bf2c      	ite	cs
  405fdc:	17d8      	asrcs	r0, r3, #31
  405fde:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405fe2:	f040 0001 	orr.w	r0, r0, #1
  405fe6:	4770      	bx	lr
  405fe8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405ff0:	d102      	bne.n	405ff8 <__cmpdf2+0x64>
  405ff2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405ff6:	d107      	bne.n	406008 <__cmpdf2+0x74>
  405ff8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405ffc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406000:	d1d6      	bne.n	405fb0 <__cmpdf2+0x1c>
  406002:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406006:	d0d3      	beq.n	405fb0 <__cmpdf2+0x1c>
  406008:	f85d 0b04 	ldr.w	r0, [sp], #4
  40600c:	4770      	bx	lr
  40600e:	bf00      	nop

00406010 <__aeabi_cdrcmple>:
  406010:	4684      	mov	ip, r0
  406012:	4610      	mov	r0, r2
  406014:	4662      	mov	r2, ip
  406016:	468c      	mov	ip, r1
  406018:	4619      	mov	r1, r3
  40601a:	4663      	mov	r3, ip
  40601c:	e000      	b.n	406020 <__aeabi_cdcmpeq>
  40601e:	bf00      	nop

00406020 <__aeabi_cdcmpeq>:
  406020:	b501      	push	{r0, lr}
  406022:	f7ff ffb7 	bl	405f94 <__cmpdf2>
  406026:	2800      	cmp	r0, #0
  406028:	bf48      	it	mi
  40602a:	f110 0f00 	cmnmi.w	r0, #0
  40602e:	bd01      	pop	{r0, pc}

00406030 <__aeabi_dcmpeq>:
  406030:	f84d ed08 	str.w	lr, [sp, #-8]!
  406034:	f7ff fff4 	bl	406020 <__aeabi_cdcmpeq>
  406038:	bf0c      	ite	eq
  40603a:	2001      	moveq	r0, #1
  40603c:	2000      	movne	r0, #0
  40603e:	f85d fb08 	ldr.w	pc, [sp], #8
  406042:	bf00      	nop

00406044 <__aeabi_dcmplt>:
  406044:	f84d ed08 	str.w	lr, [sp, #-8]!
  406048:	f7ff ffea 	bl	406020 <__aeabi_cdcmpeq>
  40604c:	bf34      	ite	cc
  40604e:	2001      	movcc	r0, #1
  406050:	2000      	movcs	r0, #0
  406052:	f85d fb08 	ldr.w	pc, [sp], #8
  406056:	bf00      	nop

00406058 <__aeabi_dcmple>:
  406058:	f84d ed08 	str.w	lr, [sp, #-8]!
  40605c:	f7ff ffe0 	bl	406020 <__aeabi_cdcmpeq>
  406060:	bf94      	ite	ls
  406062:	2001      	movls	r0, #1
  406064:	2000      	movhi	r0, #0
  406066:	f85d fb08 	ldr.w	pc, [sp], #8
  40606a:	bf00      	nop

0040606c <__aeabi_dcmpge>:
  40606c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406070:	f7ff ffce 	bl	406010 <__aeabi_cdrcmple>
  406074:	bf94      	ite	ls
  406076:	2001      	movls	r0, #1
  406078:	2000      	movhi	r0, #0
  40607a:	f85d fb08 	ldr.w	pc, [sp], #8
  40607e:	bf00      	nop

00406080 <__aeabi_dcmpgt>:
  406080:	f84d ed08 	str.w	lr, [sp, #-8]!
  406084:	f7ff ffc4 	bl	406010 <__aeabi_cdrcmple>
  406088:	bf34      	ite	cc
  40608a:	2001      	movcc	r0, #1
  40608c:	2000      	movcs	r0, #0
  40608e:	f85d fb08 	ldr.w	pc, [sp], #8
  406092:	bf00      	nop

00406094 <__aeabi_dcmpun>:
  406094:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406098:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40609c:	d102      	bne.n	4060a4 <__aeabi_dcmpun+0x10>
  40609e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4060a2:	d10a      	bne.n	4060ba <__aeabi_dcmpun+0x26>
  4060a4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4060a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4060ac:	d102      	bne.n	4060b4 <__aeabi_dcmpun+0x20>
  4060ae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4060b2:	d102      	bne.n	4060ba <__aeabi_dcmpun+0x26>
  4060b4:	f04f 0000 	mov.w	r0, #0
  4060b8:	4770      	bx	lr
  4060ba:	f04f 0001 	mov.w	r0, #1
  4060be:	4770      	bx	lr

004060c0 <__aeabi_d2iz>:
  4060c0:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4060c4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4060c8:	d215      	bcs.n	4060f6 <__aeabi_d2iz+0x36>
  4060ca:	d511      	bpl.n	4060f0 <__aeabi_d2iz+0x30>
  4060cc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4060d0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4060d4:	d912      	bls.n	4060fc <__aeabi_d2iz+0x3c>
  4060d6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4060da:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4060de:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4060e2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4060e6:	fa23 f002 	lsr.w	r0, r3, r2
  4060ea:	bf18      	it	ne
  4060ec:	4240      	negne	r0, r0
  4060ee:	4770      	bx	lr
  4060f0:	f04f 0000 	mov.w	r0, #0
  4060f4:	4770      	bx	lr
  4060f6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4060fa:	d105      	bne.n	406108 <__aeabi_d2iz+0x48>
  4060fc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  406100:	bf08      	it	eq
  406102:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  406106:	4770      	bx	lr
  406108:	f04f 0000 	mov.w	r0, #0
  40610c:	4770      	bx	lr
  40610e:	bf00      	nop

00406110 <__aeabi_uldivmod>:
  406110:	b953      	cbnz	r3, 406128 <__aeabi_uldivmod+0x18>
  406112:	b94a      	cbnz	r2, 406128 <__aeabi_uldivmod+0x18>
  406114:	2900      	cmp	r1, #0
  406116:	bf08      	it	eq
  406118:	2800      	cmpeq	r0, #0
  40611a:	bf1c      	itt	ne
  40611c:	f04f 31ff 	movne.w	r1, #4294967295
  406120:	f04f 30ff 	movne.w	r0, #4294967295
  406124:	f000 b97a 	b.w	40641c <__aeabi_idiv0>
  406128:	f1ad 0c08 	sub.w	ip, sp, #8
  40612c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406130:	f000 f806 	bl	406140 <__udivmoddi4>
  406134:	f8dd e004 	ldr.w	lr, [sp, #4]
  406138:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  40613c:	b004      	add	sp, #16
  40613e:	4770      	bx	lr

00406140 <__udivmoddi4>:
  406140:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406144:	468c      	mov	ip, r1
  406146:	460d      	mov	r5, r1
  406148:	4604      	mov	r4, r0
  40614a:	9e08      	ldr	r6, [sp, #32]
  40614c:	2b00      	cmp	r3, #0
  40614e:	d151      	bne.n	4061f4 <__udivmoddi4+0xb4>
  406150:	428a      	cmp	r2, r1
  406152:	4617      	mov	r7, r2
  406154:	d96d      	bls.n	406232 <__udivmoddi4+0xf2>
  406156:	fab2 fe82 	clz	lr, r2
  40615a:	f1be 0f00 	cmp.w	lr, #0
  40615e:	d00b      	beq.n	406178 <__udivmoddi4+0x38>
  406160:	f1ce 0c20 	rsb	ip, lr, #32
  406164:	fa01 f50e 	lsl.w	r5, r1, lr
  406168:	fa20 fc0c 	lsr.w	ip, r0, ip
  40616c:	fa02 f70e 	lsl.w	r7, r2, lr
  406170:	ea4c 0c05 	orr.w	ip, ip, r5
  406174:	fa00 f40e 	lsl.w	r4, r0, lr
  406178:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40617c:	0c25      	lsrs	r5, r4, #16
  40617e:	fbbc f8fa 	udiv	r8, ip, sl
  406182:	fa1f f987 	uxth.w	r9, r7
  406186:	fb0a cc18 	mls	ip, sl, r8, ip
  40618a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40618e:	fb08 f309 	mul.w	r3, r8, r9
  406192:	42ab      	cmp	r3, r5
  406194:	d90a      	bls.n	4061ac <__udivmoddi4+0x6c>
  406196:	19ed      	adds	r5, r5, r7
  406198:	f108 32ff 	add.w	r2, r8, #4294967295
  40619c:	f080 8123 	bcs.w	4063e6 <__udivmoddi4+0x2a6>
  4061a0:	42ab      	cmp	r3, r5
  4061a2:	f240 8120 	bls.w	4063e6 <__udivmoddi4+0x2a6>
  4061a6:	f1a8 0802 	sub.w	r8, r8, #2
  4061aa:	443d      	add	r5, r7
  4061ac:	1aed      	subs	r5, r5, r3
  4061ae:	b2a4      	uxth	r4, r4
  4061b0:	fbb5 f0fa 	udiv	r0, r5, sl
  4061b4:	fb0a 5510 	mls	r5, sl, r0, r5
  4061b8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4061bc:	fb00 f909 	mul.w	r9, r0, r9
  4061c0:	45a1      	cmp	r9, r4
  4061c2:	d909      	bls.n	4061d8 <__udivmoddi4+0x98>
  4061c4:	19e4      	adds	r4, r4, r7
  4061c6:	f100 33ff 	add.w	r3, r0, #4294967295
  4061ca:	f080 810a 	bcs.w	4063e2 <__udivmoddi4+0x2a2>
  4061ce:	45a1      	cmp	r9, r4
  4061d0:	f240 8107 	bls.w	4063e2 <__udivmoddi4+0x2a2>
  4061d4:	3802      	subs	r0, #2
  4061d6:	443c      	add	r4, r7
  4061d8:	eba4 0409 	sub.w	r4, r4, r9
  4061dc:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061e0:	2100      	movs	r1, #0
  4061e2:	2e00      	cmp	r6, #0
  4061e4:	d061      	beq.n	4062aa <__udivmoddi4+0x16a>
  4061e6:	fa24 f40e 	lsr.w	r4, r4, lr
  4061ea:	2300      	movs	r3, #0
  4061ec:	6034      	str	r4, [r6, #0]
  4061ee:	6073      	str	r3, [r6, #4]
  4061f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061f4:	428b      	cmp	r3, r1
  4061f6:	d907      	bls.n	406208 <__udivmoddi4+0xc8>
  4061f8:	2e00      	cmp	r6, #0
  4061fa:	d054      	beq.n	4062a6 <__udivmoddi4+0x166>
  4061fc:	2100      	movs	r1, #0
  4061fe:	e886 0021 	stmia.w	r6, {r0, r5}
  406202:	4608      	mov	r0, r1
  406204:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406208:	fab3 f183 	clz	r1, r3
  40620c:	2900      	cmp	r1, #0
  40620e:	f040 808e 	bne.w	40632e <__udivmoddi4+0x1ee>
  406212:	42ab      	cmp	r3, r5
  406214:	d302      	bcc.n	40621c <__udivmoddi4+0xdc>
  406216:	4282      	cmp	r2, r0
  406218:	f200 80fa 	bhi.w	406410 <__udivmoddi4+0x2d0>
  40621c:	1a84      	subs	r4, r0, r2
  40621e:	eb65 0503 	sbc.w	r5, r5, r3
  406222:	2001      	movs	r0, #1
  406224:	46ac      	mov	ip, r5
  406226:	2e00      	cmp	r6, #0
  406228:	d03f      	beq.n	4062aa <__udivmoddi4+0x16a>
  40622a:	e886 1010 	stmia.w	r6, {r4, ip}
  40622e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406232:	b912      	cbnz	r2, 40623a <__udivmoddi4+0xfa>
  406234:	2701      	movs	r7, #1
  406236:	fbb7 f7f2 	udiv	r7, r7, r2
  40623a:	fab7 fe87 	clz	lr, r7
  40623e:	f1be 0f00 	cmp.w	lr, #0
  406242:	d134      	bne.n	4062ae <__udivmoddi4+0x16e>
  406244:	1beb      	subs	r3, r5, r7
  406246:	0c3a      	lsrs	r2, r7, #16
  406248:	fa1f fc87 	uxth.w	ip, r7
  40624c:	2101      	movs	r1, #1
  40624e:	fbb3 f8f2 	udiv	r8, r3, r2
  406252:	0c25      	lsrs	r5, r4, #16
  406254:	fb02 3318 	mls	r3, r2, r8, r3
  406258:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40625c:	fb0c f308 	mul.w	r3, ip, r8
  406260:	42ab      	cmp	r3, r5
  406262:	d907      	bls.n	406274 <__udivmoddi4+0x134>
  406264:	19ed      	adds	r5, r5, r7
  406266:	f108 30ff 	add.w	r0, r8, #4294967295
  40626a:	d202      	bcs.n	406272 <__udivmoddi4+0x132>
  40626c:	42ab      	cmp	r3, r5
  40626e:	f200 80d1 	bhi.w	406414 <__udivmoddi4+0x2d4>
  406272:	4680      	mov	r8, r0
  406274:	1aed      	subs	r5, r5, r3
  406276:	b2a3      	uxth	r3, r4
  406278:	fbb5 f0f2 	udiv	r0, r5, r2
  40627c:	fb02 5510 	mls	r5, r2, r0, r5
  406280:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406284:	fb0c fc00 	mul.w	ip, ip, r0
  406288:	45a4      	cmp	ip, r4
  40628a:	d907      	bls.n	40629c <__udivmoddi4+0x15c>
  40628c:	19e4      	adds	r4, r4, r7
  40628e:	f100 33ff 	add.w	r3, r0, #4294967295
  406292:	d202      	bcs.n	40629a <__udivmoddi4+0x15a>
  406294:	45a4      	cmp	ip, r4
  406296:	f200 80b8 	bhi.w	40640a <__udivmoddi4+0x2ca>
  40629a:	4618      	mov	r0, r3
  40629c:	eba4 040c 	sub.w	r4, r4, ip
  4062a0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4062a4:	e79d      	b.n	4061e2 <__udivmoddi4+0xa2>
  4062a6:	4631      	mov	r1, r6
  4062a8:	4630      	mov	r0, r6
  4062aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4062ae:	f1ce 0420 	rsb	r4, lr, #32
  4062b2:	fa05 f30e 	lsl.w	r3, r5, lr
  4062b6:	fa07 f70e 	lsl.w	r7, r7, lr
  4062ba:	fa20 f804 	lsr.w	r8, r0, r4
  4062be:	0c3a      	lsrs	r2, r7, #16
  4062c0:	fa25 f404 	lsr.w	r4, r5, r4
  4062c4:	ea48 0803 	orr.w	r8, r8, r3
  4062c8:	fbb4 f1f2 	udiv	r1, r4, r2
  4062cc:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4062d0:	fb02 4411 	mls	r4, r2, r1, r4
  4062d4:	fa1f fc87 	uxth.w	ip, r7
  4062d8:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4062dc:	fb01 f30c 	mul.w	r3, r1, ip
  4062e0:	42ab      	cmp	r3, r5
  4062e2:	fa00 f40e 	lsl.w	r4, r0, lr
  4062e6:	d909      	bls.n	4062fc <__udivmoddi4+0x1bc>
  4062e8:	19ed      	adds	r5, r5, r7
  4062ea:	f101 30ff 	add.w	r0, r1, #4294967295
  4062ee:	f080 808a 	bcs.w	406406 <__udivmoddi4+0x2c6>
  4062f2:	42ab      	cmp	r3, r5
  4062f4:	f240 8087 	bls.w	406406 <__udivmoddi4+0x2c6>
  4062f8:	3902      	subs	r1, #2
  4062fa:	443d      	add	r5, r7
  4062fc:	1aeb      	subs	r3, r5, r3
  4062fe:	fa1f f588 	uxth.w	r5, r8
  406302:	fbb3 f0f2 	udiv	r0, r3, r2
  406306:	fb02 3310 	mls	r3, r2, r0, r3
  40630a:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  40630e:	fb00 f30c 	mul.w	r3, r0, ip
  406312:	42ab      	cmp	r3, r5
  406314:	d907      	bls.n	406326 <__udivmoddi4+0x1e6>
  406316:	19ed      	adds	r5, r5, r7
  406318:	f100 38ff 	add.w	r8, r0, #4294967295
  40631c:	d26f      	bcs.n	4063fe <__udivmoddi4+0x2be>
  40631e:	42ab      	cmp	r3, r5
  406320:	d96d      	bls.n	4063fe <__udivmoddi4+0x2be>
  406322:	3802      	subs	r0, #2
  406324:	443d      	add	r5, r7
  406326:	1aeb      	subs	r3, r5, r3
  406328:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  40632c:	e78f      	b.n	40624e <__udivmoddi4+0x10e>
  40632e:	f1c1 0720 	rsb	r7, r1, #32
  406332:	fa22 f807 	lsr.w	r8, r2, r7
  406336:	408b      	lsls	r3, r1
  406338:	fa05 f401 	lsl.w	r4, r5, r1
  40633c:	ea48 0303 	orr.w	r3, r8, r3
  406340:	fa20 fe07 	lsr.w	lr, r0, r7
  406344:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  406348:	40fd      	lsrs	r5, r7
  40634a:	ea4e 0e04 	orr.w	lr, lr, r4
  40634e:	fbb5 f9fc 	udiv	r9, r5, ip
  406352:	ea4f 441e 	mov.w	r4, lr, lsr #16
  406356:	fb0c 5519 	mls	r5, ip, r9, r5
  40635a:	fa1f f883 	uxth.w	r8, r3
  40635e:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406362:	fb09 f408 	mul.w	r4, r9, r8
  406366:	42ac      	cmp	r4, r5
  406368:	fa02 f201 	lsl.w	r2, r2, r1
  40636c:	fa00 fa01 	lsl.w	sl, r0, r1
  406370:	d908      	bls.n	406384 <__udivmoddi4+0x244>
  406372:	18ed      	adds	r5, r5, r3
  406374:	f109 30ff 	add.w	r0, r9, #4294967295
  406378:	d243      	bcs.n	406402 <__udivmoddi4+0x2c2>
  40637a:	42ac      	cmp	r4, r5
  40637c:	d941      	bls.n	406402 <__udivmoddi4+0x2c2>
  40637e:	f1a9 0902 	sub.w	r9, r9, #2
  406382:	441d      	add	r5, r3
  406384:	1b2d      	subs	r5, r5, r4
  406386:	fa1f fe8e 	uxth.w	lr, lr
  40638a:	fbb5 f0fc 	udiv	r0, r5, ip
  40638e:	fb0c 5510 	mls	r5, ip, r0, r5
  406392:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  406396:	fb00 f808 	mul.w	r8, r0, r8
  40639a:	45a0      	cmp	r8, r4
  40639c:	d907      	bls.n	4063ae <__udivmoddi4+0x26e>
  40639e:	18e4      	adds	r4, r4, r3
  4063a0:	f100 35ff 	add.w	r5, r0, #4294967295
  4063a4:	d229      	bcs.n	4063fa <__udivmoddi4+0x2ba>
  4063a6:	45a0      	cmp	r8, r4
  4063a8:	d927      	bls.n	4063fa <__udivmoddi4+0x2ba>
  4063aa:	3802      	subs	r0, #2
  4063ac:	441c      	add	r4, r3
  4063ae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4063b2:	eba4 0408 	sub.w	r4, r4, r8
  4063b6:	fba0 8902 	umull	r8, r9, r0, r2
  4063ba:	454c      	cmp	r4, r9
  4063bc:	46c6      	mov	lr, r8
  4063be:	464d      	mov	r5, r9
  4063c0:	d315      	bcc.n	4063ee <__udivmoddi4+0x2ae>
  4063c2:	d012      	beq.n	4063ea <__udivmoddi4+0x2aa>
  4063c4:	b156      	cbz	r6, 4063dc <__udivmoddi4+0x29c>
  4063c6:	ebba 030e 	subs.w	r3, sl, lr
  4063ca:	eb64 0405 	sbc.w	r4, r4, r5
  4063ce:	fa04 f707 	lsl.w	r7, r4, r7
  4063d2:	40cb      	lsrs	r3, r1
  4063d4:	431f      	orrs	r7, r3
  4063d6:	40cc      	lsrs	r4, r1
  4063d8:	6037      	str	r7, [r6, #0]
  4063da:	6074      	str	r4, [r6, #4]
  4063dc:	2100      	movs	r1, #0
  4063de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063e2:	4618      	mov	r0, r3
  4063e4:	e6f8      	b.n	4061d8 <__udivmoddi4+0x98>
  4063e6:	4690      	mov	r8, r2
  4063e8:	e6e0      	b.n	4061ac <__udivmoddi4+0x6c>
  4063ea:	45c2      	cmp	sl, r8
  4063ec:	d2ea      	bcs.n	4063c4 <__udivmoddi4+0x284>
  4063ee:	ebb8 0e02 	subs.w	lr, r8, r2
  4063f2:	eb69 0503 	sbc.w	r5, r9, r3
  4063f6:	3801      	subs	r0, #1
  4063f8:	e7e4      	b.n	4063c4 <__udivmoddi4+0x284>
  4063fa:	4628      	mov	r0, r5
  4063fc:	e7d7      	b.n	4063ae <__udivmoddi4+0x26e>
  4063fe:	4640      	mov	r0, r8
  406400:	e791      	b.n	406326 <__udivmoddi4+0x1e6>
  406402:	4681      	mov	r9, r0
  406404:	e7be      	b.n	406384 <__udivmoddi4+0x244>
  406406:	4601      	mov	r1, r0
  406408:	e778      	b.n	4062fc <__udivmoddi4+0x1bc>
  40640a:	3802      	subs	r0, #2
  40640c:	443c      	add	r4, r7
  40640e:	e745      	b.n	40629c <__udivmoddi4+0x15c>
  406410:	4608      	mov	r0, r1
  406412:	e708      	b.n	406226 <__udivmoddi4+0xe6>
  406414:	f1a8 0802 	sub.w	r8, r8, #2
  406418:	443d      	add	r5, r7
  40641a:	e72b      	b.n	406274 <__udivmoddi4+0x134>

0040641c <__aeabi_idiv0>:
  40641c:	4770      	bx	lr
  40641e:	bf00      	nop

00406420 <sysfont_glyphs>:
	...
  406440:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406450:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406460:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406478:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406488:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406498:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  4064b0:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  4064c0:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  4064d0:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4064e8:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406504:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406514:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  406524:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  406534:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  40655c:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406584:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406594:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  4065b8:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  4065c8:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  4065d8:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4065e8:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406600:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406610:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  406620:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  406638:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  406648:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  406658:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406670:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406680:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406690:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  4066a8:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  4066b8:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  4066c8:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4066e0:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4066f0:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406700:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  40671c:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  40672c:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  40673c:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406758:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406770:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406788:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406798:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  4067a8:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  4067c0:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  4067d0:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4067e0:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4067f8:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  406808:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  406818:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  406830:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406840:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406850:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406868:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406878:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406888:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  4068a0:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4068b0:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4068c0:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  4068d8:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4068e8:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4068f8:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406910:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  406920:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  406930:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  406948:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406958:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406968:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406980:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406990:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  4069a0:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  4069b8:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  4069c8:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4069d8:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4069f0:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406a00:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406a10:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  406a28:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  406a38:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406a48:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406a60:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406a70:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406a80:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406a98:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406aa8:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406ab8:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406ad0:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406ae0:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406af0:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406b18:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406b28:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406b44:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406b5c:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406b6c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b7c:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406b94:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406ba4:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406bb4:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406bcc:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406bdc:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406bec:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406bfc:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406c0c:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406c1c:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406c2c:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406c3c:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406c4c:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406c5c:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406c74:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406c84:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406c94:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406cb0:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406ccc:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406ce8:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406cf8:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406d08:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406d20:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406d3c:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406d58:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406d74:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406d90:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406dac:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406dc8:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406de4:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406df4:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406e04:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406e14:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406e24:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406e34:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406e44:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406e54:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406e64:	0000 0000 6625 0000 6556 206c 0020 0000     ....%f..Vel  ...
  406e74:	744d 2073 0000 0000 6d54 2070 0000 0000     Mts ....Tmp ....

00406e84 <_global_impure_ptr>:
  406e84:	0030 2040 4e49 0046 6e69 0066 414e 004e     0.@ INF.inf.NAN.
  406e94:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406ea4:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406eb4:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406ec4:	296c 0000 0030 0000                         l)..0...

00406ecc <blanks.7223>:
  406ecc:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406edc <zeroes.7224>:
  406edc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406eec:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406efc:	0000 0000                                   ....

00406f00 <__mprec_bigtens>:
  406f00:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406f10:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406f20:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406f28 <__mprec_tens>:
  406f28:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406f38:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406f48:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406f58:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406f68:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406f78:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406f88:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406f98:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406fa8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406fb8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406fc8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406fd8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406fe8:	9db4 79d9 7843 44ea                         ...yCx.D

00406ff0 <p05.6055>:
  406ff0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407000:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040700c <_ctype_>:
  40700c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40701c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  40702c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  40703c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  40704c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  40705c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  40706c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  40707c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40708c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407110 <_init>:
  407110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407112:	bf00      	nop
  407114:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407116:	bc08      	pop	{r3}
  407118:	469e      	mov	lr, r3
  40711a:	4770      	bx	lr

0040711c <__init_array_start>:
  40711c:	00403845 	.word	0x00403845

00407120 <__frame_dummy_init_array_entry>:
  407120:	00400165                                e.@.

00407124 <_fini>:
  407124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407126:	bf00      	nop
  407128:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40712a:	bc08      	pop	{r3}
  40712c:	469e      	mov	lr, r3
  40712e:	4770      	bx	lr

00407130 <__fini_array_start>:
  407130:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6420 0040 0e0a 7d20               .... d@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <raio>:
20400020:	0000 0000 0000 3ff0                         .......?

20400028 <_impure_ptr>:
20400028:	0030 2040 0000 0000                         0.@ ....

20400030 <impure_data>:
20400030:	0000 0000 031c 2040 0384 2040 03ec 2040     ......@ ..@ ..@ 
	...
204000d8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400458 <__atexit_recursive_mutex>:
20400458:	0cd0 2040                                   ..@ 

2040045c <__malloc_av_>:
	...
20400464:	045c 2040 045c 2040 0464 2040 0464 2040     \.@ \.@ d.@ d.@ 
20400474:	046c 2040 046c 2040 0474 2040 0474 2040     l.@ l.@ t.@ t.@ 
20400484:	047c 2040 047c 2040 0484 2040 0484 2040     |.@ |.@ ..@ ..@ 
20400494:	048c 2040 048c 2040 0494 2040 0494 2040     ..@ ..@ ..@ ..@ 
204004a4:	049c 2040 049c 2040 04a4 2040 04a4 2040     ..@ ..@ ..@ ..@ 
204004b4:	04ac 2040 04ac 2040 04b4 2040 04b4 2040     ..@ ..@ ..@ ..@ 
204004c4:	04bc 2040 04bc 2040 04c4 2040 04c4 2040     ..@ ..@ ..@ ..@ 
204004d4:	04cc 2040 04cc 2040 04d4 2040 04d4 2040     ..@ ..@ ..@ ..@ 
204004e4:	04dc 2040 04dc 2040 04e4 2040 04e4 2040     ..@ ..@ ..@ ..@ 
204004f4:	04ec 2040 04ec 2040 04f4 2040 04f4 2040     ..@ ..@ ..@ ..@ 
20400504:	04fc 2040 04fc 2040 0504 2040 0504 2040     ..@ ..@ ..@ ..@ 
20400514:	050c 2040 050c 2040 0514 2040 0514 2040     ..@ ..@ ..@ ..@ 
20400524:	051c 2040 051c 2040 0524 2040 0524 2040     ..@ ..@ $.@ $.@ 
20400534:	052c 2040 052c 2040 0534 2040 0534 2040     ,.@ ,.@ 4.@ 4.@ 
20400544:	053c 2040 053c 2040 0544 2040 0544 2040     <.@ <.@ D.@ D.@ 
20400554:	054c 2040 054c 2040 0554 2040 0554 2040     L.@ L.@ T.@ T.@ 
20400564:	055c 2040 055c 2040 0564 2040 0564 2040     \.@ \.@ d.@ d.@ 
20400574:	056c 2040 056c 2040 0574 2040 0574 2040     l.@ l.@ t.@ t.@ 
20400584:	057c 2040 057c 2040 0584 2040 0584 2040     |.@ |.@ ..@ ..@ 
20400594:	058c 2040 058c 2040 0594 2040 0594 2040     ..@ ..@ ..@ ..@ 
204005a4:	059c 2040 059c 2040 05a4 2040 05a4 2040     ..@ ..@ ..@ ..@ 
204005b4:	05ac 2040 05ac 2040 05b4 2040 05b4 2040     ..@ ..@ ..@ ..@ 
204005c4:	05bc 2040 05bc 2040 05c4 2040 05c4 2040     ..@ ..@ ..@ ..@ 
204005d4:	05cc 2040 05cc 2040 05d4 2040 05d4 2040     ..@ ..@ ..@ ..@ 
204005e4:	05dc 2040 05dc 2040 05e4 2040 05e4 2040     ..@ ..@ ..@ ..@ 
204005f4:	05ec 2040 05ec 2040 05f4 2040 05f4 2040     ..@ ..@ ..@ ..@ 
20400604:	05fc 2040 05fc 2040 0604 2040 0604 2040     ..@ ..@ ..@ ..@ 
20400614:	060c 2040 060c 2040 0614 2040 0614 2040     ..@ ..@ ..@ ..@ 
20400624:	061c 2040 061c 2040 0624 2040 0624 2040     ..@ ..@ $.@ $.@ 
20400634:	062c 2040 062c 2040 0634 2040 0634 2040     ,.@ ,.@ 4.@ 4.@ 
20400644:	063c 2040 063c 2040 0644 2040 0644 2040     <.@ <.@ D.@ D.@ 
20400654:	064c 2040 064c 2040 0654 2040 0654 2040     L.@ L.@ T.@ T.@ 
20400664:	065c 2040 065c 2040 0664 2040 0664 2040     \.@ \.@ d.@ d.@ 
20400674:	066c 2040 066c 2040 0674 2040 0674 2040     l.@ l.@ t.@ t.@ 
20400684:	067c 2040 067c 2040 0684 2040 0684 2040     |.@ |.@ ..@ ..@ 
20400694:	068c 2040 068c 2040 0694 2040 0694 2040     ..@ ..@ ..@ ..@ 
204006a4:	069c 2040 069c 2040 06a4 2040 06a4 2040     ..@ ..@ ..@ ..@ 
204006b4:	06ac 2040 06ac 2040 06b4 2040 06b4 2040     ..@ ..@ ..@ ..@ 
204006c4:	06bc 2040 06bc 2040 06c4 2040 06c4 2040     ..@ ..@ ..@ ..@ 
204006d4:	06cc 2040 06cc 2040 06d4 2040 06d4 2040     ..@ ..@ ..@ ..@ 
204006e4:	06dc 2040 06dc 2040 06e4 2040 06e4 2040     ..@ ..@ ..@ ..@ 
204006f4:	06ec 2040 06ec 2040 06f4 2040 06f4 2040     ..@ ..@ ..@ ..@ 
20400704:	06fc 2040 06fc 2040 0704 2040 0704 2040     ..@ ..@ ..@ ..@ 
20400714:	070c 2040 070c 2040 0714 2040 0714 2040     ..@ ..@ ..@ ..@ 
20400724:	071c 2040 071c 2040 0724 2040 0724 2040     ..@ ..@ $.@ $.@ 
20400734:	072c 2040 072c 2040 0734 2040 0734 2040     ,.@ ,.@ 4.@ 4.@ 
20400744:	073c 2040 073c 2040 0744 2040 0744 2040     <.@ <.@ D.@ D.@ 
20400754:	074c 2040 074c 2040 0754 2040 0754 2040     L.@ L.@ T.@ T.@ 
20400764:	075c 2040 075c 2040 0764 2040 0764 2040     \.@ \.@ d.@ d.@ 
20400774:	076c 2040 076c 2040 0774 2040 0774 2040     l.@ l.@ t.@ t.@ 
20400784:	077c 2040 077c 2040 0784 2040 0784 2040     |.@ |.@ ..@ ..@ 
20400794:	078c 2040 078c 2040 0794 2040 0794 2040     ..@ ..@ ..@ ..@ 
204007a4:	079c 2040 079c 2040 07a4 2040 07a4 2040     ..@ ..@ ..@ ..@ 
204007b4:	07ac 2040 07ac 2040 07b4 2040 07b4 2040     ..@ ..@ ..@ ..@ 
204007c4:	07bc 2040 07bc 2040 07c4 2040 07c4 2040     ..@ ..@ ..@ ..@ 
204007d4:	07cc 2040 07cc 2040 07d4 2040 07d4 2040     ..@ ..@ ..@ ..@ 
204007e4:	07dc 2040 07dc 2040 07e4 2040 07e4 2040     ..@ ..@ ..@ ..@ 
204007f4:	07ec 2040 07ec 2040 07f4 2040 07f4 2040     ..@ ..@ ..@ ..@ 
20400804:	07fc 2040 07fc 2040 0804 2040 0804 2040     ..@ ..@ ..@ ..@ 
20400814:	080c 2040 080c 2040 0814 2040 0814 2040     ..@ ..@ ..@ ..@ 
20400824:	081c 2040 081c 2040 0824 2040 0824 2040     ..@ ..@ $.@ $.@ 
20400834:	082c 2040 082c 2040 0834 2040 0834 2040     ,.@ ,.@ 4.@ 4.@ 
20400844:	083c 2040 083c 2040 0844 2040 0844 2040     <.@ <.@ D.@ D.@ 
20400854:	084c 2040 084c 2040 0854 2040 0854 2040     L.@ L.@ T.@ T.@ 

20400864 <__malloc_sbrk_base>:
20400864:	ffff ffff                                   ....

20400868 <__malloc_trim_threshold>:
20400868:	0000 0002                                   ....

2040086c <__global_locale>:
2040086c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040088c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ac:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008cc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008ec:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040090c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040092c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2040094c:	5f69 0040 5b29 0040 0000 0000 700c 0040     i_@.)[@......p@.
2040095c:	7008 0040 6e80 0040 6e80 0040 6e80 0040     .p@..n@..n@..n@.
2040096c:	6e80 0040 6e80 0040 6e80 0040 6e80 0040     .n@..n@..n@..n@.
2040097c:	6e80 0040 6e80 0040 ffff ffff ffff ffff     .n@..n@.........
2040098c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009b4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
